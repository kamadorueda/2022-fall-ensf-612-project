[
  {
    "author_association": "COLLABORATOR",
    "body": "Get-Disk is in Storage module and you could compare the output of the cmdlet on both server versions.",
    "created_at": "2020-07-28T15:06:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665096364",
    "id": 665096364,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTA5NjM2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665096364/reactions"
    },
    "updated_at": "2020-07-28T15:06:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665096364",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Are you suggesting comparing the Powershell Console output with Powershell SDK versions? If so I cant. Target servers do not have Powershell Core installed, I am connecting remotely from c# code. ",
    "created_at": "2020-07-28T15:12:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665099906",
    "id": 665099906,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTA5OTkwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665099906/reactions"
    },
    "updated_at": "2020-07-28T15:12:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665099906",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21189075?v=4",
      "events_url": "https://api.github.com/users/erenturkm/events{/privacy}",
      "followers_url": "https://api.github.com/users/erenturkm/followers",
      "following_url": "https://api.github.com/users/erenturkm/following{/other_user}",
      "gists_url": "https://api.github.com/users/erenturkm/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/erenturkm",
      "id": 21189075,
      "login": "erenturkm",
      "node_id": "MDQ6VXNlcjIxMTg5MDc1",
      "organizations_url": "https://api.github.com/users/erenturkm/orgs",
      "received_events_url": "https://api.github.com/users/erenturkm/received_events",
      "repos_url": "https://api.github.com/users/erenturkm/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/erenturkm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erenturkm/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/erenturkm"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I guess Storage module changes the behavior in new version.",
    "created_at": "2020-07-28T15:17:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665102383",
    "id": 665102383,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTEwMjM4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665102383/reactions"
    },
    "updated_at": "2020-07-28T15:17:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665102383",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "1) Microsoft Get-Disk documentation points to ROOT/Microsoft/Windows/Storage/MSFT_Disk in which this value is UInt16.\r\n2) I dont see any reason for them to do this. It doesn't make sense to have HealthStatus as array for a single disk.\r\n\r\nHow can we get a definitive answer?",
    "created_at": "2020-07-28T15:23:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665105575",
    "id": 665105575,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTEwNTU3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665105575/reactions"
    },
    "updated_at": "2020-07-28T15:23:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665105575",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21189075?v=4",
      "events_url": "https://api.github.com/users/erenturkm/events{/privacy}",
      "followers_url": "https://api.github.com/users/erenturkm/followers",
      "following_url": "https://api.github.com/users/erenturkm/following{/other_user}",
      "gists_url": "https://api.github.com/users/erenturkm/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/erenturkm",
      "id": 21189075,
      "login": "erenturkm",
      "node_id": "MDQ6VXNlcjIxMTg5MDc1",
      "organizations_url": "https://api.github.com/users/erenturkm/orgs",
      "received_events_url": "https://api.github.com/users/erenturkm/received_events",
      "repos_url": "https://api.github.com/users/erenturkm/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/erenturkm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erenturkm/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/erenturkm"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  It doesn't make sense to have HealthStatus as array for a single disk.\r\n\r\nI ask you to check this. I guess it is a bug in new version of the module. If so it is Windows bug.",
    "created_at": "2020-07-28T15:30:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665109299",
    "id": 665109299,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTEwOTI5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665109299/reactions"
    },
    "updated_at": "2020-07-28T15:30:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665109299",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I dont understand. I checked, I reported it as a Powershell bug to the Powershell Issues. What else do you want me to do?",
    "created_at": "2020-07-28T15:34:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665111688",
    "id": 665111688,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTExMTY4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665111688/reactions"
    },
    "updated_at": "2020-07-28T15:34:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665111688",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21189075?v=4",
      "events_url": "https://api.github.com/users/erenturkm/events{/privacy}",
      "followers_url": "https://api.github.com/users/erenturkm/followers",
      "following_url": "https://api.github.com/users/erenturkm/following{/other_user}",
      "gists_url": "https://api.github.com/users/erenturkm/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/erenturkm",
      "id": 21189075,
      "login": "erenturkm",
      "node_id": "MDQ6VXNlcjIxMTg5MDc1",
      "organizations_url": "https://api.github.com/users/erenturkm/orgs",
      "received_events_url": "https://api.github.com/users/erenturkm/received_events",
      "repos_url": "https://api.github.com/users/erenturkm/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/erenturkm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erenturkm/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/erenturkm"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If you run Get-Disk and get different results on different Windows versions my conclusion is that it is Windows bug and should be reported to Windows team by other channels (support case, forums, Windows Feedback tool, UserVoice site).",
    "created_at": "2020-07-28T15:43:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665116724",
    "id": 665116724,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTExNjcyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665116724/reactions"
    },
    "updated_at": "2020-07-28T15:43:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665116724",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The issue is this module isn't written by the PowerShell team. If there's a change in behaviour across versions then there is a good chance it's because of a change on their end or something they are relying on. The Storage module is also a CDXML module so the cmdlets are based on the underlying WMI class, you can see the `CDXML` definition at `C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\Modules\\Storage\\Disk.cdxml` on your Windows box. Ultimately the value that it returns is based on what WMI actually provides and based on the class metadata it's set to a `UInt16Array`\r\n\r\n```powershell\r\n$class = Get-CimClass -ClassName MSFT_Disk -Namespace ROOT\\Microsoft\\Windows\\Storage\r\n$class.CimClassProperties | Where-Object Name -eq OperationalStatus | Select *\r\n\r\n# Name               : OperationalStatus\r\n# Value              :\r\n# CimType            : UInt16Array\r\n# Flags              : Property, Required, ReadOnly, NullValue\r\n# Qualifiers         : {read, Required, ValueMap}\r\n# ReferenceClassName :\r\n```\r\n\r\nI've also used `wbemtest.exe` to view the underlying configuration of the class outside of PowerShell. The `OperationalStatus` property is set with a `Array` checkbox ticket so what PowerShell is reporting is correct.\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/88740996-e0c1b900-d181-11ea-89f3-5cb829df2314.png)\r\n\r\nThis means what is documented at [MSFT_Disk](https://docs.microsoft.com/en-us/previous-versions/windows/desktop/stormgmt/msft-disk) does not match up with what the WMI provider on the host is set to. There's nothing PowerShell or should do about this.",
    "created_at": "2020-07-28T23:58:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665353536",
    "id": 665353536,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTM1MzUzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665353536/reactions"
    },
    "updated_at": "2020-07-29T00:36:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665353536",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thank you for chiming in, this was a much better answer. I am really trying to understand Powershell teams perspective, bare with me.\r\n1. As long as Powershell cmdlet Get-disk is not doing what is given in the cmdlet documentation page, it needs to be fixed. I understand that you as the Powershell Core team are not responsible for cmdlets outside Microsoft.PowerShell.Core, most of the command/property definitions have drifted considerably from what is available on the web. Note that users do not care about Powershell Core, its all the modules under it that helps them do their job. We need to be able to access information on how it is intended to be used. (Ex: Why is OperationalStatus need to be an array? )  \r\n\r\n2.  Thank you for providing an alternative way to reverse-engineer what the module developer  has changed but this is too much to ask to hunt down what is changing from version to version for all properties of all cmdlets that we use on a day to day basis using this. We need to have a much better developer experience. Maybe you can integrate this information to get-help module that will query this info and provide it as part of the message.",
    "created_at": "2020-07-29T18:12:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665819613",
    "id": 665819613,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTgxOTYxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665819613/reactions"
    },
    "updated_at": "2020-07-29T18:12:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665819613",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21189075?v=4",
      "events_url": "https://api.github.com/users/erenturkm/events{/privacy}",
      "followers_url": "https://api.github.com/users/erenturkm/followers",
      "following_url": "https://api.github.com/users/erenturkm/following{/other_user}",
      "gists_url": "https://api.github.com/users/erenturkm/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/erenturkm",
      "id": 21189075,
      "login": "erenturkm",
      "node_id": "MDQ6VXNlcjIxMTg5MDc1",
      "organizations_url": "https://api.github.com/users/erenturkm/orgs",
      "received_events_url": "https://api.github.com/users/erenturkm/received_events",
      "repos_url": "https://api.github.com/users/erenturkm/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/erenturkm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erenturkm/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/erenturkm"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Maybe you can integrate this information to get-help module that will query this info and provide it as part of the message.\r\n\r\nOh, I think it is impossible to track all changes in all modules/APIs. \r\nThe best you can do is achieve full test coverage of your application.\r\n",
    "created_at": "2020-07-29T18:20:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665824602",
    "id": 665824602,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTgyNDYwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665824602/reactions"
    },
    "updated_at": "2020-07-29T18:20:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665824602",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I was having a further look into this recently, the `OperationalStatus` value is `ScriptProperty`\r\n\r\n```powershell\r\n$disk = Get-Disk\r\n$disk.PSObject.Properties | Where-Object Name -eq OperationalStatus\r\n\r\nGetterScript    : $_status = @();\r\n                            foreach( $status in $this.psBase.CimInstanceProperties[\"OperationalStatus\"].Value )\r\n                            {\r\n                              switch ( $status )\r\n                              {\r\n                                1 { $_status += \"Other\" }\r\n                                2 { $_status += \"OK\" }\r\n                                3 { $_status += \"Degraded\" }\r\n                                4 { $_status += \"Stressed\" }\r\n                                5 { $_status += \"Predictive Failure\" }\r\n                                6 { $_status += \"Error\" }\r\n                                7 { $_status += \"Non-Recoverable Error\" }\r\n                                8 { $_status += \"Starting\" }\r\n                                9 { $_status += \"Stopping\" }\r\n                                10 { $_status += \"Stopped\" }\r\n                                11 { $_status += \"InService\" }\r\n                                12 { $_status += \"No Contact\" }\r\n                                13 { $_status += \"Lost Communication\" }\r\n                                14 { $_status += \"Aborted\" }\r\n                                15 { $_status += \"Dormant\" }\r\n                                16 { $_status += \"Supporting Entity in Error\" }\r\n                                17 { $_status += \"Completed\" }\r\n                                18 { $_status += \"Power Mode\" }\r\n                                19 { $_status += \"Relocating\" }\r\n                                53264 { $_status += \"Online\" }\r\n                                53265 { $_status += \"Not Ready\" }\r\n                                53266 { $_status += \"No Media\" }\r\n                                53267 { $_status += \"Offline\" }\r\n                                53268 { $_status += \"Failed\" }\r\n                                Default { $_status += \"Unknown\" }\r\n                              }\r\n                            }\r\n                            $_status;\r\nSetterScript    :\r\nMemberType      : ScriptProperty\r\nIsSettable      : False\r\nIsGettable      : True\r\nValue           : Online\r\nTypeNameOfValue : System.Object\r\nName            : OperationalStatus\r\nIsInstance      : False\r\n```\r\n\r\nThis `ScriptProperty` is defined at `C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\Modules\\Storage\\Storage.types.ps1xml` as part of the extended type data for `Microsoft.Management.Infrastructure.CimInstance#MSFT_Disk`. This means the value is part of the extended type set (ETS) that is loaded for that type with the `Storage` module.\r\n\r\nWhat's happening here is it looks like the extended type data is being stripped out or at least wasn't present when `Get-Disk` was run so when you get the instance from the PowerShell pipeline you are getting the raw properties of that object. Those properties are directly mapped from what WMI returns which in this case is `UInt16[]` on 2019 and `UInt16` on 2012 R2. Why the ETS isn't present I have no idea, I can only replicate this when using a remote PSSession and not importing the `Storage` module like\r\n\r\n```powershell\r\n$session = New-PSSession -UseWindowsPowerShell\r\n$disk = Invoke-Command -Session $session -ScriptBlock {\r\n    Get-Disk\r\n}\r\n$session | Remove-PSSession\r\n$disk.OperationalStatus\r\n```\r\n\r\nStill this here is somewhat expected because the ETS is part of the `Storage` module and in this particular example I never loaded that so PowerShell doesn't know there's extended types to apply.\r\n\r\nWhat I don't fully understand is how this applies to objects being output from a C# `.Invoke()` call that's in your example. I do have a potential workaround that may work, when calling `Get-Disk` pipe it into `Select-Object -Property *` like\r\n\r\n```powershell\r\nGet-Disk | Select-Object -Property *\r\n```\r\n\r\nThis will have that CimInstance being converted to a PSCustomObject with the `ScriptProperties` becoming `NoteProperties` which should traverse the .NET <-> PowerShell boundary. That way you can just look at the string value instead of trying to deal with the changing types. Apart from that there's not too much else PowerShell can do here, the component that changed the type is multiple layers outside of PowerShell itself and there are too many components for the team to really keep track of everything.",
    "created_at": "2020-07-30T00:20:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-665997728",
    "id": 665997728,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTk5NzcyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665997728/reactions"
    },
    "updated_at": "2020-07-30T00:20:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665997728",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "I understand that tracking all changes made by all other teams are out of scope, but remember if you dont, we as your users will have to. It should be the changers resposibility to document what is changing and why. End users should not be digging on this. This makes a really bad quality API. So lets try to make necessary changes/upgrades in Powershell Core to lessen the burden on all of us.\r\n1) I think your suggestion is a step in the right direction. NoteProperties can somewhat shield the changes. I will try to use it moving forward.\r\n2) Other teams will have to rewrite management functions sooner or later (Moving to ARM etc). Please use this to craft an understanding between the teams so that they will be required to have an automated way to propogate the **change documentation** through tools/Infrastructure provided by PS Core. \r\n3) Have better support on Powershell SDK to query and tranform types between .NET and Powershell so we can build libraries easier to handle this.  ",
    "created_at": "2020-07-30T08:20:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13297#issuecomment-666220096",
    "id": 666220096,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13297",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjIyMDA5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/666220096/reactions"
    },
    "updated_at": "2020-07-30T08:20:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/666220096",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21189075?v=4",
      "events_url": "https://api.github.com/users/erenturkm/events{/privacy}",
      "followers_url": "https://api.github.com/users/erenturkm/followers",
      "following_url": "https://api.github.com/users/erenturkm/following{/other_user}",
      "gists_url": "https://api.github.com/users/erenturkm/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/erenturkm",
      "id": 21189075,
      "login": "erenturkm",
      "node_id": "MDQ6VXNlcjIxMTg5MDc1",
      "organizations_url": "https://api.github.com/users/erenturkm/orgs",
      "received_events_url": "https://api.github.com/users/erenturkm/received_events",
      "repos_url": "https://api.github.com/users/erenturkm/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/erenturkm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erenturkm/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/erenturkm"
    }
  }
]
