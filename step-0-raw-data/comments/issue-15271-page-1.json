[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Something similar previously came up in  #14484, and my sense is that this would best be handled by introducing new event hooks exposed via `$ExecutionContext.InvokeCommand.*Action` properties, analogous to [`$ExecutionContext.InvokeCommand.PreCommandLookupAction`](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.commandinvocationintrinsics.precommandlookupaction) / [`$ExecutionContext.InvokeCommand.PostCommandLookupAction`](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.commandinvocationintrinsics.postcommandlookupaction):\r\n\r\nFor instance, `$ExecutionContext.InvokeCommand.PreExecutionAction` and `$ExecutionContext.InvokeCommand.PostExecutionAction`, which could receive the command line being executed as the event argument. This would have the added advantage that it would be a _host-independent_ mechanism; that is, it wouldn't be tied to consoles (terminals).\r\n\r\n---\r\n\r\nHere's a workaround using the current features; it relies on `PSReadLine`, which is the command-line editing module that is loaded by default.\r\n\r\n```powershell\r\n# Override the PSReadLine Enter key handler in order to inject\r\n# custom logic just before submitting a command.\r\nSet-PSReadLineKeyHandler Enter {\r\n\r\n  # Get the text of the comamnd being submitted. \r\n  $line = $null; [Microsoft.PowerShell.PSConsoleReadLine]::GetBufferState([ref] $line, [ref] $null)\r\n\r\n  if ($line.Trim() -and $line.Trim() -inotmatch '\\[Console\\]::Title\\b|\\$host\\.ui\\.RawUI\\.WindowTitle\\b') { # (Reasonably robustly) bypass title updating when the window title is explicitly set / queried.\r\n\r\n    # Save the current window title in a global variable, to be used by the `prompt` function to restore it.\r\n    # Note: On Unix, $host.ui.RawUI.WindowTitle only reports a value if one was previously assigned \r\n    #       to that property,  so we must fall back to a default.\r\n    $global:__prevWinTitle = if ($host.ui.RawUI.WindowTitle) { $host.ui.RawUI.WindowTitle } else { 'pwsh' }\r\n  \r\n    # Update the window title to show the running command and when it was started.\r\n    $host.ui.RawUI.WindowTitle = \"{0} - started at: {1:T}\" -f $line, [datetime]::Now\r\n\r\n  }\r\n\r\n  # Submit the command.\r\n  [Microsoft.PowerShell.PSConsoleReadLine]::AcceptLine()\r\n}\r\n\r\n# Update the `prompt` function to restore the previous window title on completion of a command.\r\n# Note that this prevents scripts from modifying the window title.\r\n$function:prompt = \"if (`$global:__prevWinTitle) { `$host.ui.RawUI.WindowTitle = `$global:__prevWinTitle; `$global:__prevWinTitle = '' }; $function:prompt\"\r\n```\r\n\r\n",
    "created_at": "2021-04-19T20:56:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-822779582",
    "id": 822779582,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjc3OTU4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822779582/reactions"
    },
    "updated_at": "2021-04-19T20:56:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822779582",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "At a glance, it looks kinda like you could use the `PreCommandLookupAction` you mentioned for this purpose fairly easily:\r\n\r\n```powershell\r\n$ExecutionContext.InvokeCommand.PreCommandLookupAction = {\r\n    param($command)\r\n\r\n    if ($command -notmatch 'Set-StrictMode|PSConsoleHost') {\r\n        $host.UI.RawUI.WindowTitle = \"Running [$command]...\"\r\n    }\r\n    else {\r\n        $host.UI.RawUI.WindowTitle = \"pwsh\"\r\n    }\r\n}\r\n```\r\n\r\nI guess the question is -- is there something significantly different in a \"true\" pre-exec hook to what this offers? This hook runs slightly before a pre-exec hook would, but offers much the same thing, I think?",
    "created_at": "2021-04-19T21:08:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-822786057",
    "id": 822786057,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjc4NjA1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822786057/reactions"
    },
    "updated_at": "2021-04-19T21:08:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822786057",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32, these hooks are invoked _multiple_ times per command line (use `$ExecutionContext.InvokeCommand.PreCommandLookupAction = { write-verbose -vb pre }` to see the problem), which makes this workaround awkward, especially if you want to handle restoring the previous title correctly - see https://github.com/PowerShell/PowerShell/issues/14484#issuecomment-751221242.\r\n\r\n\r\n\r\n",
    "created_at": "2021-04-19T21:14:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-822788963",
    "id": 822788963,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjc4ODk2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822788963/reactions"
    },
    "updated_at": "2021-04-19T21:14:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822788963",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Instead of a key handler, you can override the function `PSConsoleHostReadLine` similar to how you would `profile`.\r\n\r\nThat combined with overriding `profile` itself provides hooks into both pre and post invocation.",
    "created_at": "2021-04-20T01:37:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-822905989",
    "id": 822905989,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjkwNTk4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822905989/reactions"
    },
    "updated_at": "2021-04-20T01:37:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822905989",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yes, redefining `PSConsoleHostReadLine` is also an option, as you've demonstrated at https://github.com/PowerShell/PowerShell/issues/14484#issuecomment-751741668, but using `Set-PSReadLineKeyHandler Enter` strikes me as the cleaner option, because it uses an official extensibility mechanism.\r\n\r\n(And you probably meant `prompt`, not `$profile`).",
    "created_at": "2021-04-20T01:40:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-822907157",
    "id": 822907157,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMjkwNzE1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822907157/reactions"
    },
    "updated_at": "2021-04-20T01:40:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/822907157",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This feature request looks to be a duplicate of #14484 (Feature Request - \"pre\"prompt functionality).",
    "created_at": "2021-06-09T21:13:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-858106042",
    "id": 858106042,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODEwNjA0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/858106042/reactions"
    },
    "updated_at": "2021-06-09T21:13:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/858106042",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-06-10T23:00:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15271#issuecomment-859139523",
    "id": 859139523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15271",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTEzOTUyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859139523/reactions"
    },
    "updated_at": "2021-06-10T23:00:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859139523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
