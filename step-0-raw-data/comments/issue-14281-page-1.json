[
  {
    "author_association": "MEMBER",
    "body": "I didn't know you were doing something similar :)\r\n\r\n> The fix is to send startup telemetry in a background thread with 500 ms delay.\r\n\r\nNo, we cannot delay the 'sending telemetry work' by 500 ms. This will likely cause telemetry to not be sent at all when a user executes command directly using `pwsh -noprofile -c run-a-command`. Startup telemetry should be fired right away and the task  needs to be waited on before `pwsh` exists, so we can make sure the `SendPSCoreStartupTelemetry` call actually run. Please see #14304 for details about how I approached it.\r\n\r\n> TrackEvent() is sync \r\n\r\nWhat do you mean by \"is sync\"? Is it sending out package to the server synchronously (I doubt it ...)?",
    "created_at": "2020-12-02T22:19:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-737530156",
    "id": 737530156,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzUzMDE1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737530156/reactions"
    },
    "updated_at": "2020-12-02T22:19:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737530156",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I didn't know you were doing something similar :)\r\n\r\nI am collecting all in #14268 issue to sync the work with others.\r\n\r\n> > TrackEvent() is sync\r\n> \r\n> What do you mean by \"is sync\"? Is it sending out package to the server synchronously (I doubt it ...)?\r\n\r\nYes, I think it is sending synchronously to to the server. I read docs and best practices and found the recommendation to put it in background. Traces show the same for me.\r\nI am not sure whether it makes sense to ask owners of the package to improve performance/add async-s or maybe MSFT could consider https://github.com/open-telemetry/opentelemetry-dotnet.\r\n\r\n> No, we cannot delay the 'sending telemetry work' by 500 ms. This will likely cause telemetry to not be sent at all when a user executes command directly using pwsh -noprofile -c run-a-command. Startup telemetry should be fired right away and the task needs to be waited on before pwsh exists, so we can make sure the SendPSCoreStartupTelemetry call actually run. Please see #14304 for details about how I approached it.\r\n\r\nI see how you approached it. But my thoughts is again about low-power hardware - \r\nI suppose it is important to do _useful work_ (the short script) as quickly as possible and postpone sending telemetry but make it mandatory. For the latter, the solution could be to add (1) a delay and then (2) await for the background task in PowerShell exit code.\r\n\r\n\n\n<blockquote><img src=\"https://avatars3.githubusercontent.com/u/49998002?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/open-telemetry/opentelemetry-dotnet\">open-telemetry/opentelemetry-dotnet</a></strong></div><div>The OpenTelemetry .NET Client. Contribute to open-telemetry/opentelemetry-dotnet development by creating an account on GitHub.</div></blockquote>",
    "created_at": "2020-12-03T04:25:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-737657273",
    "id": 737657273,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzY1NzI3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737657273/reactions"
    },
    "updated_at": "2020-12-03T04:25:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737657273",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Yes, I think it is sending synchronously to to the server. I read docs and best practices and found the recommendation to put it in background.\r\n\r\nWhere do you see that? Can you share the links? I will also check with @JamesWTruher on this.\r\n\r\n> But my thoughts is again about low-power hardware ... \r\n\r\nOn low-power hardware, it's even less deteministic about whether a task/worker thread can even be scheduled to run, and thus less deteministic about whether what we do here actually make a difference -- it may even be a penalty on those hardwares due to context switching or contention.\r\n\r\nFor #14304, I think I will leverage worker thread only if `Environment.ProcessorCount >= 4`.",
    "created_at": "2020-12-03T06:07:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-737688373",
    "id": 737688373,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzY4ODM3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737688373/reactions"
    },
    "updated_at": "2020-12-03T06:07:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737688373",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Where do you see that? Can you share the links? I will also check with @JamesWTruher on this.\r\n\r\nhttps://github.com/degant/application-insights-best-practices\r\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.applicationinsights.telemetryclient.trackmetric?view=azure-dotnet\r\n> This method is not the preferred method for sending metrics. Metrics should always be pre-aggregated across a time period before being sent.\r\nUse one of the GetMetric(..) overloads to get a metric object for accessing SDK pre-aggregation capabilities.\r\n\r\nIf you could confirm it is always async it would be nice.\r\n\r\nAnother question how do we ensure the telemetry has been sent before PowerShell exit? I see TelemetryClient.Flush() async too.\r\n\r\n\r\n> On low-power hardware, it's even less deteministic about whether a task/worker thread can even be scheduled to run, and thus less deteministic about whether what we do here actually make a difference -- it may even be a penalty on those hardwares due to context switching or contention.\r\n\r\nThat is why I am convinced that we should do fewer threads - there are too many of them. We need to reconsider this. Regarding ApplicationInsights, unfortunately we will have to move this to a background thread.\r\nAnd we need to take Experimental Features into account - you don't seem to be doing this, although while people are testing them in real scenarios it should work as fast as release too.\r\n\r\nIn last commits I have tried to make the process more deterministic.\r\n(On Linux the behavior is so strange - s_telemetryCliebt is null but we never assign the null so there is no initialization! - I guess there is a tricky bug.)\r\n\r\n### Update:\r\nafter some thought, I suppose that we'd better wait and first do _all the other optimizations_ that we can, as well as get and evaluate all the benefits of future versions of .Net 6.0 - if we get performance comparable to WinPS, then it generally makes no sense to complicate the code for the sake of ApplicationInsights. It's much better to ask the ApplicationInsights owners to improve this scenario. We have several months to wait. If they do this, then we won't have to do anything and complicate the code.\r\nAlso if a hardware is fast we don't get big perf win with background thread, if a hardware is slow we don't get noticeable perf win too.\r\n\r\n> \r\n> For #14304, I think I will leverage worker thread only if `Environment.ProcessorCount >= 4`.\r\n\r\nIn the case we should make more common improvement and think about _all_ threads - perhaps this helps with scenarios like Wasm (and maybe PSES). Doing this for ApplicationInsights _only_ looks redundant.\r\n\r\n<blockquote><img src=\"https://avatars1.githubusercontent.com/u/6065982?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/degant/application-insights-best-practices\">degant/application-insights-best-practices</a></strong></div><div>Application Insights Best Practices for MVC and Web API - degant/application-insights-best-practices</div></blockquote>\r\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/microsoft.applicationinsights.telemetryclient.trackmetric\">TelemetryClient.TrackMetric Method (Microsoft.ApplicationInsights) - Azure for .NET Developers</a></strong></div><div>This method is not the preferred method for sending metrics. Metrics should always be pre-aggregated across a time period before being sent. Use one of the GetMetric(..) overloads to get a metric object for accessing SDK pre-aggregation capabilities. If you are implementing your own pre-aggregation logic, then you can use this method. If your application requires sending a separate telemetry item at every occasion without aggregation across time, you likely have a use case for event telemetry; see TrackEvent(EventTelemetry). </div></blockquote>",
    "created_at": "2020-12-03T07:38:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-737724455",
    "id": 737724455,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzcyNDQ1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737724455/reactions"
    },
    "updated_at": "2020-12-03T12:52:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/737724455",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I checked with @JamesWTruher and he confirmed that ApplicationInsight does not send telemetry packets to the endpoint (server) in synchronous way. It maintains a in-memory buffer and uses thread pool thread for sending telemetry packets.\r\n\r\nThat's how a tracing library should work -- never sending packets on wire synchronous. Log4Net is bad just for that exact reason.\r\n\r\nPre-aggregation is more about processing the data before sending on the wire, so as to [_\"reducing the volume of data sent from the SDK to the Application Insights collection endpoint\"_](https://docs.microsoft.com/en-us/azure/azure-monitor/app/pre-aggregated-metrics-log-metrics#using-pre-aggregation-with-application-insights-custom-metrics). According to Jim, `TrackEvent` is used for startup telemetry because we are sending non-metric sort of data. _\"Events are amorphous blobs of data, metrics are more akin to performance counters\"_.\r\n\r\n> Another question how do we ensure the telemetry has been sent before PowerShell exit? I see TelemetryClient.Flush() async too.\r\n\r\nIt's a best effort thing. It's possible that a proces may exit before the packets are sent out, even today. But that also means if a task is used for that job, we shouldn't enforce a delay on the task. Also, we probably should wait on that task to finish before giving the initial prompt to user (or something similar when it's `pwsh -c xxx` scenario).\r\n\r\n> That is why I am convinced that we should do fewer threads - there are too many of them. We need to reconsider this.\r\n\r\nI want to remind you again on the philosophy here, leveraging parallel processing doesn't contradict with the work that improves specific/individual code paths. When it's handled correctly, they amplify the final result.\r\n\r\nAs for your concern about the background thread used by ApplicationInsight, I think you overestimated it's impact. The expensive part that I see in the startup telemetry collection, is the loading of the ApplicationInsight assembly and the initialization of types from it.\r\n\r\n> I suppose that we'd better wait and first do all the other optimizations that we can, as well as get and evaluate all the benefits of future versions of .Net 6.0 ...\r\n\r\nI agree. I don't mean to rush my PR to the code base :) I'm not happy with the changes yet, and also it needs more testing to fine-tune the decisions like how many tasks to use, and what work load shall be done in tasks. But we also cannot wait till near the end of the release cycle for a PR like #14304. \r\n\r\nAbout the .NET 6 runtime initialization improvement, can you share links about it?\r\n\r\n",
    "created_at": "2020-12-03T23:27:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-738449342",
    "id": 738449342,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODQ0OTM0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738449342/reactions"
    },
    "updated_at": "2020-12-03T23:27:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738449342",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> About the .NET 6 runtime initialization improvement, can you share links about it?\r\n\r\nI collect all references in #14268.\r\nMains is https://github.com/dotnet/runtime/issues/44545 and https://github.com/dotnet/runtime/issues/44598\r\nIf you can communicate and work with Stephan Toub directly you have chance to improve PowerShell startup up to 30% I hope. :-)\r\n\r\nMany thanks for clarifications about ApplicationInsight! \r\n \r\n> As for your concern about the background thread used by ApplicationInsight, I think you overestimated it's impact. The expensive part that I see in the startup telemetry collection, is the loading of the ApplicationInsight assembly and **the initialization of types from it**.\r\n\r\nMy worries are only about the initialization. It would be great if you could ask ApplicationInsight owners to improve this.\r\n And you can see other cases in the trace. One with ToLower() we already merged. In #14268 there are others. \r\n\r\n>  Also, we probably should wait on that task to finish before giving the initial prompt to user (or something similar when it's pwsh -c xxx scenario).\r\n\r\nIt is again question for ApplicationInsight owners. I hope they can do more and better than us.\r\n\r\n> I want to remind you again on the philosophy here, leveraging parallel processing doesn't contradict with the work that improves specific/individual code paths. When it's handled correctly, they amplify the final result.\r\n\r\nI completely trust your experience (many thanks for discussions with me), but I have absolutely no idea how this is implemented in depth (after Stephan Toub's articles, I only have an understanding that everything is complicated) and how we could reliably check this in tests, especially for a startup script. \r\nSo I'm still in the opinion that it is better to make a couple of threads fast than hoping that ten pots will be better. This is me about myself, maybe you know how to make these checks reliable.\r\n\r\n> I agree. I don't mean to rush my PR to the code base :)\r\n\r\n:-)))) So it seems we have a chance to see how the open PR counter is rapidly decreasing from 150 to 0 - half of them you and your team can merge in a day as very simple.\r\n\r\nI updated #14268 with our last thoughts - feel free to add more there. Thanks!",
    "created_at": "2020-12-04T04:13:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-738553591",
    "id": 738553591,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODU1MzU5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738553591/reactions"
    },
    "updated_at": "2020-12-04T04:13:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738553591",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> It would be great if you could ask ApplicationInsight owners to improve this.\r\n\r\nI'm afraid the answer would be \"go ahead take a look at our code base, any perf improvement contributions are welcome!\" 😄\r\nTo be fair, the type initialization for many PowerShell types is also pretty expensive, for example, `System.Management.Automation.Utils` -- It's just too large.\r\n\r\nThanks for the compilation in #14268, and I'm glad that we are on the same page now.",
    "created_at": "2020-12-04T06:40:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-738598932",
    "id": 738598932,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODU5ODkzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738598932/reactions"
    },
    "updated_at": "2020-12-04T06:40:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738598932",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I'm afraid the answer would be \"go ahead take a look at our code base, any perf improvement contributions are welcome!\" 😄\r\n\r\nThreaten them migrating to OpenTelemetry 😄\r\n\r\n> To be fair, the type initialization for many PowerShell types is also pretty expensive, for example, `System.Management.Automation.Utils` -- It's just too large.\r\n\r\nYou could open new tracking issue for this and share where we could investigate - I could get involved, maybe prepare fixes and open issues in .Net if needed - now is the right time.\r\n\r\nAlso we could see Source Generators. I made an experiment for TypeGen. This works but the .Net feature is not ready for production (I already sent some feedbacks) and .Net team will actively improve and use them in .Net 6.0.\r\nWe could benefit from Source Generators  too in TypeGen, types.ps1xml convertor, others???",
    "created_at": "2020-12-04T07:15:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-738613071",
    "id": 738613071,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODYxMzA3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738613071/reactions"
    },
    "updated_at": "2020-12-04T07:15:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738613071",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> We could benefit from Source Generators too in TypeGen, types.ps1xml convertor, others???\r\n\r\n`TypeGen`, you mean the `TypeCatalogGen` project? It's a built-time only project, not included in PowerShell package, so I don't see a need of any chnage to it.",
    "created_at": "2020-12-04T17:21:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-738907300",
    "id": 738907300,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODkwNzMwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738907300/reactions"
    },
    "updated_at": "2020-12-04T17:21:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738907300",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> > We could benefit from Source Generators too in TypeGen, types.ps1xml convertor, others???\r\n> \r\n> `TypeGen`, you mean the `TypeCatalogGen` project? It's a built-time only project, not included in PowerShell package, so I don't see a need of any chnage to it.\r\n\r\nLike `ResGen`  the `TypeCatalogGen` complicates a life of Linux distribution maintainers. Migrating to MSBuild process helps them.",
    "created_at": "2020-12-04T17:28:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-738911677",
    "id": 738911677,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODkxMTY3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738911677/reactions"
    },
    "updated_at": "2020-12-04T17:28:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738911677",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2020-12-12T02:00:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-743638265",
    "id": 743638265,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzYzODI2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743638265/reactions"
    },
    "updated_at": "2020-12-12T02:00:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743638265",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@iSazonov I went through our comments and it looks we were on the same page that this PR is not needed. I will close it now.",
    "created_at": "2021-11-02T05:57:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/14281#issuecomment-957122803",
    "id": 957122803,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14281",
    "node_id": "IC_kwDOAvT7bc45DIjz",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/957122803/reactions"
    },
    "updated_at": "2021-11-02T05:57:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/957122803",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  }
]
