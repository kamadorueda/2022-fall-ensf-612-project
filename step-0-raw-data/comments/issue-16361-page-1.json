[
  {
    "author_association": "COLLABORATOR",
    "body": "I could be wrong here but when you use `[PSCustomObject]` it isn't actually pointing to [System.Management.Automation.PSCustomObject](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.pscustomobject?view=powershellsdk-7.0.0) but rather [System.Management.Automation.PSObject](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.psobject?view=powershellsdk-7.0.0)\r\n\r\n```powershell\r\n[PSCustomObject].FullName\r\n\r\n# System.Management.Automation.PSObject\r\n\r\n[System.Management.Automation.PSCustomObject].FullName\r\n\r\n# System.Management.Automation.PSCustomObject\r\n```\r\n\r\nThis is the part I cannot really explain too well but when you output an object on the pipeline it is somewhat transparently wrapped as a `PSObject` to give it access to the extended type system info for that type/object. So while it might be an `Int32` on the .NET side when you output it through `PSCustomObject` it is in reality a `PSObject` in the background. I might have clobbered the information here so someone who is more knowledgeable is free to share the correct information.\r\n\r\nIn the end , what's the purpose of checking if it's a `PSCustomObject` type? When you do `[PSCustomObject]@{...}` you are essentially creating a type with it's own properties and 1 `PSCustomObject` may not be the same as others. There might be a better method for your original purpose.",
    "created_at": "2021-11-03T00:57:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-958577284",
    "id": 958577284,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45IrqE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/958577284/reactions"
    },
    "updated_at": "2021-11-03T00:57:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/958577284",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yep, you more or less got it. Anything passed through the pipeline is essentially wrapped in a PSObject wrapper, and checking `-is [psobject]` (and by extension `-is [pscustomobject]` as @jborean93 points out, as they point to the same type) is pretty meaningless.\r\n\r\nIt is effectively the same thing as doing `-is [object]` -- there's not many scenarios where it makes sense to check that kind of metadata.",
    "created_at": "2021-11-03T12:50:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-959001417",
    "id": 959001417,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45KTNJ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959001417/reactions"
    },
    "updated_at": "2021-11-03T12:51:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959001417",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "The reason I'm checking for `[psobject]` is because I'm invoking a script (provided by a user of my module at runtime), that either returns a primitive value (string/int/bool, maybe even PathInfo and similar), or a map (key-value) container like hashtable/psobject/pscustomobject with a fixed property name (among other properties).\r\n\r\nI need to distinguish between these two cases, and testing with `-is` seemed like the best way, but apparently it isn't. Do you have any better alternatives? I could restrict the API to only accept a hashtable or a primitive value, but would prefer to also accept other map-like containers. ",
    "created_at": "2021-11-03T13:50:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-959128481",
    "id": 959128481,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45KyOh",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959128481/reactions"
    },
    "updated_at": "2021-11-03T13:50:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959128481",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6414091?v=4",
      "events_url": "https://api.github.com/users/MatejKafka/events{/privacy}",
      "followers_url": "https://api.github.com/users/MatejKafka/followers",
      "following_url": "https://api.github.com/users/MatejKafka/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatejKafka/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MatejKafka",
      "id": 6414091,
      "login": "MatejKafka",
      "node_id": "MDQ6VXNlcjY0MTQwOTE=",
      "organizations_url": "https://api.github.com/users/MatejKafka/orgs",
      "received_events_url": "https://api.github.com/users/MatejKafka/received_events",
      "repos_url": "https://api.github.com/users/MatejKafka/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MatejKafka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatejKafka/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MatejKafka"
    }
  },
  {
    "author_association": "NONE",
    "body": "```(Write-Output 1) -is [int] # True```\r\n\r\nI think `.GetType().Name` method returns correct value.",
    "created_at": "2021-11-03T15:29:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-959452228",
    "id": 959452228,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45MBRE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959452228/reactions"
    },
    "updated_at": "2021-11-03T15:30:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959452228",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If you want to check for a true PSCustomObject, one constructed with `[pscustomobject]@{ .... }` you're probably best off doing `$object.PSTypeNames` and looking for the PSCustomObject type name in there.\r\n\r\n`-is` will work for most things, but PSCustomObject is more a property bag than a type in and of itself, so it's not particularly suitable for that.",
    "created_at": "2021-11-03T15:40:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-959487369",
    "id": 959487369,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45MJ2J",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959487369/reactions"
    },
    "updated_at": "2021-11-03T15:40:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/959487369",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You can also use the full type name for that test:\r\n\r\n```powershell\r\n(Write-Output 1) -is [System.Management.Automation.PSCustomObject]\r\n# False\r\n([pscustomobject]@{thing = 1; that = 2}) -is [System.Management.Automation.PSCustomObject]\r\n# True\r\n```\r\n\r\n`PSCustomObject` is really a dummy instance used as the base object for `PSObject`s when there's no base object.  The type accelerator pointing to `PSObject`  is a little confusing but more helpful than harmful imo.",
    "created_at": "2021-11-04T02:54:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-960413024",
    "id": 960413024,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45Pr1g",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/960413024/reactions"
    },
    "updated_at": "2021-11-04T02:54:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/960413024",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Yep, you more or less got it. Anything passed through the pipeline is essentially wrapped in a PSObject wrapper, and checking `-is [psobject]` (and by extension `-is [pscustomobject]` as @jborean93 points out, as they point to the same type) is pretty meaningless.\r\n\r\nI think there is a need for some **documentation** on to explain that **type accelerators** (a) exist and (b) don't do what one might expect : for example \r\n\r\n```\r\n1gb -is [int]\r\ntrue\r\n\r\n2gb -is [int] \r\nfalse\r\n```\r\nThis makes sense only when one knows that `int` serves as an alias for `[int32]`  \r\n```\r\n[int]\r\n\r\nIsPublic IsSerial Name                                     BaseType                                                                                                                                               \r\n-------- -------- ----                                     --------                                                                                                                                               \r\nTrue     True     Int32                                    System.ValueType \r\n\r\n[int].FullName\r\nSystem.Int32\r\n```\r\nSo knowing 1gb is an `int32` but 2gb is an `int64`,  **and** `-is [int]` tests for `-is [System.Int32]`  makes sense of the the example.      \r\n`System.` is not needed needed on a type name - there is an implicit `using namespace system` so we can use `-is [int32]`  and in lot of cases, *see the table below*, there's an argument for using `Int32` instead of `int`, `Boolean` instead of `bool`  etc. (moving a function to a cmdlet in C# doesn't need to change type names).     \r\nwith `pscustomobject` we get\r\n```\r\n [PSCustomObject]\r\n\r\nIsPublic IsSerial Name                                     BaseType                                                                                                                                               \r\n-------- -------- ----                                     --------                                                                                                                                               \r\nTrue     True     PSObject                                 System.Object                                                                                                                                          \r\n\r\n[PSCustomObject].FullName\r\nSystem.Management.Automation.PSObject\r\n```\r\nSo  `-is  [PSCustomObject]` does `-is [System.Management.Automation.PSObject]`  - I think this is a unique case where is     `System.Management.Automation.X` type and `[X]` is a type accelerator which points to a **different** type giving  `PSCustomObject` its split personality: interchangeable with `psobject` in some operations, but not, for example, in a *cast* \r\n```\r\n([PSCustomObject]@{Foo='Bar'}).GetType().FullName\r\nSystem.Management.Automation.PSCustomObject\r\n\r\n ([PSobject]@{Foo='Bar'}).GetType().FullName\r\nSystem.Collections.Hashtable\r\n```\r\n \r\n**IMHO**  the original design wasn't ideal and the behaviour it gives  falls in a awkward triple\r\n\r\n- It is not intuitive\r\n- Nor is it not easily discoverable -it is \"arcane\" knowledge discovered by asking the right people: there is no about_pscustomobject or similar topic and it is not covered in System.Management.Automation.PSCustomObject\r\n- It is probably too late to change.  \r\n\r\nAnd the best \"fix\" for that is to document it.  For reference any such help probably needs to explain the following:  \r\n\r\nTypeAccelerator                | Undelying type                                                                  \r\n----------------------------|------------------------------------------------------------------------------------\r\nbool                           | System.Boolean                                                                  \r\nfloat                          | System.Single                                                                   \r\nint                            | System.Int32                                                                    \r\nshort                          | System.Int16                                                                    \r\nlong                           | System.Int64                                                                    \r\npscustomobject                 | System.Management.Automation.PSObject                                           \r\nref                            | System.Management.Automation.PSReference                                        \r\nswitch                         | System.Management.Automation.SwitchParameter                                    \r\nbigint                         | System.Numerics.BigInteger                                                      \r\nushort                         | System.UInt16                                                                   \r\nuint                           | System.UInt32                                                                   \r\nulong                          | System.UInt64                                                                   \r\nxml                            | System.Xml.XmlDocument                                                          \r\nsemver                         | System.Management.Automation.SemanticVersion                                    \r\nadsi                           | System.DirectoryServices.DirectoryEntry                                         \r\nadsisearcher                   | System.DirectoryServices.DirectorySearcher                                      \r\nwmiclass                       | System.Management.ManagementClass                                               \r\nwmi                            | System.Management.ManagementObject                                              \r\nwmisearcher                    | System.Management.ManagementObjectSearcher                                      \r\n",
    "created_at": "2021-11-05T09:06:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-961730913",
    "id": 961730913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45Utlh",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/961730913/reactions"
    },
    "updated_at": "2021-11-05T09:06:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/961730913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> there's an argument for using `Int32` instead of `int`, `Boolean` instead of `bool` etc. (moving a function to a cmdlet in C# doesn't need to change type names).\r\n\r\nNote that for those particular examples (and most primitives) there are matching keywords in C#.",
    "created_at": "2021-11-05T17:35:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-962086549",
    "id": 962086549,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45WEaV",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/962086549/reactions"
    },
    "updated_at": "2021-11-05T17:35:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/962086549",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-11-07T00:00:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16361#issuecomment-962526202",
    "id": 962526202,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16361",
    "node_id": "IC_kwDOAvT7bc45Xvv6",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/962526202/reactions"
    },
    "updated_at": "2021-11-07T00:00:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/962526202",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
