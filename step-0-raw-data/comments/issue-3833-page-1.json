[
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT  Have we plan to implement Set-Culture?\r\n\r\nIt seems we can change a culture for current thread only.",
    "created_at": "2017-10-08T17:43:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-335024365",
    "id": 335024365,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTAyNDM2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335024365/reactions"
    },
    "updated_at": "2017-10-08T17:43:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335024365",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@iSazonov no immediate plans",
    "created_at": "2017-10-08T21:03:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-335038371",
    "id": 335038371,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTAzODM3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335038371/reactions"
    },
    "updated_at": "2017-10-08T21:03:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335038371",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We could use [DefaultThreadCurrentCulture](https://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo.defaultthreadcurrentculture(v=vs.110).aspx).\r\nThe problem is that we have some appdomains:\r\n- https://github.com/PowerShell/PowerShell/blob/02b5f357a20e6dee9f8e60e3adb9025be3c94490/src/System.Management.Automation/singleshell/config/RegistryStringResourceIndirect.cs#L90\r\n- https://github.com/PowerShell/PowerShell/blob/db33d90479793144837af197002f6c3c2d02d719/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L6400\r\n\r\n@SteveL-MSFT @daxian-dbw @lzybkr Could you please comment? Is it possible to enumerate appdomains and set a culture?",
    "created_at": "2017-10-09T04:32:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-335065236",
    "id": 335065236,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTA2NTIzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335065236/reactions"
    },
    "updated_at": "2017-10-09T04:32:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335065236",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: `CultureInfo.DefaultThreadCurrentCulture` is a _per-application_ default, which I don't think is appropriate for our needs.\r\n\r\nLooking at this again months later:\r\n\r\nPresumably, we don't want to get into supporting _persistent_ locale (culture) changes on _Unix-like platforms_, because there are no easy, standardized solutions.<sup>[1]</sup>\r\n\r\nAs far as I'm aware, there's no support in .NET Core for this, just as there is no support for persisting environment variables in general (`[environment]::SetEnvironmentVariable()` doesn't support the `User` and `Machine` targets on Unix, and, similarly, [our own RFC for enhanced environment-variable support](https://github.com/PowerShell/PowerShell-RFC/pull/92) only targets persistence support on Windows).\r\n\r\nThis means that `Set-Culture` would only support `-Scope Session` on Unix and would therefore have to be the default there - which deviates from the default behavior (implied `-Scope CurrentUser`) in Windows PowerShell.\r\n\r\nThat said, the same deviation already exists in the extant `Get-Culture` cmdlet, which reports the _current-thread_ culture (only and invariably) in PowerShell Core on _all_ platforms vs. the  _persisted user culture_ (only and invariably) in Windows PowerShell (irrespective of the thread's current culture).\r\n\r\nIn short: I think what is called for is:\r\n\r\n* Make `Set-Culture` default to `-Scope Session` on _all_ platforms, and support only `Session` on Unix-like platforms.\r\n\r\n  * This makes it the PowerShell-idiomatic equivalent of `[cultureinfo]::CurrentCulture = ...`\r\n\r\n* On _Windows_, also support `-Scope CurrentUser` (current Windows PowerShell behavior) and `-Scope CurrentUserAndSession` for updating the user's default culture for future sessions and optionally also the current one.\r\n\r\n---\r\n\r\n[1] Some pointers: On macOS, `defaults write -g AppleLocale <local-id>` updates the _current user's_ locale persistently. On Debian-like Linux distros such as Ubuntu it is file `/etc/default/locale`  that stores the default locale, but _system-wide_. I'm unclear on how it works in other Linux distros. However, _user-level_ defaults on Linux would generally require modifying user-level initialization files, which are _shell-specific_.\r\n",
    "created_at": "2018-10-22T12:54:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-431827079",
    "id": 431827079,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTgyNzA3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431827079/reactions"
    },
    "updated_at": "2019-02-07T03:51:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431827079",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Taking a step back:\r\n\r\nIn Windows PowerShell:\r\n\r\n* `Get-Culture` is built on the assumption that the _culture won't change in-session_, as it only ever reflects the persisted user-level setting.\r\n\r\n   * Only if someone changes the culture in-session using the .NET framework directly (with `[cultureinfo]::CurrentCulture = ...`) do they see a discrepancy between the (thread's) _current_ culture and the value reported by `Get-Culture` (and `$PSCulture` and `$host.CurrentCulture`).\r\n\r\n* Similarly, `Set-Culture` only updates the _persisted_ setting without changing the in-session culture.\r\n\r\nIn PowerShell Core:\r\n\r\n* `Get-Culture` (`$host.CurrentCulture` and `$PSCulture` presumably soon (#3831) ) always reflects the thread's _current_  culture, whether it was changed after session startup or not.\r\n\r\n* `Set-Culture` doesn't exist yet.\r\n\r\n---\r\n\r\nThe Windows PowerShell `*-Culture` cmdlets were seemingly built with _just_ reflecting / updating the _persisted_ culture setting in mind, irrespective of in-session changes.\r\n\r\nIn PowerShell Core we don't have support for that:\r\n\r\n* `Get-Culture` already always reflects the _current_ culture - whether it is the persisted setting or was changed in-session\r\n\r\n  * However, the behavior is consistent with Windows PowerShell _as long as no in-session changes are made._\r\n\r\n* If we were to implement `Set-Culture` to default to the _session only_, it would result in _fundamentally different_ behavior than in Windows PowerShell, which is maybe too problematic.\r\n\r\nSo, if consistency with Windows PowerShell's `Set-Culture` is paramount, the choices are:\r\n\r\n* Continue to hold off on implementing `Set-Culture` in PS Core.\r\n\r\n   * Add instructions to the `Get-Culture` and `Set-Culture` help topics to show how to change the current culture in-session using the .NET framework.\r\n\r\n* Implement it (as suggested in the initial post), but with the same default behavior as in Windows PowerShell, which means:\r\n\r\n  * On Unix-like platforms, the only command form that will work is `Set-Culture -Scope Session ...`, and neglecting to specify `-Scope Session` will have to result in a not-implemented (statement-terminating) error.\r\n\r\n  * On Windows, the default behavior is as in Windows PowerShell (`-Scope CurrentUser` implied), with the (not-extant in WinPS) options to _also_ change the in-session culture (`-Scope CurrentUserAndSession`) or _just_ the in-session culture (`-Scope Session`).\r\n\r\nNote that the price for this nod to consistency with Windows PowerShell would be an asymmetry between `Get-Culture` and `Set-Culture` in PS Core:\r\n\r\nIn terms of the proposed `Set-Culture` implementation, `Get-Culture`'s default behavior is conceptually `-Scope Session` (and again we'd lack the ability to implement `-Scope CurrentUser` on Unix), whereas `Set-Culture`'s would be `-Scope CurrentUser`.\r\n\r\n\r\n\r\n",
    "created_at": "2018-10-22T13:35:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-431837446",
    "id": 431837446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTgzNzQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431837446/reactions"
    },
    "updated_at": "2018-10-22T13:38:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431837446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks! We could start with `-Scope Session`.",
    "created_at": "2018-10-22T14:29:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-431851974",
    "id": 431851974,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTg1MTk3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431851974/reactions"
    },
    "updated_at": "2018-10-22T14:29:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431851974",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yes, @iSazonov, but we need to decide on whether:\r\n\r\n*  `-Scope Session` should be the _default_ - which would make it consistent with PS Core `Get-Culture`, but incompatible with Windows PowerShell's `Set-Culture`.\r\n\r\n* `-Scope CurrentUser` should be the default, to align (conceptually) with Windows PowerShell, which, however, makes it asymmetrical with PS Core `Get-Culture` and requires explicit use of `-Scope Session` for in-session changes (which would be the only scope supported on Unix, at least for now; in other words: something like `Set-Culture de-DE` would _fail_ without `-Scope Session`).",
    "created_at": "2018-10-22T14:44:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-431856444",
    "id": 431856444,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTg1NjQ0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431856444/reactions"
    },
    "updated_at": "2018-10-22T14:45:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/431856444",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT Could PowerShell Committee consider the cmdlet and _defaults_ options (keep backward compatibility with Windows PowerShell or consistency with Get-Culture)? ",
    "created_at": "2019-02-04T12:01:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-460224105",
    "id": 460224105,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDIyNDEwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/460224105/reactions"
    },
    "updated_at": "2019-02-04T12:01:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/460224105",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee discussed this and would accept setting culture for PowerShell at system, user scopes, and process scope.  The cmdlets would modify powershell.config.json and pwsh should read this on startup and set culture.  Because these are PowerShell specific, recommendation is to call it `Set-PSCulture`.  If there is a need to set system culture, that's an ask for Windows to create such a cmdlet.  Also have new `Get-PSCulture` cmdlets that are symmetric to `Set-PSCulture`.  Current `Get-Culture` would be deprecated.  `Set-PSCulture` would be expected to update `$PSCulture`",
    "created_at": "2019-02-06T23:22:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-461228340",
    "id": 461228340,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTIyODM0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 2,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/461228340/reactions"
    },
    "updated_at": "2019-02-06T23:22:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/461228340",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> If there is a need to set system culture, that's an ask for Windows to create such a cmdlet.\r\n\r\nWhat about Unix-es? Maybe ask .Net Core team for the API for all platforms?",
    "created_at": "2019-02-07T03:46:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-461278697",
    "id": 461278697,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI3ODY5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/461278697/reactions"
    },
    "updated_at": "2019-02-07T03:46:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/461278697",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Could you please summarize actual specifications for Get-PSCulture and Set-PSCulture cmdlets? Then I'd start with Get-PSCulture step-by-step.",
    "created_at": "2019-02-08T06:54:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-461708876",
    "id": 461708876,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTcwODg3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/461708876/reactions"
    },
    "updated_at": "2019-02-08T06:54:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/461708876",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nI think it is ill-advised to make PowerShell have its own culture settings, divorced from the host platform's:\r\n\r\n* Calling _into_ PowerShell (e.g., from `bash`) means that PowerShell may operate with a different culture than the caller.\r\n\r\n* Calling _out_ of PowerShell means that external programs may operate on a different culture (i.e., the host platform's) - this could be remedied with setting the relevant environment variables to match culture configured for PowerShell, but _only on Unix_.\r\n\r\nBoth scenarios invite confusion.\r\n\r\nTherefore, my advice is not to build an \"enclave\" and instead comply with / operate on the host platform's (potentially user-specific) culture settings - even if that means that on Unix-like platforms we can only offer setting the _current process_' culture - which would mirror the situation with respect to _environment variables_ (even at the level of CoreFx), whose _persistent_ modification is only supported on Windows.\r\n\r\nIn short: I don't want to help with fleshing out `Get-PSCulture` and `Set-PSCulture`, because I think they're a bad idea.\r\n\r\n\r\n",
    "created_at": "2019-02-18T23:19:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-464919424",
    "id": 464919424,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDkxOTQyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/464919424/reactions"
    },
    "updated_at": "2019-02-18T23:19:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/464919424",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 If bash allows to put \r\n```\r\nLC_ALL=C\r\nLANG=C\r\nexport LC_ALL LANG\r\n```\r\nin its profile (~/.bashrc or ~/.bash_profile) why PowerShell can not?",
    "created_at": "2019-02-19T06:48:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-465007297",
    "id": 465007297,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTAwNzI5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/465007297/reactions"
    },
    "updated_at": "2019-02-19T06:48:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/465007297",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nYes, you can do that in Bash - but it too is a bad idea, because it's treacherous to configure a _single shell_ in a way that deviates from the _OS session's_ culture.\r\n\r\nIf you place these settings in `~/bashrc`, at least they're restricted to _interactive sessions_, but that wouldn't be the case with `powershell.config.json` (and - sadly - also not if placed in `$PROFILE`, due to #992).\r\n\r\nThus, calls _from the outside_ via `pwsh -c`  that sensibly assume that the OS session's culture is in effect would be  in for a rude awakening.\r\n\r\n---\r\n\r\nI see two primary uses cases for `Set-Culture`:\r\n\r\n* (a) Ad hoc: Change the _current PowerShell session_'s culture for _tests and experimentation_.\r\n\r\n* (b) Persistently: Change the _OS session's_ startup culture for the current users (possibly also the system default).\r\n  * As discussed above, a persistent _shell-specific_ setting is ill-advised.\r\n\r\nWe can easily do (a) on Unix, even more thoroughly than in Windows, because if we also set environment var. `LANG`, all _external programs_ launched thereafter will see that culture _process-wide_.\r\n\r\nWe can do (b) on Windows with little effort (the way it already works in WinPS), but on macOS and Linux it's much trickier, so I think it's perfectly fine to get started with simply _not_ supporting persistent culture updates on Unix-like platforms, as is already the case with (non-)support for persistently updating environment variables in CoreFx (`[Environment]::SetEnvironmentVariable()`).  \r\nWe can do more research later - find some food for thought below.\r\n\r\n---\r\n\r\n**Persistently changing the current user's / the system's default _OS session's_  culture on Unix-like platforms**\r\n\r\n* macOS: \r\n\r\n  *  System default: There is no way that I'm aware of.\r\n  * Current-user default: See [this article](https://www.evernote.com/l/AEVR60CFLBlGJqqWThLCCDFE8SEDPFE8jN0); requires reboot / OS-session logoff to take effect.\r\n\r\n* Linux: Various Linux distros may have different mechanisms.\r\n  * Ubuntu:\r\n    * System default: maintained in plain-text file `/etc/default/locale` (can be updated directly or via `update-locale`; both methods require `sudo`).\r\n    * Current-user default:  maintained in optional plain-text file `~/.pam_environment`\r\n    * Both cases require reboot / OS-session logoff to take effect.\r\n\r\n  * Other distros?\r\n\r\n",
    "created_at": "2019-02-26T04:57:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-467295593",
    "id": 467295593,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzI5NTU5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467295593/reactions"
    },
    "updated_at": "2019-02-26T04:57:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467295593",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 We haven't standard API to set culture in Unixes at OS level. And we'll do not resolve this in near future. So you is very strong in limiting user opportunities. If my servers is ru-RU culture I'd want to switch PowerShell to en-US and forget about datetime format parsing and similar problems.\r\nThis is very convenient when .Net application automatically sets the interface language based on the OS culture. But if you only need to switch the language in one application and you do not have this option, then this is annoying problem.",
    "created_at": "2019-03-01T17:26:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-468743774",
    "id": 468743774,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc0Mzc3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468743774/reactions"
    },
    "updated_at": "2019-03-01T17:26:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468743774",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> We haven't standard API to set culture in Unixes at OS level.\r\n\r\nIndeed; the bottom section of my previous post was meant to show that rolling our own solution would be far from trivial.\r\n\r\n> And we'll do not resolve this in near future.\r\n\r\nUnderstood; as I suggested: just support it at the _session (process) level_ on Unix.\r\n\r\n> If my servers is ru-RU culture I'd want to switch PowerShell to en-US and forget about datetime format parsing and similar problems.\r\n\r\nSwitching _just PowerShell_ to a different culture is problematic for the reasons discussed.\r\nWhich ones do you disagree with?\r\n\r\nSomeone who really wants to do that can _manually_ update their `$PROFILE` with the relevant .NET call and, on Unix, environment-variable definitions  OR, if we implement `Set-Culture` as (defaulting to) process / session scope, as I'm proposing, by simply calling `Set-Culture`. \r\n\r\n> This is very convenient when .Net application automatically sets the interface language based on the OS culture. But if you only need to switch the language in one application and you do not have this option, then this is annoying problem.\r\n\r\nI don't understand.\r\n\r\n",
    "created_at": "2019-03-01T17:42:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-468748684",
    "id": 468748684,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc0ODY4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468748684/reactions"
    },
    "updated_at": "2019-03-01T17:52:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468748684",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I don't understand.\r\n\r\nIf you run a management tool with native language and read documentation on English - it is problem and you'd want to switch interface language of the tool on the fly.",
    "created_at": "2019-03-01T18:22:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-468761253",
    "id": 468761253,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc2MTI1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468761253/reactions"
    },
    "updated_at": "2019-03-01T18:22:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468761253",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Which ones do you disagree with?\r\n\r\nRoot problem is that there is no standard api for setting a culture on OS level. Therefore, everything else looks like a personal preference - in every possible scenario, one sees a problem and the other benefits.\r\n",
    "created_at": "2019-03-01T18:29:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-468763481",
    "id": 468763481,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc2MzQ4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468763481/reactions"
    },
    "updated_at": "2019-03-01T18:29:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468763481",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> you'd want to switch interface language of the tool on the fly.\r\n\r\nThat's exactly what `Set-Culture` would enable you to do (at least if we also make it set `[System.Threading.Thread]::CurrentThread.CurrentUICulture`, which we should):\r\n\r\n_Temporarily_ change the culture, for the duration of the session (or until changed again later in the session).\r\n\r\nOn a related note, it would be handy to have a command for running one or more commands with a given culture and then revert to the previous one; here's what I personally use, gratefully adapted from an ancient [blog post](https://rkeithhill.wordpress.com/2009/10/21/windows-powershell-2-0-string-localization/) by @rkeithhill \r\n\r\n```powershell\r\nPS> Use-Culture ru-RU { Get-Date }\r\nпятница, 1 марта 2019 г. 13:53:21\r\n```\r\n",
    "created_at": "2019-03-01T18:56:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-468772074",
    "id": 468772074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc3MjA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468772074/reactions"
    },
    "updated_at": "2019-03-01T18:56:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468772074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Root problem is that there is no standard api for setting a culture on OS level.\r\n\r\nIt is a problem and it is unfortunate, but not one that must necessarily be solved by us.\r\n\r\nOnly supporting `-Scope Session` (process) for `Set-Culture` on Unix-like platforms _and defaulting to that_ is the best we can do under the circumstances:\r\n\r\n* It allows in-session changes, supporting the scenario you mentioned, for instance.\r\n\r\n* It allows users to place a `Set-Culture` call in their `$PROFILE`, _if_ they really want to do that. \r\n  * For the reasons stated, such an approach is not for everyone and compromises the robustness of cross-shell scripting / calling the PowerShell CLI from - at least as long as PowerShell still sources `$PROFILE` even in non-interactive scenarios (you can work around that with disciplined use of `-noprofile`, but note that if the culture were baked into `\r\npowershell.config.json`, you wouldn't even have that option).\r\n\r\nShould CoreFx APIs someday allow changing the culture _persistently_ on Unix, we can enable it in `Set-Culture` then.\r\n\r\n\r\n\r\n",
    "created_at": "2019-03-01T19:03:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-468774816",
    "id": 468774816,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODc3NDgxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468774816/reactions"
    },
    "updated_at": "2019-03-01T19:06:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/468774816",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "For information https://github.com/dotnet/platform-compat/blob/master/docs/DE0008.md\r\n",
    "created_at": "2019-03-13T12:36:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-472404337",
    "id": 472404337,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjQwNDMzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/472404337/reactions"
    },
    "updated_at": "2019-03-13T12:36:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/472404337",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The analyzer warning you link to recommends settings (and getting) `[CultureInfo]::CurrentCulture]` instead of `[System.Threading.Thread]::CurrentThread.CurrentCulture]`, which in .NET Core is a _must_ for _cross-thread_ use.\r\n\r\nWhile that makes sense, we wouldn't be setting the culture for a different _thread_ anyway, however (and assigning to `[CultureInfo]::CurrentCulture]` still only changes the targeted _thread_'s culture).\r\n\r\nSo how does this fit into our conversation?\r\n\r\nOn a related note, however, with respect to _in-session_ changes (the only kind we can currently provide on Unix, as discussed): \r\n\r\nAs a _shell_ that provides an environment for _external programs_ as well, we want to change the culture for them too - which assigning to `[CultureInfo]::CurrentCulture]` by itself doesn't do:\r\n\r\n* On Unix-like platforms, as stated, we change the culture for external programs launched thereafter by also setting the relevant locale environment variable, `LANG`.\r\n\r\n* On Windows, regrettably, we seemingly cannot do this, which is a limitation we'd have to document (setting `[cultureinfo]::DefaultThreadCurrentCulture` only sets the default for (all threads in) the current application domain, and has no effect on external processes, whether they run managed code or not; the [Windows API](https://docs.microsoft.com/en-us/windows/desktop/Intl/national-language-support-functions) also seems to offer no process-wide setting).\r\n\r\n\r\n",
    "created_at": "2019-03-14T04:37:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3833#issuecomment-472701479",
    "id": 472701479,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3833",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjcwMTQ3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/472701479/reactions"
    },
    "updated_at": "2019-03-14T04:37:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/472701479",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
