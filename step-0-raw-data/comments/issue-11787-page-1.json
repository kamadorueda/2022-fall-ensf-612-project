[
  {
    "author_association": "NONE",
    "body": "<!--[AutoMerge]-->\nHello @TravisEz13!\n\nBecause this pull request has the `AutoMerge` label, I will be glad to assist with helping to merge this pull request once all check-in policies pass.\n\nDo note that I've been instructed to only help merge pull requests of this repository that have been opened for at least **24 hours**, a condition that will be fulfilled in about 23 hours 19 minutes. No worries though, I will be back when the time is right! :wink:\n\n##### p.s. you can customize the way I help with merging this pull request, such as holding this pull request until a specific person approves. Simply @mention me (`@msftbot`) and give me an instruction to get started! Learn more [here](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Advanced-auto-merge).",
    "created_at": "2020-02-05T23:30:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-582663242",
    "id": 582663242,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjY2MzI0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/582663242/reactions"
    },
    "updated_at": "2020-02-05T23:30:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/582663242",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Today, the NativeDllHandler calls NativeLibrary.Load(fullName) even if the file doesn't exist. This is not right, it should return IntPtr.Zero to let the runtime try the next resolution approach, if there is one.\r\n\r\n> https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary.load?view=netcore-3.1\r\n\r\nDocs says NativeLibrary.Load() throws DllNotFoundException if the file does not exist.\r\nSo the exception is a root cause of the issue.\r\nI suggest to use NativeLibrary.TryLoad() method to avoid explicit file existence check. This also addresses BadImageFormatException if a file.dll exists but it is not valid dll.\n\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.nativelibrary.load\">NativeLibrary.Load Method (System.Runtime.InteropServices)</a></strong></div><div><p sourcefile=\"api/System.Runtime.InteropServices.NativeLibrary.Load.yml\" sourcestartlinenumber=\"1\" jsonPath=\"/members/0/summary\">Provides a simple API for loading a native library that wraps the OS loader and uses default flags.</p>\n</div></blockquote>",
    "created_at": "2020-02-06T06:37:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-582759606",
    "id": 582759606,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4Mjc1OTYwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/582759606/reactions"
    },
    "updated_at": "2020-02-06T06:37:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/582759606",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": ">  avoid explicit file existence check.\r\n\r\n@iSazonov How would that add any benefit? There will be a file check in `NativeLibrary.TryLoad()` anyways. It makes more sense to check here and avoid an unnecessary method call (p/invoke).",
    "created_at": "2020-02-06T19:32:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-583071986",
    "id": 583071986,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzA3MTk4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583071986/reactions"
    },
    "updated_at": "2020-02-06T19:32:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583071986",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@msftclas make sure @PaulHigin has a chance to review before you merge\r\n",
    "created_at": "2020-02-06T21:21:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-583116315",
    "id": 583116315,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzExNjMxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583116315/reactions"
    },
    "updated_at": "2020-02-06T21:21:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583116315",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> How would that add any benefit? There will be a file check in NativeLibrary.TryLoad() anyways. It makes more sense to check here and avoid an unnecessary method call (p/invoke).\r\n\r\nThe resolver is _last resort resolver_. In most scenarios all native dll-s are loaded before the resolver. The resolver is called only for one scenario - last attempt to load arch-dependent native dll. Normally the attempt is successful and we do not need to check for the dll file before p/invoke. Any fail in native dll loading is rare and it is _a bug_ (we should again not worry about dll file check)  - either dll is absent or corrupted - both these cases TryLoad() can catch.",
    "created_at": "2020-02-07T04:26:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-583228426",
    "id": 583228426,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzIyODQyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583228426/reactions"
    },
    "updated_at": "2020-02-07T04:26:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583228426",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> The resolver is last resort resolver.\r\n\r\nThis is just the current runtime behavior. It's possible another resolving approach could be added after the `ResolvingUnmanagedDll` event in future. And that won't be a breaking change unless the handler registered to the event is not returning `IntPtr.Zero` when it fails to resolve.\r\n\r\nThis cause problem to application that hosts powershell, e.g. dotnet-interactive. Both the application code and powershell is using the default load context, so this event handler will kick in for all native library loading, even if it's triggered by the application code instead of a powershell module. With the current code, the exception thrown from this handler is super confusing, also the stack trace makes PowerShell look like a culprit to blame.\r\n\r\n> both these cases TryLoad() can catch.\r\n\r\nUsing `TryLoad` here is wrong because it will never throw an exception even if the DLL exists but somehow cannot be loaded.\r\nWhen the file actually exists, an exception should be thrown when it cannot be loaded.",
    "created_at": "2020-02-07T18:39:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-583547321",
    "id": 583547321,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzU0NzMyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583547321/reactions"
    },
    "updated_at": "2020-02-07T18:40:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583547321",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> so this event handler will kick in for all native library loading, even if it's triggered by the application code instead of a powershell module.\r\n\r\nIn the case we should catch and log any exception and continue resolving process.",
    "created_at": "2020-02-07T19:06:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-583557879",
    "id": 583557879,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzU1Nzg3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583557879/reactions"
    },
    "updated_at": "2020-02-07T19:06:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583557879",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Actually, on a second thought, I think you are right about using `TryLoad`.\r\nIf we cannot load the DLL (loading fails), it also indicates the resolution failed, isn't it?\r\nIn that case, it's better to let the runtime to throw the general exception `Unable to load DLL 'nativedll'` instead of PowerShell throwing out an exception with a specific path, because that path might not mean for a native DLL at all.\r\n\r\nI will update the code. Thanks @iSazonov!",
    "created_at": "2020-02-07T19:31:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-583567522",
    "id": 583567522,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzU2NzUyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583567522/reactions"
    },
    "updated_at": "2020-02-07T20:24:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/583567522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": ":tada:`v7.0.0-rc.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.3)\n",
    "created_at": "2020-02-21T23:55:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11787#issuecomment-589885652",
    "id": 589885652,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11787",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTg4NTY1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/589885652/reactions"
    },
    "updated_at": "2020-02-21T23:55:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/589885652",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
