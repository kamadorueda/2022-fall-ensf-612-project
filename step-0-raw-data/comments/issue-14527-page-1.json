[
  {
    "author_association": "NONE",
    "body": "@mklement0 because .foreach as well as .where apply to arrays by design",
    "created_at": "2021-01-02T11:57:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14527#issuecomment-753465013",
    "id": 753465013,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14527",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ2NTAxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753465013/reactions"
    },
    "updated_at": "2021-01-02T11:57:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753465013",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17237559?v=4",
      "events_url": "https://api.github.com/users/scriptingstudio/events{/privacy}",
      "followers_url": "https://api.github.com/users/scriptingstudio/followers",
      "following_url": "https://api.github.com/users/scriptingstudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/scriptingstudio/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scriptingstudio",
      "id": 17237559,
      "login": "scriptingstudio",
      "node_id": "MDQ6VXNlcjE3MjM3NTU5",
      "organizations_url": "https://api.github.com/users/scriptingstudio/orgs",
      "received_events_url": "https://api.github.com/users/scriptingstudio/received_events",
      "repos_url": "https://api.github.com/users/scriptingstudio/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scriptingstudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scriptingstudio/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scriptingstudio"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@scriptingstudio: No, both `.ForEach()` and `.Where()` are designed to work on scalars too, in the interest of unified treatment of scalars and collections - just like `(42).Count` reports `1` and  `(42)[0]` reports `42`,  for instance. \r\n\r\nThis is evidenced by the _equivalent_ operation working just fine:\r\n\r\n```powershell\r\n# Equivalent to: $o.ForEach('one', 2)\r\nPS> $o = [pscustomobject] @{ one = 1 }; $o.ForEach({ $_.one = 2 }); $o\r\n\r\none\r\n---\r\n  2\r\n```",
    "created_at": "2021-01-02T13:32:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14527#issuecomment-753474260",
    "id": 753474260,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14527",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ3NDI2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753474260/reactions"
    },
    "updated_at": "2021-01-02T13:33:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753474260",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "But there is incompatibility between PS5 and PS7.\r\n### PS5\r\n```\r\n$a=12\r\n$a.foreach{$_}\r\n12\r\n#\r\n$a = [pscustomobject]@{v=12}\r\n$a.foreach{$_}\r\nMethod invocation failed because [System.Management.Automation.PSCustomObject] does not contain a method named 'ForEach\r\n'.\r\nAt line:1 char:1\r\n+ $a.foreach{$_}\r\n+ ~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (ForEach:String) [], RuntimeException\r\n    + FullyQualifiedErrorId : MethodNotFound\r\n```\r\n\r\n### PS7 \r\n```\r\n$a = [pscustomobject]@{v=12}\r\n$a.foreach{$_}\r\n\r\n v\r\n -\r\n12\r\n```\r\n\r\nI drives me crasy because I always should remember about that and use everywhere `@(var).foreach{}`\r\n",
    "created_at": "2021-01-02T13:51:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14527#issuecomment-753476139",
    "id": 753476139,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14527",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ3NjEzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753476139/reactions"
    },
    "updated_at": "2021-01-02T13:51:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753476139",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17237559?v=4",
      "events_url": "https://api.github.com/users/scriptingstudio/events{/privacy}",
      "followers_url": "https://api.github.com/users/scriptingstudio/followers",
      "following_url": "https://api.github.com/users/scriptingstudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/scriptingstudio/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scriptingstudio",
      "id": 17237559,
      "login": "scriptingstudio",
      "node_id": "MDQ6VXNlcjE3MjM3NTU5",
      "organizations_url": "https://api.github.com/users/scriptingstudio/orgs",
      "received_events_url": "https://api.github.com/users/scriptingstudio/received_events",
      "repos_url": "https://api.github.com/users/scriptingstudio/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scriptingstudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scriptingstudio/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scriptingstudio"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Interesting, @scriptingstudio - I didn't know about the v5.1 behavior.\r\n\r\nAs you demonstrate, it makes much more sense to make the methods also work on scalars, given that you don't always know  _situationally_ whether you're dealing with a scalar or a collection, and having to remember to use `@()` is cumbersome - and, with preexisting arrays, inefficient.\r\n\r\n_Mostly_, the two methods already do work on scalars in PS Core (another example: `$o = [pscustomobject] @{ one = 1 }; $o.Where({ $_.one -eq 1 })`), except for the one case in the OP, which should be considered a bug and therefore fixed (the symptom alone - behaving like a _get_ when _set_ is requested - indicates that something's wrong).\r\n\r\n\r\n\r\n",
    "created_at": "2021-01-02T13:58:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14527#issuecomment-753476982",
    "id": 753476982,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14527",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ3Njk4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753476982/reactions"
    },
    "updated_at": "2021-01-02T13:58:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753476982",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "It is not simply cumbersome and inefficient, it is crazy. Because `$var.count` and `@($var).count` sometimes give different results and I don't know in advance what type of object I'll get to work with.",
    "created_at": "2021-01-02T14:28:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14527#issuecomment-753480159",
    "id": 753480159,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14527",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ4MDE1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753480159/reactions"
    },
    "updated_at": "2021-01-02T14:28:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753480159",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17237559?v=4",
      "events_url": "https://api.github.com/users/scriptingstudio/events{/privacy}",
      "followers_url": "https://api.github.com/users/scriptingstudio/followers",
      "following_url": "https://api.github.com/users/scriptingstudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/scriptingstudio/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scriptingstudio",
      "id": 17237559,
      "login": "scriptingstudio",
      "node_id": "MDQ6VXNlcjE3MjM3NTU5",
      "organizations_url": "https://api.github.com/users/scriptingstudio/orgs",
      "received_events_url": "https://api.github.com/users/scriptingstudio/received_events",
      "repos_url": "https://api.github.com/users/scriptingstudio/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scriptingstudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scriptingstudio/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scriptingstudio"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good point, @scriptingstudio: It only seems to affect scalars of _certain_ types, making it clear that even in Windows PowerShell the behavior is a _bug_ (in the case of `.Count`, `$null` is returned for the affected types, though, curiously, _indexing_ (e.g. `$o = [pscustomobject] @{ one = 1 }; $o[0]`) does work.\r\n\r\nI haven't tried to find them all, but notable types that are affected in Windows PowerShell are `[pscustomobject]` and `[xml]`; most others - including custom PowerShell classes - seem to be fine; e.g., `$itm = Get-Item /; $itm.ForEach('Name')` works just fine.\r\n\r\n(As an aside: with respect to _indexing_ the problem may be different, depending on type: if a _type-native_ indexer is present, it preempts the intrinsic indexing, even if it isn't `[int]`-typed, which notably happens with `[xml]` - see #11923.)\r\n\r\nI hope it is clear by now that:\r\n\r\n* the symptom described in the OP is a bug that should be fixed.\r\n* that Windows PowerShell is plagued by more serious manifestations of this bug.\r\n",
    "created_at": "2021-01-02T14:56:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14527#issuecomment-753483172",
    "id": 753483172,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14527",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzQ4MzE3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753483172/reactions"
    },
    "updated_at": "2021-01-02T15:05:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753483172",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
