[
  {
    "author_association": "NONE",
    "body": "Happen to know why they were doing it? Does not seem to serve any purpose other than potentially creating a hell of a confusion.",
    "created_at": "2017-05-04T13:30:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-299185287",
    "id": 299185287,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTE4NTI4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299185287/reactions"
    },
    "updated_at": "2017-05-04T13:30:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299185287",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1984488?v=4",
      "events_url": "https://api.github.com/users/AdilHindistan/events{/privacy}",
      "followers_url": "https://api.github.com/users/AdilHindistan/followers",
      "following_url": "https://api.github.com/users/AdilHindistan/following{/other_user}",
      "gists_url": "https://api.github.com/users/AdilHindistan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AdilHindistan",
      "id": 1984488,
      "login": "AdilHindistan",
      "node_id": "MDQ6VXNlcjE5ODQ0ODg=",
      "organizations_url": "https://api.github.com/users/AdilHindistan/orgs",
      "received_events_url": "https://api.github.com/users/AdilHindistan/received_events",
      "repos_url": "https://api.github.com/users/AdilHindistan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AdilHindistan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AdilHindistan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AdilHindistan"
    }
  },
  {
    "author_association": "NONE",
    "body": "It should be read-only. Otherwise it could cause confusion and is there any benefit to being able to use it? I wouldn't think so.",
    "created_at": "2017-05-05T01:46:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-299352789",
    "id": 299352789,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTM1Mjc4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299352789/reactions"
    },
    "updated_at": "2017-05-05T01:46:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299352789",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ghost",
      "id": 10137,
      "login": "ghost",
      "node_id": "MDQ6VXNlcjEwMTM3",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ghost"
    }
  },
  {
    "author_association": "NONE",
    "body": "Since it's doable, but bad practice, maybe a PSScriptAnalyzer rule instead? What about the risk of breaking code that's already out in the wild?",
    "created_at": "2017-05-05T11:14:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-299439226",
    "id": 299439226,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQzOTIyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299439226/reactions"
    },
    "updated_at": "2017-05-05T11:14:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299439226",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/893739?v=4",
      "events_url": "https://api.github.com/users/lfshr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lfshr/followers",
      "following_url": "https://api.github.com/users/lfshr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lfshr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lfshr",
      "id": 893739,
      "login": "lfshr",
      "node_id": "MDQ6VXNlcjg5MzczOQ==",
      "organizations_url": "https://api.github.com/users/lfshr/orgs",
      "received_events_url": "https://api.github.com/users/lfshr/received_events",
      "repos_url": "https://api.github.com/users/lfshr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lfshr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lfshr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lfshr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "My understanding was that it was a beginner so it was just bad practice.\r\n",
    "created_at": "2017-05-08T18:24:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-299949582",
    "id": 299949582,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk0OTU4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299949582/reactions"
    },
    "updated_at": "2017-05-08T18:24:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299949582",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6188114?v=4",
      "events_url": "https://api.github.com/users/jpsnover/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpsnover/followers",
      "following_url": "https://api.github.com/users/jpsnover/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpsnover/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpsnover",
      "id": 6188114,
      "login": "jpsnover",
      "node_id": "MDQ6VXNlcjYxODgxMTQ=",
      "organizations_url": "https://api.github.com/users/jpsnover/orgs",
      "received_events_url": "https://api.github.com/users/jpsnover/received_events",
      "repos_url": "https://api.github.com/users/jpsnover/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpsnover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpsnover/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpsnover"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Chances are that if they are setting $_ or $PSITem, they either already have every brittle code or it might already be broken code.\r\n",
    "created_at": "2017-05-08T18:30:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-299951335",
    "id": 299951335,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk1MTMzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299951335/reactions"
    },
    "updated_at": "2017-05-08T18:30:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/299951335",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6188114?v=4",
      "events_url": "https://api.github.com/users/jpsnover/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpsnover/followers",
      "following_url": "https://api.github.com/users/jpsnover/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpsnover/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpsnover",
      "id": 6188114,
      "login": "jpsnover",
      "node_id": "MDQ6VXNlcjYxODgxMTQ=",
      "organizations_url": "https://api.github.com/users/jpsnover/orgs",
      "received_events_url": "https://api.github.com/users/jpsnover/received_events",
      "repos_url": "https://api.github.com/users/jpsnover/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpsnover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpsnover/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpsnover"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "#3061 is a related issue for _all_ automatic variables.\r\n\r\nThere are [28 in total that _shouldn't_ be writable, but currently are](https://github.com/PowerShell/PowerShell/issues/3061#issuecomment-300058958).\r\n\r\nAs for `$_` / `$PSItem` specifically (I agree that it shouldn't be assignable - or perhaps just in this _one_ scenario):\r\n\r\nThe need to specify a variable explicitly in the `foreach` _statement_ allows for a more descriptive name than the implicit `$_` can provide in the `ForEach-Object` case, but I can see how someone would choose `$_`  - either by analogy with or due to confusion with `ForEach-Object`.\r\n\r\nIt is the built-in `foreach` _alias_ that has sown perennial confusion between the `ForEach-Object` _cmdlet_ and the `foreach` _language statement_.\r\n",
    "created_at": "2017-05-09T04:54:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-300061043",
    "id": 300061043,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDA2MTA0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300061043/reactions"
    },
    "updated_at": "2017-05-09T04:55:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300061043",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "It may be okay if the failure happens during parsing stage. As long as a previously working script doesn't fail half way through. And I suppose scripts breaking should be a risk when upgrading PS. I agree that these should be read-only, and if you listened to people like me nothing would ever move forward! 😛\r\nI also think that if they are going to be read-only then in this case they should be read-only regardless of strict mode. Thoughts?",
    "created_at": "2017-05-09T10:50:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-300128740",
    "id": 300128740,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDEyODc0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300128740/reactions"
    },
    "updated_at": "2017-05-09T10:50:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300128740",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/893739?v=4",
      "events_url": "https://api.github.com/users/lfshr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lfshr/followers",
      "following_url": "https://api.github.com/users/lfshr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lfshr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lfshr",
      "id": 893739,
      "login": "lfshr",
      "node_id": "MDQ6VXNlcjg5MzczOQ==",
      "organizations_url": "https://api.github.com/users/lfshr/orgs",
      "received_events_url": "https://api.github.com/users/lfshr/received_events",
      "repos_url": "https://api.github.com/users/lfshr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lfshr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lfshr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lfshr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We discussed aliases previously in #2000 and PowerShell PG agreed that aliases useful only in interactive mode and we need to write RFC originally relying on `using` (yes! - it is in parsing time). Welcome to https://github.com/PowerShell/PowerShell-RFC/!",
    "created_at": "2017-05-09T16:11:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-300216094",
    "id": 300216094,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDIxNjA5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300216094/reactions"
    },
    "updated_at": "2017-05-09T16:11:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/300216094",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I've just submitted #3830, which, if implemented, would be a way of:\r\n\r\n * mitigating the `foreach` / `ForEach-Object` confusion and allowing their peaceful coexistence,\r\n * while still allowing the advisable prevention of _explicit_ assignments to  automatic variables such as `$_` .\r\n\r\n",
    "created_at": "2017-05-19T23:12:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-302830871",
    "id": 302830871,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjgzMDg3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302830871/reactions"
    },
    "updated_at": "2017-05-19T23:34:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302830871",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@AdilHindistan \r\n\r\n> Happen to know why they were doing it? Does not seem to serve any purpose other than potentially creating a hell of a confusion.\r\n\r\nI often convert `ForEeach-Object` to `foreach` loop both ways. It is convenient to use the same variable `$_` and keep the processing blocks not changed. To me, it is not confusion but rather clarity, when I see `$_` in my code I know it is the current loop/pipeline variable, no matter what surrounds it.\r\n",
    "created_at": "2017-07-17T05:51:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-315672717",
    "id": 315672717,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTY3MjcxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/315672717/reactions"
    },
    "updated_at": "2017-07-17T05:51:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/315672717",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@nightroman \r\n\r\nI do understand the appeal of the consistent use of `$_`, but, I think it is generally problematic to allow assigning to automatic variables (although in this particular case, making the variable read-only would probably be too much of a breaking change).\r\n\r\nThe solution, I think, is to let PowerShell define `$_` _implicitly_, as it does for `ForEach-Object`, if no loop variable is specified, as I've proposed in #3830.\r\n\r\nApplied to the command in the initial post:\r\n\r\nInstead of:\r\n\r\n```powershell\r\nforeach ($_ in gps | where {$.name -like \"*SS\"}) { $_.name }\r\n```\r\n\r\nwe could write:\r\n\r\n```powershell\r\n# Not defining a loop variable ($var in ...) could implicitly define $_\r\nforeach (gps | where {$.name -like \"*SS\"}) { $_.name }\r\n```\r\n\r\n",
    "created_at": "2017-07-17T10:31:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-315719580",
    "id": 315719580,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTcxOTU4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/315719580/reactions"
    },
    "updated_at": "2017-07-17T10:31:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/315719580",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee discussed this and agree that the parser will enforce not allowing writing to $_/$psitem",
    "created_at": "2017-08-02T23:31:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-319826645",
    "id": 319826645,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTgyNjY0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319826645/reactions"
    },
    "updated_at": "2017-08-02T23:31:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319826645",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "`Set-Variable` can write to the variable.",
    "created_at": "2017-08-03T08:34:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-319904925",
    "id": 319904925,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTkwNDkyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319904925/reactions"
    },
    "updated_at": "2017-08-03T08:34:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319904925",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@iSazonov I think the intent here is to address common usage where the user isn't aware that the variable they are using could be clobbered by PowerShell. Set-Variable doesn't seem like it would fall under this, but I'm not opposed to special casing it in that cmdlet.",
    "created_at": "2017-08-03T23:49:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320119476",
    "id": 320119476,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDExOTQ3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320119476/reactions"
    },
    "updated_at": "2017-08-03T23:49:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320119476",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @PowerShell/powershell-committee discussed this and agree that the parser will enforce not allowing writing to $_/$psitem\r\n\r\nBuilt-in cmdlets like `Select-Object`, `Sort-Object`, `Group-Object`,\r\n`Format-Table` support script block expressions based on the predefined\r\nconventional variable `$_`. They introduced some sort of practice of\r\ndefining filters and custom expressions via script blocks with `$_`.\r\nSuch expressions may be used for built-in cmdlets **and** in other\r\nuser function parameters customising their behaviour.\r\n\r\nUsing such expression script blocks now is straightforward, we set `$_`\r\nto the target object and invoke a script block which uses `$_`:\r\n\r\n```powershell\r\n    $_ = <...>\r\n    if (& $ExpressionUsingDollarUnder) {\r\n        ...\r\n    }\r\n    else {\r\n        ...\r\n    }\r\n```\r\n\r\nIf `$_` cannot be assigned in the future then such a way will not be possible.\r\nWhat is the suggested alternative of invoking custom expressions with `$_`?\r\n",
    "created_at": "2017-08-04T04:13:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320151872",
    "id": 320151872,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE1MTg3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320151872/reactions"
    },
    "updated_at": "2017-08-04T04:13:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320151872",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "Let summarize my concerns:\r\n\r\n- Read only `$_` will break existing code for sure.\r\n- Expressions with arguments and parameters will work but they will not be universal, e.g. I will not be able to use them as is in my code and in built-in cmdlets that require expressions with `$_`.\r\n- On moving code between pipelines (`ForEach-Object`) and `foreach` loops I will have to rename variables.\r\n",
    "created_at": "2017-08-04T06:43:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320170463",
    "id": 320170463,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE3MDQ2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320170463/reactions"
    },
    "updated_at": "2017-08-04T06:43:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320170463",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "Besides, expressions with arguments or parameters are not that pretty:\r\n\r\n```powershell\r\n    # now we ask a user to provide neat familiar expressions with $_\r\n    Get-MySomething ... -Property {$_.X}, {$_.Y + $_.Z}\r\n    \r\n    # what we will have to ask a user to code, some mouthful expressions\r\n    Get-MySomething ... -Property {$args[0].X}, {$args[0].Y + $args[0].Z}\r\n    Get-MySomething ... -Property {param($something) $something.X}, {param($something) $something.Y + $something.Z}\r\n```\r\n",
    "created_at": "2017-08-04T07:48:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320182015",
    "id": 320182015,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDE4MjAxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320182015/reactions"
    },
    "updated_at": "2017-08-04T07:48:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320182015",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@nightroman:\r\n\r\nI hear you re breaking existing code, but it sounds like the committee has decided to pay that price.\r\nBased on what I said the in the other thread, a lexical strict mode with opt-in to the read-only behavior might be an alternative, but we don't have that, at least yet.  \r\n(And we may be past the point where the powers that be pay attention.)\r\n\r\nExpressions, unlike the contexts where `$_` is automatically defined, have no unambiguous _single_ parameter: you can pass any number of parameters to a script block, and then you need to distinguish between them. (And, of course, you can reference any number of preexisting variables in them).\r\n\r\nUnless I'm misinterpreting your example, `Get-MySomething ... -Property {$_.X}, {$_.Y + $_.Z}` will _not_ have to change, because `$_` will continue to _implicitly_ refer the current pipeline object, such as when using `Select-Object` with calculated properties, or, more generally, when using script-block parameters ad-hoc; e.g., when passing a script block to the `-NewName` parameter of the `Rename-Item` cmdlet:\r\n\r\n```powershell\r\n... | Rename-Item -NewName { $_.Name + '.bak' }  -WhatIf\r\n```\r\n\r\nAs before, `$_` _implicitly_ refers to the current pipeline object.\r\n\r\nIn case you were thinking of referring to a `$_` explicitly defined _before_ invoking the pipeline: note how that would clash with the script-block parameter feature.\r\n\r\n\r\n\r\n",
    "created_at": "2017-08-04T15:45:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320282869",
    "id": 320282869,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI4Mjg2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320282869/reactions"
    },
    "updated_at": "2017-08-04T15:45:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320282869",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0\r\n\r\nThere is no pipeline in my example. Here is some hypothetical code:\r\n\r\n```powershell\r\n    function Get-MySomething($Property) {\r\n        $_ = @{x=1; y=2; z=3}\r\n        if ($Property) {\r\n            foreach($block in $Property) {\r\n                & $block\r\n            }\r\n        }\r\n        else {\r\n            $_\r\n        }\r\n    }\r\n\r\n    # default: @{x=1; y=2; z=3}\r\n    Get-MySomething\r\n\r\n    # custom: @(1, 5)\r\n    Get-MySomething -Property {$_.X}, {$_.Y + $_.Z}\r\n```\r\n\r\nIt's a contrived example just to show that we do not always have a pipeline.\r\nBut we may have some \"current target object(s)\" and let users do something\r\noptional with it. These optional expressions, filters, actions, loggers, formatters,\r\netc. a user defines as script blocks with `$_` because this is a familiar \"PowerShell way\".\r\n\r\n",
    "created_at": "2017-08-04T16:25:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320292450",
    "id": 320292450,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI5MjQ1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320292450/reactions"
    },
    "updated_at": "2017-08-04T17:37:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320292450",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "All in all, I think assignable `$_` is a tool. When used properly it is a useful tool.\r\n\r\nIt's not just my code is going to be broken. I remember I saw some code here and there.\r\n@RamblingCookieMonster, are you using `$_` as a parameter in [Invoke-Parallel](https://github.com/RamblingCookieMonster/Invoke-Parallel)?\r\n",
    "created_at": "2017-08-04T16:43:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320296601",
    "id": 320296601,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI5NjYwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320296601/reactions"
    },
    "updated_at": "2017-08-04T16:43:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320296601",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yeah - I'd echo the suggestion of adding a PSScriptAnalyzer rule.  This will absolutely break existing code - in some cases that code might be unnecessary and poorly thought out, in other cases, it might be integral to user experience.  In both of those cases, presumably you would slow adoption of newer PowerShell for anyone using `$_`\r\n\r\nAlso, yep, `Invoke-Parallel` adds that to the scriptblock it builds, to allow running things like `1..10 | Invoke-Parallel {\"Something parallel where $_ is the current item in the pipeline\"}`.  This would be a breaking change for a number of existing tools and scripts in the environments I've worked in, and I suspect others.\r\n\r\nCheers!",
    "created_at": "2017-08-04T16:59:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320300373",
    "id": 320300373,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMwMDM3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 4,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320300373/reactions"
    },
    "updated_at": "2017-08-04T16:59:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320300373",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "NONE",
    "body": "You'll likely see this in other functions and modules as well.  @proxb's very popular PoshRsJob [also looks like it uses `$_`](https://github.com/proxb/PoshRSJob/blob/master/PoshRSJob/Private/ConvertScript.ps1#L9).\r\n\r\nI can understand wanting to dissuade this use when it doesn't make sense, but if you remove the ability to use it, you'll make some popular tools far less usable. Using `$_` in a scriptblock as the current item is common and expected behavior, it would be sad to lose this.\r\n\r\nThanks for the heads up on this @nightroman - no idea if we can still change their minds, but this would have been completely off the radar for me (and I suspect others).\r\n\r\nCheers!",
    "created_at": "2017-08-04T18:00:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320314778",
    "id": 320314778,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDMxNDc3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 5,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320314778/reactions"
    },
    "updated_at": "2017-08-04T18:04:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320314778",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@RamblingCookieMonster: \r\n\r\nIf I understand correctly, you're saying there are tools that, for _technical reasons_, need to _emulate_ the _automatic_ definition of  `$_`  by _relaying_ the current pipeline object.\r\n\r\nIn other words: this is a technical necessity that, by virtue of being an _emulation_, doesn't change the _semantics_ of `$_`.\r\n\r\nIf that's the case - and there is no better way to solve this problem - it definitely sounds like preserving the ability to write to `$_` is important, and how merely implementing a PSScriptAnalyzer rule is the best approach.\r\n\r\n@nightroman:\r\n\r\nYour example does _not_ fall into that category, however: it seeks to _extend_ the automatic semantics of `$_` to a _convention_, which I think is ill-advised.\r\n\r\nWhile there is no pipeline _input_ in your example (you could argue that a function invocation by itself is a pipeline of length 1), any function/cmdlet _can_ be called in a _later_ stage of a pipeline, and seeing something like `Get-MySomething -Property {$_.X}, {$_.Y + $_.Z}`:\r\n\r\n* invites confusion with the script-block parameter syntax, as stated: seeing `$_` in a script block that is part of a pipeline will make readers expect `$_` to refer to the current pipeline object - understandably so.  \r\n\r\n* declaring a function that assumes the _caller_ knows about the convention to use `$_`, which refers to a _custom_ `$_` defined _inside the function_ seems like a bad idea.\r\n\r\nTo use your example: What would you think people will expect `$_` to refer to in the following use of your function?\r\n\r\n```powershell\r\n1, 2 | % { Get-MySomething -Property {$_.X}, {$_.Y + $_.Z} }\r\n```\r\n",
    "created_at": "2017-08-04T20:23:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320344824",
    "id": 320344824,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM0NDgyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320344824/reactions"
    },
    "updated_at": "2017-08-04T20:23:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320344824",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Given the discussion above, it seems to me important to keep allowing write to `$_` and maybe other automatic variables as well.\r\n@SteveL-MSFT can the committee reconsider the decision that was made earlier?",
    "created_at": "2017-08-04T21:27:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320357075",
    "id": 320357075,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM1NzA3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320357075/reactions"
    },
    "updated_at": "2017-08-04T21:27:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320357075",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n@mklement0\r\n\r\n> Your example does not fall into that category, however: it seeks to extend\r\nthe automatic semantics of $_ to a convention, which I think is ill-advised.\r\n\r\nIll-advised or not, it's another topic. The example shows conceptual\r\npossibilities that are going to be taken away. Please note that I emphasized\r\nthat the example was contrived.\r\n\r\nAnother conceptual example using `$_`. It implements some sort of maybe chain\r\nexpressions\r\n\r\n```powershell\r\nclass Maybe {\r\n    $value\r\n    Maybe($value) {\r\n        $this.value = $value\r\n    }\r\n    [Maybe] map($fn) {\r\n        $_ = $this.value\r\n        if ($null -eq $_) {\r\n            $result = $null\r\n        }\r\n        else {\r\n            $result = & $fn\r\n        }\r\n        return [Maybe]::new($result)\r\n    }\r\n}\r\n\r\n# (1 + 7) / 2 - 2 = 2\r\n$r = [Maybe]::new(1).map({$_ + 7}).map({$_ / 2}).map({$_ - 2})\r\n$r.Value\r\n\r\n# ($null + 7) / 2 - 2 = $null\r\n$r = [Maybe]::new($null).map({$_ + 7}).map({$_ / 2}).map({$_ - 2})\r\n$r.Value\r\n\r\n# $null in the middle = $null\r\n$r = [Maybe]::new(1).map({$_ + 7}).map({$null}).map({$_ - 2})\r\n$r.Value\r\n```\r\n\r\nThanks to `$_ = $this.value` input expressions are\r\n\r\n```powershell\r\n    .map({$_ + 7}).map({$_ / 2}).map({$_ - 2})\r\n```\r\n\r\ninstead of\r\n\r\n```powershell\r\n    .map({$args[0] + 7}).map({$args[0] / 2}).map({$args[0] - 2})\r\n```\r\n\r\nThis `Maybe` example may be ill-advised, too. This is not the point. The point is,\r\nif we want user expressions to be defined as blocks with `$_` then we can do\r\nthis easily because we can assign `$_`.\r\n",
    "created_at": "2017-08-05T04:12:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320394920",
    "id": 320394920,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM5NDkyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320394920/reactions"
    },
    "updated_at": "2017-08-05T04:12:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320394920",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 \r\n\r\n> To use your example: What would you think people will expect $_ to refer to in the following use of your function? `1, 2 | % { Get-MySomething -Property {$_.X}, {$_.Y + $_.Z} }`\r\n\r\nThis was not my example, you made something else. I explicitly said that there was no pipeline in the example. And if it was and if it was a real code then I would perhaps design it differently. But it is another topic.\r\n\r\nWhat you presented based on my example is something like\r\n\r\n```powershell\r\n1, 2 | % { Select-Object -Property {$_.Name}, {$_.Version} -InputObject $Host }\r\n```\r\n\r\nWe can write some strange code without my example, too.\r\n",
    "created_at": "2017-08-05T04:49:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320404975",
    "id": 320404975,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQwNDk3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320404975/reactions"
    },
    "updated_at": "2017-08-05T04:58:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320404975",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n@daxian-dbw\r\n\r\n> Given the discussion above, it seems to me important to keep allowing write to $_ and maybe other automatic variables as well.\r\n\r\nSome automatic variables are proven to be troublesome. I collected some cases here:\r\nhttps://github.com/nightroman/PowerShellTraps/tree/master/Basic/Automatic-variables\r\n\r\n`$args` and `$input` look like good candidates for parser errors on\r\nassignments or using as parameters. Even this may break something but the\r\nimpact will be much less than denying assignment of `$_`.\r\n\r\nUnlike the above troublesome variables, `$_` is proven to be useful when\r\nassigned in proper scenarios. And it is difficult to replace with another\r\nvariable because this would break some de facto standard practices.\r\n",
    "created_at": "2017-08-05T05:24:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320412665",
    "id": 320412665,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQxMjY2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320412665/reactions"
    },
    "updated_at": "2017-08-05T05:24:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320412665",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@nightroman \r\n\r\nLet me try to distill my concern:\r\n\r\nNever design a function that cannot be used as _part_ of a pipeline (even if it itself doesn't accept pipeline _input_).  \r\nYou don't control how people use your function and it's hard to anticipate all legitimate use cases.\r\n\r\nIn the examples that @RamblingCookieMonster gave, the custom use of `$_` is an implementation detail that is hidden from the user and uses the exact same semantics as automatic `$_`.\r\n\r\nBy contrast, your personal, convention-based extension to the `$_` semantics can clash with the built-in semantics, as I've tried to demonstrate. \r\n\r\nSince `$_` may need to remain assignable to support the implementation-detail scenarios, you're obviously free to continue to use it with your custom semantics, but I personally hope that you won't _publish_ any functionality based on it.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-08-05T13:45:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320444539",
    "id": 320444539,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ0NDUzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320444539/reactions"
    },
    "updated_at": "2017-10-22T02:26:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320444539",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\nConvention-based semantic practice using `$_` is introduced by PowerShell\r\nitself. It is used in event handler script blocks. I.e. by the convention,\r\nevent handlers use `$_` as event arguments.\r\n\r\nBy another similar PowerShell convention, `$_` as a predefined variable also\r\nworks for `[Action[X, Y]]`. Example:\r\n\r\n```powershell\r\n# script block uses conventional $_\r\n$myAction = {Write-Host \"`$_ = $_\"}\r\n\r\n# engaging this block in a supported standard PowerShell scenario\r\n$action = [Action[object, int]] $myAction\r\n$action.Invoke($null, 42)\r\n\r\n# reusing this block in our own scenario (can do, $_ is assignable)\r\n$_ = 100\r\n& $myAction\r\n```\r\n\r\nOutput\r\n\r\n    $_ = 42\r\n    $_ = 100\r\n\r\nIn other words, conventional `$_` is not unusual in PowerShell.\r\n",
    "created_at": "2017-08-06T05:51:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320487317",
    "id": 320487317,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ4NzMxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320487317/reactions"
    },
    "updated_at": "2017-08-06T05:51:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320487317",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "Another convention is `$_` as an error record in catch blocks. A lot of error\r\nhandling code is written with `$_` = error in mind. But what if an error record\r\ncomes not from a catch block directly? Then one rewrites such a code using a\r\ndifferent variable (probably a good practice). But in reality one may just use\r\nthe assignable variable `$_`, `$_ = <error record>` and use the traditional error\r\nhandling code `$_`. Here is the example from *psake*:\r\nhttps://github.com/psake/psake/blob/9ace6b4ebb7fd8121f8fe8da83c6227741fad09c/psake.psm1#L695\r\n",
    "created_at": "2017-08-06T06:19:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320488163",
    "id": 320488163,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDQ4ODE2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320488163/reactions"
    },
    "updated_at": "2017-08-06T06:19:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320488163",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "By _convention_ I mean that both the caller and callee must _choose_ to observe shared rules in order for the code to function as intended.\r\n\r\nThis is distinct from PowerShell's _automatic_ definition of `$_`, which is _guaranteed by the engine_ to work, in the relevant scenarios.\r\n\r\n---\r\n\r\nAs for your examples:\r\n\r\nThe _psake_ example falls into the emulating-the-standard-semantics-of-`$_` category, which, as we've seen, appears to be needed at times. It is absolutely _not_ needed in the linked function, however, as direct use of the `$ErrorRecord` pipeline-binding parameter variable is the right thing to do - no need for `$_` at all.\r\n\r\nIn the script-block example, it is telling that PowerShell's _native_ mechanism for invoking a script block - via `&` (or `.`) - does _not_ define `$_` in your scenario, and that you had to find an obscure .NET detour to make it happen.\r\n\r\nAs stated, in the _general_ script-block invocation scenario, there is no unambiguous _single_ parameter that should be named `$_` - and PowerShell doesn't do so, presumably for that reason.\r\nThe general-purpose way of passing arguments to script blocks is via `$Args` or `param()` blocks may not be as concise as `$_`, but it is the correct - flexible and extensible - mechanism to use.\r\n\r\nI suggest we leave it at that, at least for the larger audience, lest we generate what others may perceive as (more) noise.\r\nIf you want to continue this conversation, feel free to get in touch via my profile.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-08-06T14:03:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320508891",
    "id": 320508891,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUwODg5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320508891/reactions"
    },
    "updated_at": "2017-08-06T14:18:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320508891",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks for great discussion. In all scenarios I see that left var $_ can be replaced by custom variable.",
    "created_at": "2017-08-06T16:17:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320516574",
    "id": 320516574,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUxNjU3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320516574/reactions"
    },
    "updated_at": "2017-08-06T16:17:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320516574",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yes, it can. I afraid the discussion became too long and hid the main issue. The read only `$_` is a breaking change. For various reasons existing scripts use `$_` as a left variable.",
    "created_at": "2017-08-06T18:09:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320522761",
    "id": 320522761,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyMjc2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320522761/reactions"
    },
    "updated_at": "2017-08-06T18:09:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320522761",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I guess we can reduce the breaking change impact by:\r\n1. Add rule in ScriptAnalyzer today. Need open new Issue there. ~~@nightroman Could you please make this?~~ https://github.com/PowerShell/PSScriptAnalyzer/issues/712\r\n2. Consider using a strict mode/ our compatibility module. /cc @DarwinJS. #3061",
    "created_at": "2017-08-06T18:19:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320523280",
    "id": 320523280,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyMzI4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320523280/reactions"
    },
    "updated_at": "2017-08-10T04:16:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320523280",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov \r\n\r\n1.  is already covered by [this PSScriptAnalyzer issue](https://github.com/PowerShell/PSScriptAnalyzer/issues/712).\r\n\r\nWith respect to a strict mode, 2. is part of #3061",
    "created_at": "2017-08-06T18:23:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320523493",
    "id": 320523493,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyMzQ5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320523493/reactions"
    },
    "updated_at": "2017-08-06T18:23:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320523493",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We should be have explicit rule for  \"$_/$psitem and $input **should** be read only\". For rest ps variables - \"It is **recommended** to be read only\".",
    "created_at": "2017-08-06T18:30:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320523886",
    "id": 320523886,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyMzg4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320523886/reactions"
    },
    "updated_at": "2017-08-06T18:30:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320523886",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Are we talking about PSSA rules or parser errors?\r\n\r\nIf it is about rules then I would warn about assignments to all automatic variables. It's a clear message to think twice and this is good.\r\n\r\nIf it is about parser or runtime errors then I would not do this because it is a breaking change. Some real known problem cases were closed \"Won't fix\" because fixing would be potential breaking changes. Is assignment to automatic variables a problem? It is not quite clear. I tried to explain that it is not the problem. It is a useful tool. If this was not convincing, never mind. But please consider to not break existing code if this is not for fixing known problems.\r\n",
    "created_at": "2017-08-06T19:24:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320526887",
    "id": 320526887,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyNjg4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320526887/reactions"
    },
    "updated_at": "2017-08-06T19:24:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320526887",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The two aspects are _independent_ of each other:\r\n\r\n* It sounds like the consensus is that detecting assigning to automatic variables is at least worth a _warning_, which a PSScriptAnalyzer ruler would cover. The caveat is that not everyone may use an editor with integrated PSScriptAnalyzer support.\r\n\r\n* Separately, the question is which assignments to automatic variables should be _prevented by the engine_, ideally during the  _parsing_ stage:\r\n\r\n  * Clearly, as we've learned in this discussion, preventing assignments to `$_` _will_ break existing code - both code that assigns to `$_` as an _implementation detail_ out of _technical necessity_ as well as code that uses `$_` with _custom semantics_.\r\n\r\n  * If the decision is made _not_ to break existing code (which sounds like the right thing to do), disallowing assigning to `$_` _in the future_ requires a _lexical_ strict-mode opt-in mechanism - which we don't have yet: see https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0003-Lexical-Strict-Mode.md\r\n\r\nThe only interdependence is that the wording of PSScriptAnalyzer messages would ideally distinguish between _potentially ill-advised use_ and _uses that will break the code_, which obviously requires knowledge of what uses the engine itself will prevent.\r\n\r\n",
    "created_at": "2017-08-06T21:21:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-320533510",
    "id": 320533510,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUzMzUxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320533510/reactions"
    },
    "updated_at": "2017-08-06T21:21:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320533510",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Preventing assignment to special variables _not only_ breaks existing code, it cripples our ability to do DSL-like things in PowerShell in the future.\r\n\r\nThe notion that anyone _other than the PowerShell team_ who uses the built-in variable names is somehow doing it incorrectly and should use different variable names is simply preposterous. **Good** developers take advantage of what **users have already learned**, and that includes automatic variable names.\r\n\r\nWhenever someone writes a script/function/cmdlet that deals with streaming input, pipelines, or events ... and accepts script blocks ... variables like `$_` and `$this` **should** be supported in those scriptblocks, and the author needs to be able to set them before invoking them.\r\n\r\nNot only would we **not be able to write anything that _looks like_ `ForEach-Object` or `Where-Object`** (or at least, we won't be allowed to do it in a PowerShell script), we also would **not** be able to write anything that _looks like_ an event handler, or a property, or ...",
    "created_at": "2017-08-08T17:36:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-321027923",
    "id": 321027923,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTAyNzkyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321027923/reactions"
    },
    "updated_at": "2017-08-08T17:36:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321027923",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@Jaykul Could you please add code examples to show the broken scenarious?",
    "created_at": "2017-08-09T05:29:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-321156534",
    "id": 321156534,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTE1NjUzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321156534/reactions"
    },
    "updated_at": "2017-08-09T05:29:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321156534",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Out of curiosity, what cases are you going to resolve or improve by making read-only `$_`?\r\n\r\nThe very first example in this thread looks fine to me and probably to the author:\r\n\r\n```powerShell\r\nforeach ($_ in gps | where {$_.name -like \"*SS\"}) { $_.name }\r\n```\r\n\r\nThere is nothing wrong with it. There are some advantages in using `$_` as the `foreach` loop variable.\r\n\r\nIt is true that the variable `$_` is quite busy in PowerShell. But such is the PowerShell design.\r\nOne has to understand the context of `$_` and its meaning in this context.\r\n\r\nHere is some pure PowerShell without \"reusing\" `$_`.\r\n`$_` is used three times and each time it is different.\r\n\r\n```powershell\r\n\"some input\" | %{\r\n    \"pipeline item: $_\"\r\n    switch ($Host.Name) { ConsoleHost { \"switch item: $_\" }}\r\n    try { throw \"some error\" } catch { \"error message: $_\" }\r\n}\r\n```\r\n\r\nOutput\r\n\r\n```\r\npipeline item: some input\r\nswitch item: ConsoleHost\r\nerror message: some error\r\n```\r\n",
    "created_at": "2017-08-09T18:10:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-321336735",
    "id": 321336735,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTMzNjczNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321336735/reactions"
    },
    "updated_at": "2017-08-09T22:37:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321336735",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">If I understand correctly, you're saying there are tools that, for technical reasons, need to emulate the automatic definition of  $_  by relaying the current pipeline object.\r\n\r\n>In other words: this is a technical necessity that, by virtue of being an emulation, doesn't change the semantics of  $_ .\r\n\r\nExample with PoshRsJob is just a denial because it uses a _nonpublic_ API.\r\n\r\n\r\n",
    "created_at": "2017-08-10T03:51:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-321443213",
    "id": 321443213,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ0MzIxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321443213/reactions"
    },
    "updated_at": "2017-08-10T03:51:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321443213",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "All examples above cons \"$_ read only\" use either bad coding style or tricky code - just that we want to exclude \"terrible practice\" - it is the original idea of the issue. This is always bad if a language forces to use a bad coding style or tricky code. Now PowerShell is open source and we can enhance it all things that customers need and let them write clear and clean code.\r\n\r\nCurrently we have three point:\r\n1. Add rules in PSScriptAnalyzer (Implement now)\r\n1.1 Recommending rule for all special variables.\r\n1.2 Mandatory rule for $_/$PSItem/$Input\r\n2. Force read only by strict mode (Implement at 6.0)\r\n3. Force read only at parse time. (Implement at 6.1)\r\n",
    "created_at": "2017-08-10T05:13:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-321452605",
    "id": 321452605,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTQ1MjYwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321452605/reactions"
    },
    "updated_at": "2017-08-10T05:13:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321452605",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Found one more use of `$_` in my utility script [Rename-FarFile-.ps1](https://github.com/nightroman/FarNet/blob/cb18914616cbace5a2c0dd478ba52a458cb93f0e/PowerShellFar/Bench/Rename-FarFile-.ps1#L35).\r\n\r\nThe current API lets users specify a new name like\r\n\r\n```powershell\r\nRename-FarFile-.ps1 { $_.LastWriteTime.ToString('_yyMMdd_HHmmss_') + $_.Name }\r\n```\r\n\r\nwhere `$_` is the current file in the Far Manager panel (an orthodox console based file manager).\r\n\r\nThis is not a conceptual example but a tool in use, with the API designed in a familiar PowerShell way. Besides, used script blocks may be reused without changes for something else, e.g. `Get-Item ... | Rename-Item -NewName { $_.LastWriteTime.ToString('_yyMMdd_HHmmss_') + $_.Name }`.\r\n\r\nGiven `$_` is going to be read only, what would be the recommended adjustment from the \r\nPowerShell committee?\r\n ",
    "created_at": "2017-08-16T04:35:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322664221",
    "id": 322664221,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjY2NDIyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322664221/reactions"
    },
    "updated_at": "2017-08-16T04:59:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322664221",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "<sup>Since it's may not always be obvious who acts in what capacity: I'm just participating in this discussion; I have no say in what will or will not be implemented.</sup>\r\n\r\n> Given $_ is going to be read only, what would be the recommended adjustment from the\r\nPowerShell committee?\r\n\r\nLeaving the question of whether your specific use of `$_` is advisable (we've discussed this), a simple way to bind any object to `$_` without needing it to be assignable is to use `ForEach-Object`:\r\n\r\n```powershell\r\n$sb = { \"[$_]\" }\r\n$CustomUnderscoreValue = Get-Date '2017-01-01'\r\nForEach-Object -InputObject $CustomUnderscoreValue $sb\r\n```\r\n\r\nThe above yields string `[01/01/2017 00:00:00]`.\r\n\r\nNote the use of `-InputObject`, which ensures that the object is passed as-is, without enumeration.\r\n\r\n\r\n",
    "created_at": "2017-08-16T16:49:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322832668",
    "id": 322832668,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjgzMjY2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322832668/reactions"
    },
    "updated_at": "2017-08-16T16:50:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322832668",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@Jaykul: \r\n\r\nHaving never written or studied a PowerShell DSL, I'm asking innocently: Can you give us a quick example of where writing a DSL would be severely hampered / rendered impossible if `$_` (and `$this`, ...) were read-only?\r\n\r\nIf the consensus ends up being that we do need to keep at least some automatic variables writable (we already know of at least 1: `$LASTEXITCODE`), it would certainly help to also provide _stringent guidelines_ for when and how to use them.\r\n\r\n",
    "created_at": "2017-08-16T17:07:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322837441",
    "id": 322837441,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjgzNzQ0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322837441/reactions"
    },
    "updated_at": "2017-08-16T17:07:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322837441",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 \r\n\r\n> a simple way to bind any object to $_ without needing it to be assignable is to use ForEach-Object ...\r\n\r\nI am sorry, but this is ugly and not simple at all.\r\n\r\n@iSazonov \r\n\r\nIt would be nice to get something from the committee. The committee is about to withdraw a useful tool. Why it is a bad tool for the committee is not explained, fine. But at least what is going to be recommended instead?\r\n\r\n\r\n",
    "created_at": "2017-08-16T17:21:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322841023",
    "id": 322841023,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg0MTAyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322841023/reactions"
    },
    "updated_at": "2017-08-16T17:21:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322841023",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Example with PoshRsJob is just a denial because it uses a nonpublic API.\r\n\r\n@iSazonov - is it an undocumented API though?  I think it's well accepted that one should not write to an automatic variable, but there are cases where best practices mandate using it - without it, `PoshRSJob` and `Invoke-Parallel` would rely on ugly assumptions and avoid a common learnedpractice - that `$_` within a scriptblock refers to the current item.  Any similar function that uses a scriptblock as a parameter and somehow sets `$_` in that scriptblock would likely be broken if `$_` becomes read only.\r\n\r\nAs one of the authors (well... borrower from @proxb) I could certainly change the code but... You'll likely find a large swath of existing PowerShell automation using `PoshRSJob`, `Invoke-Parallel`, and many other runspace-based-parallelization variations, a number of which allow for using `$_`. \r\n As a consumer of these functions, I would be a bit miffed at this, as it would be an unnecessary (IMHO) restriction that now forces me to either (1) not update to PowerShell 6+, or (2), add additional refactoring on top of whatever else we need to refactor to use PowerShell 6+.  From my perspective, adding a road block to adoption would not be good.\r\n\r\nCheers!",
    "created_at": "2017-08-16T17:23:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322841397",
    "id": 322841397,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg0MTM5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322841397/reactions"
    },
    "updated_at": "2017-08-16T17:25:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322841397",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Note that we have had occasional requests to make public the API that allows setting `$_` when invoking a script block.\r\n\r\nThat seems like a good idea to do now, I suppose it was years ago but it just never bubbled up to seem important enough.\r\n\r\nAssuming that API was public, *maybe* that's good enough for new scripts, but it does mean scripts won't be portable to Windows PowerShell.",
    "created_at": "2017-08-16T17:35:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322844832",
    "id": 322844832,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg0NDgzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322844832/reactions"
    },
    "updated_at": "2017-08-16T17:35:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322844832",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "May I propose a compromise scoped approach?\r\n\r\n`$_` is read only if it is created as automatic by PowerShell in the current scope.\r\n\r\nThat is, this is an error, in the current scope `$_` is automatic\r\n\r\n```powershell\r\n... | ForEach-Object {\r\n    $_ = ... # error\r\n}\r\n```\r\n\r\nBut this is not an error, `$_` is not automatic in a new scope:\r\n\r\n```powershell\r\n... | ForEach-Object {\r\n    # a new scope, user own stuff\r\n    & {\r\n        $_ = ... # fine\r\n    }\r\n}\r\n```\r\n\r\nThat is how it is now:\r\n\r\n```powershell\r\n1 | ForEach-Object {\r\n    # $_ exists\r\n    Get-Variable _ -Scope 0\r\n    & {\r\n        # $_ does not exist\r\n        Get-Variable _ -Scope 0\r\n    }\r\n}\r\n```\r\n\r\nOutput\r\n\r\n```\r\nName                           Value\r\n----                           -----\r\n_                              1\r\nGet-Variable : Cannot find a variable with the name '_'.\r\nAt C:\\....ps1:5 char:3\r\n+         Get-Variable _ -Scope 0\r\n+         ~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (_:String) [Get-Variable], ItemNotFoundException\r\n    + FullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.GetVariableCommand\r\n```\r\n",
    "created_at": "2017-08-16T18:17:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322856118",
    "id": 322856118,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg1NjExOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322856118/reactions"
    },
    "updated_at": "2017-08-16T18:18:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322856118",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "NONE",
    "body": "The above should prevent writing to PowerShell automatic variables and this is good.\r\nAt the same time, this allows using of own variables when this is needed by design.\r\nSuch a change is still breaking but chances are much lower and with easy\r\nworkarounds (new scopes).\r\n",
    "created_at": "2017-08-16T18:34:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322860781",
    "id": 322860781,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg2MDc4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322860781/reactions"
    },
    "updated_at": "2017-08-16T18:34:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322860781",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/927533?v=4",
      "events_url": "https://api.github.com/users/nightroman/events{/privacy}",
      "followers_url": "https://api.github.com/users/nightroman/followers",
      "following_url": "https://api.github.com/users/nightroman/following{/other_user}",
      "gists_url": "https://api.github.com/users/nightroman/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nightroman",
      "id": 927533,
      "login": "nightroman",
      "node_id": "MDQ6VXNlcjkyNzUzMw==",
      "organizations_url": "https://api.github.com/users/nightroman/orgs",
      "received_events_url": "https://api.github.com/users/nightroman/received_events",
      "repos_url": "https://api.github.com/users/nightroman/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nightroman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nightroman/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nightroman"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Another example of using `$_` is the [Find-Ast](https://github.com/PowerShell/PowerShellEditorServices/blob/8a6a0c2e200c3535dbcc60fa828d6cf740dcb0a0/module/PowerShellEditorServices/Commands/Public/Find-Ast.ps1#L55) function in [PowerShellEditorServices](https://github.com/PowerShell/PowerShellEditorServices).  A couple of things to note:\r\n\r\n1. It doesn't use the method described in this thread.  But, if I had known about it at the time I would have considered it for the 3.0 compatible portion if it let me avoid recreating the `ScriptBlock` in the module scope.\r\n\r\n1. For PS 4.0+ it uses an existing public API that will not be broken by the proposed change.  `ScriptBlock.InvokeWithContext` pulls `_`, `input`, and `this` out of `variablesToDefine` and passes them directly to `InvokeWithPipe`.\r\n\r\nAll of that said, I don't see why this needs to be more than a PSSA warning.  I think that making them read only is unnecessary and potentially harmful for little gain. And blocking it completely with a parse exception just seems way over the top.",
    "created_at": "2017-08-16T20:28:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322889184",
    "id": 322889184,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjg4OTE4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322889184/reactions"
    },
    "updated_at": "2017-08-16T20:28:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322889184",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Considering all of the discussion above, i'd like to vote for a PSSA warning only. The argument that this will not be shown in non PSSA editors, holds. Yet I don't see which threat is mitigated by restricting use of $_. I think many devs like Posh for its flexibility. Let's keep that flexibility.",
    "created_at": "2017-08-17T09:30:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-323018483",
    "id": 323018483,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzAxODQ4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323018483/reactions"
    },
    "updated_at": "2017-08-17T09:30:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323018483",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26464885?v=4",
      "events_url": "https://api.github.com/users/Jawz84/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jawz84/followers",
      "following_url": "https://api.github.com/users/Jawz84/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jawz84/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jawz84",
      "id": 26464885,
      "login": "Jawz84",
      "node_id": "MDQ6VXNlcjI2NDY0ODg1",
      "organizations_url": "https://api.github.com/users/Jawz84/orgs",
      "received_events_url": "https://api.github.com/users/Jawz84/received_events",
      "repos_url": "https://api.github.com/users/Jawz84/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jawz84/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jawz84/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jawz84"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I am not PowerShell/powershell-committee Team member so I can only give my understanding of the conclusion.\r\n\r\nFor personal using - Writing to $_ is bad practice in most cases and we do not wish to encourage such practices. In most cases, there are native workarounds that @mklement0  has demonstrated more than once. (Some may continue to use Windows PowerShell only but over time I'm sure they'll like PowerShell Core too)\r\n\r\nFor tools - There are tools/modules that use custom $_ . Sometimes it's also just a bad style. Sometimes this is forced to be used because there are no native alternatives. _In any case_, we want to preserve backward compatibility as much as possible. To do that, we can use a strict mode, [lexical strict mode](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0003-Lexical-Strict-Mode.md) and [Interop-Module](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0019-PowerShell-Core-Interop-Module.md).\r\n\r\nFor \"special things\" - Right way is to use native things. Currently PowerShell is Open Source and Community is free to implement natively things that have long been expected - [Concurrency](https://github.com/PowerShell/PowerShell-RFC/blob/master/1-Draft/RFC0023-Native-Support-for-Concurrent-Programming-in-PowerShell.md), [DSL\r\n](https://github.com/PowerShell/PowerShell-RFC/blob/master/3-Experimental/RFC0017-Domain-Specific-Language-Specifications.md) (Did you know we already have a pilot implementation in #3169?), also we have plans to enhance classes and finally, @lzybkr [proposal](https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-322844832) \"to make public the API that allows setting  $_  when invoking a script block.\"\r\nNo doubts, all the popular packages mentioned above and not mentioned at all will have many benefits if such fundamental things are implemented natively in PowerShell Core. We don't want to force you to port the modules - they must continue to work, but their new versions will have these new benefits. We very much hope that you will actively participate in this work starting now.",
    "created_at": "2017-08-17T14:18:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-323087598",
    "id": 323087598,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzA4NzU5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323087598/reactions"
    },
    "updated_at": "2017-08-17T14:18:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323087598",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As discussed on Twitter, putting this back up for review given the feedback so far. ",
    "created_at": "2017-08-22T21:39:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-324159406",
    "id": 324159406,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDE1OTQwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324159406/reactions"
    },
    "updated_at": "2017-08-22T21:39:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324159406",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "My 2 cents as a PowerShell user:\r\nI definitely discourage re-purposing internal variables such as `$_`. If some 3rd party PowerShell script would start to break in a new version of Windows PowerShell then I'd be very upset but if I had to check my scripts and their 3rd party dependencies anyway when swiching to PowerShell Core then I would not mind it as it would be expected to have some breaking changes. The only risk would be if my testing would not invoke this 'naughty' code path so that I would not spot it. I guess most users would check portability only very loosely by testing if they can still import their modules and maybe executing it once through the main execution path.\r\n\r\nTo compare it to other scripting languages:  `Matlab` allows re-purposing of variables defined by it such as `pi` and even the imaginary variable `i` but it can easily lead to unintended behaviour when using e.g. `i` as a loop variable.",
    "created_at": "2017-08-22T22:08:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-324165607",
    "id": 324165607,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDE2NTYwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324165607/reactions"
    },
    "updated_at": "2017-08-22T22:08:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324165607",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Before RTM we should review all breaking changes and try to fix it in interop module.",
    "created_at": "2017-08-23T19:02:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-324431997",
    "id": 324431997,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQzMTk5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324431997/reactions"
    },
    "updated_at": "2017-08-23T19:02:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324431997",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "We just spoke amongst @PowerShell/powershell-committee, and we've decided to go with your feedback:\r\n* make no changes in the engine to avoid breaking anyone\r\n* VS Code (or other PS Editor Services-enabled editors) will be the dominant editing platform for 6.0, and so we can create a useful rule that throws whenever someone assigns a value to `$_` (or any of the others that @mklement0 enumerated)",
    "created_at": "2017-08-23T23:34:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-324491388",
    "id": 324491388,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQ5MTM4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324491388/reactions"
    },
    "updated_at": "2017-08-23T23:34:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324491388",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Is there a tracking Issue in VS Code repo?\r\n\r\nFor PSScriptAnalyzer https://github.com/PowerShell/PSScriptAnalyzer/issues/712",
    "created_at": "2017-08-24T05:23:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-324536081",
    "id": 324536081,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDUzNjA4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324536081/reactions"
    },
    "updated_at": "2017-08-24T05:23:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324536081",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "No VSCode issue needed.  Once ScriptAnalyzer rule is created, it'll be used by EditorServices and automatically lights up in VSCode (and any other editor integrated with EditorServices)",
    "created_at": "2017-08-24T05:32:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3695#issuecomment-324537391",
    "id": 324537391,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3695",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDUzNzM5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324537391/reactions"
    },
    "updated_at": "2017-08-24T05:32:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324537391",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
