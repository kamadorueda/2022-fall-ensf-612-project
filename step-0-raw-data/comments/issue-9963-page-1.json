[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@sizur This syntax already has a defined meaning. The result of the expression after the `&` is evaluated as a module object which is used as the context for the rest of the command. :\r\n```powershell\r\nDesktop (1:12) >  $m = @{ m = get-module PSReadLine }\r\nDesktop (1:13) >  & $m.m gv PSScriptRoot\r\n\r\nName                           Value\r\n----                           -----\r\nPSScriptRoot                   C:\\Users\\bpayette\\Documents\\WindowsPowerShell\\Modules\\PSReadline\\2.0.0\r\n```\r\n",
    "created_at": "2019-06-20T19:43:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504157059",
    "id": 504157059,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDE1NzA1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504157059/reactions"
    },
    "updated_at": "2019-06-20T19:43:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504157059",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "NONE",
    "body": "@bpayette does this cause any issue?  I mean you can interpret a method in this context as a module closure.  What am I missing here?",
    "created_at": "2019-06-20T19:50:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504159260",
    "id": 504159260,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDE1OTI2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504159260/reactions"
    },
    "updated_at": "2019-06-20T19:50:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504159260",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/173641?v=4",
      "events_url": "https://api.github.com/users/sizur/events{/privacy}",
      "followers_url": "https://api.github.com/users/sizur/followers",
      "following_url": "https://api.github.com/users/sizur/following{/other_user}",
      "gists_url": "https://api.github.com/users/sizur/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sizur",
      "id": 173641,
      "login": "sizur",
      "node_id": "MDQ6VXNlcjE3MzY0MQ==",
      "organizations_url": "https://api.github.com/users/sizur/orgs",
      "received_events_url": "https://api.github.com/users/sizur/received_events",
      "repos_url": "https://api.github.com/users/sizur/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sizur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sizur/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sizur"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@bpayette are you trying to say there'd be some kind of conflict in syntax? `$m.m` can be evaluated, check if it's a PSModuleInfo, and if not we can add an extra case to check if it's a MethodInfo object?",
    "created_at": "2019-06-20T20:04:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504163558",
    "id": 504163558,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDE2MzU1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504163558/reactions"
    },
    "updated_at": "2019-06-20T20:04:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504163558",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@sizur - I'm with you here. I don't think it is a conflict at all; it seems to be an expansion of the call operator's capabilities. I asked for this functionality way back in 2007, but it couldn't be justified. Then powershell 2's modules came along and muddied the water. Right now, the call operator can be used with strings, scriptblocks and moduleinfos (what @bpayette said). Extending it to handle PSMethods should be doable.\r\n\r\nIIRC, I told the powershell team that \"& should be able to call All the Things\"",
    "created_at": "2019-06-20T20:13:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504166251",
    "id": 504166251,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDE2NjI1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 3,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504166251/reactions"
    },
    "updated_at": "2019-06-20T20:15:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504166251",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1844001?v=4",
      "events_url": "https://api.github.com/users/oising/events{/privacy}",
      "followers_url": "https://api.github.com/users/oising/followers",
      "following_url": "https://api.github.com/users/oising/following{/other_user}",
      "gists_url": "https://api.github.com/users/oising/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/oising",
      "id": 1844001,
      "login": "oising",
      "node_id": "MDQ6VXNlcjE4NDQwMDE=",
      "organizations_url": "https://api.github.com/users/oising/orgs",
      "received_events_url": "https://api.github.com/users/oising/received_events",
      "repos_url": "https://api.github.com/users/oising/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/oising/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oising/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/oising"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@sizur The expression is currently parsed as:\r\n```powershell \r\n& ($foo.bar) cmd args...\r\n```\r\nwhich should effectively result in \r\n```powershell\r\n& <executionContextObject> cmd args...\r\n```\r\nIt also currently supports CommandInfo objects\r\n```powershell\r\n& (get-command getdate)\r\n```\r\nOtherwise, the value is converted to a string and used as the name of the command to run:\r\n```powershell\r\n& (\"get-\" + \"process\") -name csr*\r\n```\r\nSo while it is possible to special-case `MethodInfo` objects and treat the command line as a method call, this would be a (minor) breaking change. As to the utility of this change, I vaguely remember trying this out when I originally implemented modules and it didn't seem like it was worth the effort when you can just do\r\n```powershell\r\n$foo.bar(1,2,3) | some-thing...\r\n```\r\nNote that expressions are only allowed at the beginning of the pipeline. There is also an RFC out that addresses splatting/spreading for methods. Finally, if you do want to invoke a method in the pipeline, `ForEach-Object` already allows you to do that\r\n```powershell\r\n{master}PSCore (1:16) >  \"Hello world\" | foreach substring 2 3\r\nllo\r\n```\r\n (Aside: the other thing I considered was allowing you to assign MethodInfos to function table entries (converting them into some type CommandInfo) e.g.\r\n```powershell\r\n$function:sin = [math]::Sin\r\nsin 0.5\r\n```\r\nWhich I thought seemed promising but others disagreed :-)\r\n\r\n",
    "created_at": "2019-06-20T20:34:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504173035",
    "id": 504173035,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDE3MzAzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504173035/reactions"
    },
    "updated_at": "2019-06-20T20:34:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504173035",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "NONE",
    "body": "@bpayette what about using a `TypeConverter` mechanism for implicit `PSMethod`->`ScriptBlock` enclosing over method and just rely on `&`'s handling of `ScriptBlock`?",
    "created_at": "2019-06-20T22:22:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504220855",
    "id": 504220855,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDIyMDg1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504220855/reactions"
    },
    "updated_at": "2019-06-20T22:22:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504220855",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/173641?v=4",
      "events_url": "https://api.github.com/users/sizur/events{/privacy}",
      "followers_url": "https://api.github.com/users/sizur/followers",
      "following_url": "https://api.github.com/users/sizur/following{/other_user}",
      "gists_url": "https://api.github.com/users/sizur/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sizur",
      "id": 173641,
      "login": "sizur",
      "node_id": "MDQ6VXNlcjE3MzY0MQ==",
      "organizations_url": "https://api.github.com/users/sizur/orgs",
      "received_events_url": "https://api.github.com/users/sizur/received_events",
      "repos_url": "https://api.github.com/users/sizur/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sizur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sizur/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sizur"
    }
  },
  {
    "author_association": "NONE",
    "body": "`[math]::sqrt | % invoke 9` works nicely.  I still think that if an object has `Invoke`, then `&` should be able to invoke it.",
    "created_at": "2019-06-20T23:03:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504229475",
    "id": 504229475,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDIyOTQ3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504229475/reactions"
    },
    "updated_at": "2019-06-20T23:03:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504229475",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/173641?v=4",
      "events_url": "https://api.github.com/users/sizur/events{/privacy}",
      "followers_url": "https://api.github.com/users/sizur/followers",
      "following_url": "https://api.github.com/users/sizur/following{/other_user}",
      "gists_url": "https://api.github.com/users/sizur/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sizur",
      "id": 173641,
      "login": "sizur",
      "node_id": "MDQ6VXNlcjE3MzY0MQ==",
      "organizations_url": "https://api.github.com/users/sizur/orgs",
      "received_events_url": "https://api.github.com/users/sizur/received_events",
      "repos_url": "https://api.github.com/users/sizur/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sizur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sizur/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sizur"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> `[math]::sqrt | % invoke 9` works nicely. I still think that if an object has `Invoke`, then `&` should be able to invoke it.\r\n\r\nYes! I've always wished delegates could be invoked with `&`.",
    "created_at": "2019-06-20T23:10:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504230886",
    "id": 504230886,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDIzMDg4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504230886/reactions"
    },
    "updated_at": "2019-06-20T23:10:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504230886",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "```\r\nPS > function call {$invokable, $params = $args; $invokable | foreach Invoke @params}\r\nPS > call ([System.Math]::Pow) 2 8                                                   \r\n256\r\n```\r\n@bpayette, you mentioned that adding `MethodInfo` case to `&` would be a minor breaking change.  It's not yet clear to me why.  Do you expect some code somewhere intentionally invoking a command based on stringified method object?",
    "created_at": "2019-06-21T03:24:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504274585",
    "id": 504274585,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDI3NDU4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504274585/reactions"
    },
    "updated_at": "2019-06-21T04:06:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504274585",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/173641?v=4",
      "events_url": "https://api.github.com/users/sizur/events{/privacy}",
      "followers_url": "https://api.github.com/users/sizur/followers",
      "following_url": "https://api.github.com/users/sizur/following{/other_user}",
      "gists_url": "https://api.github.com/users/sizur/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sizur",
      "id": 173641,
      "login": "sizur",
      "node_id": "MDQ6VXNlcjE3MzY0MQ==",
      "organizations_url": "https://api.github.com/users/sizur/orgs",
      "received_events_url": "https://api.github.com/users/sizur/received_events",
      "repos_url": "https://api.github.com/users/sizur/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sizur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sizur/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sizur"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> ```\r\n> PS > function call {$invokable, $params = $args; $invokable | foreach Invoke @params}\r\n> PS > call ([System.Math]::Pow) 2 8                                                   \r\n> 256\r\n> ```\r\n> \r\n> @bpayette, you mentioned that adding `MethodInfo` case to `&` would be a minor breaking change. It's not yet clear to me why. Do you expect some code somewhere intentionally invoking a command based on stringified method object?\r\n\r\nI presume because you could do something like this today:\r\n\r\n```powershell\r\nSet-Content -LiteralPath \"function:$($Host.UI.WriteLine)\" -Value {\r\n    $Host.UI.WriteLine.Invoke($args)\r\n}\r\n\r\n& $Host.UI.WriteLine 'this is a test'\r\n```\r\n\r\nNote that he *did* say minor.  It's definitely a breaking change, it's just incredibly unlikely to actually break anything.",
    "created_at": "2019-06-21T11:33:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504393730",
    "id": 504393730,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDM5MzczMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504393730/reactions"
    },
    "updated_at": "2019-06-21T11:33:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504393730",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "... that's... that wouldn't even work, though. The output from `$Host.UI.WriteLine` shouldn't result in the text necessary to invoke the function. You'd have to call it like this:\r\n\r\n```powershell\r\n& '$Host.UI.WriteLine' 'this is a tes'\r\n```\r\n\r\nSo the odds of anyone doing something _that_ kludgy are astronomically low, just because it's both difficult to make work _and_ really out in the weeds, as it were.",
    "created_at": "2019-06-21T14:20:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504443483",
    "id": 504443483,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDQ0MzQ4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504443483/reactions"
    },
    "updated_at": "2019-06-21T14:20:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504443483",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> ... that's... that wouldn't even work, though. The output from `$Host.UI.WriteLine` shouldn't result in the text necessary to invoke the function.\r\n\r\nSure it does\r\n\r\n```powershell\r\nPS> $Host.UI.WriteLine.ToString()\r\nvoid WriteLine(), void WriteLine(string value), void WriteLine(System.ConsoleColor foregroundColor, System.ConsoleColor backgroundColor, string value)\r\n```\r\n\r\nThe PSMethod is converted to a string in both places, and that's unique enough for a function name (assuming it's a method on a singleton-like object like `$Host`).  You can run the example I gave, it does indeed work.\r\n\r\n> So the odds of anyone doing something _that_ kludgy are astronomically low, just because it's both difficult to make work _and_ really out in the weeds, as it were.\r\n\r\nYeah I did say incredibly unlikely to actually break anything.  I'm not arguing that it shouldn't be done, and I don't think @bpayette was either.  It's still worth mentioning in case someone has a use case that hasn't been considered.\r\n\r\n",
    "created_at": "2019-06-21T14:29:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9963#issuecomment-504446686",
    "id": 504446686,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9963",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDQ0NjY4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504446686/reactions"
    },
    "updated_at": "2019-06-21T14:29:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504446686",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
