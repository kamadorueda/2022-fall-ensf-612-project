[
  {
    "author_association": "COLLABORATOR",
    "body": "Given these are parameters, we can change the parameter name and assign the alias `Scope` to each of these both as a shorthand and for backwards compatibility. I see no reason not to clarify the meaning of these parameters, it's something that's bothered me for quite a while. ",
    "created_at": "2019-06-13T19:18:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-501843549",
    "id": 501843549,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTg0MzU0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501843549/reactions"
    },
    "updated_at": "2019-06-13T19:18:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501843549",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@KirkMunro \r\n\r\n>  -UserScope would be more appropriate than simply using -Scope. \r\n\r\nInteresting. Personally I find `-Scope user` much more readable than `-UserScope`. Also, as a parameter argument, you can easily pass it as a value without having to splat.\r\n\r\n@vexx32 \r\n\r\n> we can change the parameter name and assign the alias Scope to\r\n\r\nYou can't use aliases like that. You can't alias `-UserScope` to `-Scope User`.\r\n\r\n> see no reason not to clarify the meaning of these parameters, \r\n\r\nThat's what documentation is for. Is there a problem with the current docs? If so, please open a docs bug. Thanks.",
    "created_at": "2019-06-14T00:33:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-501926010",
    "id": 501926010,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTkyNjAxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501926010/reactions"
    },
    "updated_at": "2019-06-14T00:33:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501926010",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Hmm. It's not clear, but I read it as saying \"we should use `-UserScope` as a direct replacement for `-Scope` for that cmdlet; for example `-UserScope User` or `-UserScope System` (or whatever that one is, I gotta say I don't install a whole lot system wide).\r\n\r\nThe name might want to be changed if that is the case, though... maybe `-ModuleScope` or something.",
    "created_at": "2019-06-14T00:38:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-501926795",
    "id": 501926795,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTkyNjc5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501926795/reactions"
    },
    "updated_at": "2019-06-14T00:39:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501926795",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@bpayette That's not what I meant.\r\n\r\nMy issue is that there are three distinct parameter types for `-Scope` parameters among modules that ship with PowerShell, and when I see `-Scope` I may need to go to the docs to see what it's for when it would be better if I didn't have to.\r\n\r\nIf the `*-ExecutionPolicy` cmdlets instead had a `-PolicyScope` parameter (with an alias of `Scope` for backward compatibility), and if the PowerShellGet/PackageManagement cmdlets and the `*-ExperimentalFeature` cmdlets instead had a `-UserScope` parameter (with an alias of `Scope` for backward compatibility), then the parameters would be more self-explanatory.\r\n\r\nDoes that make more sense? Maybe the part that confused you was the `-UserScope` parameter name proposal. I suppose it could be called `-ProfileScope` instead, but having it just called `-Scope` by default with values of `CurrentUser` and `AllUsers` when other cmdlets in PowerShell have `-Scope` parameters that take values such as `Global`, `Local`, `Script`, or a numeric value, that difference in definition of scope (the difference between commands, not within one command) is a confusion point that could be eliminated.\r\n\r\nCase in point: when I was looking at `*-ExperimentalFeature` cmdlets and I saw `-Scope`, I initially presumed that it was referring to a PowerShell invocation scope where you could enable the feature, and didn't realize it was about enabling those features for the current user or for all users on the local system instead.",
    "created_at": "2019-06-14T02:21:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-501943319",
    "id": 501943319,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTk0MzMxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501943319/reactions"
    },
    "updated_at": "2019-06-14T14:21:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501943319",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Historical reasoning:\r\n```powershell\r\nSet-ExecutionPolicy -scope ...\r\n```\r\nScope in this case is clearly qualified by the noun so `-PolicyScope` is redundant\r\n\r\n```powersell\r\nSet-Variable -Scope ...\r\n```\r\nAgain, `-Scope` is clearly qualified by the noun making `-VariableScope` redundant.\r\n\r\nAnd then it all goes off the rails with `Install-Module`:\r\n```powershell\r\nInstall-Module -Scope ...\r\nImport-Module -Scope ...\r\n```\r\nThis is extremely unfortunate because here the qualifying noun doesn't provide sufficient context. Maybe something like\r\n```powershell\r\nInstall-Module -Repository ...\r\n```\r\nwould be more semantically significant.\r\n\r\n> take values such as Global, Local, Script, or a numeric value is a confusion point that could be eliminated.\r\n\r\nFor `Import-Module -Scope ...` , `Get-Variable -Scope ...` and `$global:foo = ...` , in all cases, the word \"scope\" is referring to exactly the same thing: the activation stack of the currently running script.  The use of numeric values allows more specific non-local references than \"script\" or \"global\".\r\n\r\n> with `*-ExperimentalFeature `... thought it was referring to a PowerShell invocation scope where you could enable the feature, and didn't realize it was about enabling those features for the current user or for all users on the local system instead\r\n\r\nI totally get that. This should probably just be fixed. Maybe `-EnableFor` ? Or just `-For` ? `Install-Module -For CurrentUser` would work too as would `Set-ExecutionPolicy -For process`.",
    "created_at": "2019-06-14T04:59:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-501968100",
    "id": 501968100,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTk2ODEwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501968100/reactions"
    },
    "updated_at": "2019-06-14T04:59:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501968100",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I ❤️ the `-For` parameter name suggestion. That's very expressive! I've updated an RFC I have open proposing optional features to use that parameter name because it makes the commands self-documenting.\r\n\r\nI also like that parameter name for `*-ExecutionPolicy`, `*-ExperimentalFeature`, and the PowerShellGet/PackageManagement commands. Thanks for that suggestion @BrucePay!\r\n\r\nAside: You have two GitHub accounts that you seem to use on posts interchangeably. Is there one you would prefer we use when we @-mention you?",
    "created_at": "2019-06-14T14:38:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502134381",
    "id": 502134381,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjEzNDM4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502134381/reactions"
    },
    "updated_at": "2019-06-14T14:39:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502134381",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT: This should be a fairly quick decision to make for or against this in the Committee. Could you table this at a meeting? If the Committee buys in, I'll submit the PRs.\r\n\r\nThe tl;dr of this is:\r\n\r\nPowerShell uses \"scope\" to refer to the activation stack of the currently running script. Because of that, a `-Scope` parameter name on `Import-Module`, `Get-Variable`, etc. makes sense. There are other uses of `-Scope` as a parameter name that cause confusion: `Enable-ExperimentalFeature` and `Disable-ExperimentalFeature`, for example, as well as commands in PowerShellGet/PackageManagement and the `Get-/Set-ExecutionPolicy` cmdlets. I think we should consider changing the name of `-Scope` in those commands to something more appropriate, with `-Scope` as an alias for backwards compatibility. @BrucePay's suggestion of `-For` is a really good alternative parameter name that makes commands self-documenting in all of those cases.",
    "created_at": "2019-06-14T14:46:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502137560",
    "id": 502137560,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjEzNzU2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502137560/reactions"
    },
    "updated_at": "2019-06-14T14:46:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502137560",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'm not a fan of the `-For` idea because I use  `-For` interactively for `-Force`.   Also, while this is \"fluent\" in nature, a preposition doesn't quite fit the PowerShell idiom for parameter names IMO.  I'm certainly up for changing the parameter name on `Enable/Disable-ExperimentalFeature`.",
    "created_at": "2019-06-14T15:06:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502145093",
    "id": 502145093,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE0NTA5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502145093/reactions"
    },
    "updated_at": "2019-06-14T15:17:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502145093",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rkeithhill Prepositions are already in use as parameter names in PowerShell commands. Some common examples that come to mind are the `-From` and `-To` parameters in `Send-MailMessage`, or the `-Before` and `-After` parameters in `Get-Job`.",
    "created_at": "2019-06-14T15:29:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502153969",
    "id": 502153969,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE1Mzk2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502153969/reactions"
    },
    "updated_at": "2019-06-14T15:29:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502153969",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Fair enough.  I guess down the road I'd still like to still be able to recognize the language/commands.  I'm all for high value additions and strategic changes but changing things that have existed for a decade or more to make it \"slightly better\" ... yeah, I'm not a fan of that.  ",
    "created_at": "2019-06-14T15:37:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502157122",
    "id": 502157122,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE1NzEyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502157122/reactions"
    },
    "updated_at": "2019-06-14T15:37:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502157122",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Not all of these commands have been there for a decade or more, and among those discussed here, the commands that are a dozen years old are not the ones where changes are being proposed here, aside from `Get-/Set-ExecutionPolicy` which are usually just fire-and-forget commands.\r\n\r\nI look at issues like this as something that wasn't readily apparent early on, but that later became more of a problem due to additions to the language, at which time it makes sense to at least question the current direction, and perhaps change it based on the current landscape of features/commands.",
    "created_at": "2019-06-14T16:48:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502183970",
    "id": 502183970,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE4Mzk3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502183970/reactions"
    },
    "updated_at": "2019-06-14T16:48:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502183970",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Plus, to speak to the \"slightly better\" comment and give some background behind where this discussion started, I have an RFC open for commands for use with optional features. In an earlier version of the draft, I was looking at using a `-Scope` parameter, but in those cmdlets that's very confusing because they have two notions of scope: the users for whom they are enabled/disabled or by default (e.g. `CurrentUser` or `AllUsers`) _and/or_ the activation stack in which they are enabled or disabled. It's during the authoring of that RFC that I ran into this parameter name challenge, and to maintain discoverability and consistency started to question the `-Scope` name more broadly.\r\n\r\nThis is not just a trivial I-have-nothing-better-to-do-with-my-time-so-let's-go-fix-something-that-isn't-important-to-make-something-slightly-better scenario.",
    "created_at": "2019-06-14T16:55:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502186002",
    "id": 502186002,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE4NjAwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502186002/reactions"
    },
    "updated_at": "2019-06-14T16:55:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502186002",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I have an RFC open for commands for use with optional features.\r\n\r\nAnd it's a great conversation to have for new commands.  I'm just not so keen on the \"let's also change well-established commands for consistency\" aspect of this.  BTW I don't consider the `ExperimentalFeature` commands to be well-established - so they're fair game for changes.",
    "created_at": "2019-06-14T17:00:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-502187780",
    "id": 502187780,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE4Nzc4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502187780/reactions"
    },
    "updated_at": "2019-06-14T17:04:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502187780",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Scope as a parameter to me makes sense & changing this in all the areas seems to not provide all that much benefit whilst adding more unnecessary confusion, especially as now you are moving into the realms of parameter naming guidance, whereas good Parameter Help should be where people go to learn and understand what the parameter means more than it's simple name, along with good examples.\r\n\r\nAlso Scope is used heavily in Az Commands for a manner of different contextual usecases.\r\n\r\nI'm siding with @rkeithhill on this as to me doesn't seem to add value to either new or existing scripters and would in fact likely cause more confusion than anything else.",
    "created_at": "2019-06-19T16:52:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-503642587",
    "id": 503642587,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzY0MjU4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/503642587/reactions"
    },
    "updated_at": "2019-06-19T16:52:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/503642587",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6355225?v=4",
      "events_url": "https://api.github.com/users/kilasuit/events{/privacy}",
      "followers_url": "https://api.github.com/users/kilasuit/followers",
      "following_url": "https://api.github.com/users/kilasuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/kilasuit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kilasuit",
      "id": 6355225,
      "login": "kilasuit",
      "node_id": "MDQ6VXNlcjYzNTUyMjU=",
      "organizations_url": "https://api.github.com/users/kilasuit/orgs",
      "received_events_url": "https://api.github.com/users/kilasuit/received_events",
      "repos_url": "https://api.github.com/users/kilasuit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kilasuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kilasuit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kilasuit"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PowerShell/powershell-committee reviewed this (@BrucePay included) and we don't feel anything we do here is going to add much value:\r\n\r\n* Adding a descriptor to `-Scope` is going to be repetitive with the noun (e.g. `-ModuleScope` or `-InstallationScope` for `Install-Module` doesn't seem helpful)\r\n* Where disambiguation is needed between two scope concepts, it's perfectly fine to use a prefix for that disambiguation\r\n* `-For` is a \"fluent\" parameter that might read better, but it's not a pattern we've used often in PowerShell parameters, and it's not any less ambiguous than `-Scope`\r\n* Tab completion works fine for all the `-Scope` values across the cmdlets\r\n* There was 50/50 agreement in the room between whether using `-For` for `-Force` was a valid concern. I personally use `-fo` interactively every day, and this would drive me crazy (especially on `Install-Module`). ",
    "created_at": "2019-06-19T22:31:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9891#issuecomment-503770781",
    "id": 503770781,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9891",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzc3MDc4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/503770781/reactions"
    },
    "updated_at": "2019-06-19T22:31:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/503770781",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  }
]
