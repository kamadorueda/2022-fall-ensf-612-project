[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT @TravisEz13  The next phase of this cleanup is to sort and order the web cmdlet code. I looked at the [coding guidlines](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/coding-guidelines.md), but I don't see any guidance for the order of fields, properties, constructors, methods, etc other than \"fields at the top unless they are backing properties\". The web cmdlets are a mess with code of varying types and access all over the place.\r\n\r\nI was looking at this http://stylecop.soyuz5.com/Ordering%20Rules.html and wondering if that would be a good reference or if this project had its own guidance that hasn't been published yet.",
    "created_at": "2017-12-06T11:24:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5610#issuecomment-349611011",
    "id": 349611011,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5610",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTYxMTAxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/349611011/reactions"
    },
    "updated_at": "2017-12-06T11:24:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/349611011",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@markekraus I would be fine starting with stylecop.  Since the codebase is a decade old and produced by various engineers over time, it's inherently inconsistent and something that we should only address over time.",
    "created_at": "2017-12-06T17:18:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5610#issuecomment-349710694",
    "id": 349710694,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5610",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTcxMDY5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/349710694/reactions"
    },
    "updated_at": "2017-12-06T17:18:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/349710694",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "See [comment](https://github.com/PowerShell/PowerShell/pull/5972#discussion_r162855127) \r\n(null should be on first place).\r\n\r\nSee [rkeithhill's comment](https://github.com/PowerShell/PowerShell/pull/5972#discussion_r163455132)\r\n>FYI, this type of null check (null on the LHS) is a C++ idiom that is unnecessary in C# because if/while/do conditions in C# must evaluate to a Boolean. Therefore a mistaken assignment e.g. if (formData = null) would fail to compile because the type of formData can't be a Boolean (not if you're assigning null to it). In fact, the only time you need to put the literal on the LHS is when the variable type is a Boolean e.g. if (false == aBooleanVariable).\r\nMy team's internal coding guidelines suggest not using == or != in the Boolean variable case but use if (!aBooleanVariable) or if (aBooleanVariable) instead. Consequently, we never put the literal value on the LHS in C# code. And IMO this approach reads easier e.g. if (formData == null).\r\n",
    "created_at": "2018-01-22T10:09:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5610#issuecomment-359378243",
    "id": 359378243,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5610",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM3ODI0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/359378243/reactions"
    },
    "updated_at": "2018-01-29T05:59:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/359378243",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
