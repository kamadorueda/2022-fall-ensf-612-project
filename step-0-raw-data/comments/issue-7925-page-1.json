[
  {
    "author_association": "NONE",
    "body": "-any is the -contains operator\r\n-notany is the -contains operator\r\n\r\nFor all, just use -notcontains if its binary:\r\n```\r\n#For -Any or -All\r\n\r\n($a -notcontains $true)\r\n\r\n#if any are $true, it returns false, if none are $true (all $false), it returns $true\r\n\r\n($a -notcontains $false)\r\n\r\n#if any are $false, it returns false, if none are $false (all $true), it returns $true\r\n```\r\n\r\n-notall is also ambiguous, does it mean that at least one is and at least one is not? in which case:\r\n```\r\n($a -contains $true -and $a -contains $false)\r\n\r\n#inherently has the notall property\r\n```\r\n\r\nFor objects containing multiple values (other than true/false), you can use Group-Object, Sort-Object and a few other cmdlets. I don't see where these operators would improve things.",
    "created_at": "2018-10-02T20:21:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426416247",
    "id": 426416247,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQxNjI0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426416247/reactions"
    },
    "updated_at": "2018-10-02T20:23:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426416247",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/43794723?v=4",
      "events_url": "https://api.github.com/users/Powershell-User/events{/privacy}",
      "followers_url": "https://api.github.com/users/Powershell-User/followers",
      "following_url": "https://api.github.com/users/Powershell-User/following{/other_user}",
      "gists_url": "https://api.github.com/users/Powershell-User/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Powershell-User",
      "id": 43794723,
      "login": "Powershell-User",
      "node_id": "MDQ6VXNlcjQzNzk0NzIz",
      "organizations_url": "https://api.github.com/users/Powershell-User/orgs",
      "received_events_url": "https://api.github.com/users/Powershell-User/received_events",
      "repos_url": "https://api.github.com/users/Powershell-User/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Powershell-User/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Powershell-User/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Powershell-User"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "looks interesting !!!",
    "created_at": "2018-10-02T21:31:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426437602",
    "id": 426437602,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQzNzYwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426437602/reactions"
    },
    "updated_at": "2018-10-02T21:31:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426437602",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12897753?v=4",
      "events_url": "https://api.github.com/users/kvprasoon/events{/privacy}",
      "followers_url": "https://api.github.com/users/kvprasoon/followers",
      "following_url": "https://api.github.com/users/kvprasoon/following{/other_user}",
      "gists_url": "https://api.github.com/users/kvprasoon/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kvprasoon",
      "id": 12897753,
      "login": "kvprasoon",
      "node_id": "MDQ6VXNlcjEyODk3NzUz",
      "organizations_url": "https://api.github.com/users/kvprasoon/orgs",
      "received_events_url": "https://api.github.com/users/kvprasoon/received_events",
      "repos_url": "https://api.github.com/users/kvprasoon/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kvprasoon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kvprasoon/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kvprasoon"
    }
  },
  {
    "author_association": "NONE",
    "body": "> \r\n> \r\n> -any is the -contains operator\r\n> -notany is the -contains operator\r\n> \r\n> For all, just use -notcontains if its binary:\r\n> \r\n> ```\r\n> #For -Any or -All\r\n> \r\n> ($a -notcontains $true)\r\n> \r\n> #if any are $true, it returns false, if none are $true (all $false), it returns $true\r\n> \r\n> ($a -notcontains $false)\r\n> \r\n> #if any are $false, it returns false, if none are $false (all $true), it returns $true\r\n> ```\r\n> \r\n> -notall is also ambiguous, does it mean that at least one is and at least one is not? in which case:\r\n> \r\n> ```\r\n> ($a -contains $true -and $a -contains $false)\r\n> \r\n> #inherently has the notall property\r\n> ```\r\n> \r\n> For objects containing multiple values (other than true/false), you can use Group-Object, Sort-Object and a few other cmdlets. I don't see where these operators would improve things.\r\n\r\n($a -in $collection) is the same ($collection -contains $a) \r\nin other case -all -notall and -any is easy to read and also simplified syntax   ",
    "created_at": "2018-10-03T00:28:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426474166",
    "id": 426474166,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ3NDE2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426474166/reactions"
    },
    "updated_at": "2018-10-03T00:28:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426474166",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I would argue that `$array -contains $item` is far easier to read than `$array -any $item` (at least for those of us perhaps who are most accustomed to English over other languages and/or have it as our birth-tongue).\r\n\r\nAnd really, the only thing you *can't* currently do with a single operator that you're suggesting is the `-notall`, which would be most neatly solved, I think with a fairly simple expression that arguably makes *more* semantic sense than the overly-shortened `-notall` operator suggested:\r\n```powershell\r\n@($Array -eq $Item).Count -ne $Array.Count\r\n```\r\n\r\n(And, of course, @Powershell-User's suggestion also has merit there, although I am unsure which is \"better\", at least performance-wise.)\r\n\r\nWhile I do like the idea, as @Powershell-User mentions, the functionality is already present, and I think the existing operators are more than sufficiently clear in intention.",
    "created_at": "2018-10-03T00:38:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426475794",
    "id": 426475794,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ3NTc5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426475794/reactions"
    },
    "updated_at": "2018-10-03T00:43:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426475794",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> `$array -contains $item` is far easier to read than `$array -any $item`\r\n\r\nAgreed but if `any` accepts (or by default uses) a filter expression it becomes a **tiny bit** more interesting. This would be kind of like the `.Where{}` method e.g. `(2,4,6,7).Where{$_ -le 4}`.  An `Any` **method** would accept a filter e.g. `(2,4,6,7).Any{$_ % 2}` which in this case, detects if there are any odd numbers in the array.  Or as an operator `(2,4,6,7) -any {$_ % 2}`.   You can do this today with LINQ:\r\n```\r\n[int[]]$arr = 2,4,6,7\r\n[System.Func[int,bool]]$func = {param($val) return ($val % 2) }\r\n[System.Linq.Enumerable]::Any($arr, $func)\r\n```\r\nBut it's kind of a PITA.  \r\n\r\nI suppose you could do the same with `-all` e.g. `(2,4,6,7) -all {$_ -lt 10}` would return $true.  \r\n\r\nOr maybe it would be better if PowerShell just worked more easily with the various LINQ `Enumerable` methods?",
    "created_at": "2018-10-03T02:07:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426488894",
    "id": 426488894,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ4ODg5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426488894/reactions"
    },
    "updated_at": "2018-10-03T03:37:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426488894",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "As you state, `.Where{}` is perfectly capable of this.\r\n\r\nI believe there have been discussions about whether or not to add `-where` and `foreach` *operators* as well, which it appears may be more useful to you in this kind of scenario.",
    "created_at": "2018-10-03T02:18:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426490790",
    "id": 426490790,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ5MDc5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426490790/reactions"
    },
    "updated_at": "2018-10-03T02:18:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426490790",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "When we get around to supporting  LINQ, these operations will be covered and it will simply be\r\n```powershell\r\n(2,4,6).All{$_ % s -eq 0}\r\n(1,2,3,4,5,6).Any{$_ -gt 5}\r\n```\r\n",
    "created_at": "2018-10-03T03:35:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426501342",
    "id": 426501342,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjUwMTM0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 8,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 3,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 11,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426501342/reactions"
    },
    "updated_at": "2018-10-03T03:35:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426501342",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> When we get around to supporting LINQ\r\n\r\nWhere's the GoFundMe for LINQ support? ;) 👍 ",
    "created_at": "2018-10-03T22:09:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426820655",
    "id": 426820655,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjgyMDY1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426820655/reactions"
    },
    "updated_at": "2018-10-03T22:10:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426820655",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/187787?v=4",
      "events_url": "https://api.github.com/users/HumanEquivalentUnit/events{/privacy}",
      "followers_url": "https://api.github.com/users/HumanEquivalentUnit/followers",
      "following_url": "https://api.github.com/users/HumanEquivalentUnit/following{/other_user}",
      "gists_url": "https://api.github.com/users/HumanEquivalentUnit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HumanEquivalentUnit",
      "id": 187787,
      "login": "HumanEquivalentUnit",
      "node_id": "MDQ6VXNlcjE4Nzc4Nw==",
      "organizations_url": "https://api.github.com/users/HumanEquivalentUnit/orgs",
      "received_events_url": "https://api.github.com/users/HumanEquivalentUnit/received_events",
      "repos_url": "https://api.github.com/users/HumanEquivalentUnit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HumanEquivalentUnit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HumanEquivalentUnit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HumanEquivalentUnit"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If I knew *anything* about LINQ I'd be all over that, but I think it's a bit over my head for the present moment. 😄 \r\n",
    "created_at": "2018-10-04T00:16:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-426844611",
    "id": 426844611,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjg0NDYxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426844611/reactions"
    },
    "updated_at": "2018-10-04T00:16:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426844611",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Was looking for interesting issues to work on last night and stumbled on this. \r\n\r\nWhat @rkeithhill suggests (lambda containment operators) makes much more sense, and can easily be implemented with a few modifications to the existing `-contains` op implementation, like [in this branch](https://github.com/IISResetMe/PowerShell/commit/eea5675e2e91a004402ad17a55fd4305862dfb6b):\r\n\r\n![image](https://user-images.githubusercontent.com/7413755/52902493-b2605000-3211-11e9-9d15-91ca070bbcec.png)\r\n\r\n----\r\n\r\n@BrucePay are there any active efforts to pursue LINQ/extension methods any time soon? No need to add this if that's on the roadmap",
    "created_at": "2019-02-16T16:48:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7925#issuecomment-464361955",
    "id": 464361955,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7925",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDM2MTk1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 2,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/464361955/reactions"
    },
    "updated_at": "2019-02-16T16:48:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/464361955",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  }
]
