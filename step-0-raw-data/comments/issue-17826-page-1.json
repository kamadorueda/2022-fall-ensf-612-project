[
  {
    "author_association": "CONTRIBUTOR",
    "body": "While it's understandable to want regex escape sequences such as `\\u2192` to work in the substitution string, it is important to note that substitution strings by design aren't and _shouldn't be_ regexes themselves, not least because most of the regex constructs would make no sense there.\r\n\r\n`[regex]::Unescape()` is _not_ a general solution, because it would result in interpreting `\\` instances as part of _any_ regex escape sequence, which either inappropriately modifies the string or breaks altogether; e.g.:\r\n\r\n```powershell\r\n[Regex]::Unescape('\\u2192 a\\b') # !! -> 'â†’ a', seemingly; technically, \\b became \"`b\", i.e. a backspace\r\n[Regex]::Unescape('\\u2192 a\\z') # !! -> exception: ... Unrecognized escape sequence \\\\z.\"\r\n```\r\n\r\nI don't think there's a good solution to this problem: users will have to understand the distinct concepts involved:\r\n* regexes passed as strings to the .NET regex engine\r\n* substitution strings that have a minimal grammar of _only_ recognizing `$`-prefixed tokens as capture-group references (and treating everything else, including `\\` verbatim), with `$$` required for escaping a verbatim `$`; that these tokens _look like_ PowerShell variable reference is unfortunate, but here to stay.\r\n* PowerShell string literals that require `\"...\"` for string interpolation, which requires escaping `$` chars. meant for the .NET regex engine to be escapes as `` `$ ``",
    "created_at": "2022-08-03T16:13:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17826#issuecomment-1204169339",
    "id": 1204169339,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17826",
    "node_id": "IC_kwDOAvT7bc5Hxip7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1204169339/reactions"
    },
    "updated_at": "2022-08-03T17:06:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1204169339",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0,\r\n \r\n> `[regex]::Unescape()` is _not_ a general solution\r\n\r\nYou're right, I needed some time think this through and see if there weren't some other escapes for this.\r\nBut I guess there is indeed no other solution to this problem and my purpose is indeed too simplistic.",
    "created_at": "2022-08-04T06:25:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17826#issuecomment-1204815751",
    "id": 1204815751,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17826",
    "node_id": "IC_kwDOAvT7bc5H0AeH",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1204815751/reactions"
    },
    "updated_at": "2022-08-04T06:26:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1204815751",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  }
]
