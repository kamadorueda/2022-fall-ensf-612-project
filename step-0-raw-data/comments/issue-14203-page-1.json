[
  {
    "author_association": "NONE",
    "body": "First  `$result = Write-Output 'Value' && $(throw 'Bad')` \r\nIs a dreadful example for the help.  \r\n1.  Nothing should ever use   `$variable = write-output <<some_constant>>`\r\n2.  `$result = 'Value' && <<anything which doesn't throw>>` puts \"value\" into $result and the puts a second value in if there is one,   throw leaves$ result empty. \r\n \r\n\r\nThere's a much wider constrain to do with language keywords.  You can't , for example, do \r\n`foreach ($x in $Y) {$x +1 } | some-command `   \r\n\r\nfor / foreach / while / if / throw / break / continue  are not pipelines and as the help says  under \"Operator syntax and precedence\" \r\n>   Unlike other operators, && and || operate on pipelines, rather than on expressions like + or -and, for example.\r\n\r\n`$result =  'Value' && while ($x -lt 3) {$x ++}` won't work either. nor will.\r\n`$result =  'Value' && if ($true) {\"boo\"}`\r\n\r\n",
    "created_at": "2020-11-20T22:12:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14203#issuecomment-731433998",
    "id": 731433998,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14203",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTQzMzk5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731433998/reactions"
    },
    "updated_at": "2020-11-20T22:12:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731433998",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mladedav, I empathize and certainly wish the `$(...)` wasn't needed, but this has been discussed at length in #10967; specifically, @rjmholt explains [here](https://github.com/PowerShell/PowerShell/issues/10967#issuecomment-549167463) and [here](https://github.com/PowerShell/PowerShell/issues/10967#issuecomment-561843650) why the fundamentals of PowerShell's current grammar prevent a solution.",
    "created_at": "2020-11-22T19:21:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14203#issuecomment-731826199",
    "id": 731826199,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14203",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTgyNjE5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731826199/reactions"
    },
    "updated_at": "2020-11-22T19:21:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731826199",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The short of it: `throw` is a _statement_, as are constructs such as `if` and `foreach`, and the only way to nest statements inside a statement is via `$(...)`.\r\n\r\n@jhoneill's examples, such as `foreach ($x in $Y) {$x +1 } | some-command`, therefore do not work for the same reason - even though I wish they did (#6817).\r\n\r\n",
    "created_at": "2020-11-22T19:27:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14203#issuecomment-731828324",
    "id": 731828324,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14203",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTgyODMyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731828324/reactions"
    },
    "updated_at": "2020-11-22T19:27:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731828324",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As an aside: The curious thing is that statements _are_ allowed without `$(...)` if they are the standalone RHS of an _assignment_; e.g.:\r\n\r\n```powershell\r\n$var = foreach ($i in 1..3) { $i }  # $(...) NOT required in this case.\r\n```",
    "created_at": "2020-11-22T19:29:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14203#issuecomment-731829091",
    "id": 731829091,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14203",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTgyOTA5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731829091/reactions"
    },
    "updated_at": "2020-11-22T19:29:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731829091",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S.: [Here](https://github.com/PowerShell/PowerShell/issues/10967#issuecomment-569285154) I've made a proposal to modify the grammar _slightly_, in order to at least allow using `exit` , `return`, `throw` as-is in pipeline chains (with `&&` and `||`), but my knowledge isn't deep enough to know whether (a) that is technically feasible and (b) without breaking backward compatibility.",
    "created_at": "2020-11-22T20:17:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14203#issuecomment-731840703",
    "id": 731840703,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14203",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMTg0MDcwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731840703/reactions"
    },
    "updated_at": "2020-11-22T20:17:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/731840703",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
