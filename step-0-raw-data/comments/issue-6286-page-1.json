[
  {
    "author_association": "COLLABORATOR",
    "body": "Related #4837, #4781\r\n~Dup #3158~",
    "created_at": "2018-03-02T05:22:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6286#issuecomment-369823743",
    "id": 369823743,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6286",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTgyMzc0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/369823743/reactions"
    },
    "updated_at": "2018-03-02T16:15:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/369823743",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov This issue is not a dup of #3158:\r\n\r\n* #3158 is about distinguishing between terminating and non-terminating errors recorded in `$Error`\r\n* this issue is about distinguish between two kinds of terminating errors, script- and statement-terminating errors in a catch block",
    "created_at": "2018-03-02T15:14:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6286#issuecomment-369948185",
    "id": 369948185,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6286",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk0ODE4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/369948185/reactions"
    },
    "updated_at": "2018-03-02T15:14:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/369948185",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 If you have the time, could you take a look at this and see if you have any ideas for how to achieve this?",
    "created_at": "2018-03-13T17:36:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6286#issuecomment-372752991",
    "id": 372752991,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6286",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc1Mjk5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372752991/reactions"
    },
    "updated_at": "2018-03-13T17:36:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372752991",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Hi @alx9r, There aren't really three kinds of errors as such, just three dispositions of one kind of error. For example, if a command writes an error to error output, it's non-terminating. If `-ErrorAction Stop` is specified, that non-terminating write becomes a statement-terminating error. If there is a trap or try/catch in scope, the statement-terminating error is thrown to the catch block.  In this scenario, the same error object eventually becomes all three \"types\" as it flows through the system - it began as non-terminating, became terminating and then became an exception. (Note that the automatic change from statement-terminating error to exception in the presence of trap or try/catch is a fundamental semantic for PowerShell.) ",
    "created_at": "2018-03-14T19:54:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6286#issuecomment-373153890",
    "id": 373153890,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6286",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE1Mzg5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373153890/reactions"
    },
    "updated_at": "2018-03-14T19:54:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373153890",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n@BrucePay \r\n>If -ErrorAction Stop is specified, that non-terminating write becomes a statement-terminating error.\r\n\r\nIn my experimentation `Write-Error -ea Stop`, for example, does not cause a statement-terminating error. \r\n Rather, `Write-Error -ea Stop` seems to always throw an exception.  In my experimentation the effect of `-ErrorAction` has been consistent with being an implementation detail of the command to which it is passed.   Do you mean `$ErrorActionPreference = 'Stop'` here?  \r\n\r\n>In this scenario, the same error object eventually becomes all three \"types\" as it flows through the system - it began as non-terminating, became terminating and then became an exception.\r\n\r\nI think I understand the escalation concept you are describing.  I have not, however, come across any one error source that observably escalates from non-terminating to statement-terminating to exception in the idealized way you describe.  Do you have an example of a command that observably behaves the way you describe?  Or are you describing an unobservable internal escalation process here?\r\n\r\n--------\r\n\r\nI arrived at the following table empirically ([test code here](https://gist.github.com/alx9r/3d3463cb7da2265f82b8fa1e075731ae)).  \r\n\r\n|ref.| Statement |  In `try{}`? | `ErrorActionPreference` | Exception Thrown by statement? |\r\n|---|-------------|---------------------------|-----------|---------------|\r\n| 1 |`throw`       | x | not `SilentlyContinue` | yes |\r\n| 2 |`throw`       | yes | `SilentlyContinue` | yes |\r\n| 3 |`throw`       | no | `SilentlyContinue` | no |\r\n| 4 |`ThrowTerminatingError()` | yes | x | yes |\r\n| 5 |`ThrowTerminatingError()` | no | `Stop`| yes |\r\n| 6 |`ThrowTerminatingError()` | no | `Continue` |  no |\r\n| 7 |`Write-Error -ea Stop` | x | x | yes | \r\n| 8 |`Write-Error` | x | `Stop` | yes |\r\n| 9 |`Write-Error` | x | `Continue` | no |\r\n\r\nx = does not matter\r\n\r\nAnother way to ask my original question is as follows:\r\n\r\nIs there a way to distinguish between a caught exception thrown by `throw` (ie. ref. 1 and 2) and an exception thrown by `ThrowTerminatingError()` (ie. ref. 4)?\r\n\r\nIn yet other words, is there a way to infer from a caught exception whether that exception would have been thrown in the absence of the `try{}catch{}` that caught it?\r\n\r\n",
    "created_at": "2018-03-15T01:13:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6286#issuecomment-373227322",
    "id": 373227322,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6286",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIyNzMyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373227322/reactions"
    },
    "updated_at": "2018-03-15T01:13:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373227322",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@alx9r: Nice writeup; to add to the general part:\r\n\r\nIndeed, to recap from the [error-handling saga](https://github.com/PowerShell/PowerShell-Docs/issues/1583):\r\n\r\n*  _Preference variable_ `$ErrorActionPreference = 'Stop'` makes _both_ nonterminating and statement-terminating errors throw an unhandled-by-default exception (for which I coined the term _script-terminating_ error, which I'll use in the remainder of this post).\r\n   \r\n* _Common parameter_ `-ErrorAction Stop`, by contrast, only affects _nonterminating_ errors and promotes them _directly to script-terminating_ errors.\r\n\r\nThis directly contradicts the docs, which do not distinguish between preference-variable and common-parameter use and categorically claim that `Stop` only affects _nonterminating_ errors (which is only true with the _common parameter_).\r\n\r\nYou can't help but wonder if the original intent was:\r\n\r\n* to never affect statement-terminating errors with _preference variable_ `$ErrorActionPreference = 'Stop'`, in line with the _common parameter_'s behavior and the documentation.\r\n\r\n* to have both `$ErrorActionPreference = 'Stop'` and `-ErrorAction Stop` promote _nonterminating_ errors to _statement_-terminating ones rather than to script-terminating ones.\r\n   * This would explain why `-ErrorAction Stop` has no effect on statement-terminating errors: they already _are_ statement-terminating errors; in other words: they already are in the desired target state.\r\n\r\nIn other words: the original intent may have been to _never_ terminate the script _by default_ , except with the use of `Throw`, and to instead _require_ use of `try`/`catch` or `trap` in order to effect termination.\r\n  * The [`Throw` documentation](https://github.com/PowerShell/PowerShell-Docs/blob/staging/reference/6/Microsoft.PowerShell.Core/About/about_Throw.md) confusingly talks about generating a \"terminating error\" too, without pointing out the fundamental distinction from a _statement_-terminating error.\r\n  * Additionally, the documentation's example use case shows use of `Throw` to enforce a mandatory parameter without prompting; of course, using this technique results in a _script_-terminating error, whereas cmdlets normally only generate _statement_-terminating errors, even in the face of incorrect syntax and, if the PowerShell instance was invoked with `-NonInteractive`, in the absence of mandatory parameters (declared without `Throw`).\r\n\r\n@BrucePay, can you shed light on this?\r\n",
    "created_at": "2018-03-15T13:21:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6286#issuecomment-373373384",
    "id": 373373384,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6286",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM3MzM4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373373384/reactions"
    },
    "updated_at": "2018-03-15T13:24:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373373384",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
