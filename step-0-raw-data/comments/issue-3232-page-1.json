[
  {
    "author_association": "NONE",
    "body": "Hum! Very interesting.  But, I think the actual behavior is as expected.  As in Windows we don't have a command like sudo.  \r\nBut, you could use 'sudo powershell' and then do the remove foo.txt (which was created using 'sudo powershell') then it works when using Remove-Item.  Of course, it won't work in a non-elevated permission. \r\n\r\nI would only use 'sudo' on Linux commands (\"sudo nautilus\") from within PowerShell.\r\n\r\n:)\r\n\r\n",
    "created_at": "2017-02-28T20:15:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-283148932",
    "id": 283148932,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzE0ODkzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/283148932/reactions"
    },
    "updated_at": "2017-02-28T20:15:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/283148932",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Even on Windows, it would be good to have similar capability to run a cmdlet as another user or elevated and something that could relied on in portable scripts.  May need an RFC for this.",
    "created_at": "2017-03-01T02:00:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-283221756",
    "id": 283221756,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzIyMTc1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 71,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 7,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 78,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/283221756/reactions"
    },
    "updated_at": "2017-03-01T02:00:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/283221756",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "This functionality would be useful to work around #3506.",
    "created_at": "2017-04-07T19:59:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-292637149",
    "id": 292637149,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjYzNzE0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/292637149/reactions"
    },
    "updated_at": "2017-04-07T19:59:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/292637149",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/466713?v=4",
      "events_url": "https://api.github.com/users/pcgeek86/events{/privacy}",
      "followers_url": "https://api.github.com/users/pcgeek86/followers",
      "following_url": "https://api.github.com/users/pcgeek86/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcgeek86/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pcgeek86",
      "id": 466713,
      "login": "pcgeek86",
      "node_id": "MDQ6VXNlcjQ2NjcxMw==",
      "organizations_url": "https://api.github.com/users/pcgeek86/orgs",
      "received_events_url": "https://api.github.com/users/pcgeek86/received_events",
      "repos_url": "https://api.github.com/users/pcgeek86/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pcgeek86/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcgeek86/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pcgeek86"
    }
  },
  {
    "author_association": "NONE",
    "body": "This is going to become a blocker for adapting Linux for me if this is not resolved. We are not allowed to sudo bash and similarly will not be able to do sudo powershell.\r\n\r\nI agree with Maximo, we should leave sudo to bash and make a new cmdlet for doing elevation in powershell using sudo as scaffolding on expected functionality.",
    "created_at": "2017-04-14T22:22:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-294247726",
    "id": 294247726,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI0NzcyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 9,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 9,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294247726/reactions"
    },
    "updated_at": "2017-04-14T22:22:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294247726",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10787804?v=4",
      "events_url": "https://api.github.com/users/pixelrebirth/events{/privacy}",
      "followers_url": "https://api.github.com/users/pixelrebirth/followers",
      "following_url": "https://api.github.com/users/pixelrebirth/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelrebirth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pixelrebirth",
      "id": 10787804,
      "login": "pixelrebirth",
      "node_id": "MDQ6VXNlcjEwNzg3ODA0",
      "organizations_url": "https://api.github.com/users/pixelrebirth/orgs",
      "received_events_url": "https://api.github.com/users/pixelrebirth/received_events",
      "repos_url": "https://api.github.com/users/pixelrebirth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pixelrebirth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelrebirth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pixelrebirth"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@dantraMSFT has been investigating this, Dan can you provide an update on some current thinking for this?",
    "created_at": "2017-04-14T22:46:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-294250716",
    "id": 294250716,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1MDcxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294250716/reactions"
    },
    "updated_at": "2017-04-14T22:46:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294250716",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@pixelrebirth Can you provide more detail as to what you expect?  Are you expecting simple execution with a wait, output redirection or pipeline redirection?\r\nSome example usage would be useful as well.",
    "created_at": "2017-04-14T22:57:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-294252091",
    "id": 294252091,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1MjA5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294252091/reactions"
    },
    "updated_at": "2017-04-14T22:58:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294252091",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12105071?v=4",
      "events_url": "https://api.github.com/users/dantraMSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/dantraMSFT/followers",
      "following_url": "https://api.github.com/users/dantraMSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/dantraMSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dantraMSFT",
      "id": 12105071,
      "login": "dantraMSFT",
      "node_id": "MDQ6VXNlcjEyMTA1MDcx",
      "organizations_url": "https://api.github.com/users/dantraMSFT/orgs",
      "received_events_url": "https://api.github.com/users/dantraMSFT/received_events",
      "repos_url": "https://api.github.com/users/dantraMSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dantraMSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dantraMSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dantraMSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@dantraMSFT For sake of the argument I am going to call the new sudo like cmdlet: Invoke-Elevated\r\nThis is how sudo works and would translate to Invoke-Elevated in a powershell way\r\n\r\n```\r\n$cred = Get-Credential\r\nInvoke-Elevated -credential $cred -command {\r\n        Get-ChildItem ./test | Remove-Item -force\r\n} | Get-SomeCmdlet\r\n```\r\n\r\nIn this example, everything in the scriptblock would be executed elevated and then piped to a NON elevated Get-SomeCmdlet \r\nCred can be a different user or yourself as an elevated user (permissions needs to be kept somewhere like sudoers file does aka a whitelist)\r\n\r\nLogging should be enabled, by default for instances where Invoke-Elevated is executed:\r\nUser | Command | DateTime or similar format logging\r\n\r\nMaybe some of this gets extended or changed later, but this is what would remove my blockers",
    "created_at": "2017-04-14T23:37:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-294256106",
    "id": 294256106,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1NjEwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 12,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 12,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294256106/reactions"
    },
    "updated_at": "2017-04-14T23:37:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294256106",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10787804?v=4",
      "events_url": "https://api.github.com/users/pixelrebirth/events{/privacy}",
      "followers_url": "https://api.github.com/users/pixelrebirth/followers",
      "following_url": "https://api.github.com/users/pixelrebirth/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelrebirth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pixelrebirth",
      "id": 10787804,
      "login": "pixelrebirth",
      "node_id": "MDQ6VXNlcjEwNzg3ODA0",
      "organizations_url": "https://api.github.com/users/pixelrebirth/orgs",
      "received_events_url": "https://api.github.com/users/pixelrebirth/received_events",
      "repos_url": "https://api.github.com/users/pixelrebirth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pixelrebirth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelrebirth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pixelrebirth"
    }
  },
  {
    "author_association": "NONE",
    "body": "It should also work like:\r\n\r\n```Get-ChildItem ./test | Invoke-Elevated -command {Remove-Item -force}```\r\nWhere the credential is your current user and it just asks for the password...\r\n\r\nGet-ChildItem is NON elevated, Remove-Item is elevated in this example",
    "created_at": "2017-04-14T23:43:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-294256618",
    "id": 294256618,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDI1NjYxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294256618/reactions"
    },
    "updated_at": "2017-04-14T23:43:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/294256618",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10787804?v=4",
      "events_url": "https://api.github.com/users/pixelrebirth/events{/privacy}",
      "followers_url": "https://api.github.com/users/pixelrebirth/followers",
      "following_url": "https://api.github.com/users/pixelrebirth/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelrebirth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pixelrebirth",
      "id": 10787804,
      "login": "pixelrebirth",
      "node_id": "MDQ6VXNlcjEwNzg3ODA0",
      "organizations_url": "https://api.github.com/users/pixelrebirth/orgs",
      "received_events_url": "https://api.github.com/users/pixelrebirth/received_events",
      "repos_url": "https://api.github.com/users/pixelrebirth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pixelrebirth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelrebirth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pixelrebirth"
    }
  },
  {
    "author_association": "NONE",
    "body": "I was on the community call today asking about this, but my wife got hurt during the explanation of the challenges for it and I missed a lot of it. Can you please put notes here so I can relay them to my boss?\r\n\r\nI will help however possible and put pressure wherever I need to.",
    "created_at": "2017-04-20T17:39:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-295828234",
    "id": 295828234,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTgyODIzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/295828234/reactions"
    },
    "updated_at": "2017-04-20T17:39:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/295828234",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10787804?v=4",
      "events_url": "https://api.github.com/users/pixelrebirth/events{/privacy}",
      "followers_url": "https://api.github.com/users/pixelrebirth/followers",
      "following_url": "https://api.github.com/users/pixelrebirth/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelrebirth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pixelrebirth",
      "id": 10787804,
      "login": "pixelrebirth",
      "node_id": "MDQ6VXNlcjEwNzg3ODA0",
      "organizations_url": "https://api.github.com/users/pixelrebirth/orgs",
      "received_events_url": "https://api.github.com/users/pixelrebirth/received_events",
      "repos_url": "https://api.github.com/users/pixelrebirth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pixelrebirth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelrebirth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pixelrebirth"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@pixelrebirth hope she's okay! We'll be putting up a recording of the call in the next day or two, so you can catch up if you like. \r\n\r\nBasic summary is that @dantraMSFT is doing an initial investigation to figure out how to do this in a non-hacky way. Today, you can `sudo powershell -c \"invoke-foo\"` from another shell, but that's obviously not workable. \r\n\r\n@dantraMSFT : as you work through your investigation, maybe post some status to make sure that everyone understands the tradeoffs with different approaches? ",
    "created_at": "2017-04-20T20:50:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-295906591",
    "id": 295906591,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTkwNjU5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/295906591/reactions"
    },
    "updated_at": "2017-04-20T20:50:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/295906591",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "NONE",
    "body": "It may seem obvious, but maybe take a look at the sudo source code and see how they manage it-- maybe it requires some low level coding. I wish I had a deeper code understanding to help.\r\n\r\nShe is okay, she feel on her surgery hip. Thanks for the fast response on this. I am working on a little hack work around I will post here if I pull it off.\r\n",
    "created_at": "2017-04-20T21:54:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-295932081",
    "id": 295932081,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTkzMjA4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/295932081/reactions"
    },
    "updated_at": "2017-04-20T21:56:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/295932081",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10787804?v=4",
      "events_url": "https://api.github.com/users/pixelrebirth/events{/privacy}",
      "followers_url": "https://api.github.com/users/pixelrebirth/followers",
      "following_url": "https://api.github.com/users/pixelrebirth/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixelrebirth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pixelrebirth",
      "id": 10787804,
      "login": "pixelrebirth",
      "node_id": "MDQ6VXNlcjEwNzg3ODA0",
      "organizations_url": "https://api.github.com/users/pixelrebirth/orgs",
      "received_events_url": "https://api.github.com/users/pixelrebirth/received_events",
      "repos_url": "https://api.github.com/users/pixelrebirth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pixelrebirth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixelrebirth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pixelrebirth"
    }
  },
  {
    "author_association": "NONE",
    "body": "@pixelrebirth For reference, sudo uses the setuid bit, see <https://unix.stackexchange.com/a/80350/86669> for details. It would probably be a bad idea to set that on a whole shell, though.",
    "created_at": "2017-04-24T15:21:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-296703903",
    "id": 296703903,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjcwMzkwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/296703903/reactions"
    },
    "updated_at": "2017-04-24T15:21:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/296703903",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2063777?v=4",
      "events_url": "https://api.github.com/users/J5lx/events{/privacy}",
      "followers_url": "https://api.github.com/users/J5lx/followers",
      "following_url": "https://api.github.com/users/J5lx/following{/other_user}",
      "gists_url": "https://api.github.com/users/J5lx/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/J5lx",
      "id": 2063777,
      "login": "J5lx",
      "node_id": "MDQ6VXNlcjIwNjM3Nzc=",
      "organizations_url": "https://api.github.com/users/J5lx/orgs",
      "received_events_url": "https://api.github.com/users/J5lx/received_events",
      "repos_url": "https://api.github.com/users/J5lx/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/J5lx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/J5lx/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/J5lx"
    }
  },
  {
    "author_association": "NONE",
    "body": "Native Windows sudo is **must**  to have (so the issue probably doesn't belong here, although option where it is usable only via Powershell is acceptable for me ). I have used Powershell since the beginning and have seen 99 variants of sudo script around, like ` Invoke-Elevated` above (or [my own](https://github.com/majkinetor/posh/blob/master/MM_Admin/Start-ElevatedProcess.ps1) that I use every day). Including cmdlet like that in Powershell would be step forward, however, they all feel cumbersome relative to how this works on Linux.  \r\n\r\nOne of the annoying things for me is that it starts a new shell window (not on linux ) which I would like to see implemented in Powershell/Windows, not sure if this is technically possible on Windows tho.\r\n\r\n",
    "created_at": "2017-05-23T07:19:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303311733",
    "id": 303311733,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzMxMTczMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 7,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 7,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303311733/reactions"
    },
    "updated_at": "2017-05-23T07:20:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303311733",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "Although I like the idea of another cmdlet (\"Invoke-Elevated\") which could possibly be use in Windows, but I can't understand why not stick to open PowerShell with 'sudo' if you need to create a script to run with high privilege?  \r\n\r\nEspecially If you're automating a task which will eventually be scheduled to run with some kind of high privilege credentials anyway. \r\n:)\r\n",
    "created_at": "2017-05-23T12:45:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303386433",
    "id": 303386433,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzM4NjQzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303386433/reactions"
    },
    "updated_at": "2017-05-23T12:45:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303386433",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "NONE",
    "body": "Because that is not the typical workflow. You don't 'sudo' and live there forever, you sudo specific commands and live in non-sudo world. There is no quick way to do so in Windows and powershell itself is terribly slow to start, especially with few profile elements included.\r\n\r\nIn a typical every day session I sudo 20 times specific commands, other run unprivileged. That is the whole point of sudo, to rise privilege only when necessary and it might be necessary quite often. \r\n\r\nMy workflow was, run command, it complains about privilege, I `sudo -L` which wil execute last command again with privilege. Since posh is so slow to start, I just fire up admin shell and live in it constantly, clearly not a good idea. ",
    "created_at": "2017-05-23T14:54:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303424313",
    "id": 303424313,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQyNDMxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303424313/reactions"
    },
    "updated_at": "2017-05-23T14:58:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303424313",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks @majkinetor!\r\n:) ",
    "created_at": "2017-05-23T14:58:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303425424",
    "id": 303425424,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQyNTQyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303425424/reactions"
    },
    "updated_at": "2017-05-23T14:58:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303425424",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "NONE",
    "body": "The sudo should be CLI variant of UAC prompt. Windows, until recently, was never CLI friendly, but now I think we need this. The time has come when you can do 100% Windows things in shell only - I personally just use shell and the browser, almost nothing else.",
    "created_at": "2017-05-23T15:02:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303427038",
    "id": 303427038,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQyNzAzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 11,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 3,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 14,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303427038/reactions"
    },
    "updated_at": "2017-05-23T15:02:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303427038",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@majkinetor: As far as I know, the only way to launch an elevated process is through the UAC prompt.\r\nFWIW: You can accomplish this on windows without  a powershell change using ShellExecuteEx.  \r\nHowever, if you're expecting to stream back the results; it's a very different story.",
    "created_at": "2017-05-23T17:43:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303478019",
    "id": 303478019,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ3ODAxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303478019/reactions"
    },
    "updated_at": "2017-05-23T17:43:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303478019",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12105071?v=4",
      "events_url": "https://api.github.com/users/dantraMSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/dantraMSFT/followers",
      "following_url": "https://api.github.com/users/dantraMSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/dantraMSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dantraMSFT",
      "id": 12105071,
      "login": "dantraMSFT",
      "node_id": "MDQ6VXNlcjEyMTA1MDcx",
      "organizations_url": "https://api.github.com/users/dantraMSFT/orgs",
      "received_events_url": "https://api.github.com/users/dantraMSFT/received_events",
      "repos_url": "https://api.github.com/users/dantraMSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dantraMSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dantraMSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dantraMSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "> As far as I know, the only way to launch an elevated process is through the UAC prompt.\r\n\r\nSpecific apps can be exluded from UAC which could I suppose  then handle elevation in its own way.",
    "created_at": "2017-05-23T18:48:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-303495869",
    "id": 303495869,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ5NTg2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303495869/reactions"
    },
    "updated_at": "2017-05-23T18:48:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303495869",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "Wanted to offer my solution/workaround for Sudo on Windows. Any feedback/criticism would be welcome. If it's not appropriate to post this type of thing here I apologize in advance.\r\n\r\nhttps://github.com/pldmgg/misc-powershell/tree/master/MyModules/Sudo\r\n\r\nhttps://www.powershellgallery.com/packages/Sudo\r\n\r\nThere are three functions in the Sudo Module: \r\n\r\n- New-SudoSession\r\n- Remove-SudoSession\r\n- Start-SudoSession\r\n\r\nStart-SudoSession (alias \"sudo\") is for one-off commands that you need to elevate. It will prompt for credentials and give you a UAC prompt before carrying out the command.\r\n\r\n.EXAMPLE\r\n\r\n    $ModuleToInstall = \"PackageManagement\"\r\n    $LatestVersion = $(Find-Module PackageManagement).Version\r\n    # PLEASE NOTE the use of single quotes in the below $InstallModuleExpression string\r\n    $InstallModuleExpression = 'Install-Module -Name $ModuleToInstall -RequiredVersion $LatestVersion'\r\n    Start-SudoSession -Credentials $MyCreds -Expression $InstallModuleExpression\r\n\r\nNew-SudoSession if for opening an ElevatedPSSession into which elevated commands can be injected.  The idea is that in a longer script with multiple operations that require elevation, you create an ElevatedPSSession at the beginning and receive a UAC prompt ONCE, and then inject those elevated commands using Invoke-Command into that ElevatedPSSession when needed.\r\n\r\n.EXAMPLE\r\n\r\n    PS C:\\Users\\zeroadmin> $MyElevatedSession = New-SudoSession -UserName zeroadmin -Credentials $MyCreds\r\n    PS C:\\Users\\zeroadmin> Get-PSSession\r\n     Id Name            ComputerName    ComputerType    State         ConfigurationName     Availability\r\n     -- ----            ------------    ------------    -----         -----------------     ------------\r\n      1 ElevatedSess... localhost       RemoteMachine   Opened        Microsoft.PowerShell     Available\r\n    \r\n    PS C:\\Users\\zeroadmin> Invoke-Command -Session $MyElevatedSession.ElevatedPSSession -Scriptblock {Install-Package Nuget.CommandLine -Source chocolatey}\r\n\r\n\r\nFinally, the Remove-SudoSession removes the ElevatedPSSession created by the New-SudoSession function. The idea is to place this at the end of your script, at which point you will receive a UAC prompt. So in total, to run any number of elevated operations in a particular script, you only get hit with two UAC prompts - one to open an ElevatedPSSession and one to close it. Remove-PSSession usage:\r\n\r\n.EXAMPLE\r\n\r\n    $MyElevatedSession = New-SudoSession -UserName zeroadmin -Credentials $MyCreds\r\n    PS C:\\Users\\zeroadmin> Get-PSSession\r\n     Id Name            ComputerName    ComputerType    State         ConfigurationName     Availability\r\n     -- ----            ------------    ------------    -----         -----------------     ------------\r\n      1 ElevatedSess... localhost       RemoteMachine   Opened        Microsoft.PowerShell     Available\r\n\r\n    Remove-SudoSession -Credentials $MyCreds -OriginalConfigInfo $MyElevatedSession.OriginalWSManAndRegistryStatus -SessionToRemove $MyElevatedSession.ElevatedPSSession\r\n\r\n\r\nUnder the hood, here's what it does from a Non-Elevated PowerShell session (if the session is already elevated, it doesn't do anything):\r\n\r\n* Checks to make sure WinRM/WSMan is enabled and configured to allow CredSSP Authentication (if not then\r\n    configuration changes are made)\r\n\r\n* Checks the Local Group Policy Object...\r\n\r\n  Computer Configuration -> Administrative Templates -> System -> Credentials Delegation -> Allow Delegating Fresh Credentials\r\n\r\n  ...to make sure it is enabled and configured to allow connections via WSMAN/LocalHostFQDN\r\n\r\n* Creates an Elevated PSSession using the New-PSSession cmdlet\r\n\r\n* Runs the expression passed to the -Expression parameter in the Elevated PSSession\r\n\r\n* Removes the Elevated PSSession and reverts all changes made (if any) to Local Group Policy and WSMAN/WinRM config.\r\n\r\nEDIT: Updated Remove-SudoSession example typo.",
    "created_at": "2017-06-09T10:17:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307352550",
    "id": 307352550,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzM1MjU1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307352550/reactions"
    },
    "updated_at": "2017-06-19T22:22:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307352550",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10552007?v=4",
      "events_url": "https://api.github.com/users/pldmgg/events{/privacy}",
      "followers_url": "https://api.github.com/users/pldmgg/followers",
      "following_url": "https://api.github.com/users/pldmgg/following{/other_user}",
      "gists_url": "https://api.github.com/users/pldmgg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pldmgg",
      "id": 10552007,
      "login": "pldmgg",
      "node_id": "MDQ6VXNlcjEwNTUyMDA3",
      "organizations_url": "https://api.github.com/users/pldmgg/orgs",
      "received_events_url": "https://api.github.com/users/pldmgg/received_events",
      "repos_url": "https://api.github.com/users/pldmgg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pldmgg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pldmgg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pldmgg"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@pldmgg I don't see what license your code is under so we can't even look at what you've done.  Can you add a LICENSE file?  MIT would be most friendly and allow us to use your code or derive from it.  Thanks!",
    "created_at": "2017-06-09T13:56:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307395662",
    "id": 307395662,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzM5NTY2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307395662/reactions"
    },
    "updated_at": "2017-06-09T13:56:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307395662",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@pldmgg Following up on what @SteveL-MSFT mentioned, a great guide to help you through this process is https://choosealicense.com/.\r\n\r\n**tl;dr** - It's hard to go wrong with the following licenses:\r\n\r\n- Apache 2.0\r\n- MIT\r\n\r\n#### More details\r\nApache 2.0 has some additional strengths on it over MIT, but overall, they are very permissive and easily used with other open source licensing and very business friendly. If you pick any copyleft licenses (GPL), the code is unable to be used with other tools without those other tools moving to a GPL license (also known as viral licensing - LGPL being the exception here, where LGPL-licensed modules/binaries can be placed next to other tools without requiring a license change to the other code).",
    "created_at": "2017-06-09T14:09:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307399127",
    "id": 307399127,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzM5OTEyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307399127/reactions"
    },
    "updated_at": "2017-06-09T14:09:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307399127",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/63502?v=4",
      "events_url": "https://api.github.com/users/ferventcoder/events{/privacy}",
      "followers_url": "https://api.github.com/users/ferventcoder/followers",
      "following_url": "https://api.github.com/users/ferventcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/ferventcoder/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ferventcoder",
      "id": 63502,
      "login": "ferventcoder",
      "node_id": "MDQ6VXNlcjYzNTAy",
      "organizations_url": "https://api.github.com/users/ferventcoder/orgs",
      "received_events_url": "https://api.github.com/users/ferventcoder/received_events",
      "repos_url": "https://api.github.com/users/ferventcoder/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ferventcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ferventcoder/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ferventcoder"
    }
  },
  {
    "author_association": "NONE",
    "body": "@pldmgg also, very, very cool!",
    "created_at": "2017-06-09T14:10:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307399299",
    "id": 307399299,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzM5OTI5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307399299/reactions"
    },
    "updated_at": "2017-06-09T14:10:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307399299",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/63502?v=4",
      "events_url": "https://api.github.com/users/ferventcoder/events{/privacy}",
      "followers_url": "https://api.github.com/users/ferventcoder/followers",
      "following_url": "https://api.github.com/users/ferventcoder/following{/other_user}",
      "gists_url": "https://api.github.com/users/ferventcoder/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ferventcoder",
      "id": 63502,
      "login": "ferventcoder",
      "node_id": "MDQ6VXNlcjYzNTAy",
      "organizations_url": "https://api.github.com/users/ferventcoder/orgs",
      "received_events_url": "https://api.github.com/users/ferventcoder/received_events",
      "repos_url": "https://api.github.com/users/ferventcoder/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ferventcoder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ferventcoder/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ferventcoder"
    }
  },
  {
    "author_association": "NONE",
    "body": "@ferventcoder Thanks for the reference https://choosealicense.com! As you guys (+ @SteveL-MSFT) probably suspected, I wasn't really sure what license to pick. I updated my entire misc-powershell repo to use Apache 2.0, and I updated the Sudo.psd1 to reference Apache 2.0 (in my git repo as well as PowerShell Gallery). Hope this can be of use to folks! All advice/criticism welcome!",
    "created_at": "2017-06-10T08:47:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307552082",
    "id": 307552082,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU1MjA4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307552082/reactions"
    },
    "updated_at": "2017-06-10T08:48:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307552082",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10552007?v=4",
      "events_url": "https://api.github.com/users/pldmgg/events{/privacy}",
      "followers_url": "https://api.github.com/users/pldmgg/followers",
      "following_url": "https://api.github.com/users/pldmgg/following{/other_user}",
      "gists_url": "https://api.github.com/users/pldmgg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pldmgg",
      "id": 10552007,
      "login": "pldmgg",
      "node_id": "MDQ6VXNlcjEwNTUyMDA3",
      "organizations_url": "https://api.github.com/users/pldmgg/orgs",
      "received_events_url": "https://api.github.com/users/pldmgg/received_events",
      "repos_url": "https://api.github.com/users/pldmgg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pldmgg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pldmgg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pldmgg"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT Can you use it if the license is Apache 2.0? If you need it to be MIT, let me know and I'll update.",
    "created_at": "2017-06-10T09:41:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307554431",
    "id": 307554431,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU1NDQzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307554431/reactions"
    },
    "updated_at": "2017-06-10T09:41:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307554431",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10552007?v=4",
      "events_url": "https://api.github.com/users/pldmgg/events{/privacy}",
      "followers_url": "https://api.github.com/users/pldmgg/followers",
      "following_url": "https://api.github.com/users/pldmgg/following{/other_user}",
      "gists_url": "https://api.github.com/users/pldmgg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pldmgg",
      "id": 10552007,
      "login": "pldmgg",
      "node_id": "MDQ6VXNlcjEwNTUyMDA3",
      "organizations_url": "https://api.github.com/users/pldmgg/orgs",
      "received_events_url": "https://api.github.com/users/pldmgg/received_events",
      "repos_url": "https://api.github.com/users/pldmgg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pldmgg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pldmgg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pldmgg"
    }
  },
  {
    "author_association": "NONE",
    "body": "@pldmgg my biggest problem with your solution is use of CredSSP. That is a less secure method for credential handling and I think exposes a lot of risk to the UAC boundary. \r\n\r\nTo quote from [Powershell Magaize](http://www.powershellmagazine.com/2014/03/06/accidental-sabotage-beware-of-credssp),\r\n\r\n>  \"It is a bad idea to use CredSSP to authenticate to a user’s workstation using a domain administrator account; you are essentially giving away the keys to the kingdom.\"\r\n\r\n> \"Don’t  put high trust credentials on low trust computers\"\r\n\r\nThe whole point of UAC is about not trusting the applications on the computer. Even though I may consent to a sudo command that ends up running havoc on my machine, it usually won't have my credentials. If the sudo command now has clear access to my domain credentials, it could do far more damage in compromising my network.\r\n\r\nCan your solution be made to work without CredSSP? If not, what problem were you trying to solve in using CredSSP? That information could be useful for the PowerShell team to find a more secure solution.",
    "created_at": "2017-06-11T03:44:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307604318",
    "id": 307604318,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzYwNDMxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307604318/reactions"
    },
    "updated_at": "2017-06-11T03:44:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307604318",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/20375201?v=4",
      "events_url": "https://api.github.com/users/dragonwolf83/events{/privacy}",
      "followers_url": "https://api.github.com/users/dragonwolf83/followers",
      "following_url": "https://api.github.com/users/dragonwolf83/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragonwolf83/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dragonwolf83",
      "id": 20375201,
      "login": "dragonwolf83",
      "node_id": "MDQ6VXNlcjIwMzc1MjAx",
      "organizations_url": "https://api.github.com/users/dragonwolf83/orgs",
      "received_events_url": "https://api.github.com/users/dragonwolf83/received_events",
      "repos_url": "https://api.github.com/users/dragonwolf83/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dragonwolf83/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragonwolf83/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dragonwolf83"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@pldmgg I believe Apache 2.0 is sufficient.  Thanks!",
    "created_at": "2017-06-11T04:03:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-307604936",
    "id": 307604936,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzYwNDkzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307604936/reactions"
    },
    "updated_at": "2017-06-11T04:03:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307604936",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@dragonwolf83 This is a common concern. I actually put forth my whole argument that it's okay in this specific situation in this thread:\r\n\r\nhttps://www.reddit.com/r/PowerShell/comments/6c778m/startsudosession_sudo_for_powershell_written_in/dhsretm/\r\n\r\nBut, to summarize, I think it's okay here because:\r\n\r\n- It's connecting to the localhost (not remote)\r\n\r\n- Since Windows 8.1 / Server 2012R2, CredSSP no longer sends passwords in clear text\r\n\r\n- Remote Desktop Protocol is still vulnerable to pass-the-hash attacks, just like CredSSP, so if you're worried about that for CredSSP you should also be worried about that for RDP. (Of course, there is RDP Restricted Admin mode or the new \"Credential Guard\")\r\n\r\nP.S. This article has become my goto reference for PowerShell Security (and it's where I learned about Credential Guard).. I *highly* recommend it.\r\n\r\nhttps://blogs.msdn.microsoft.com/daviddasneves/2017/05/25/powershell-security-at-enterprise-customers",
    "created_at": "2017-06-13T11:03:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-308082051",
    "id": 308082051,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODA4MjA1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/308082051/reactions"
    },
    "updated_at": "2017-06-13T11:05:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/308082051",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10552007?v=4",
      "events_url": "https://api.github.com/users/pldmgg/events{/privacy}",
      "followers_url": "https://api.github.com/users/pldmgg/followers",
      "following_url": "https://api.github.com/users/pldmgg/following{/other_user}",
      "gists_url": "https://api.github.com/users/pldmgg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pldmgg",
      "id": 10552007,
      "login": "pldmgg",
      "node_id": "MDQ6VXNlcjEwNTUyMDA3",
      "organizations_url": "https://api.github.com/users/pldmgg/orgs",
      "received_events_url": "https://api.github.com/users/pldmgg/received_events",
      "repos_url": "https://api.github.com/users/pldmgg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pldmgg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pldmgg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pldmgg"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "For 6.0.0, I think where we will end up is:\r\n\r\nA script function called sudo that only exists on Linux (we're deferring Windows elevation support).  If the argument is a cmdlet/scriptblock, then it will sudo powershell with those arguments.  This does mean that for now, pipelining objects won't work.  If the argument is a native command, we just pass that directly to sudo.\r\n\r\nPost-6.0.0, we would like to eventually get to an experience like:\r\n\r\n```powershell\r\nGet-Item foo.txt | sudo Remove-Item\r\n```\r\n\r\nand have it work on both Windows and Linux.  cc @joeyaiello ",
    "created_at": "2017-06-13T22:18:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-308265178",
    "id": 308265178,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODI2NTE3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 2,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/308265178/reactions"
    },
    "updated_at": "2017-06-13T22:18:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/308265178",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Based on @PowerShell/powershell-committee discussion, this is not required for 6.0.0 and recommendation is to invest in a `Invoke-AsUser` type cmdlet",
    "created_at": "2017-07-28T17:23:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-318713589",
    "id": 318713589,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODcxMzU4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/318713589/reactions"
    },
    "updated_at": "2017-07-28T17:23:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/318713589",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "To change elevation in general, you would need something with setuid bit under UNIX and that would be sudo itself. sudo is a special binary that cannot be easily emulated and should not be emulated for security's sake. Please let the actual sudo be used to launch a temporary instance of powershell that runs the command in question. Also, sudoing a whole shell is rather unsafe considering that one may forget the shell open on a remote server. sudo has a mechanism to forget that the user elevated after a few minutes which protects the machine in the long run. The resolution fo this issue would allow more people to use powershell in production on Linux servers. As things stand, powershell will remain a sideline novelty since security is paramount in production.",
    "created_at": "2017-12-30T14:33:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-354549227",
    "id": 354549227,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0OTIyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354549227/reactions"
    },
    "updated_at": "2017-12-30T14:33:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354549227",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7761010?v=4",
      "events_url": "https://api.github.com/users/borgdylan/events{/privacy}",
      "followers_url": "https://api.github.com/users/borgdylan/followers",
      "following_url": "https://api.github.com/users/borgdylan/following{/other_user}",
      "gists_url": "https://api.github.com/users/borgdylan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/borgdylan",
      "id": 7761010,
      "login": "borgdylan",
      "node_id": "MDQ6VXNlcjc3NjEwMTA=",
      "organizations_url": "https://api.github.com/users/borgdylan/orgs",
      "received_events_url": "https://api.github.com/users/borgdylan/received_events",
      "repos_url": "https://api.github.com/users/borgdylan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/borgdylan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/borgdylan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/borgdylan"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@borgdylan today, you can do `sudo pwsh -c foo` within PowerShell Core (or just `sudo nativecmd`).  I think the desire is to be able to sudo a cmdlet within an existing PowerShell Core session.  We're not trying to recreate `sudo` here, but rather have some syntactical sugar to make it easier to use.",
    "created_at": "2018-01-02T19:23:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-354853084",
    "id": 354853084,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDg1MzA4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354853084/reactions"
    },
    "updated_at": "2018-01-02T19:23:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354853084",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "With #1527 and this issue getting pushed further and further back the milestones, I'm starting to wonder: Is everyone really that comfortable logging in to root sessions to do admin stuff? There is practically no convenient way to invoke PowerShell commands when PS is involved in any way.",
    "created_at": "2018-02-04T18:59:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-362930456",
    "id": 362930456,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkzMDQ1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362930456/reactions"
    },
    "updated_at": "2018-02-04T18:59:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362930456",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9763499?v=4",
      "events_url": "https://api.github.com/users/MathiasMagnus/events{/privacy}",
      "followers_url": "https://api.github.com/users/MathiasMagnus/followers",
      "following_url": "https://api.github.com/users/MathiasMagnus/following{/other_user}",
      "gists_url": "https://api.github.com/users/MathiasMagnus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MathiasMagnus",
      "id": 9763499,
      "login": "MathiasMagnus",
      "node_id": "MDQ6VXNlcjk3NjM0OTk=",
      "organizations_url": "https://api.github.com/users/MathiasMagnus/orgs",
      "received_events_url": "https://api.github.com/users/MathiasMagnus/received_events",
      "repos_url": "https://api.github.com/users/MathiasMagnus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MathiasMagnus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MathiasMagnus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MathiasMagnus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@MathiasMagnus  I haven't tested this thoroughly, but you can configure common or repeatedly used commands to not require a password on sudo. To test I added this with visudo:\r\n\r\n```sudoers\r\nmark ALL=(ALL:ALL) NOPASSWD: /usr/bin/pwsh\r\n```\r\n\r\nI was then able to call `sudo pwsh -c 'cat /etc/sudoers'` over a PowerShell SSH remoting session. Depending on how you are doing your security and what exactly you configure in sudoers (for example, `All=(ALL:ALL)` is a bit open...) this could be safe or dangerous. \r\n\r\nIf you ssh to Linux (i.e to bash shell instead of PowerShell SSH remoting) you can run sudo with normal password prompting within pwsh so far as I can tell. \r\n\r\nIts not so much that it's impossible, just that the current workarounds comes with some baggage. ",
    "created_at": "2018-02-04T20:13:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-362935734",
    "id": 362935734,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjkzNTczNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362935734/reactions"
    },
    "updated_at": "2018-02-04T20:13:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362935734",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@MathiasMagnus #1527 is still targeted for 6.1.0 as there is no good workaround for that.  For cmdlets, the main issue is the complication of pipelining to/from a sudo'd cmdlet.  For single operations `sudo pwsh -c` is viable.  Of course if someone from the community submits a PR, we'd be more than happy to take it.",
    "created_at": "2018-02-05T01:34:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-362959199",
    "id": 362959199,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mjk1OTE5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362959199/reactions"
    },
    "updated_at": "2018-02-05T01:34:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362959199",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "On Windows, [this is now an issue](https://github.com/PowerShell/Win32-OpenSSH/issues/680) that I don't think can be solved without not elevating ssh connections, which then requires a way to elevate from the command line.",
    "created_at": "2018-02-11T18:44:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-364776271",
    "id": 364776271,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDc3NjI3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/364776271/reactions"
    },
    "updated_at": "2018-02-11T18:44:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/364776271",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "I know it is easy to b*tch about things not working and not taking action, but my expertise lay elsewhere. I mostly contribute to C++ and GPGPU libraries and Vcpkg doing lots of CMake porting. I've never written C# and I don't think I'll have the capacity to. However I do administer a small cluster of ~12 machines. It's on the border of being manageable by hand, but sudo capability is missing direly, that is if I don't intend on creating login for the root user on Ubuntu, something that is frowned upon. DSC Core would be a solution, but even though it's been announced a year ago, it's recently been delayed indefinitely.\r\n\r\nPowerShell Core on Linux as it currently stands is kinda stuck between the automated way of doing stuff and the ad-hoc style that is familiar to Linux sysadmins. I hope someone will find the time to attend this issue.",
    "created_at": "2018-10-02T16:50:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-426347900",
    "id": 426347900,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjM0NzkwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426347900/reactions"
    },
    "updated_at": "2018-10-02T16:50:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426347900",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9763499?v=4",
      "events_url": "https://api.github.com/users/MathiasMagnus/events{/privacy}",
      "followers_url": "https://api.github.com/users/MathiasMagnus/followers",
      "following_url": "https://api.github.com/users/MathiasMagnus/following{/other_user}",
      "gists_url": "https://api.github.com/users/MathiasMagnus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MathiasMagnus",
      "id": 9763499,
      "login": "MathiasMagnus",
      "node_id": "MDQ6VXNlcjk3NjM0OTk=",
      "organizations_url": "https://api.github.com/users/MathiasMagnus/orgs",
      "received_events_url": "https://api.github.com/users/MathiasMagnus/received_events",
      "repos_url": "https://api.github.com/users/MathiasMagnus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MathiasMagnus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MathiasMagnus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MathiasMagnus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@MathiasMagnus this is something everyone wants, but is not a simple problem to solve.  Note that using `sudo` against native commands work fine, it's really just not available to run `sudo` against cmdlets.  Workaround is to invoke pwsh within pwsh:\r\n\r\n> sudo pwsh -c remove-item something\r\n\r\nThe main complication is when it's something within a pipeline:\r\n\r\n> get-item foo* | sudo remove-item\r\n\r\n",
    "created_at": "2018-10-02T19:54:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-426408019",
    "id": 426408019,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQwODAxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426408019/reactions"
    },
    "updated_at": "2018-10-02T19:54:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426408019",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT At least the concept is not that complex. Please tell me what you think.\r\n\r\nWe simply need a combination of the sudo, su and login binaries, to handle all cases.\r\n\r\nIt needs to do:\r\n* Create a unix socket for callbacks and only allow the destination user access to it.\r\n* Validate that the caller is allowed sudo access (I think one can simply copy the source code of [su](https://github.com/shadow-maint/shadow/blob/master/src/su.c), [sudo](https://www.sudo.ws/repos/sudo) and [login](https://github.com/shadow-maint/shadow/blob/master/src/login.c))\r\n   * If /etc/sudoers exists, it needs to be parsed\r\n      * Only specific commands\r\n      * By using the destination users password\r\n      * Without validating credentials (passwordless)\r\n   * If it does not, one needs to invoke pem to check if the user \"knows\" the credentials for the user root directly.\r\n   * If he also does not know the destination users credentials, deny access and throw an exception in powershell.\r\n* If the validation passed, we need to switch the user context into either root, or the destination user.\r\n* Once we switched the user context the new process needs to establish communication back to the original powershell running by connecting it to the unix socket.\r\n* If the user enters \"exit\", we signal over the unix socket, that we're finished and as we exit, the user will automatically return to the callers privileges, so we only need the hosting powershell to display a prompt or execute the next instruction.\r\n* If instead the host powershell terminates, the unix socket gets closed and the elevated powershell should halt execution and terminate, just like if one closes the terminal.\r\n\r\nExecution flow would look like this:\r\nPWSH (creates socket /proc/self/change-user.socket) => PWSH-SU (invoked with the socket and destination user as parameter; PWSH-SU is set suid to run as root itself) => PWSH as destination user connects to the unix socket.\r\n\r\nThe most time consuming part is to allow the powershell to connect internally over a unix socket. Just redirecting input and output linke other unix applications do is not enough, as we deal with objects and not just with strings when invoking pipes.\r\n\r\nWhy use all three binaries?\r\n**sudo** is required to allow multiple users to switch into root context without losing [auditability](http://man7.org/linux/man-pages/man2/setreuid.2.html).\r\n**su** is used to switch into any other user by using the destination users credentials.\r\n**login** is used to create a whole new login session.\r\nHaving all of these functionality also in powershell can be useful in many cases, compared to only have one.",
    "created_at": "2018-12-06T12:03:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-444849067",
    "id": 444849067,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDg0OTA2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444849067/reactions"
    },
    "updated_at": "2018-12-06T12:54:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444849067",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "NONE",
    "body": "Using pipes could make this work on Windows too in a manner that is less surprising and more convenient - I hate that I get another shell with all \"sudo\" scripts + UAC clicking but with pipes like this it could be done within the same shell just like on linux by communicating over pipe with another interpreter already running as admin and maybe implementing some real sudo stuff (prompt timeout for example or sudoers file with commands as alternative to custom powershell endpoints)",
    "created_at": "2018-12-06T16:37:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-444938187",
    "id": 444938187,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDkzODE4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444938187/reactions"
    },
    "updated_at": "2018-12-06T16:37:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444938187",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm really happy to see the thoughts on this, but as far as the actual implementation, it seems to me we're getting a little ahead of ourselves. The first thing is the system needs a way to create an elevated process, thread, whatever from an unelevated one. None of the cmdlet concerns can truly be solved if we can't create an elevated instance of PowerShell to start with, without going through UAC. IMO, the first scenario to be addressed here should be - you have a limited SSH session - how do you execute a regular exe with admin permissions?\r\n\r\nI started experimenting with this [here](https://github.com/parkovski/wsudo) (currently broken as I've been refactoring it, but the concept works), but I don't think a 3rd-party app is the real solution. I'd like to see Windows ship a 'sudo' exe first. This could be as simple as enabling `runas` to create elevated process with a credential prompt, but without the first step this is all theoretical.",
    "created_at": "2018-12-11T20:46:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-446355630",
    "id": 446355630,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjM1NTYzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446355630/reactions"
    },
    "updated_at": "2018-12-11T20:48:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446355630",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "> None of the cmdlet concerns can truly be solved if we can't create an elevated instance of PowerShell to start with, without going through UAC\r\n\r\nOne possibility to do this involves using scheduled task with option 'run with highest privelege'.",
    "created_at": "2018-12-11T21:05:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-446361565",
    "id": 446361565,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjM2MTU2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446361565/reactions"
    },
    "updated_at": "2018-12-11T21:05:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446361565",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yeah but to create that, you have to already have admin permissions right? That's what psexec does. As far as I know, right now, you have to at some point go through UAC. I'd like to see that change, and with all SSH sessions being elevated, it's sort of a security concern. If some sketchy software tries to SSH into my Windows machine, say from another computer where I have a private key set up (or the loopback scenario), it can do anything it wants.",
    "created_at": "2018-12-11T21:14:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-446364222",
    "id": 446364222,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjM2NDIyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446364222/reactions"
    },
    "updated_at": "2018-12-11T21:14:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446364222",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "@parkovski My solution was Linux/MacOS and all other *NIX OSes only. Windows does not support SUID and GUID.\r\nAs sudo does currently also not exist on Windows, it is out of scope of this issue for me.\r\n\r\nAnd to solve the UAC problem, windows should implement SUID and GUID in the future. Everything else is just a dirty workaround for a longstanding issue...",
    "created_at": "2018-12-12T16:25:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-446649911",
    "id": 446649911,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjY0OTkxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446649911/reactions"
    },
    "updated_at": "2018-12-12T16:32:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446649911",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Yeah but to create that, you have to already have admin permissions right?\r\n\r\nRight, but it doesn't trigger UAC popup.\r\n\r\nUAC can also be skipped the official way with Microsoft's Application Compatibility Toolkit.\r\n\r\n> Windows does not support SUID and GUID.\r\n\r\nWindows doesn't have to support it and concept is not valid on that OS.\r\nIts permission model is based on ACL's and there is no single group ownership. \r\n\r\nIt also doesn't have to be full sudo replica on windows, just a more friendly way to invoke admin commands.",
    "created_at": "2018-12-13T12:34:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-446952800",
    "id": 446952800,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njk1MjgwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446952800/reactions"
    },
    "updated_at": "2018-12-13T12:34:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446952800",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I think it's fine to defer Windows support as Windows users are probably accustomed to opening an elevated PowerShell session today while Linux users expect to run as non-root and sudo as needed.  We just want to make sure any design doesn't preclude future Windows support.  I would also probably focus on simply enabling sudo for root rather than any arbitrary user to simplify it and I believe this is 90+% of the usage.\r\n",
    "created_at": "2018-12-20T01:00:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-448815018",
    "id": 448815018,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODgxNTAxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/448815018/reactions"
    },
    "updated_at": "2018-12-20T01:00:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/448815018",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT \r\n> would also probably focus on simply enabling sudo for root rather than any arbitrary user\r\n\r\nI think this will not make a big difference, but provide the full su/sudo experience for the abstract I've outlined [above](https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-444849067), as switching user context to root is nearly the same as switching to any other user.",
    "created_at": "2018-12-20T16:17:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-449052148",
    "id": 449052148,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTA1MjE0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449052148/reactions"
    },
    "updated_at": "2018-12-20T16:19:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449052148",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I think it's fine to defer Windows support as Windows users are probably accustomed to opening an elevated PowerShell session today \r\n\r\nMajority of the people I worked with just disable UAC if they can.",
    "created_at": "2018-12-20T18:36:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-449094763",
    "id": 449094763,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTA5NDc2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449094763/reactions"
    },
    "updated_at": "2018-12-20T18:36:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449094763",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Unfortunately, that isn't really an option in many environments, and I very much doubt MS is going to up and ditch UAC completely. 😕 ",
    "created_at": "2018-12-20T18:38:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-449095263",
    "id": 449095263,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTA5NTI2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449095263/reactions"
    },
    "updated_at": "2018-12-20T18:38:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449095263",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue is not about UAC. But from my point of view, it should be ditched entirely and either be replaced with a strict two accounts one admin one user (and the admin one cannot be used for logon) philosophy (the default installation forces you to create them) or for the same concept *NIX has, you start as user and elevate as needed by using sudo and SUID/SGID-Flags.",
    "created_at": "2018-12-21T16:29:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-449434124",
    "id": 449434124,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTQzNDEyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449434124/reactions"
    },
    "updated_at": "2018-12-21T17:53:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/449434124",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "NONE",
    "body": "I recently added the following to my `$profile`. I covered it in more detail over at https://stackoverflow.com/a/56265080/118098\r\n\r\n```powershell\r\nfunction Invoke-MySudo { & /usr/bin/env sudo pwsh -command \"& $args\" }\r\nset-alias sudo invoke-mysudo\r\n```\r\n\r\nAt least on the face of it, this works for me, and allows \"sudo <PowerShell cmdlet>\". This doesn't cover the case of \"*able to sudo a cmdlet within an existing PowerShell Core session*\" per https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-354853084\r\n\r\nHowever, I wonder how important it is to give the elevated context the entire session of the calling command. In other shells, `sudo` still runs the provided command in a new context.\r\n",
    "created_at": "2019-05-22T21:28:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-494980472",
    "id": 494980472,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDk4MDQ3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494980472/reactions"
    },
    "updated_at": "2019-05-22T21:28:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494980472",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3590441?v=4",
      "events_url": "https://api.github.com/users/maxwellb/events{/privacy}",
      "followers_url": "https://api.github.com/users/maxwellb/followers",
      "following_url": "https://api.github.com/users/maxwellb/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxwellb/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/maxwellb",
      "id": 3590441,
      "login": "maxwellb",
      "node_id": "MDQ6VXNlcjM1OTA0NDE=",
      "organizations_url": "https://api.github.com/users/maxwellb/orgs",
      "received_events_url": "https://api.github.com/users/maxwellb/received_events",
      "repos_url": "https://api.github.com/users/maxwellb/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/maxwellb/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxwellb/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/maxwellb"
    }
  },
  {
    "author_association": "NONE",
    "body": "I have implemented a basic sudo that works well for running commands as administrator on Windows. I'm not sure if this would also work on linux/mac, as I don't know if \"RunAs\" elevates correctly or not on those platforms.\r\n\r\nEdit your profile:\r\n```\r\nPS > notepad $PROFILE\r\n```\r\nAdd the following `sudo` function:\r\n\r\n```powershell\r\nfunction sudo {\r\n    Start-Process -Verb RunAs -FilePath \"pwsh\" -ArgumentList (@(\"-NoExit\", \"-Command\") + $args)\r\n}\r\n```\r\nThen invoke in your shell. Supports cmdlets, executables, anything that could normally be typed into a PS prompt:\r\n```powershell\r\nPS > sudo Remove-Item .\\test.txt  # Remove a file\r\nPS > sudo Copy-Item .\\test.txt C:\\  # Copy a file\r\nPS > sudo net start w3svc  # Start IIS\r\n```\r\nIf you want to pass in a variable or expression that will be evaluated at run time, rather than pre-evaluated, wrap it in braces. For example:\r\n```powershell\r\nPS > $myvar = \"a\"\r\nPS > sudo echo $myvar  # $myvar is pre-evaluated, so the command reads: sudo echo \"a\"\r\nPS > sudo { $PSVersionTable }  # with braces, $PSVersionTable is not evaluated until it is run as administrator\r\n```\r\n\r\nRemove `\"-NoExit\"` from the sudo function if you'd prefer to have the administrator window close when complete.",
    "created_at": "2019-06-10T17:32:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500506716",
    "id": 500506716,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDUwNjcxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500506716/reactions"
    },
    "updated_at": "2019-06-10T19:54:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500506716",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13453401?v=4",
      "events_url": "https://api.github.com/users/vsalvino/events{/privacy}",
      "followers_url": "https://api.github.com/users/vsalvino/followers",
      "following_url": "https://api.github.com/users/vsalvino/following{/other_user}",
      "gists_url": "https://api.github.com/users/vsalvino/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vsalvino",
      "id": 13453401,
      "login": "vsalvino",
      "node_id": "MDQ6VXNlcjEzNDUzNDAx",
      "organizations_url": "https://api.github.com/users/vsalvino/orgs",
      "received_events_url": "https://api.github.com/users/vsalvino/received_events",
      "repos_url": "https://api.github.com/users/vsalvino/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vsalvino/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vsalvino/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vsalvino"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vsalvino This is a useful workaround when GUI is available and is helpful in the meantime, but this is still not a real sudo because it doesn't work without GUI access. In a remote shell (ssh), literally the only way to make this work is a service and client [as I tried to demonstrate here](https://github.com/parkovski/wsudo).\r\n\r\nTo address some common suggestions, because believe me I've looked at every possibility:\r\n- Disabling UAC is not a solution. It's a workaround that can be made as a personal choice but it's not a general solution to this problem.\r\n- Anything that pops up UAC (every \"sudo\" script I've seen) is not a solution, including doing it once to start an elevated remote session.\r\n- Anything that requires GUI _at all_ is not a solution. Let's assume we're using ssh here and GUI is not available.\r\n- Anything that requires major changes to Windows is not a solution. We can't count on UAC turning into something better.\r\n- Even a signed binary from Microsoft is not a solution, because it won't work when UAC is set to high (I got this wrong on the wsudo readme; I'll correct it later).\r\n- **The only real solution to sudo on Windows is a service that elevates user processes on successful authentication.** I'd love to hear other ideas but please do your research first.\r\n\r\nBasically, somebody is going to have to do a lot of work, no way around it. What we want is something that, once PowerShell supports this on Unix, is a drop in replacement on Windows, and works as you'd expect sudo to work (no GUI, no UAC).",
    "created_at": "2019-06-10T22:23:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500616792",
    "id": 500616792,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDYxNjc5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500616792/reactions"
    },
    "updated_at": "2019-06-10T22:23:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500616792",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "Can we please clarify the scope of this issue first? I think multiple people are talking about different topics right now.\r\nIs this issue:\r\na) About implementing sudo within powershell for linux/mac systems?\r\nb) Implement a sudo replica into windows?\r\nc) Allow to elevate privileges when psremoting?\r\nd) Allow to impersonate other users on windows?\r\ne) Allow to switch from a non privileged user account to a privileged user account?\r\nf) something completely different?\r\n\r\nFor a) https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-444849067\r\nFor b) Same as a (windows also has unix sockets), but instead of a suid binary it needs to be spawned by a service (running within a user that has \"act as part of the operating system\" privilege e.g. user system) and that service also needs to check privileges. Or implement SUID/GUID concept on windows.\r\nFor c) not required you already have highest privileges when remoting. There is no privilege separation when accessing remote hosts (There have also already been some localhost loopback UAC bypasses that worked this way).\r\nFor d) Also the approach from a/b can be taken, but I don't know how that should work when trying to access network resources, without knowing the users credentials or crafting a new windows/activedirectory authentication backend.\r\nFor e) Same as b, but credential checking is also required, alternatively the runas api could be loosened to allow one knowing username and password to get a new user token and keep control over that process. (Unlikely considering the UAC security concepts and considerations, so we're back at b).",
    "created_at": "2019-06-11T10:54:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500790823",
    "id": 500790823,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDc5MDgyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500790823/reactions"
    },
    "updated_at": "2019-06-11T11:06:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500790823",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "NONE",
    "body": "IMO this issue should be about implementing sudo in PowerShell where the underlying functionality already exists. Discussion about a sudo equivalent for Windows is probably more appropriate [in this terminal issue](https://github.com/microsoft/terminal/issues/146).",
    "created_at": "2019-06-11T18:19:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500963556",
    "id": 500963556,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk2MzU1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500963556/reactions"
    },
    "updated_at": "2019-06-11T18:19:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500963556",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Discussion about a sudo equivalent for Windows is probably more appropriate in this terminal issue.\r\n\r\nWhy would terminal app be a better place to discuss sudo, given that its only yet another frontend to the CLI world ? By the same logic you could file a ticket at ConEmu repository. \r\n\r\n> IMO this issue should be about implementing sudo in PowerShell where the underlying functionality already exists.\r\n\r\nOne of the points of the next Powershell is less compatibility issues between systems using it. Regarding that, doing something only on system X is IMO not acceptable. \r\n\r\nI as a CLI user couldn't care less if `sudo` is full blown linux sudo using suders file or some windows alike. Sudo is just an interface to elevation features of the OS. Such an interface could be made to work near identically regardless the 'backend'.\r\n\r\nOtherwise, @parkovski  point about GUI stands - I would just add Windows Core among the reasons why.",
    "created_at": "2019-06-11T18:35:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500969227",
    "id": 500969227,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk2OTIyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500969227/reactions"
    },
    "updated_at": "2019-06-11T18:35:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500969227",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Why would terminal app be a better place to discuss sudo, given that its only yet another frontend to the CLI world ? By the same logic you could file a ticket at ConEmu repository.\r\n\r\nBecause that repo is not just \"a terminal app\"; the team that runs it basically owns the text-mode parts of Windows and has already said they're interested in implementing sudo when they can find the time. On the other hand, nobody from the PowerShell team nor ConEmu has offered.\r\n\r\nThe reason why I think Windows sudo is out of scope here is that we've already determined that doing it right is a pretty big amount of work and is orthogonal to PowerShell itself. PowerShell can use it when it exists, but it's really an independent component from any particular shell.\r\n\r\nOn the other hand, PowerShell being able to run cmdlets through a sudo binary, regardless of platform or how that binary actually works, is totally a thing that has to be a part of PowerShell, which belongs right here.\r\n\r\n> I as a CLI user couldn't care less if sudo is full blown linux sudo using suders file or some windows alike. Sudo is just an interface to elevation features of the OS. Such an interface could be made to work near identically regardless the 'backend'.\r\n\r\nYep, it absolutely should. It's just that sudo doesn't exist yet on Windows, is gonna take a lot of work, and is probably not gonna be written by the PowerShell team. When such a thing exists, let's hope PowerShell implements this in a way where it'll just work on Windows too.\r\n\r\nAnyways, I'm gonna defer further comments until we get an official response here because this issue is going in all sorts of different directions.",
    "created_at": "2019-06-11T18:59:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500978138",
    "id": 500978138,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDk3ODEzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500978138/reactions"
    },
    "updated_at": "2019-06-11T18:59:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500978138",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "Any opinion on this ?\r\nhttp://blog.lukesampson.com/sudo-for-windows\r\nInstalled with `scoop install sudo`, its the closest I can think of. It works like unix sudo - run commands with elevation. I use it with pip or Install-Module for all users.\n\n<blockquote><img src=\"https://silvrback.s3.amazonaws.com/uploads/7501777c-5737-4674-9981-b3ef66f90c28/Windows_7_-_Parallels_Desktop_large.png\" width=\"48\" align=\"right\"><div><strong><a href=\"http://blog.lukesampson.com/sudo-for-windows\">Luke Sampson - Sudo for Windows</a></strong></div><div>Sudo for Windows</div></blockquote>",
    "created_at": "2019-12-07T20:23:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-562883221",
    "id": 562883221,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjg4MzIyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/562883221/reactions"
    },
    "updated_at": "2019-12-07T20:23:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/562883221",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/56309157?v=4",
      "events_url": "https://api.github.com/users/Witchilich/events{/privacy}",
      "followers_url": "https://api.github.com/users/Witchilich/followers",
      "following_url": "https://api.github.com/users/Witchilich/following{/other_user}",
      "gists_url": "https://api.github.com/users/Witchilich/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Witchilich",
      "id": 56309157,
      "login": "Witchilich",
      "node_id": "MDQ6VXNlcjU2MzA5MTU3",
      "organizations_url": "https://api.github.com/users/Witchilich/orgs",
      "received_events_url": "https://api.github.com/users/Witchilich/received_events",
      "repos_url": "https://api.github.com/users/Witchilich/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Witchilich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Witchilich/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Witchilich"
    }
  },
  {
    "author_association": "NONE",
    "body": "@Restia666Ashdoll If it is renamed to `Invoke-ElevatedCommand` I'm fine with that.\r\nThat's because sudo is not only responsible for elevating commands, but also for impersonating users and \"dropping\" (`sudo -u nobody command`) privileges. Also reusing already existing names already has proven to be a bad idea, especially if the functionality and parameters differ.\r\nI already outlined above what a true sudo with impersonation would look like and how it could work.",
    "created_at": "2019-12-08T16:43:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-562967871",
    "id": 562967871,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Mjk2Nzg3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/562967871/reactions"
    },
    "updated_at": "2019-12-08T16:47:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/562967871",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "NONE",
    "body": "@Restia666Ashdoll Please read [this comment](https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-500616792) in this thread.",
    "created_at": "2019-12-09T06:25:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-563083605",
    "id": 563083605,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzA4MzYwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563083605/reactions"
    },
    "updated_at": "2019-12-09T06:25:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563083605",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "@parkovski Thats just a wrapper for for -Verb RunAs, which only works with a few commands. The one I linked to can be used almost with everything. For example I use it like this - `sudo pip install httpie`.",
    "created_at": "2019-12-09T18:31:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-563370097",
    "id": 563370097,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzM3MDA5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563370097/reactions"
    },
    "updated_at": "2019-12-09T18:31:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563370097",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/56309157?v=4",
      "events_url": "https://api.github.com/users/Witchilich/events{/privacy}",
      "followers_url": "https://api.github.com/users/Witchilich/followers",
      "following_url": "https://api.github.com/users/Witchilich/following{/other_user}",
      "gists_url": "https://api.github.com/users/Witchilich/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Witchilich",
      "id": 56309157,
      "login": "Witchilich",
      "node_id": "MDQ6VXNlcjU2MzA5MTU3",
      "organizations_url": "https://api.github.com/users/Witchilich/orgs",
      "received_events_url": "https://api.github.com/users/Witchilich/received_events",
      "repos_url": "https://api.github.com/users/Witchilich/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Witchilich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Witchilich/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Witchilich"
    }
  },
  {
    "author_association": "NONE",
    "body": "You didn't read my post did you?",
    "created_at": "2019-12-09T23:41:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-563491324",
    "id": 563491324,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzQ5MTMyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563491324/reactions"
    },
    "updated_at": "2019-12-09T23:41:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563491324",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "I don't suppose there's any way to get the title edited to include something like \"NOT A SUDO ON WINDOWS DISCUSSION\"? I know I'm not personally under any obligation to keep answering this, but people keep showing up saying the same thing without doing their research.",
    "created_at": "2019-12-09T23:46:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-563492602",
    "id": 563492602,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzQ5MjYwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563492602/reactions"
    },
    "updated_at": "2019-12-09T23:46:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563492602",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "NONE",
    "body": "I tried to click this guy's unsubscribe link and it unfortunately won't let me do that without being logged in as him.",
    "created_at": "2019-12-10T00:06:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-563497635",
    "id": 563497635,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzQ5NzYzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563497635/reactions"
    },
    "updated_at": "2019-12-10T00:06:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563497635",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I've reported @troymoore to GitHub already",
    "created_at": "2019-12-10T00:40:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-563506254",
    "id": 563506254,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzUwNjI1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563506254/reactions"
    },
    "updated_at": "2019-12-10T00:40:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563506254",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "I would like to propose a unique and different solution that I have not seen talked about here. What about using something like named pipes to serialize commands to an elevated process which then returns it's serialized output to the calling process?\r\n\r\nHere is a functioning module that demonstrates how this would work on NT: https://github.com/mmillar-bolis/Invoke-AsAdmin\r\n\r\nIt's not perfect, of course, but it accomplishes elevating simple tasks and piplines without opening another console. I do not intend to pitch this as a sudo-alike per se as I don't believe cloning sudo's design will be the best long-term solution, but I thought that a different approach to this nebulous elevation problem might further constructive discussion.\r\n\r\nEDIT: I should also mention, this will not accomplish the request of @parkovski for UACless elevation.",
    "created_at": "2019-12-11T07:48:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-564420663",
    "id": 564420663,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDQyMDY2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564420663/reactions"
    },
    "updated_at": "2019-12-11T07:54:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564420663",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ghost",
      "id": 10137,
      "login": "ghost",
      "node_id": "MDQ6VXNlcjEwMTM3",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ghost"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It looks like JEA.\r\nAs for serialization, not all modules support this.",
    "created_at": "2019-12-11T08:03:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-564425224",
    "id": 564425224,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDQyNTIyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564425224/reactions"
    },
    "updated_at": "2019-12-11T08:03:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564425224",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> It looks like JEA.\r\n\r\nYes, that is the idea.\r\n\r\n> As for serialization, not all modules support this.\r\n\r\nAs you probably saw in the code, this is mitigated with text streams that reconstruct the code on the other end of the pipe. I admit that this is slow, but nonetheless a novel workaround. Your mention of JEA was again an influential factor here; if some part of one's code does not need to be elevated, it should not be. \r\n\r\nThe module is meant to solve a very specific problem of elevating interactive commands within GUI sessions on NT and nothing more. The thing was started like five years ago before anyone imagined native ssh might be a thing for NT. I agree with @parkovski that this an issue related to how NT handles elevation, so without a service listening for and providing a contoured form of command elevation, it is rather difficult to achieve an ease of use case similar to sudo, pkexec or doas.\r\n\r\nYet, instead of being halted by a nirvana fallacy that a sudo-like implementation must exist on NT before PowerShell can support any form of command elevation, why don't we first push for any form of JEA interactive elevation within the shell session?\r\n\r\nThis would at least promote improved security practice in the NT world. Why not implement both a cmdlet to run interactively, and one to start a separate console session? Or even better, just promote the current ways to start an elevated session alongside a more spartan set of cmdlets with different use cases? It's at least a step forward.\r\n\r\nI might also add that even the Python elevate library cannot do what this module does. Have you found another module to not work with it already? Because my main point is that maybe smarter minds than mine can take this module and it's ideas and run with it in a direction that will fit for NT. After that, we may have the beginnings of a platform for NT and *nix to meet in the middle, allowing us to revise a more common implementation for PowerShell to elevate commands.\r\n\r\nThat's my two cents, at least. But having seen the code, if one feels that the ideas within are no good, I will understand. I just had not seen anyone even try something like this yet.",
    "created_at": "2019-12-11T09:26:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-564454226",
    "id": 564454226,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDQ1NDIyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564454226/reactions"
    },
    "updated_at": "2019-12-11T09:28:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564454226",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ghost",
      "id": 10137,
      "login": "ghost",
      "node_id": "MDQ6VXNlcjEwMTM3",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ghost"
    }
  },
  {
    "author_association": "NONE",
    "body": "Gonna step back from my frustrated grievings of explaining the point of sudo for a minute because (a) yes this is a very difficult problem, (b) can really only be solved properly by MS (thanks for not being open source, Windows), (c) it really is cool to see that others are passionate about this too.\r\n\r\nI know how hard it is to do this properly because I started down that road. So if the only thing keeping us from that for now is a UAC dialog, so be it. At least this way we can test a cross platform solution with a minor effort.\r\n\r\nWhat I'd personally like to see from PowerShell is comprehensive support for the Unix sudo, but designed to support some form of \"pseudo-sudo\" script as it is now as well as a future potential real Windows sudo. My thought is that if someone prototypes out how a Windows sudo will eventually work but leaves the UAC restriction, it should be fairly straightforward, give us something that's basically as good as it gets for now, and when we get the real thing it should pretty much just be a drop-in replacement.\r\n\r\nObviously this means someone's going to have to come up with a model that understands or at least translates to both the Unix uid/gid model and the Windows sid/acl model. Hopefully this person likes a challenge. Guessing this will also require some talks with the terminal and windows security teams within MS.\r\n\r\nI guess that with as many people having created their own best-effort workarounds, and that supporting something like this could well help design a robust way of doing this, why not?\r\n\r\nSidenote - anyone writing these workaround scripts might consider the timeout feature that sudo has, as annoying as that popup is.",
    "created_at": "2019-12-11T12:38:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-564521616",
    "id": 564521616,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDUyMTYxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564521616/reactions"
    },
    "updated_at": "2019-12-11T12:41:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564521616",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1094150?v=4",
      "events_url": "https://api.github.com/users/parkovski/events{/privacy}",
      "followers_url": "https://api.github.com/users/parkovski/followers",
      "following_url": "https://api.github.com/users/parkovski/following{/other_user}",
      "gists_url": "https://api.github.com/users/parkovski/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/parkovski",
      "id": 1094150,
      "login": "parkovski",
      "node_id": "MDQ6VXNlcjEwOTQxNTA=",
      "organizations_url": "https://api.github.com/users/parkovski/orgs",
      "received_events_url": "https://api.github.com/users/parkovski/received_events",
      "repos_url": "https://api.github.com/users/parkovski/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/parkovski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parkovski/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/parkovski"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We could think about `Start-Process pwsh -NoNewWindow -Credential $cred`. It does not work but could.",
    "created_at": "2019-12-11T18:48:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-564680612",
    "id": 564680612,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDY4MDYxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564680612/reactions"
    },
    "updated_at": "2019-12-11T18:48:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564680612",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Obviously this means someone's going to have to come up with a model that understands or at least translates to both the Unix uid/gid model and the Windows sid/acl model. Hopefully this person likes a challenge. Guessing this will also require some talks with the terminal and windows security teams within MS.\r\n\r\nUnix also has acls and windows has posix compatibility and at least if it is domain joint there is also a primary group attribute that we could use (as well as posix attributes). It just would need to be implemented for *non* domain joined windows clients (or for now assumed to be `User`).\r\n\r\nThe generic model for unix and windows permissions is therefore basically:\r\nACLs with an Owning User and an Owning Group with some expected ACEs (user, group and other).\r\n\r\nThan we could map the unix permissions as:\r\nuid => Owner SID\r\ngid => The primary-group SID of the user who created the object.\r\nuser => Creator Owner ID S-1-3-0\r\ngroup => Creator Group ID S-1-3-1\r\nother => World/Everyone S-1-1-0\r\nMapping the uids from the acl list on unix is a bit more complicated as we need to consider that the system may be part of an ldap, active directory, or any other directory. The only two cases I would consider in scope for powershell are no directory and ldap/active directory.\r\nIn the first case I'd suggest using S-1-6-1-uid and S-1-6-2-gid (assuming S-1-6 is still available and the responsible team is willing to allocate it for this purpose).\r\nAnd for the 2nd case we just need to have some sort of resolving the uid though the authentication backend. The ldap/active directory server is than responsible for providing an sid.\r\nAnd finally there are some special cases to map:\r\nuid 0 => S-1-5-32-544\r\ngid 0 => S-1-6-500 (and S-1-5-21-*-500)\r\nmost other well-known sids can be managed through a config file or through an api of some sort (or just drop them as they are most likely not used anyway)\r\n\r\nIf we do this in the shell build in commands like Get-Acl/Set-Acl would than start to work on unix systems without knowing about how the permissions are stored on disk.\r\n \r\n \r\n@mmillar-bolis I already suggested an approach using sockets here: https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-444849067",
    "created_at": "2019-12-12T01:46:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-564812502",
    "id": 564812502,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDgxMjUwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564812502/reactions"
    },
    "updated_at": "2019-12-12T01:48:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/564812502",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> We could think about Start-Process pwsh -NoNewWindow -Credential $cred. It does not work but could.\r\n\r\nUpdate: [.Net Core](https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processstartinfo.createnowindow?view=netframework-4.8#remarks) (and I guess Windows API too) doesn't allow to run new process attached to the same console.\r\n\r\nSo single way we can use is a elevated Windows Service. But we have to create such service process per \"sudo\" to be secure. \r\nSo solution will be New-PSSession (or invoke in PSSession) to localhost with elevated user credentials. \r\n",
    "created_at": "2019-12-12T17:49:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565112913",
    "id": 565112913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTExMjkxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565112913/reactions"
    },
    "updated_at": "2019-12-12T17:49:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565112913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov One of the only things that would allow you to attach it to the same console is what I already mentioned here: https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-444849067\r\n\r\nNow that windows supports unix sockets, we could use either them or named pipes and the privileged service would be responsible for validating credentials and would need to run all time (compared to be invoked over suid as mentioned in the linked posting for *nix oses).\r\n\r\nMaybe lsas would/could need to be extended to provide such authentication api capabilities?\r\nThat way we could get full impersonation while still being able to securely attach to the same console and accepting inputs.",
    "created_at": "2019-12-14T13:22:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565716866",
    "id": 565716866,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTcxNjg2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565716866/reactions"
    },
    "updated_at": "2019-12-14T13:32:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565716866",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@agowa338 Your proposal \"de-facto\" is PowerShell remoting. It is already implemented. ",
    "created_at": "2019-12-14T17:49:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565737896",
    "id": 565737896,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTczNzg5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565737896/reactions"
    },
    "updated_at": "2019-12-14T17:49:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565737896",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "But\r\n> So solution will be New-PSSession (or invoke in PSSession) to localhost with elevated user credentials.\r\n\r\ndoes not work for localhost. It only throws AccessDenied.\r\n\r\nExcept one of these is the case:\r\n* UAC is off\r\n* you try to connect to BUILDIN\\Administrator without Admin Approval Mode being enabled.\r\n* the process (powershell) is *already* elevated.\r\n\r\nHere is a good explanation why that is by @jborean93: https://github.com/PowerShell/Win32-OpenSSH/issues/1308#issuecomment-448430464\r\n\r\nTherefore we need a privileged service acting as a broker or one of the APIs need to change, but that's not something we could do within PowerShell/PowerShell and would need to be delegated by the Microsoft people internally.",
    "created_at": "2019-12-14T18:16:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565739827",
    "id": 565739827,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTczOTgyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565739827/reactions"
    },
    "updated_at": "2019-12-14T18:30:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565739827",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@agowa338 Comment you referenced is about local Windows API, not PowerShell remoting that was a question there.",
    "created_at": "2019-12-14T18:33:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565741087",
    "id": 565741087,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc0MTA4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565741087/reactions"
    },
    "updated_at": "2019-12-14T18:33:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565741087",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov:  Have you even tried doing powershell remoting to localhost? I did and it does **not work** for the reasons outlined above. The assignment of the accesstoken is blocked by the os.\r\n\r\nPowerShell remoting to localhost **does not allow** to get **elevated** privileges on the local computer.\r\n\r\nPowerShell remoting however grants you elevated privileges on all other hosts in the network ***except*** localhost (assuming you're member of Domain-Admins, etc).\r\n\r\nThat's the reason **why** we need a sudo equivalent on windows. If PowerShell remoting would behave that way you think it does this ticket could be closed by writing an example into the docs as the functionality would already exists.",
    "created_at": "2019-12-14T18:37:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565741431",
    "id": 565741431,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc0MTQzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565741431/reactions"
    },
    "updated_at": "2019-12-14T18:47:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565741431",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@agowa338 It does not work for you because of security protection. It is not OS feature. You can configure WinRM as described in docs https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_remote_troubleshooting . Issue you referenced also says that this works for SSH (steps are in referenced there article).\r\n\r\n> as the functionality would already exists.\r\n\r\nRequest is to get working \"sudo Remove-Item foo.txt where foo.txt is owned by root\".\r\nIt does not works but we would want.\r\nThe problem consists of two parts: syntax sugar in language and implementation.\r\n\r\nIf you think more about your proposal you discover that you need to have per user/per session/per runspace/per scope powershell context. Then you have to address security compliance requirements and you will get \"access denied\" in default configuration. After that your proposal will the same as already implemented PowerShell remoting. \n\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_remote_troubleshooting\">about_Remote_Troubleshooting - PowerShell</a></strong></div></blockquote>",
    "created_at": "2019-12-14T19:20:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565744540",
    "id": 565744540,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc0NDU0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565744540/reactions"
    },
    "updated_at": "2019-12-14T19:20:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565744540",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> It does not work for you because of security protection. It is not OS feature. You can configure WinRM as described in docs\r\n\r\n@iSazonov Can you elaborate that a bit more? I can remote to that machine and from any machine to any other machine in the network, but from none of them to localhost. And yes I read that page.\r\n\r\n> Request is to get working \"sudo Remove-Item foo.txt where foo.txt is owned by root\".\r\n\r\nFor non windows systems we could use the unix socket approach to implement impersonation/elevation for powershell remoting there.",
    "created_at": "2019-12-14T19:32:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565745682",
    "id": 565745682,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc0NTY4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565745682/reactions"
    },
    "updated_at": "2019-12-14T19:42:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565745682",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Can you elaborate that a bit more? I can remote to that machine and from any machine to any other machine in the network, but from none of them to localhost. And yes I read that page.\r\n\r\nMost attacks target local elevation. So all configs is \"secure by default\". WMI, WinRM, IIS loopback and etc - all subsystems disable features which allows local elevations.\r\nIt is not so important for the discussion. Even if PowerShell remoting does not allow us to do sudo by default, we could implement it turned off by default or allow only for an interactive session.\r\n\r\n> You started talking about windows, for non windows systems we could use the unix socket approach to implement impersonation/elevation for powershell remoting there.\r\n\r\nWe should have the same UX for all platforms. Really there PSRP works over a transport - WinRM or SSH. MSFT said that they like SSH but I do not see any noticeable progress over the past two years. And it's unbelievable that they will want a third protocol in the _near_ future - too much work (the need to maintain compatibility with old systems).\r\n\r\n",
    "created_at": "2019-12-14T19:59:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565748304",
    "id": 565748304,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc0ODMwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565748304/reactions"
    },
    "updated_at": "2019-12-14T19:59:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565748304",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Most attacks target local elevation. So all configs is \"secure by default\". WMI, WinRM, IIS loopback and etc - all subsystems disable features which allows local elevations.\r\nIt is not so important for the discussion. Even if PowerShell remoting does not allow us to do sudo by default, we could implement it turned off by default or allow only for an interactive session.\r\n\r\nI tried to enable that a while ago, and I was told repetitively by many others that this is restricted by the os internally and it is not possible in any way without an application hooking deep into windows internals. In fact many have pointed at the above referenced windows api restrictions and used that as argument for why powershell could never provide such capability. And someone even referenced an CVE where loopback elevation was intentionally removed. Therefore apologies going down that rabbit hole a bit deeper, but what do I need to configure for it to work? Is that even documented anywhere?\r\n\r\n> We should have the same UX for all platforms. Really there PSRP works over a transport - WinRM or SSH. MSFT said that they like SSH but I do not see any noticeable progress over the past two years. And it's unbelievable that they will want a third protocol in the near future - too much work (the need to maintain compatibility with old systems).\r\n\r\nWell than we should push forward either of both solutions as both work on any platform.\r\n* PSRP: SSHing to localhost works for elevation on Windows and Linux, therefore using the psrp subsystem we already have the correct permissions, so only the powershell layer has to be uniformed to allow passing objects. Right?\r\n* Using unix sockets would also provide a similar functionality like powershell remoting, but as time of writing I assumed it is a hard limitation to do local elevation without any kind of additional service running as local system to perform token swapping...\r\n\r\nTherefore as powershell remoting is already there (and also kinda works over ssh already) we should prioritize that solution I think.",
    "created_at": "2019-12-14T20:15:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565749608",
    "id": 565749608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc0OTYwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565749608/reactions"
    },
    "updated_at": "2019-12-14T20:17:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565749608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> And someone even referenced an CVE where loopback elevation was intentionally removed.\r\n\r\nI cannot confirm. I guess the CVE could just disable loopback by default but not at all.\r\nSee also https://github.com/PowerShell/PowerShell/issues/3874#issuecomment-510715727",
    "created_at": "2019-12-14T20:28:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565750524",
    "id": 565750524,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc1MDUyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565750524/reactions"
    },
    "updated_at": "2019-12-14T20:28:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565750524",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov: That does not work, it only provides the low privilege access token but not the elevated access token (e.g. `Mandatory Label\\High Mandatory Level`). I do not get Administrative permissions out of a low privilege powershell even though TrustedHosts is set to `*` for me. The logon token is always of type interactive, even after Enter-PSSession.\r\n~~I can in fact `Enter-PSSession localhost -ScriptBlock {}` but passing credentials causes \"Access Denied\".~~, nope it always throws \"Access Denied\" that other system had uac disabled.\r\n\r\nBut I now tried it also using SSH and that works as expected it provides the elevated token (`Mandatory Label\\High Mandatory Level`) with logon type Network.\r\n\r\nTherefore in PSCore we can rely upon psrp for elevation (even locally through `Enter-PSSession -HostName localhost` that also works with explicit credentials being passed.\r\nWhere `Enter-PSSession -ComputerName localhost -Credential $foo` does not (even if $foo.Username is the same as the current user)",
    "created_at": "2019-12-14T20:47:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565751809",
    "id": 565751809,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc1MTgwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565751809/reactions"
    },
    "updated_at": "2019-12-14T20:59:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565751809",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@agowa338 I think we should not discuss bypassing security features of WinRM here (it is compliance sensetive area). I can only indicate (1) that regardless of a protocol, security should remain at the same level, which implies that SSH loopback should behave the same as for WinRM taking in account how Windows internals work, (2) PS sudo implementation should works over any transport.\r\n",
    "created_at": "2019-12-15T07:09:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565784049",
    "id": 565784049,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTc4NDA0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565784049/reactions"
    },
    "updated_at": "2019-12-15T07:09:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565784049",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov: I did not ask for an exploit, but only for what needs to be configured to enable it. Also you seam to be the only one that figured out how to configure WinRM in order to allow loopback elevation.\r\nI've tried to enable that for a very long time. All questions (on stackoverflow, reddit, github issues, ...) I come across end in \"windows is wird\", \"don't know what windows does there\", \"It is not documented anywhere\", \"Windows does not provide that capability\", \"Use Linux instead\", \"Disable UAC\", \"You need to write a broker service that runs with system privileges\". So please if you figured it out, share your knowledge.\r\n\r\n> I can only indicate (1) that regardless of a protocol, security should remain at the same level\r\n\r\nWhat do you mean with that?\r\n\r\n> which implies that SSH loopback should behave the same as for WinRM taking in account how Windows internals work\r\n\r\nWell SSH has a system service that acts as a broker in the background to do exactly that. It provides a Network access token...\r\n\r\n> (2) PS sudo implementation should works over any transport.\r\n\r\nWell it does not over WinRM for exactly that reason. So if it is true what you said we need documentation for how to enable loopback WinRM.",
    "created_at": "2019-12-15T12:22:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565804743",
    "id": 565804743,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTgwNDc0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565804743/reactions"
    },
    "updated_at": "2019-12-15T12:22:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565804743",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  if you figured it out, share your knowledge.\r\n\r\n@agowa338 MSFT team asked me do not discuss security publicly and I follow the CoC. I support your desire to explore this topic deeply, but as part of this discussion, this is a headache for MSFT how to integrate this solution into Windows and keep security compliance.\r\n",
    "created_at": "2019-12-15T18:22:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565833476",
    "id": 565833476,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTgzMzQ3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565833476/reactions"
    },
    "updated_at": "2019-12-15T18:22:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565833476",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Well that does not help anyone.\r\n\r\nTo summon it up:\r\n* You say windows has sudo like capabilities within WinRM.\r\n* It's neither documented that it exists nor how to enable/disable it.\r\n* Disclosing how to use it would be a security risk.\r\n\r\nSorry, but that sounds like a backdoor and not a feature. It is unusable for anyone except you than.\r\nAlso security through obscurity has not worked in the past either...\r\n\r\nSo we're back at it's currently not implemented and we need a broker service than...",
    "created_at": "2019-12-15T18:28:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565834026",
    "id": 565834026,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTgzNDAyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565834026/reactions"
    },
    "updated_at": "2019-12-15T18:29:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565834026",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@agowa338 We have gathered enough information for MSFT team to conclude. If they find security issues, they will show us an acceptable alternative way.\r\n",
    "created_at": "2019-12-15T18:53:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565836279",
    "id": 565836279,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTgzNjI3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565836279/reactions"
    },
    "updated_at": "2019-12-15T18:53:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565836279",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It was possible but was patched earlier this year https://devblogs.microsoft.com/powershell/windows-security-change-affecting-powershell/ with the patch [KB4480116](https://support.microsoft.com/en-us/help/4480116/windows-10-update-kb4480116) and any subsequent cumulative updates.. Before this update it was possible to elevate your privileges if you have the [LocalAccountTokenFilterPolicy](https://support.microsoft.com/en-us/help/951016/description-of-user-account-control-and-remote-restrictions-in-windows) set to 1 which is what `winrm quickconfig` does (and is required for WinRM really).\r\n\r\nThere's a note there saying JEA endpoints are not affected so potentially you could create your own PSSessionConfiguration and connect to that but I haven't tested this to verify. Personally I think this patch is silly as this patch just stops the PowerShell client from connecting to localhost but you can easily bypass it if you know what you are doing. For example I can still go from limited to elevated without touching UAC by using SSH or another PSRemoting client like so\r\n\r\n```\r\nPS C:\\Users\\vagrant> whoami.exe /groups  # prove the current process is limited\r\n\r\nGROUP INFORMATION\r\n-----------------\r\n\r\nGroup Name                                                    Type             SID          Attributes\r\n\r\n============================================================= ================ ============ ============================\r\n======================\r\nEveryone                                                      Well-known group S-1-1-0      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Local account and member of Administrators group Well-known group S-1-5-114    Group used for deny only\r\n\r\nBUILTIN\\Administrators                                        Alias            S-1-5-32-544 Group used for deny only\r\n\r\nBUILTIN\\Remote Management Users                               Alias            S-1-5-32-580 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nBUILTIN\\Users                                                 Alias            S-1-5-32-545 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nBUILTIN\\Performance Log Users                                 Alias            S-1-5-32-559 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\REMOTE INTERACTIVE LOGON                         Well-known group S-1-5-14     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\INTERACTIVE                                      Well-known group S-1-5-4      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Authenticated Users                              Well-known group S-1-5-11     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\This Organization                                Well-known group S-1-5-15     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Local account                                    Well-known group S-1-5-113    Mandatory group, Enabled by\r\ndefault, Enabled group\r\nLOCAL                                                         Well-known group S-1-2-0      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\NTLM Authentication                              Well-known group S-1-5-64-10  Mandatory group, Enabled by\r\ndefault, Enabled group\r\nMandatory Label\\Medium Mandatory Level                        Label            S-1-16-8192\r\n\r\nPS C:\\Users\\vagrant> ssh vagrant@localhost whoami.exe /groups  # prove that SSH is elevated\r\nvagrant@localhost's password:\r\n\r\nGROUP INFORMATION\r\n-----------------\r\n\r\nGroup Name                                                    Type             SID          Attributes\r\n\r\n============================================================= ================ ============ ============================\r\n===================================\r\nEveryone                                                      Well-known group S-1-1-0      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Local account and member of Administrators group Well-known group S-1-5-114    Mandatory group, Enabled by\r\ndefault, Enabled group\r\nBUILTIN\\Administrators                                        Alias            S-1-5-32-544 Mandatory group, Enabled by\r\ndefault, Enabled group, Group owner\r\nBUILTIN\\Remote Management Users                               Alias            S-1-5-32-580 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nBUILTIN\\Users                                                 Alias            S-1-5-32-545 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\NETWORK                                          Well-known group S-1-5-2      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Authenticated Users                              Well-known group S-1-5-11     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\This Organization                                Well-known group S-1-5-15     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Local account                                    Well-known group S-1-5-113    Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\NTLM Authentication                              Well-known group S-1-5-64-10  Mandatory group, Enabled by\r\ndefault, Enabled group\r\nMandatory Label\\High Mandatory Level                          Label            S-1-16-12288\r\n\r\nPS C:\\Users\\vagrant> python -c \"from pypsrp.client import Client; c = Client('localhost', username='vagrant', password='\r\n<password>', ssl=False); print(c.execute_ps('whoami.exe /groups')[0])\"\r\n\r\nGROUP INFORMATION\r\n-----------------\r\n\r\nGroup Name                                                    Type             SID          Attributes\r\n\r\n============================================================= ================ ============ ============================\r\n===================================\r\nEveryone                                                      Well-known group S-1-1-0      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Local account and member of Administrators group Well-known group S-1-5-114    Mandatory group, Enabled by\r\ndefault, Enabled group\r\nBUILTIN\\Administrators                                        Alias            S-1-5-32-544 Mandatory group, Enabled by\r\ndefault, Enabled group, Group owner\r\nBUILTIN\\Remote Management Users                               Alias            S-1-5-32-580 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nBUILTIN\\Users                                                 Alias            S-1-5-32-545 Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\NETWORK                                          Well-known group S-1-5-2      Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Authenticated Users                              Well-known group S-1-5-11     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\This Organization                                Well-known group S-1-5-15     Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\Local account                                    Well-known group S-1-5-113    Mandatory group, Enabled by\r\ndefault, Enabled group\r\nNT AUTHORITY\\NTLM Authentication                              Well-known group S-1-5-64-10  Mandatory group, Enabled by\r\ndefault, Enabled group\r\nMandatory Label\\High Mandatory Level                          Label            S-1-16-12288\r\n```\r\n\r\nWe can see that using SSH we have an elevated token, we can also see that using a 3rd party library we can still use localhost PSRemoting that creates an elevated token and that the patch is not a total block of this functionality.\r\n\r\nI don't see this as a security issue or crossing a security boundary as MS has repeatedly said that UAC is not a security boundary\r\n\r\n* https://blogs.technet.microsoft.com/markrussinovich/2007/02/12/psexec-user-account-control-and-security-boundaries/\r\n* https://blogs.msdn.microsoft.com/e7/2009/02/05/update-on-uac/\r\n\r\nIt might be close or act similar to one but it is not foolproof. One of those ways of bypassing UAC is the known and documented `LocalAccountTokenFilterPolicy` registry property. The explicit purpose of this property to ensure that network logons are always elevated and not the filtered token and it explicitly says that not having this enabled prevents \"loopback\" attacks\r\n\r\n> To better protect those users who are members of the local Administrators group, we implement UAC restrictions on the network. This mechanism helps prevent against \"loopback\" attacks. This mechanism also helps prevent local malicious software from running remotely with administrative rights.\r\n\r\nUltimately what that means is there is no really official way on Windows to elevate your privileges from limited to an admin in a non-interactive fashion. It's quite simple to use `Start-Process ... -Verb Runas` but that requires an interactive logon to display the UAC prompt. Having a sudo-like mechanism would help alleviate this problem but to do it properly would require work in Windows itself and not be PowerShell specific. There are \"workarounds\" but I wouldn't call them official and are just a known byproduct of enabling WinRM.\n\n<blockquote><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2018/09/Powershell_256.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2019/02/Powershell_2561.png\" height=\"14\"> PowerShell</div><div><strong><a href=\"https://devblogs.microsoft.com/powershell/windows-security-change-affecting-powershell/\">Windows Security change affecting PowerShell | PowerShell</a></strong></div><div>Windows Security change affecting PowerShell\nJanuary 9, 2019\nThe recent (1/8/2019) Windows security patch CVE-2019-0543, has introduced a breaking change for a PowerShell remoting scenario. It is a narrowly scoped scenario that should have low impact for most users.\nThe breaking change only affects local loopback remoting,</div></blockquote>\n<blockquote><img src=\"https://msdnshared.blob.core.windows.net/media/TNBlogsFS/prod.evol.blogs.technet.com/telligent.evolution.components.attachments/13/5247/00/00/00/63/83/06/securityboundaries.jpg\" width=\"48\" align=\"right\"><div>Mark's Blog</div><div><strong><a href=\"https://blogs.technet.microsoft.com/markrussinovich/2007/02/12/psexec-user-account-control-and-security-boundaries/\">PsExec, User Account Control and Security Boundaries</a></strong></div><div>I introduced the -l switch to PsExec about a year and a half ago as an easy way to execute processes with standard-user rights from an administrative account on Windows XP. In Running as Limited User – The Easy Way I described how PsExec uses the CreateRestrictedToken API to create a security context that’s a...</div></blockquote>\n<blockquote><img src=\"https://msdnshared.blob.core.windows.net/media/TNBlogsFS/BlogFileStorage/blogs_msdn/e7/WindowsLiveWriter/UpdateonUAC_140FD/clip_image002_thumb.jpg\" width=\"48\" align=\"right\"><div>Engineering Windows 7</div><div><strong><a href=\"https://blogs.msdn.microsoft.com/e7/2009/02/05/update-on-uac/\">Update on UAC</a></strong></div><div>Hi, Jon DeVaan here to talk to you about the recent UAC feedback we’ve been receiving. Most of our work finishing Windows 7 is focused on responding to feedback. The UAC feedback is interesting on a few dimensions of engineering decision making process. I thought that exploring those dimensions would make for an interesting e7...</div></blockquote>",
    "created_at": "2019-12-15T19:38:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565839733",
    "id": 565839733,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTgzOTczMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565839733/reactions"
    },
    "updated_at": "2019-12-15T19:38:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565839733",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov None of these suggestions will accomplish a _user-interactive_ command elevation from _within the same console session_, especially in an environment that _lacks UAC_. It appears that you can speak on behalf of Microsoft in these matters, so would you clarify whether they are simply not interested in in introducing such a feature as I have described it?\r\n\r\nIf that is the case, as I have interpreted from the above posts, it seems prudent to close this thread, as the rest of us users will have to look elsewhere for solutions such as @parkovski's [TokenServer](https://github.com/parkovski/wsudo) idea.",
    "created_at": "2019-12-16T03:05:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565886634",
    "id": 565886634,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTg4NjYzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565886634/reactions"
    },
    "updated_at": "2019-12-16T03:05:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565886634",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ghost",
      "id": 10137,
      "login": "ghost",
      "node_id": "MDQ6VXNlcjEwMTM3",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ghost"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  It appears that you can speak on behalf of Microsoft in these matters\r\n\r\nI am a community maintainer of the project, not MSFT member and I can not speak on behalf of Microsoft. \r\n\r\n>  would you clarify whether they are simply not interested in in introducing such a feature as I have described it?\r\n\r\n_All proposals have value; none of them are rejected. The discussion is just for collecting all possible proposals._\r\n\r\nCurrently I am trying to summarize all proposals so that we can move forward and not stagnate.\r\n\r\nThat I see.\r\nMain scenario is adoption Unix users on Windows.\r\n- Historically Unix users works in one console and sudo natively helps them to do a work with elevated rights in the _same_ console\r\n- Historically Windows users open new window with elevated rights console if needed. This works well many years because it’s convenient in a multi-windows environment. (Windows users could benefit from pssudo too taking in account Windows Core and Nano)\r\n\r\nSo expectations are:\r\n- pssudo works only in interactive sessions\r\n- pssudo does not open new console (UAC window is acceptable on Windows, we don't want break Windows security and spirit)\r\n- pssudo timely cache credentals\r\n- pssudo does not cache a session state for security\r\n- the same UX (as possible) is on all platforms\r\n- pssudo runs native commands\r\n- pssudo runs PowerShell script blocks/files\r\n\r\nImplementation details:\r\n- PowerShell remoting is most power and functional solution. It is already implemented and works. Others would have to emulate this functionality too to excecute PowerShell script blocks in per user/per session/per runspace/ per scope state.\r\n- Preferred transport is WinRM because all Windows infrastructure based on it. Some investment is required in WinRM, although MSFT does not want this because it is based on SOAP.\r\n- SSH transport could be. This is still not the standard for Windows. Requires a large investment for implementation and maintenance. And there is a problem supporting older systems.\r\n- Other transports like Unix sockets. Requires a large investments not only in infrastructure but in PowerShell too.\r\n\r\n@mklement0 I wonder that I do here that you do usually great :-) You rob me of being an opponent :-)\r\n\r\n\r\n\r\n",
    "created_at": "2019-12-16T07:20:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-565936036",
    "id": 565936036,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTkzNjAzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 1,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565936036/reactions"
    },
    "updated_at": "2019-12-16T07:20:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/565936036",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Why not write an windows binary that requires privileges that starts a powershell instance with whatever commands passed to it. It would have to be a console mode app to work properly. Then for linux, we write a script that requires permissions that starts a powershell instance with the commands provided. If this works in practice like it does in theory, powershell will be launched with elevated permissions, runs the commands and exits.",
    "created_at": "2020-01-02T22:44:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-570383990",
    "id": 570383990,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDM4Mzk5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/570383990/reactions"
    },
    "updated_at": "2020-01-02T22:44:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/570383990",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/42992675?v=4",
      "events_url": "https://api.github.com/users/minecraftchest1/events{/privacy}",
      "followers_url": "https://api.github.com/users/minecraftchest1/followers",
      "following_url": "https://api.github.com/users/minecraftchest1/following{/other_user}",
      "gists_url": "https://api.github.com/users/minecraftchest1/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/minecraftchest1",
      "id": 42992675,
      "login": "minecraftchest1",
      "node_id": "MDQ6VXNlcjQyOTkyNjc1",
      "organizations_url": "https://api.github.com/users/minecraftchest1/orgs",
      "received_events_url": "https://api.github.com/users/minecraftchest1/received_events",
      "repos_url": "https://api.github.com/users/minecraftchest1/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/minecraftchest1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minecraftchest1/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/minecraftchest1"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Why not write an windows binary that requires privileges that starts a powershell instance with whatever commands passed to it. It would have to be a console mode app to work properly. \r\n\r\nCause the windows API prevents that and the console app would open in a new window. We already talked about possible workarounds.",
    "created_at": "2020-01-03T00:56:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-570421603",
    "id": 570421603,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDQyMTYwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/570421603/reactions"
    },
    "updated_at": "2020-01-03T00:56:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/570421603",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2544867?v=4",
      "events_url": "https://api.github.com/users/agowa338/events{/privacy}",
      "followers_url": "https://api.github.com/users/agowa338/followers",
      "following_url": "https://api.github.com/users/agowa338/following{/other_user}",
      "gists_url": "https://api.github.com/users/agowa338/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/agowa338",
      "id": 2544867,
      "login": "agowa338",
      "node_id": "MDQ6VXNlcjI1NDQ4Njc=",
      "organizations_url": "https://api.github.com/users/agowa338/orgs",
      "received_events_url": "https://api.github.com/users/agowa338/received_events",
      "repos_url": "https://api.github.com/users/agowa338/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/agowa338/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agowa338/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/agowa338"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "One thing to keep in mind is that no matter how this gets implemented, there is always a process hop to and from an elevated process.  This means that you'll always have deserialized objects in the pipeline and those limitations will apply.  In many cases, this won't be an issue, but if a cmdlet expects a live .NET object, then it won't work.\r\n\r\nTo support JEA with SSH, we would eventually need a generalized daemon/service that replaces the need for WinRM as that service anyways.  At that time, we would evaluate using that to elevate a part of the pipeline.",
    "created_at": "2020-01-07T21:31:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-571782408",
    "id": 571782408,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTc4MjQwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571782408/reactions"
    },
    "updated_at": "2020-01-07T21:31:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571782408",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "FYI: https://github.com/gerardog/gsudo\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/3901474?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/gerardog/gsudo\">gerardog/gsudo</a></strong></div><div>A Sudo for Windows - run elevated without spanning a new Console Host Window - gerardog/gsudo</div></blockquote>",
    "created_at": "2020-01-30T07:45:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-580124914",
    "id": 580124914,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDEyNDkxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580124914/reactions"
    },
    "updated_at": "2020-01-30T07:45:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580124914",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "> FYI: https://github.com/gerardog/gsudo\r\n> \r\n> > <img alt=\"\" width=\"48\" src=\"https://avatars2.githubusercontent.com/u/3901474?s=400&amp;v=4\"><img alt=\"\" height=\"14\" src=\"https://camo.githubusercontent.com/4908d9947135e4536ef61d61512ee575f869bf6f/68747470733a2f2f6769746875622e6769746875626173736574732e636f6d2f66617669636f6e2e69636f\"> GitHub**[gerardog/gsudo](https://github.com/gerardog/gsudo)**A Sudo for Windows - run elevated without spanning a new Console Host Window - gerardog/gsudo\r\n\r\nEven better\r\nhttp://blog.lukesampson.com/sudo-for-windows\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/3901474?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/gerardog/gsudo\">gerardog/gsudo</a></strong></div><div>A Sudo for Windows - run elevated without spanning a new Console Host Window - gerardog/gsudo</div></blockquote>\n<blockquote><img src=\"https://silvrback.s3.amazonaws.com/uploads/7501777c-5737-4674-9981-b3ef66f90c28/Windows_7_-_Parallels_Desktop_large.png\" width=\"48\" align=\"right\"><div><strong><a href=\"http://blog.lukesampson.com/sudo-for-windows\">Luke Sampson - Sudo for Windows</a></strong></div><div>Sudo for Windows</div></blockquote>",
    "created_at": "2020-02-27T15:40:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-592028125",
    "id": 592028125,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjAyODEyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592028125/reactions"
    },
    "updated_at": "2020-02-27T15:44:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592028125",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/56309157?v=4",
      "events_url": "https://api.github.com/users/Witchilich/events{/privacy}",
      "followers_url": "https://api.github.com/users/Witchilich/followers",
      "following_url": "https://api.github.com/users/Witchilich/following{/other_user}",
      "gists_url": "https://api.github.com/users/Witchilich/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Witchilich",
      "id": 56309157,
      "login": "Witchilich",
      "node_id": "MDQ6VXNlcjU2MzA5MTU3",
      "organizations_url": "https://api.github.com/users/Witchilich/orgs",
      "received_events_url": "https://api.github.com/users/Witchilich/received_events",
      "repos_url": "https://api.github.com/users/Witchilich/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Witchilich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Witchilich/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Witchilich"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Even better\r\n\r\nNo. \r\n\r\nGsudo doesnt prompt for password each time and is noticebly faster to install and use.",
    "created_at": "2020-02-27T16:18:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-592045330",
    "id": 592045330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA0NTMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592045330/reactions"
    },
    "updated_at": "2020-02-27T16:18:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592045330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "NONE",
    "body": "It looks to me that this issue should be accepted (which means some more time and organization should be given to it) judging from the interest not only from this ticket. Its not correct not to officially recognize it as a work task as currently perceived technical difficulties are not going to be solved without active involvement. \r\n\r\nI am using gsudo for a few months now and I can't imagine going back to traditional Windows UAC all the time horror.",
    "created_at": "2020-02-27T16:22:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-592047265",
    "id": 592047265,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjA0NzI2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592047265/reactions"
    },
    "updated_at": "2020-02-27T16:22:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592047265",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/85767?v=4",
      "events_url": "https://api.github.com/users/majkinetor/events{/privacy}",
      "followers_url": "https://api.github.com/users/majkinetor/followers",
      "following_url": "https://api.github.com/users/majkinetor/following{/other_user}",
      "gists_url": "https://api.github.com/users/majkinetor/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/majkinetor",
      "id": 85767,
      "login": "majkinetor",
      "node_id": "MDQ6VXNlcjg1NzY3",
      "organizations_url": "https://api.github.com/users/majkinetor/orgs",
      "received_events_url": "https://api.github.com/users/majkinetor/received_events",
      "repos_url": "https://api.github.com/users/majkinetor/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/majkinetor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/majkinetor/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/majkinetor"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@majkinetor this issue got spun off in https://github.com/PowerShell/PowerShell/issues/11343 to further discussion on the design",
    "created_at": "2020-02-27T20:29:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3232#issuecomment-592161936",
    "id": 592161936,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3232",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MjE2MTkzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592161936/reactions"
    },
    "updated_at": "2020-02-27T20:29:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/592161936",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
