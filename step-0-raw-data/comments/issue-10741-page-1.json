[
  {
    "author_association": "COLLABORATOR",
    "body": "I prefer an approach like PSMore using wrappers based on classes that is more flexible, extendable and faster. Also this allow us to have universal code without many hooks/workarounds for \r\nfor every special case. With the approach we could cover most of scenarios like:\r\n- encoding for input and output\r\n- completors for parameters and arguments\r\n- output formatting\r\n- ...\r\n\r\n```c#\r\n    public class BaseWrapper : IEncoding, ICompletor, IFormatting\r\n```\r\n\r\nIn the case, we'd need one `Register-Wrapper`.\r\n\r\nFor reference #10722 ",
    "created_at": "2019-10-09T06:46:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-539861976",
    "id": 539861976,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTg2MTk3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539861976/reactions"
    },
    "updated_at": "2019-10-09T10:11:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539861976",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "How would this affect a tool already using one of these applications directly? I know you mentioned a way to selectively disable that, but if it's not opt-in that could be problematic.\r\n\r\nCan you speak a little about the advantages this has over defining a function of the same name?",
    "created_at": "2019-10-09T13:25:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-539999418",
    "id": 539999418,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTk5OTQxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539999418/reactions"
    },
    "updated_at": "2019-10-09T13:25:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539999418",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience See #7857 for history and motivations.",
    "created_at": "2019-10-09T14:23:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540024565",
    "id": 540024565,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAyNDU2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540024565/reactions"
    },
    "updated_at": "2019-10-09T14:23:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540024565",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov isn't that mostly formatting?  Maybe I'm reading the OP wrong but I took it to mean that the executable would *output* objects *instead* of text.  In other words `(kubectl).GetType()` wouldn't be `string` anymore.",
    "created_at": "2019-10-09T14:36:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540030244",
    "id": 540030244,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAzMDI0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540030244/reactions"
    },
    "updated_at": "2019-10-09T14:36:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540030244",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience PSMore is about formatting. We can generalize the approach. In the case script hooks for formatting or completors will be a special case of a more general approach.",
    "created_at": "2019-10-09T15:03:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540042568",
    "id": 540042568,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDA0MjU2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540042568/reactions"
    },
    "updated_at": "2019-10-09T15:03:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540042568",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov right but this issue doesn't seem related to formatting or completers.  It reads to me like it's talking about the literal output of a command, with an optional way of providing a format definition for that output.",
    "created_at": "2019-10-09T15:35:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540057075",
    "id": 540057075,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDA1NzA3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540057075/reactions"
    },
    "updated_at": "2019-10-09T15:35:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540057075",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience Idea is to have one typed wrapper, for output parsing scenario too.",
    "created_at": "2019-10-09T15:46:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540061873",
    "id": 540061873,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDA2MTg3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540061873/reactions"
    },
    "updated_at": "2019-10-09T15:46:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540061873",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I understand why it's valuable to have objects instead of text, but if I'm explicitly calling something like this:\r\n\r\n```powershell\r\n$dotnet = $ExecutionContext.InvokeCommand.GetCommand('dotnet.exe', 'Application')\r\n& $dotnet\r\n```\r\n\r\nI shouldn't all of a sudden start getting objects. That already has to be pretty explicit to safe guard against functions/aliases.\r\n\r\nMore than that though, I'm asking what advantage the proposed feature has over this:\r\n\r\n```powershell\r\nfunction kubectl {\r\n    $stdout = if ($MyInvocation.ExpectingInput) {\r\n        $input | kubectl.exe @args\r\n    } else {\r\n        kubectl.exe @args\r\n    }\r\n\r\n    # do the parsing here\r\n}\r\n```\r\n\r\nYeah it's a bit more wordy, but not by much.  It also seems really difficult for a user who *doesn't* have an output parser registered to see what's going on.  Also if you're \"powershellizing\" a native command, wouldn't you want the wrapper to be `Verb-Noun`?  That makes it very clear that the output is altered in some way.",
    "created_at": "2019-10-09T16:01:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540068577",
    "id": 540068577,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDA2ODU3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540068577/reactions"
    },
    "updated_at": "2019-10-09T16:01:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540068577",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I shouldn't all of a sudden start getting objects.\r\n\r\nThe idea is to have an universal engine. No full design exists. For the example it could be as simple as `<ping wrapper>.Pipeline.Output.DisableParsing()`, and we could do the same on the fly too in pipeline like PSMore demo for formatting.",
    "created_at": "2019-10-09T18:08:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540121264",
    "id": 540121264,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDEyMTI2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540121264/reactions"
    },
    "updated_at": "2019-10-09T18:08:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540121264",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> The idea is to have an universal engine. No full design exists. For the example it could be as simple as `<ping wrapper>.Pipeline.Output.DisableParsing()`,\r\n\r\nWell it'd be more like:\r\n\r\n```powershell\r\n$isParsingEnabled = [Wrapper.Pipeline.Output]::IsEnabled\r\n[Wrapper.Pipeline.Output]::DisableParsing()\r\ntry {\r\n    # use executable\r\n} finally {\r\n    if ($isParsingEnabled) {\r\n        [Wrapper.Pipeline.Output]::EnableParsing()\r\n    }\r\n}\r\n```\r\n\r\nThat's assuming that `try`/`finally` becomes reliable at some point.  I know that was just an example, maybe if it's scope based then it may not be *as* big of a problem\r\n\r\nEither way though, that's still more that needs to be done on top of an already pretty explicit process.  Any script that tries to parse the output of an executable would break on machines with one of these parsers registered.\r\n\r\n> and we could do the same on the fly too in pipeline like PSMore demo for formatting.\r\n\r\nI'm having a really hard time seeing how this is related to PSMore.  Wouldn't output of these parsers would still be the same output as my function example? (i.e. whatever the parser author outputs)",
    "created_at": "2019-10-09T18:40:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540134036",
    "id": 540134036,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDEzNDAzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540134036/reactions"
    },
    "updated_at": "2019-10-09T18:40:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540134036",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We looked at this way back in V1 as it seemed very important at the time. (There was even some prototyping and, I think, a patent). The problem is that the output of native commands varies wildly based on the parameters used as well as the immediate environment. This makes it extremely difficult to write a general purpose text-to-object converter. Even a purpose-built converter is very hard (IIRC we tried doing this with `ipconfig.exe` but never shipped it.)",
    "created_at": "2019-10-09T22:08:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540224201",
    "id": 540224201,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDIyNDIwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540224201/reactions"
    },
    "updated_at": "2019-10-09T22:08:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540224201",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This is why the command line args are passed to the parser so it can determine if it can handle that specific type of output. \r\n\r\n@SeeminglyScience a function wrapper means if different people want to support parsing different output of the same native command, they'd have to incorporate it into that function.  The idea here is if someone just wanted to get objects from `kubectl cluster-info dump` and is able to write a parser for it, then they could register just for that similar to registering argument completers.  The point of when you really want the text output is a concern particularly when the heuristics I indicated aren't sufficient.  Haven't thought of any good idea that doesn't include a sigil or some other indicator that would be hard to discover (like `--%`...)",
    "created_at": "2019-10-10T03:58:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540337410",
    "id": 540337410,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDMzNzQxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540337410/reactions"
    },
    "updated_at": "2019-10-10T03:58:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540337410",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Could this be expanded to include parsing stderr? The cmdlet name might be something like:\r\n\r\n```powershell\r\nRegister-NativeParser -Command kubectl -ScriptBlock { param($stdout, $stderr, $args) ... }\r\n```",
    "created_at": "2019-10-10T21:11:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540798619",
    "id": 540798619,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc5ODYxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540798619/reactions"
    },
    "updated_at": "2019-10-10T21:11:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540798619",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/38873752?v=4",
      "events_url": "https://api.github.com/users/ThomasNieto/events{/privacy}",
      "followers_url": "https://api.github.com/users/ThomasNieto/followers",
      "following_url": "https://api.github.com/users/ThomasNieto/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThomasNieto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ThomasNieto",
      "id": 38873752,
      "login": "ThomasNieto",
      "node_id": "MDQ6VXNlcjM4ODczNzUy",
      "organizations_url": "https://api.github.com/users/ThomasNieto/orgs",
      "received_events_url": "https://api.github.com/users/ThomasNieto/received_events",
      "repos_url": "https://api.github.com/users/ThomasNieto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ThomasNieto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThomasNieto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ThomasNieto"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Regardless of the final form, invoking such a parser should **always** be a deliberate action. Nobody should be surprised by this behaviour, and it should not take over standard native command executions.\r\n\r\nSince we're talking about a `Register-OutputParser` cmdlet anyway, I think we should pair it with an invocation command, an explicit opt-in to this kind of behaviour. Something like `Invoke-NativeCommand` with paired with @tnieto88's cmdlet name suggestion.\r\n\r\nBut taking a step back for a minute, I'm pretty sure this kind of feature will largely go unused. Defining a custom function or even a cmdlet with the appropriate parameters and features will always fit better in the PowerShell ecosystem. This feels like a half-solution at best.",
    "created_at": "2019-10-10T21:37:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540810887",
    "id": 540810887,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDgxMDg4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540810887/reactions"
    },
    "updated_at": "2019-10-10T21:37:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540810887",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32 I was thinking something like a `Invoke-NativeCommand` as well. The other two commands that would pair well is `Enable-NativeParser` and `Disable-NativeParser` with a `-Scope` parameter to allow users to opt-in or out at whatever scope they would like. For example, I could have a script with native parsing turned on for all of my commands without having to use `Invoke-NativeCommand` each time.",
    "created_at": "2019-10-10T21:55:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-540816467",
    "id": 540816467,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDgxNjQ2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540816467/reactions"
    },
    "updated_at": "2019-10-10T21:55:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540816467",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/38873752?v=4",
      "events_url": "https://api.github.com/users/ThomasNieto/events{/privacy}",
      "followers_url": "https://api.github.com/users/ThomasNieto/followers",
      "following_url": "https://api.github.com/users/ThomasNieto/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThomasNieto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ThomasNieto",
      "id": 38873752,
      "login": "ThomasNieto",
      "node_id": "MDQ6VXNlcjM4ODczNzUy",
      "organizations_url": "https://api.github.com/users/ThomasNieto/orgs",
      "received_events_url": "https://api.github.com/users/ThomasNieto/received_events",
      "repos_url": "https://api.github.com/users/ThomasNieto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ThomasNieto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThomasNieto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ThomasNieto"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I think `Invoke-NativeCommand` (there's several issues already that propose such a thing) would solve a different class of  issues although this could be encapsulated into that cmdlet, it makes it odd to have to use a cmdlet to execute native commands in most cases.  Alternatively, there could be a `ConvertTo-Object` cmdlet that uses the registered parsers to output objects and returns an error if there isn't one to handle the output. ",
    "created_at": "2019-10-13T17:22:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-541438047",
    "id": 541438047,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTQzODA0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541438047/reactions"
    },
    "updated_at": "2019-10-13T17:22:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541438047",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This work is being done in https://github.com/powershell/crescendo\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/Crescendo\">PowerShell/Crescendo</a></strong></div><div>a module for wrapping native applications in a PowerShell function and module - PowerShell/Crescendo</div></blockquote>",
    "created_at": "2020-12-14T20:09:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10741#issuecomment-744680962",
    "id": 744680962,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10741",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDY4MDk2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744680962/reactions"
    },
    "updated_at": "2020-12-14T20:09:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744680962",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
