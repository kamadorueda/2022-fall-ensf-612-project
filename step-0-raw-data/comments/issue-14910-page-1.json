[
  {
    "author_association": "CONTRIBUTOR",
    "body": "When you use property-access syntax with `IDictionary` instances, _entry keys_ take precedence over _the implementing type's type-native properties_.\r\n\r\nA simple example:\r\n\r\n```powershell\r\n# OK - no name conflict.\r\nPS> @{ Foo = 'Bar' }.Count\r\n1\r\n\r\n# Name conflict between [hashtable]'s own .Count property and the *entry* whose key is 'Count' \r\nPS> @{ Count = 'Chocula' }.Count\r\nChocula  # !! 'Count' *entry* took precedence\r\n```\r\n\r\n`Clear-History` has a parameter named `Count`, which caused the problem.\r\n\r\nThe workarounds are non-obvious, unfortunately:\r\n\r\n```powershell\r\nPS> @{ Count = 'Chocula' }.psbase.Count\r\n1\r\n\r\n# Alternatively:\r\nPS> @{ Count = 'Chocula' }.get_Count()\r\n1\r\n```\r\n",
    "created_at": "2021-02-26T16:55:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14910#issuecomment-786766744",
    "id": 786766744,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14910",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Njc2Njc0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786766744/reactions"
    },
    "updated_at": "2021-02-26T16:55:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786766744",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Actually, this was previously reported in #7758, which was closed as by-design.\r\n\r\nFortunately, the `.psbase` workaround is now mentioned in [`about_Hash_Tables`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Hash_Tables).\r\n\r\nThe somewhat unfortunate aspect is that the `IDictionary` logic is the inverse of the logic applied by _member enumeration_:\r\n\r\n```powershell\r\n$coll = [pscustomobject] @{ Foo = 1; Count = 'Chocula' }, [pscustomobject] @{ Foo = 2; Count = 'Dracula' }\r\n\r\nPS> $coll.Foo\r\n1\r\n2\r\n\r\nPS> $coll.Count\r\n2  # !! Collection-type .Count took precedence\r\n```",
    "created_at": "2021-02-26T17:02:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14910#issuecomment-786770715",
    "id": 786770715,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14910",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Njc3MDcxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786770715/reactions"
    },
    "updated_at": "2021-02-26T17:02:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786770715",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Ok, I'm glad there's a rational explanation for this. So when using IDictionary instances, the safest way to go in general is to avoid using IDictionary's properies directly. I'm gonna have to review all my PowerShell code for these potential hidden timebombs. Thanks for your insight.",
    "created_at": "2021-02-26T17:02:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14910#issuecomment-786770985",
    "id": 786770985,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14910",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Njc3MDk4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786770985/reactions"
    },
    "updated_at": "2021-02-26T17:02:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786770985",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
      "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
      "followers_url": "https://api.github.com/users/plastikfan/followers",
      "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
      "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/plastikfan",
      "id": 49785914,
      "login": "plastikfan",
      "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
      "organizations_url": "https://api.github.com/users/plastikfan/orgs",
      "received_events_url": "https://api.github.com/users/plastikfan/received_events",
      "repos_url": "https://api.github.com/users/plastikfan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/plastikfan"
    }
  },
  {
    "author_association": "NONE",
    "body": "I realy did try and search for other issues, but I didnt find #7758, so I'll close this one.",
    "created_at": "2021-02-26T17:06:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14910#issuecomment-786773050",
    "id": 786773050,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14910",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Njc3MzA1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786773050/reactions"
    },
    "updated_at": "2021-02-26T17:06:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/786773050",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
      "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
      "followers_url": "https://api.github.com/users/plastikfan/followers",
      "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
      "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/plastikfan",
      "id": 49785914,
      "login": "plastikfan",
      "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
      "organizations_url": "https://api.github.com/users/plastikfan/orgs",
      "received_events_url": "https://api.github.com/users/plastikfan/received_events",
      "repos_url": "https://api.github.com/users/plastikfan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/plastikfan"
    }
  }
]
