[
  {
    "author_association": "COLLABORATOR",
    "body": "We could get significant performance improvements if our cmdlets could accept not only string paths but also [FileInfo] objects - currently we do a lot of unnecessary work on the path objects obtained from the file system (globbing, normalization ...).",
    "created_at": "2018-01-29T09:25:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361186165",
    "id": 361186165,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTE4NjE2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361186165/reactions"
    },
    "updated_at": "2018-01-29T09:25:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361186165",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nThat's a great idea - is there an issue for that yet?\r\n\r\nWhat you propose would fix the problems for file-related cmdlets, but I feel that the general discrepancy between via-pipeline and by-argument parameter binding is worth addressing as such.\r\n",
    "created_at": "2018-01-29T20:25:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361374748",
    "id": 361374748,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM3NDc0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361374748/reactions"
    },
    "updated_at": "2018-01-29T20:25:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361374748",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "No Issue. The nearest is #5789\r\nI don't know the code yet, and I'm moving forward very slowly. ðŸ˜• \r\n\r\nIf we implement using [FileInfo] internally then maybe your offer will look a little different (simpler).\r\n",
    "created_at": "2018-01-30T05:00:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361477801",
    "id": 361477801,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ3NzgwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361477801/reactions"
    },
    "updated_at": "2018-01-30T05:00:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361477801",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The big issue here is that we cannot assume anything about the providers. FileSystem is only one provider, and the common cmdlets are generic in how they work with respect to the providers.\r\n\r\nHowever, it's maybe not unreasonable to say that \"All Providers are equal, but some Providers (cough* FileSystem*cough) are more equal than others\".\r\n\r\nMaybe we should have special treatment for the FileSystem provider since is is verly likely not only the most used provider, but also a provider with large data sets.\r\n",
    "created_at": "2018-01-30T10:24:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361548950",
    "id": 361548950,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTU0ODk1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361548950/reactions"
    },
    "updated_at": "2018-01-30T10:24:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361548950",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The API is not public so we are free to enhance it or re-design to make it more flexible.",
    "created_at": "2018-01-30T12:28:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361578799",
    "id": 361578799,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTU3ODc5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361578799/reactions"
    },
    "updated_at": "2018-01-30T12:28:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361578799",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov What API specifically are you talking about here?",
    "created_at": "2018-01-30T13:00:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361586113",
    "id": 361586113,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTU4NjExMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361586113/reactions"
    },
    "updated_at": "2018-01-30T13:00:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361586113",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Mostly I meant our globbing and that #5789 API don't exist still.",
    "created_at": "2018-01-30T14:44:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-361614371",
    "id": 361614371,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTYxNDM3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361614371/reactions"
    },
    "updated_at": "2018-01-30T14:44:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/361614371",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@powercode:\r\n\r\nGood point about different providers: given that the items returned across providers don't implement a shared interface, we can't anticipate all item types using dedicated parameter sets.\r\n\r\nWhile giving preferential treatment to the FileSystem provider sounds sensible, wouldn't that require us to declare the `-LiteralPath` parameters as `[object]` and then reflect on the type (given that you can't have the same parameter name with different types in different parameter sets)?\r\nFor all other types, `.PSPath`-based could (continue to) be used, albeit with the fix proposed here for argument passing.\r\n\r\n@iSazonov:\r\n\r\n> If we implement using [FileInfo] internally then maybe your offer will look a little different (simpler).\r\n\r\nAgain, I feel the discrepancy discussed should be fixed in general, irrespective of the performance issues around file-related cmdlets.\r\n\r\nThere are two additional aspects:\r\n\r\n* For providers whose items are PowerShell-extended versions of general-use .NET types - `[System.IO.FileInfo]` again being a prime example - you don't get the `.PSPath` property if you instantiate such types directly (as opposed to obtaining instances via provider cmdlets) - see #4347.\r\n   * If a reflection-based `[object]` parameter is introduced to detect `[System.IO.FileInfo]`, `[System.IO.DirectoryInfo]` instances, that problem would go away for the FileSystem provider, but it could affect other providers too.\r\n\r\n* Arguably, for symmetry with `ValueFromPipelineByPropertyName`, a `ValueByPropertyName` parameter attribute should be introduced that allows the same type of property-name-based binding for _non_-pipeline parameters.\r\n\r\n",
    "created_at": "2018-01-31T22:38:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-362094962",
    "id": 362094962,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjA5NDk2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362094962/reactions"
    },
    "updated_at": "2018-03-01T17:44:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/362094962",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Note: in .Net Core 2.1 [File enumeration extensibility](https://github.com/dotnet/corefx/pull/26806). is expected",
    "created_at": "2018-02-05T15:31:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-363119541",
    "id": 363119541,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzExOTU0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/363119541/reactions"
    },
    "updated_at": "2018-02-05T15:31:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/363119541",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Some points: \r\n\r\n- The default position 0 parameter on commands that take paths is `Path` not `LiteralPath` so even if we enabled property binding from the command line it would have no effect.\r\n- It's `Path` not `LiteralPath` because people type paths and want to be able to use globbing.\r\n- It's of type string because that's what people type and that's what the providers consume universally.\r\n\r\nSo I don't see doing property binding from the command line as a win. On the other hand, this \r\n```powershell\r\nls -rec | foreach { test-path $_ }\r\n```\r\nis a recurring problem. Perhaps adding an argument transformation attribute to `Path` that converts `FileInfo` to a string by getting `.FullName` is the way to go. ",
    "created_at": "2018-06-19T23:51:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-398580724",
    "id": 398580724,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU4MDcyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/398580724/reactions"
    },
    "updated_at": "2018-06-19T23:51:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/398580724",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Perhaps adding an argument transformation attribute to Path that converts FileInfo to a string by getting .FullName is the way to go.\r\n\r\nWe could enhance `-Path` and `-LiteralPath` to accept FileInfo/DirectoryInfo/PathInfo/etc - it allow us to skip tons of re-parsings and tons of path normalizations.",
    "created_at": "2018-06-20T04:48:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-398623125",
    "id": 398623125,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODYyMzEyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/398623125/reactions"
    },
    "updated_at": "2018-06-20T06:20:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/398623125",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\nGood point about the 1st positional argument binding to `-Path`, so adding an argument transformation for `FileInfo`  / `DirectoryInfo` to all cmdlets that accept filesystem items via `-Path` sounds like a great idea (it should probably bind via `.PSPath` for symmetry with how `-LiteralPath` pipeline input currently binds).\r\n\r\nLonger-term, @iSazonov's idea of supporting these types _directly_ is desirable (though as previously discussed, that may require `[object]` parameters combined with reflection, so as to remain provider-neutral - or is there a better alternative?).\r\n\r\nThat said, the general symmetry that this issue asks for - bind by property whether the object came from the pipeline or by argument - is still worth implementing.\r\n\r\nIn the case at hand, if someone used `-LiteralPath` / `-lp` with an argument, they'd expect reliable full-path binding too:\r\n\r\n```powershell\r\nls -rec | foreach { test-path -LiteralPath $_ }  # !! Currently also unreliable\r\n```\r\n---\r\n\r\nOn a side note:\r\n\r\nThe stringification behavior of `FileSystem` actually changed since v6.0.2  and it seems that `FileInfo` instances now consistently stringify to their full path.\r\nWhile this would help, I suspect it was an unintentional breaking change - see  #7132\r\n",
    "created_at": "2018-06-21T16:14:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-399159974",
    "id": 399159974,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTE1OTk3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399159974/reactions"
    },
    "updated_at": "2018-06-21T16:14:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399159974",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Rather than making `-Path` and `-LiteralPath` take object, we could add another parameter set that took a `FileSystemInfo` object. That violates the egalitarian notion of all providers are equal but it solves the file system name problem.  However, even if we get the object into the cmdlet, using it more efficiently might be problematic as the entire provider infrastructure is based on the abstract notion of a path.",
    "created_at": "2018-06-22T00:43:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-399286074",
    "id": 399286074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTI4NjA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399286074/reactions"
    },
    "updated_at": "2018-06-22T00:43:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399286074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay: \r\n\r\nIrrespective of efficiency issues, wouldn't the parameter in that new parameter set have to have a _different name_?\r\n\r\nI guess we could bind to that parameter _positionally_, but introducing yet another parameter name may be confusing (`-FileSystemInfo` / `-FileInfo` / `-DirectoryInfo`?).\r\n\r\nAlso, many cmdlets only accept _file(s)_, so for them the type would have to be `FileInfo` only.",
    "created_at": "2018-06-22T02:09:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-399298728",
    "id": 399298728,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTI5ODcyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399298728/reactions"
    },
    "updated_at": "2018-06-22T02:09:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399298728",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We could have unified wrapper for all providers - `PathInfo`.",
    "created_at": "2018-06-22T05:42:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-399326724",
    "id": 399326724,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMyNjcyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399326724/reactions"
    },
    "updated_at": "2018-06-22T05:42:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399326724",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Here's a proof-of-concept (in PowerShell code) that makes do with the existing parameters and only requires attaching a new argument-transformation attribute to `-LiteralPath`.\r\n\r\nIt should work with all providers, given that they all decorate their items with a `.PSPath` property.\r\nThat said, I know little about providers, so there may be something I'm missing.\r\n\r\nThe approach relies on _non-string_ arguments seemingly getting bound to the parameter with the argument-transformation argument (`-LiteralPath`) even with _positional_ binding, which with _string_ input defaults to a different parameter, `-Path`, as per the default parameter set.\r\n\r\n```powershell\r\nusing namespace System.Management.Automation\r\n\r\n# Transforms objects that happen to have a  .PSPath property - assumed to be\r\n# PS provider items as returned by Get-Item / Get-ChildItem - to that property's\r\n# value.\r\n# Instances of all other types are passed through as-is.\r\nclass ProviderItemPathTransformationAttribute : ArgumentTransformationAttribute  {\r\n  [object] Transform([EngineIntrinsics] $engineIntrinsics, [object] $inputData) {\r\n    return $(foreach ($o in $inputData) { \r\n      if ($psPathProp = $o.psobject.Properties['PSPath']) {\r\n        $psPathProp.Value\r\n      } else {\r\n        $o\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction pathdemo {\r\n\r\n  [CmdletBinding(DefaultParameterSetName='Path', PositionalBinding=$false)]\r\n  param (\r\n    [Parameter(Mandatory, Position=0, ParameterSetName='Path', ValueFromPipeline, ValueFromPipelineByPropertyName)]\r\n    [string[]] $Path\r\n    ,\r\n    [Parameter(Mandatory, Position=0, ParameterSetName='LiteralPath', ValueFromPipelineByPropertyName)]\r\n    [ProviderItemPathTransformation()]\r\n    [Alias('LP', 'PSPath')]\r\n    [string[]] $LiteralPath\r\n  )\r\n\r\n  process {\r\n    @\"\r\n    Path:        $Path\r\n    LiteralPath: $LiteralPath\r\n\"@\r\n\r\n  }\r\n}\r\n```\r\n\r\nSample calls:\r\n\r\n```powershell\r\n# String input by argument: bind to -Path, as before:\r\nPS> pathdemo 'foo'\r\n    Path:        foo  \r\n    LiteralPath: \r\n\r\n# String input from the pipeline: bind to -Path, as before:\r\nPS> 'foo' | pathdemo\r\n    Path:        foo  \r\n    LiteralPath: \r\n\r\n\r\n# NEW: Provider-item input by argument: bind to -LiteralPath, via .PSPath, \r\n# using the argument-transformation attribute.\r\nPS> pathdemo (Get-Item /)\r\n    Path:        \r\n    LiteralPath: Microsoft.PowerShell.Core\\FileSystem::/\r\n\r\n# Provider-item input from the pipeline: bind to -LiteralPath, via .PSPath, \r\n# using the by-property binding via the 'PSPath' parameter alias, as before.\r\nPS> Get-Item / | pathdemo\r\n    Path:        \r\n    LiteralPath: Microsoft.PowerShell.Core\\FileSystem::/\r\n\r\n```\r\n\r\nAgain, note that while this approach happens to restore symmetry in recognizing input objects with a `.PSPath` property from both the pipeline and an argument _in this specific case_, that symmetry should be implemented generically.",
    "created_at": "2018-06-25T21:52:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-400107991",
    "id": 400107991,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDEwNzk5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400107991/reactions"
    },
    "updated_at": "2018-06-25T21:52:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400107991",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks for the great sample!\r\n\r\nIf we extract a string from `PSPath` argument and assign it to `LiteralPath`, we have to parse this string again internally. Seems we need something like `PSPathObject` - may be with `PathInfo` type. Although in this case the new parameter set will be better to exclude overheads.",
    "created_at": "2018-06-26T05:20:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-400182023",
    "id": 400182023,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDE4MjAyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400182023/reactions"
    },
    "updated_at": "2018-06-26T05:22:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400182023",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\nI fully agree that in the long run we should be passing _objects_ (as opposed to strings) around so as to also improve _performance_.\r\n\r\nMy approach was meant as an intermediate, easy-to-implement step in the right direction that at least addresses the _functional_ problem.\r\n\r\nIf someone is willing to take on the proper solution right away, that's great.\r\n\r\nAs for terminology: If we pass the output from, say, `Get-ChildItem` around, we're passing _items themselves_, not path-information objects.\r\n\r\nTherefore, my suggestion is to name the parameter `-Item`, and to implement a provider-independent item type named, e.g., `PSProviderItem`.\r\n\r\n",
    "created_at": "2018-06-26T12:27:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6057#issuecomment-400289060",
    "id": 400289060,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDI4OTA2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400289060/reactions"
    },
    "updated_at": "2018-06-26T12:27:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400289060",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
