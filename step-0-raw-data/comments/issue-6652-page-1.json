[
  {
    "author_association": "NONE",
    "body": "Have `override` methods been suggested?\r\n\r\nFor example I have had to implement GUIs while [overriding the WndProc method](https://gist.github.com/sancarn/00e44231eba3ac20123e10601f236175#windows-message-loop) before. So a way to override methods would be a great addition to Powershell classes.\r\n\r\nEdit:\r\n----\r\nI noticed #6418 suggested overriding property setters and getters. I suppose that is similar to this.",
    "created_at": "2018-05-05T22:57:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-386840816",
    "id": 386840816,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njg0MDgxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/386840816/reactions"
    },
    "updated_at": "2018-05-05T22:57:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/386840816",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7938900?v=4",
      "events_url": "https://api.github.com/users/sancarn/events{/privacy}",
      "followers_url": "https://api.github.com/users/sancarn/followers",
      "following_url": "https://api.github.com/users/sancarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/sancarn/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sancarn",
      "id": 7938900,
      "login": "sancarn",
      "node_id": "MDQ6VXNlcjc5Mzg5MDA=",
      "organizations_url": "https://api.github.com/users/sancarn/orgs",
      "received_events_url": "https://api.github.com/users/sancarn/received_events",
      "repos_url": "https://api.github.com/users/sancarn/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sancarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sancarn/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sancarn"
    }
  },
  {
    "author_association": "NONE",
    "body": "Is there any community projects that work around these issues for example? I cannot for the life of me get a decent project implemented in PS w/ classes broken out into a sensible manner without running into one of the above issues..",
    "created_at": "2018-05-16T04:27:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-389390734",
    "id": 389390734,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTM5MDczNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389390734/reactions"
    },
    "updated_at": "2018-05-16T04:27:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389390734",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6079540?v=4",
      "events_url": "https://api.github.com/users/christru/events{/privacy}",
      "followers_url": "https://api.github.com/users/christru/followers",
      "following_url": "https://api.github.com/users/christru/following{/other_user}",
      "gists_url": "https://api.github.com/users/christru/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/christru",
      "id": 6079540,
      "login": "christru",
      "node_id": "MDQ6VXNlcjYwNzk1NDA=",
      "organizations_url": "https://api.github.com/users/christru/orgs",
      "received_events_url": "https://api.github.com/users/christru/received_events",
      "repos_url": "https://api.github.com/users/christru/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/christru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christru/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/christru"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@christru You can take a look at my PoshBot module here: https://github.com/poshbotio/PoshBot\r\n\r\nThat module is almost entirely PowerShell class based.",
    "created_at": "2018-05-16T05:55:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-389403360",
    "id": 389403360,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQwMzM2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389403360/reactions"
    },
    "updated_at": "2018-05-16T05:55:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389403360",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12634452?v=4",
      "events_url": "https://api.github.com/users/devblackops/events{/privacy}",
      "followers_url": "https://api.github.com/users/devblackops/followers",
      "following_url": "https://api.github.com/users/devblackops/following{/other_user}",
      "gists_url": "https://api.github.com/users/devblackops/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/devblackops",
      "id": 12634452,
      "login": "devblackops",
      "node_id": "MDQ6VXNlcjEyNjM0NDUy",
      "organizations_url": "https://api.github.com/users/devblackops/orgs",
      "received_events_url": "https://api.github.com/users/devblackops/received_events",
      "repos_url": "https://api.github.com/users/devblackops/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/devblackops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devblackops/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/devblackops"
    }
  },
  {
    "author_association": "NONE",
    "body": "@devblackops as Iâ€™m litterally watching your YouTube video talk on classes.  Thanks buddy!",
    "created_at": "2018-05-16T05:57:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-389403753",
    "id": 389403753,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQwMzc1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389403753/reactions"
    },
    "updated_at": "2018-05-16T05:57:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389403753",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6079540?v=4",
      "events_url": "https://api.github.com/users/christru/events{/privacy}",
      "followers_url": "https://api.github.com/users/christru/followers",
      "following_url": "https://api.github.com/users/christru/following{/other_user}",
      "gists_url": "https://api.github.com/users/christru/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/christru",
      "id": 6079540,
      "login": "christru",
      "node_id": "MDQ6VXNlcjYwNzk1NDA=",
      "organizations_url": "https://api.github.com/users/christru/orgs",
      "received_events_url": "https://api.github.com/users/christru/received_events",
      "repos_url": "https://api.github.com/users/christru/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/christru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/christru/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/christru"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@christru Cool. I did the same talk at the PowerShell Summit. It is a more polished version. https://www.youtube.com/watch?v=i1DpPU_xxBc&list=PLfeA8kIs7CocGXuezOoYtLRdnK9S_Mq3e",
    "created_at": "2018-05-16T06:00:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-389404169",
    "id": 389404169,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTQwNDE2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389404169/reactions"
    },
    "updated_at": "2018-05-16T06:00:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/389404169",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12634452?v=4",
      "events_url": "https://api.github.com/users/devblackops/events{/privacy}",
      "followers_url": "https://api.github.com/users/devblackops/followers",
      "following_url": "https://api.github.com/users/devblackops/following{/other_user}",
      "gists_url": "https://api.github.com/users/devblackops/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/devblackops",
      "id": 12634452,
      "login": "devblackops",
      "node_id": "MDQ6VXNlcjEyNjM0NDUy",
      "organizations_url": "https://api.github.com/users/devblackops/orgs",
      "received_events_url": "https://api.github.com/users/devblackops/received_events",
      "repos_url": "https://api.github.com/users/devblackops/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/devblackops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devblackops/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/devblackops"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt I believe https://github.com/PowerShell/PowerShell/issues/8302 (classes don't produce valid interface property methods) should be filed under \"Other bugs\"",
    "created_at": "2018-11-22T00:41:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-440867558",
    "id": 440867558,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg2NzU1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/440867558/reactions"
    },
    "updated_at": "2018-11-22T00:41:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/440867558",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@IISResetMe currently classes don't allow overrides. Wouldn't the `virtual` addition be part of the interface inheritance?",
    "created_at": "2018-11-22T02:11:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-440891249",
    "id": 440891249,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg5MTI0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/440891249/reactions"
    },
    "updated_at": "2018-11-22T02:11:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/440891249",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt well, we already mark all generated methods `virtual`, allowing class definitions to inherit existing interfaces:\r\n\r\n```powershell\r\nclass PleaseDisposeOfMe : IDisposable\r\n{\r\n  [void]Dispose(){ <# free unmanaged resources #> }\r\n}\r\n```\r\n\r\nbut since we never mark the underlying get/set methods of properties virtual (looks like an oversight), you can't actually implement an interface with a property:\r\n\r\n```powershell\r\nclass MyPrincipal : System.Security.Principal.IPrincipal\r\n{\r\n  [System.Security.Principal.IPrincipal]$Identity\r\n  [bool]IsInRole()\r\n}\r\n\r\nAt line:2 char:1\r\n+ class MyPrincipal : System.Security.Principal.IPrincipal\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nError during creation of type \"MyPrincipal\". Error message:\r\nMethod 'get_Identity' in type '<404e3736>.MyPrincipal' from assembly 'â§¹powershell, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : TypeCreationError\r\n```",
    "created_at": "2018-11-22T12:10:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-441011360",
    "id": 441011360,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTAxMTM2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/441011360/reactions"
    },
    "updated_at": "2018-11-22T12:10:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/441011360",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Forgive some ignorance on my part, but looking at the number of issues and the complications that exist in classes in PowerShell today, I can't help but feel this is a design problem rather than a collection of issues/bugs to be addressed.\r\n\r\nWouldn't it make more sense and be much easier if:\r\n\r\n* PowerShell had a new module type specifically for class definitions, called something like class module that could only include class definitions, with a psx1 file extension; nothing else would be allowed in these files (no functions, variables, command invocations, etc.)\r\n* `Import-Module` automatically recognized psx1 files defined in `RootModule`, or class modules included in `NestedModules`, or `RequiredModules` fields in a module manifest, as well as psx1 modules that don't have a manifest at all, and loaded the types defined in those psx1 files accordingly (`RequiredModules` first, then `NestedModules`, then `RootModule`, so that you can derive from other types in other modules)\r\n* PowerShell automatically identified classes derived from `PSCmdlet` and added them to the current session without the extra work that is being done [here](https://www.indented.co.uk/cmdlets-without-a-dll/).\r\n* PowerShell automatically exported classes that are associated with cmdlets that are exported from a module.\r\n* PowerShell supported `ClassesToExport` in module manifests to identify types in modules so that implicit loading could still work, even with classes.\r\n* `Export-ModuleMember` had a `-Class` parameter to explicitly identify which classes you want to export\r\n\r\nOne of the drivers behind this approach is that it would do away with the need for `using` for modules containing classes, and supports `#requires`, `NestedModules`, `RequiredModules`, which makes installing modules from the PowerShell Gallery work as expected, and everything else that people already do with `Import-Module` today. Having both `using` and `Import-Module` is confusing and already requires a lot of re-thinking when it comes to how you set up modules to properly load classes. It also facilitates defining an equivalent of binary modules from within PowerShell itself.\r\n\r\nThere are more thoughts behind this, but I've shared enough to see what others think for now.",
    "created_at": "2018-12-05T16:51:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-444557931",
    "id": 444557931,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDU1NzkzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 9,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 9,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444557931/reactions"
    },
    "updated_at": "2018-12-05T18:37:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444557931",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "On second thought, I'd prefer not having to deal with `Export-ModuleMember` or `ClassesToExport` as suggested in those last two bullets at all, having psx1 files be a PowerShell-ish equivalent of a type library, with types automatically exported just as they are with dlls (ideally with something resembling public/private to control visibility). With that approach, the last three bullets wouldn't be necessary -- classes would just be loaded and available once a module was imported.",
    "created_at": "2018-12-05T18:42:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-444595985",
    "id": 444595985,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDU5NTk4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444595985/reactions"
    },
    "updated_at": "2018-12-05T18:44:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444595985",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "My random thoughts:\r\n\r\n* Not adding `ClassesToExport` was intentional, and type are public to help make the interactive experience good.\r\n* I'm skeptical that auto-loading types is a good idea, at least as a default.\r\n* Defining cmdlets via classes is useful and doesn't require a new module type.\r\n* Not being able to define functions seems a bit harsh, but I like the intention. In a new module type we could have strict functions, and these functions could even be compiled like cmdlets, convert parameters to properties, etc. This isn't exactly easy, but I think it's fairly mechanical.",
    "created_at": "2018-12-05T18:56:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-444600517",
    "id": 444600517,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDYwMDUxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444600517/reactions"
    },
    "updated_at": "2018-12-05T18:56:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444600517",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, _clearly_ it would be a great thing if Importing a module automatically included Cmdlet-derived classes as commands. \r\n\r\nBut that circles around to `Import-Module` _and also_ `using module`  -- needing to explicitly `using` a module, even though I've already explicitly imported (or `Nested` or `Required`) it is one of the biggest pain point with classes for users.\r\n\r\n@lzybkr I don't quite understand why you think leaving off the `ClassesToExport` feature and requiring me to export them by outputting them (or the user to import them with a _second_ line of code) is a good thing: binary modules do this _as a matter of course_,  I mean, I don't need that to result in auto-loading, but I want `Import-Module` to be **enough** so that every class I use as a parameter type (or a property of a parameter type) is available to the user.\r\n\r\nOf course, I also think we should actually _namespace_ the classes by module (i.e. `[ModuleName.ClassName]`) -- that would certainly become _critical_ if you started thinking about auto-loading / implicit loading. \r\n",
    "created_at": "2018-12-05T19:13:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-444606557",
    "id": 444606557,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDYwNjU1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444606557/reactions"
    },
    "updated_at": "2018-12-05T19:13:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444606557",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Uh, I wasn't suggesting \"outputting them\" either - you define a class in a psm1, it's exported. All classes are exported, simple as that.\r\n\r\nI was never a fan of the `*ToExport` properties in the manifest, it feels like it violates the [DRY principle](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself). As an optimization, it seems fine, but I'd rather it be a build artifact.\r\n\r\nAnd classes are modeled more like an assembly - public types don't require any entries in the module manifest.\r\n\r\nThe need for `Import-Module` and `using module` isn't really by design, it's more like we didn't have enough time to work out all the issues and people found workarounds that we live with because it seems to work. Obviously the intention was to have a more static world that you could reason about.\r\n\r\n",
    "created_at": "2018-12-06T00:52:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-444707541",
    "id": 444707541,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDcwNzU0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444707541/reactions"
    },
    "updated_at": "2018-12-06T00:52:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444707541",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Any chances we could get constructor chaining on the radar at some point, too? ðŸ˜„ ",
    "created_at": "2018-12-16T21:47:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-447679019",
    "id": 447679019,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzY3OTAxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447679019/reactions"
    },
    "updated_at": "2018-12-16T21:47:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447679019",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@rjmholt rjmholt  One of my old issues about classes  (from MS Connect) was not on your,  so I search all issues open  (missed + new) and compare with your list : \r\n\r\n [#1760](https://github.com/PowerShell/PowerShell/issues/1760) Inheritance from class with abstract property is inconsistent \r\n[#1751](https://github.com/PowerShell/PowerShell/issues/1751) format-* cmdlets cannot display hidden class members \r\n[#2217](https://github.com/PowerShell/PowerShell/issues/2217) Allow (some) method names that happen to be keywords \r\n[#2219](https://github.com/PowerShell/PowerShell/issues/2219) Properties with accessor and mutator methods\r\n[#2225](https://github.com/PowerShell/PowerShell/issues/2225) Comment-based Help for classes \r\n[#2841](https://github.com/PowerShell/PowerShell/issues/2841) PowerShell class defined in 'New-Module -ScriptBlock' doesn't work as expected\r\n[#2876](https://github.com/PowerShell/PowerShell/issues/2876) Enable native interop with static extern class methods \r\n[#4113](https://github.com/PowerShell/PowerShell/issues/4113) Running `using module f:\\tmp\\test` in global scope doesn't load the powershell class defined in the module to the global scope, while `using module f:\\tmp\\test\\test.psm1` does \r\n[#4713](https://github.com/PowerShell/PowerShell/issues/4713) PowerShell class methods cannot invoke non-exported functions.\r\n[#5332](https://github.com/PowerShell/PowerShell/issues/5332) Inheritance from interface and class are inconsistent \r\n[#5392](https://github.com/PowerShell/PowerShell/issues/5392) Suggestion: Implement Yield Return for Class Methods\r\n[#5796](https://github.com/PowerShell/PowerShell/issues/5796) Method parameter attributes are ignored \r\n[#6722](https://github.com/PowerShell/PowerShell/issues/6722) Type checking in PowerShell class method bodies is not needed \r\n[#7287](https://github.com/PowerShell/PowerShell/issues/7287) Custom classes and enums are not recognized by tab completion \r\n[#7294](https://github.com/PowerShell/PowerShell/issues/7294) Classes: an uninitialized [string] property defaults to $null rather than the empty string #7294\r\n[#7506](https://github.com/PowerShell/PowerShell/issues/7506) Permit specifying parameter names for constructors / .NET methods \r\n[#7654](https://github.com/PowerShell/PowerShell/issues/7654) \"Using module\" statement does not reload module after changes are made _(Note : We are forced to used the keyword using to import properly another module)\r\n[#7736](https://github.com/PowerShell/PowerShell/issues/7736) When powershell class method has same name as property, the property disapear and is not accessible from any instance \r\n[#8235](https://github.com/PowerShell/PowerShell/issues/8235) Class : Methods and properties can't have the same name\r\n[#8475](https://github.com/PowerShell/PowerShell/issues/8475) `using module` fails to check already-loaded modules for available custom types #8475\r\n[#8767](https://github.com/PowerShell/PowerShell/issues/8767) [BUG] Custom classes can be redefined in the same scope, via dot-sourcing, take effect in delayed fashion \r\n[#8828](https://github.com/PowerShell/PowerShell/issues/8828) class based DscResource requires inherited class to be in same file\r\n[#9106](https://github.com/PowerShell/PowerShell/issues/9106) keywords in class method names meaningless error message\r\n[#9174](https://github.com/PowerShell/PowerShell/issues/9174) Custom class methods do not complain about an unassigned $args variable \r\n[#9313](https://github.com/PowerShell/PowerShell/issues/9313) PowerShell classes leak to other runspaces on macOS #9313\r\n[#9445](https://github.com/PowerShell/PowerShell/issues/9445)PowerShell class syntax doesn't support multiple conversion operators with the same input type \r\n\r\n\r\n\r\n",
    "created_at": "2019-04-23T14:59:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-485840472",
    "id": 485840472,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTg0MDQ3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 6,
      "laugh": 0,
      "rocket": 0,
      "total_count": 11,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485840472/reactions"
    },
    "updated_at": "2019-04-23T15:00:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485840472",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "NONE",
    "body": "I began to report classes issues with PS 5.0 Preview April and nothing has changed in 4 years. (no interface,  forbidden methods names not consistant, override isn't implemented , bugged using...)\r\n\r\nFrom my point of view,  there is only one solution to solve this big issue : \r\n- Classes with function support with a limited scenario (Class parser to IL)\r\n- SuperClasses without function support but able to manage a runspace/runspace pool (Class parser to assembly)\r\n\r\nThis SuperClass  need a very big improvement in the parser because we don't want another limited classes. To be clear, I want a class parser like PSLambda for Roslyn.\r\n\r\nI don't know if, writing a new extended parser and asking Roslyn to do the job, is more difficult than resolved all these issues. But we are all waiting for a real statement from PowerShell comitee around classes.\r\n\r\n@SteveL-MSFT To be honested, the aim behind classes are not to write  2 or 3 + 10 methods ... functions already do that !  Can we take a full scenario to determine priority ? I've got one if you want : AspNet Core on PowerShell. (even [IronPython](https://github.com/IronLanguages/ironpython-aspnet-mvc) had this scenario in net4)\r\n\r\nI want to resolve this issue in priority because it's very very dangerous : [#5332](https://github.com/PowerShell/PowerShell/issues/5332)",
    "created_at": "2019-04-23T16:59:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-485888619",
    "id": 485888619,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTg4ODYxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485888619/reactions"
    },
    "updated_at": "2019-04-23T18:14:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485888619",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "For reference #9382. Maybe we could make friends with these areas.",
    "created_at": "2019-04-23T17:49:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-485906715",
    "id": 485906715,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTkwNjcxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485906715/reactions"
    },
    "updated_at": "2019-04-23T17:49:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485906715",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rjmholt, I think #8028 has been completed and closed now as of PS Core 6.2.",
    "created_at": "2019-04-25T18:46:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-486793088",
    "id": 486793088,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Njc5MzA4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/486793088/reactions"
    },
    "updated_at": "2019-04-25T18:46:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/486793088",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26179051?v=4",
      "events_url": "https://api.github.com/users/msftrncs/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftrncs/followers",
      "following_url": "https://api.github.com/users/msftrncs/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftrncs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/msftrncs",
      "id": 26179051,
      "login": "msftrncs",
      "node_id": "MDQ6VXNlcjI2MTc5MDUx",
      "organizations_url": "https://api.github.com/users/msftrncs/orgs",
      "received_events_url": "https://api.github.com/users/msftrncs/received_events",
      "repos_url": "https://api.github.com/users/msftrncs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftrncs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftrncs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/msftrncs"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Hopefully this is a 7.1 target! :)",
    "created_at": "2019-11-29T20:28:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-559876446",
    "id": 559876446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg3NjQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 9,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 2,
      "rocket": 0,
      "total_count": 11,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559876446/reactions"
    },
    "updated_at": "2019-11-29T20:28:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559876446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15258962?v=4",
      "events_url": "https://api.github.com/users/JustinGrote/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustinGrote/followers",
      "following_url": "https://api.github.com/users/JustinGrote/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinGrote/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustinGrote",
      "id": 15258962,
      "login": "JustinGrote",
      "node_id": "MDQ6VXNlcjE1MjU4OTYy",
      "organizations_url": "https://api.github.com/users/JustinGrote/orgs",
      "received_events_url": "https://api.github.com/users/JustinGrote/received_events",
      "repos_url": "https://api.github.com/users/JustinGrote/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustinGrote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinGrote/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustinGrote"
    }
  },
  {
    "author_association": "NONE",
    "body": "Hi. Can you please add [Named and Optional Arguments (C# Programming Guide)](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/named-and-optional-arguments) to the list?\r\nOptional: https://github.com/PowerShell/PowerShell/issues/9701 https://github.com/PowerShell/PowerShell/issues/7534\r\nNamed: https://github.com/PowerShell/PowerShell/issues/13520 https://github.com/PowerShell/PowerShell/issues/13307",
    "created_at": "2020-08-26T08:18:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-680732961",
    "id": 680732961,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDczMjk2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/680732961/reactions"
    },
    "updated_at": "2020-08-26T18:13:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/680732961",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6960531?v=4",
      "events_url": "https://api.github.com/users/ili101/events{/privacy}",
      "followers_url": "https://api.github.com/users/ili101/followers",
      "following_url": "https://api.github.com/users/ili101/following{/other_user}",
      "gists_url": "https://api.github.com/users/ili101/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ili101",
      "id": 6960531,
      "login": "ili101",
      "node_id": "MDQ6VXNlcjY5NjA1MzE=",
      "organizations_url": "https://api.github.com/users/ili101/orgs",
      "received_events_url": "https://api.github.com/users/ili101/received_events",
      "repos_url": "https://api.github.com/users/ili101/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ili101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ili101/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ili101"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Didn't see this in the issue list, I can create a separate issue:\r\n\r\nThe array representation of a class (e.g. `Mything[]`) can't be referenced if the class definition is in another file.\r\n\r\n```ps\r\n#Class.ps1\r\nclass Test {[String]$Name}\r\n```\r\n\r\n```\r\n#Usage.ps1\r\n. $PSScriptRoot/Class.ps1\r\n$myTest = [Test]@{Name='Yay'}\r\n[Test[]]$myTest\r\n```\r\nWill error with `ArgumentException: Could not find type [].`. Put them in the same file and it works fine however.\r\n\r\nEDIT: This was actually more of a Pester thing, -BeOfType doesn't work with Powershell Classes. Workaround: Use `$item.GetType().Name | Should -Be 'ClassName'`. This should still work natively ideally so leaving it here.",
    "created_at": "2022-01-25T21:58:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-1021648203",
    "id": 1021648203,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "IC_kwDOAvT7bc485R1L",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1021648203/reactions"
    },
    "updated_at": "2022-01-26T00:03:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1021648203",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15258962?v=4",
      "events_url": "https://api.github.com/users/JustinGrote/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustinGrote/followers",
      "following_url": "https://api.github.com/users/JustinGrote/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinGrote/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustinGrote",
      "id": 15258962,
      "login": "JustinGrote",
      "node_id": "MDQ6VXNlcjE1MjU4OTYy",
      "organizations_url": "https://api.github.com/users/JustinGrote/orgs",
      "received_events_url": "https://api.github.com/users/JustinGrote/received_events",
      "repos_url": "https://api.github.com/users/JustinGrote/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustinGrote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinGrote/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustinGrote"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@JustinGrote Please open new issue to discuss your scenario. Then I could add the issue to the tracking list.",
    "created_at": "2022-01-26T15:12:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6652#issuecomment-1022293040",
    "id": 1022293040,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6652",
    "node_id": "IC_kwDOAvT7bc487vQw",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1022293040/reactions"
    },
    "updated_at": "2022-01-26T15:12:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1022293040",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
