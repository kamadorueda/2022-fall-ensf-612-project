[
  {
    "author_association": "COLLABORATOR",
    "body": "From examples above it is not clear that is desired output. Can we get it with a workaround like Out-String or anything like?",
    "created_at": "2019-10-08T06:58:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539370273",
    "id": 539370273,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTM3MDI3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539370273/reactions"
    },
    "updated_at": "2019-10-08T06:58:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539370273",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I both love the idea and agree that it should have been the default behavior.\r\n\r\n@iSazonov, I think of it as the equivalent of piping to `Out-String -Stream` first, and then performing the usual line-by-line search.\r\n\r\nIn fact, in my profile I have the following _simple_ function:\r\n\r\n```powershell\r\nSet-Alias slsd Select-DisplayString\r\nfunction Select-DisplayString\r\n{\r\n  # Note: Since we want to use $Input for simplicity, we canNOT\r\n  #       make this an advanced function.\r\n  param([string[]] $Pattern)\r\n\r\n  if ($args.Count) { Throw \"Unexpected arguments specified: $args\" }\r\n\r\n  if ($Pattern) {\r\n    $input | Out-String -Stream | Select-String -Pattern $Pattern\r\n  }\r\n  else {\r\n    $input | Out-String -Stream\r\n  }\r\n\r\n}\r\n```\r\n\r\nExample use, in a directory that has files / directories that are symlinks, such as `/` on macOS:\r\n\r\n```\r\nPS> Get-ChildItem | Select-DisplayString ^l\r\nl-r--            7/2/2012  3:31 PM                User Guides And Information -> /Library/Documentation/User Guides And Information.localized\r\nl-r--          12/20/2012  5:55 PM                User Information -> /Library/Documentation/User Information.localized\r\n```\r\n\r\nThat is, the for-display output of `Get-ChildItem` was filtered by the first character on each line, which is the `Mode` column, whose first character being `l` indicates a symlink.\r\n\r\n",
    "created_at": "2019-10-08T13:54:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539525220",
    "id": 539525220,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTUyNTIyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539525220/reactions"
    },
    "updated_at": "2019-10-08T13:54:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539525220",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I wonder if we could do a simple check... Something like:\r\n```csharp\r\nstring objectString = LanguagePrimitives.ConvertTo<string>(InputObject);\r\nif (objectString == InputObject.BaseObject.GetType().Fullname)\r\n{\r\n    // Use out-string on InputObject\r\n}\r\nelse\r\n{\r\n    // Use objectString\r\n}\r\n```\r\nThat way we only have the object being resolved this way if there are no other conversion paths available. This would also be a good candidate for an experimental feature if we have concerns about the possibly breaking change.",
    "created_at": "2019-10-08T14:06:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539530394",
    "id": 539530394,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTUzMDM5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539530394/reactions"
    },
    "updated_at": "2019-10-08T14:07:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539530394",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To get straight to bike-shedding regarding what to name the new switch:\r\n\r\nWe already have switches that modify _output_ behavior with prefix `As`, such as `-AsHashtable` and `-AsString` for `Group-Object`.\r\n\r\nAs for _input_ treatment, the only instance I could find that _somewhat_ fits is `Copy-Item`'s `-FromSession`\r\n\r\n`From` as the prefix strikes me as reusable, so  perhaps `-FromDisplay` [representation] or `-FromDisplayOutput`.\r\n\r\nIn any event, incorporating the word _display_ strikes me as preferable to _console_.\r\n",
    "created_at": "2019-10-08T14:14:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539533811",
    "id": 539533811,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTUzMzgxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539533811/reactions"
    },
    "updated_at": "2019-10-08T14:14:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539533811",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32: That test isn't sufficient, I'm afraid, because there are cases with different `.ToString()` behavior that is still distinct from PowerShell's output formatting; e.g., on _Windows_:\r\n\r\n```powershell\r\nPSonWin> (Get-Process)[0].psobject.BaseObject.ToString()\r\nSystem.Diagnostics.Process (ApplicationFrameHost)\r\n```\r\n\r\nEdit: Note how the output is _more_ than just the full type name - the process image name is appended.",
    "created_at": "2019-10-08T14:16:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539534837",
    "id": 539534837,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTUzNDgzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539534837/reactions"
    },
    "updated_at": "2019-10-08T15:01:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539534837",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mklement0: I like the `-From` prefix for the parameter name. Maybe we should also borrow the fact that this is related to the `Out-String` `-Stream` parameter, and call it `-FromInputStream` (or maybe `-StreamInput`, since that's stating what the switch would do?). I like those better than `-FromDisplay`, because this is more about streaming object input into the command. It could be described as follows:\r\n\r\n> Indicates that the cmdlet searches for text and text patterns in streamed input. Objects piped into this command will first be rendered in their default format, and that output will be streamed into this command for text matching. By default, objects piped into this command are converted into their string equivalent using their `ToString` method, and that output is used in this command for text matching.\r\n\r\nThat's a little wordy, but something along those lines should do.",
    "created_at": "2019-10-08T14:38:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539544709",
    "id": 539544709,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NDcwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539544709/reactions"
    },
    "updated_at": "2019-10-08T14:50:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539544709",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement `LanguagePrimitives.ConvertTo<string>()` is not the same as `.ToString()`; it will follow the same behaviour as a `[string]` cast in PowerShell.\r\n\r\nBesides, I thought that's exactly what we wanted -- if the object does not have a direct string conversion, we go a different method and run it through Out-String first before having Select-String parse it. So that would hit the test correctly -- Select-String would grab the value, see it's the same as the object's type name, and then pass the PSObject through Out-String before attempting to process the value.\r\n\r\nEDIT: Oh, I see what you mean, there's an extra piece attached to that ToString() huh... hmm. maybe if the conversion to string `.StartsWith()` the type name?",
    "created_at": "2019-10-08T14:38:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539545167",
    "id": 539545167,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NTE2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539545167/reactions"
    },
    "updated_at": "2019-10-08T14:40:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539545167",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32 That's still not sufficient, because you're dependent on how the creator of the object wanted it to render as a single string in that case. For example:\r\n\r\n![image](https://user-images.githubusercontent.com/3515485/66405466-8ff98d80-e9c0-11e9-896f-6db53a62d96c.png)\r\n\r\nThis is different. It's about being able to explicitly indicate you want the object streamed into `Select-String` with its default output, so that you can select string matches from that.",
    "created_at": "2019-10-08T14:41:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539546448",
    "id": 539546448,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NjQ0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539546448/reactions"
    },
    "updated_at": "2019-10-08T14:41:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539546448",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro aye, I think the explicit switch is a good idea. However, I also think that (perhaps as an experimental feature), Select-String could (should?) attempt to detect when its InputObjects are being converted into useless data and attempt to automatically compensate, using the behaviour that can also be forced with a switch.",
    "created_at": "2019-10-08T14:43:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539547258",
    "id": 539547258,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NzI1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539547258/reactions"
    },
    "updated_at": "2019-10-08T14:43:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539547258",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32 Here's another example showing how it is different:\r\n\r\n![image](https://user-images.githubusercontent.com/3515485/66405634-cb945780-e9c0-11e9-87ed-eb031870e739.png)\r\n\r\nIf I want to select \"October\", I can only do that from the rendered output.",
    "created_at": "2019-10-08T14:43:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539547323",
    "id": 539547323,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NzMyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539547323/reactions"
    },
    "updated_at": "2019-10-08T14:43:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539547323",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> However, I also think that (perhaps as an experimental feature), Select-String could (should?) attempt to detect when its InputObjects are being converted into useless data and attempt to automatically compensate, using the behaviour that can also be forced with a switch.\r\n\r\nMaybe. That might just be another source for confusion though since the way an object renders as string is 100% dependent on how the author decided to implement it, and there's really no model for consistency there.\r\n\r\nI'd just like to see it work this way by default. `Select-String` is often associated with `grep`, but users of `grep` expect to select information that they would see in a console if they were to output it there, not information that comes from a method and varies from object to object. If you're getting into object methods or properties, there are better commands for that.",
    "created_at": "2019-10-08T14:48:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539549721",
    "id": 539549721,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0OTcyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539549721/reactions"
    },
    "updated_at": "2019-10-08T14:48:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539549721",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That's a good point... Yeah, I can't really see any reason I'd pipe complex objects into `Select-String` without `Out-String` at present. 🤔 ",
    "created_at": "2019-10-08T15:16:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-539562683",
    "id": 539562683,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU2MjY4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539562683/reactions"
    },
    "updated_at": "2019-10-08T15:16:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539562683",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Note to self: when implementing this, consider #8963 (i.e. What happens if you're selecting text that is formatted and possibly colored/highlighted already -- will the highlighting still work properly and provide a good experience for users)?",
    "created_at": "2019-10-09T15:26:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-540052708",
    "id": 540052708,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDA1MjcwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540052708/reactions"
    },
    "updated_at": "2019-10-09T15:26:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540052708",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32: Re `.ToString()`: I should have worded by comment more clearly (since amended), but it sounds like we're all on the same page now.\r\n\r\n@KirkMunro:\r\n\r\n> Maybe we should also borrow the fact that this is related to the Out-String -Stream parameter, and call it -FromInputStream (or maybe -StreamInput, since that's stating what the switch would do?)\r\n\r\nI think _streaming_ is too general a term, and the connection with `Out-String` may not be obvious; after all, the term is also applied to how the pipeline functions _fundamentally_: _objects_ stream through the pipeline.\r\n\r\nWhat's specific to the scenario at hand is that it is _text-line-by-text-line_ streaming derived from the _for-display_ output (as rendered by PowerShell's formatting system).\r\n\r\nI think the word _display_ offers an important hint, and if we want to also incorporate the line-by-line aspect, we could use `-FromDisplayOutputLines` (the use of the plural is nonstandard, but the singular sounds awkward), though that is quite verbose.\r\n\r\nMy  thinking was that mentioning lines wouldn't be necessary, as my sense is that line-by-line search is what users would naturally expect, in line with `grep` and `findstr`.\r\n\r\nEither way we should also think about a short alias name, such as `-dl`.\r\n \r\n\r\n",
    "created_at": "2019-10-09T19:17:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-540149250",
    "id": 540149250,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDE0OTI1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540149250/reactions"
    },
    "updated_at": "2019-10-09T19:17:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540149250",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Seems kind of wordy... hmm. What do you think of something like `-FromFormat`?",
    "created_at": "2019-10-09T20:13:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-540171442",
    "id": 540171442,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDE3MTQ0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540171442/reactions"
    },
    "updated_at": "2019-10-09T20:13:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540171442",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "My original thought was that _display_ was a less formal term to guide those potentially not even aware of PowerShell's output formatting system.\r\n\r\nHowever, _format_ to refer to the formatting system is technically more accurate, so I like the idea, and it would also give us as nicely alliterative alias name, `-ff`.\r\n\r\nI'm still tempted to be a little more wordy - `-FromFormattedOutput` - and then rely on prefix name matching (`-FromFormat`) or the alias name for brevity.\r\n\r\n",
    "created_at": "2019-10-10T13:37:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-540586588",
    "id": 540586588,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDU4NjU4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540586588/reactions"
    },
    "updated_at": "2019-10-10T13:37:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540586588",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I think the value proposition here is clear, and I like the ideas around the parameter name (thanks for participating in that discussion @vexx32 and @mklement0!), so I'll probably move forward with `-FromFormattedOutput` for now in a PR and then change it later if the PowerShell Committee has something else they would prefer.",
    "created_at": "2019-10-10T14:16:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-540608518",
    "id": 540608518,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDYwODUxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 2,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540608518/reactions"
    },
    "updated_at": "2019-10-10T14:16:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540608518",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 I like the `-ff` alias' similarity to `-f` for `-Force`, as though it's an \"I really don't care _how_ you do it, just _make_ it a string and work with it! 💢\" kind of switch, which is kind of fitting. 😂 ",
    "created_at": "2019-10-10T21:04:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-540795330",
    "id": 540795330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc5NTMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 1,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540795330/reactions"
    },
    "updated_at": "2019-10-10T21:04:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540795330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I was just watching a 30-minute demo of Docker streamed from Ignite, when the presenter ran this command:\r\n\r\n```PowerShell\r\nGet-Process | findstr smss\r\n```\r\n\r\nThis is exactly what `Select-String` should be able to do by default, rather than switching to `findstr` or `grep`. In fact, consulting [the `Select-String` documentation](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-7#description) shows that it is even documented to work similarly to both `grep` and `findstr`, yet as demonstrated by the difference in output from `gps | findstr smss` and `gps | sls smss`, you can see that `Select-String` does not function like `findstr` or `grep`, which work against the textual output of a command.\r\n\r\nGiven that's the case, I'm hopeful the PowerShell Committee votes in favor of not having an additional parameter to get this behavior.",
    "created_at": "2019-11-06T21:14:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-550503197",
    "id": 550503197,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUwMzE5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/550503197/reactions"
    },
    "updated_at": "2019-11-06T21:14:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/550503197",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, since this is about selecting **strings**, you'd think that when the command doesn't get string input, it would automatically run the object through the formatting engine to get the formatted string to search.",
    "created_at": "2019-11-06T21:27:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-550508016",
    "id": 550508016,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MDUwODAxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/550508016/reactions"
    },
    "updated_at": "2019-11-06T21:27:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/550508016",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good points, @KirkMunro  and @rkeithhill; I think changing the default behavior makes perfect sense and strikes me as  a [bucket 3](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) change:\r\n\r\n* On the  _input_ side, there are probably not too many people who rely on the current behavior, as it is either near-useless or hard to predict (you'd have to know what a particular input type stringifies to with `.ToString()`, which is often just the full type name, and otherwise non-standardized and not typically visible in PowerShell).\r\n\r\n* I wish we could also change the default behavior on the _output_ side - have `Select-String` output _strings_ by default - but that would obviously be a prohibitive breaking change; at least we have the `-Raw` switch now, however.\r\n",
    "created_at": "2019-11-10T13:15:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-552193855",
    "id": 552193855,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE5Mzg1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552193855/reactions"
    },
    "updated_at": "2019-11-10T13:15:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552193855",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> at least we have the -Raw switch now, however.\r\n\r\nIt looks very specific and Out-String works.",
    "created_at": "2019-11-10T14:28:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-552199692",
    "id": 552199692,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE5OTY5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552199692/reactions"
    },
    "updated_at": "2019-11-10T14:28:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552199692",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 If I understand right you say that no need to have FromFormattedOutput parameter?",
    "created_at": "2019-11-10T14:30:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-552199893",
    "id": 552199893,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjE5OTg5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552199893/reactions"
    },
    "updated_at": "2019-11-10T14:31:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552199893",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> It looks very specific and Out-String works.\r\n\r\nThe `-Raw` switch is already implemented - even though you could always do `Out-String -Stream` or `(...).Line`, `-Raw` is clearly an improvement in terms of both convenience and performance.\r\nI simply pointed `-Raw` out, because it isn't well-known yet - your response being a case in point.\r\n\r\n> If I understand right you say that no need to have FromFormattedOutput parameter?\r\n\r\nYes, we are now advocating simply changing the _default behavior_ for non-string input.\r\n\r\n ",
    "created_at": "2019-11-10T14:45:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-552201086",
    "id": 552201086,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjIwMTA4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552201086/reactions"
    },
    "updated_at": "2019-11-10T14:53:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552201086",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Heading into @PowerShell/powershell-committee meeting in a few mins, just got through this thread and wanted to get a few thoughts out:\r\n\r\n* I absolutely agree that it's a valuable scenario to want to filter the formatted received at the console. I use `findstr` and `grep` all the time (and if I ever get around to setting up [this](https://devblogs.microsoft.com/commandline/integrate-linux-commands-into-windows-with-powershell-and-the-windows-subsystem-for-linux/), I'll just use `grep` everywhere).\r\n* My inclination in reading through the thread is actually to lean towards an entirely new cmdlet with the reasoning that it sounds like there's multiple behaviors one might want, and an expanding matrix of parameters on `Select-String` doesn't sound awesome. Don't get hung up on the name, but I think something like a `Select-FormattedOutput`, `Select-FormattedString`, `Select-Output`, `Select-HostOutput`, `Select-HostText`, `Select-Text` etc. would be helpful.\r\n* I'm very worried about breaking changes to `Select-String`. Not picking on you at all, @mklement0 (I saw this sentiment throughout the thread), but with regards to this statement:\r\n  > On the input side, there are probably not too many people who rely on the current behavior, **as it is either near-useless or hard to predict**\r\n\r\n  The issue with breaking changes is that often folks have hardcoded themselves to work around \"hard to predict\" behaviors. Take @KirkMunro's `Get-Date` example: the default `ToString()` doesn't return what's output by the default formatter. Maybe I did it once, realized that the string name of the month wasn't in the part parsed by `Select-String`, and now I'm actually trying to parse \"12/18/2019 2:52:23 PM\" as a mm/dd/yyyy string and hand it to some native utility. This breaks me catastrophically. \r\n\r\nTo that end, I propose that one or two people actually build this, throw it up on the Gallery, and then we can actually play with an implementation and decide what fits right across multiple platforms (I have a strong feeling we won't get it right on the first try). \r\n\r\nMight it actually just be a wrapper on findstr and grep depending on platform? Or is there a reason we would want this to be fully implemented in PowerShell land?",
    "created_at": "2019-12-18T23:01:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-567251129",
    "id": 567251129,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI1MTEyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567251129/reactions"
    },
    "updated_at": "2019-12-18T23:59:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567251129",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PowerShell/powershell-committee discussed this, and we agree it should be started in the Gallery by folks in the community. Primarily, we question the overall usefulness of this given the existing `findstr` and `grep` on platforms. If there's an elegant design that proves to be popular, we can consider including it in the future. \r\n\r\nWe do agree that we should stop telling new users that `Select-String`/`sls` is our `grep` equivalent and document the existing utilities and `foo | Out-String | Select-String 'bar'` workaround better.\r\n\r\nOh, and we bikeshedded on the name of the cmdlet for a while. No one's in agreement, so I threw every possible one that folks threw out into my previous comment",
    "created_at": "2019-12-19T00:09:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-567269540",
    "id": 567269540,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI2OTU0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567269540/reactions"
    },
    "updated_at": "2019-12-19T00:09:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567269540",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@joeyaiello What is the perceived value in adding another cmdlet to do essentially the same job? :confused:\r\n\r\nThe way I see it at the moment is:\r\n\r\n1. We _have_ a `Select-String` cmdlet,\r\n2. for which a lot of potential piped input is effectively useless, because\r\n3. most objects' `ToString()` values are significantly less useful than their `Out-String` values.\r\n\r\nAdding another cmdlet effectively only duplicates `Select-String` (and likely quite a lot of code if we're not very careful and do a lot of refactoring of the original cmdlet _as well_), and would effectively make `Select-String` a second-class citizen -- we introduce a new cmdlet that does everything `Select-String` does, _and more_, and then Select-String becomes effectively useless, since the new cmdlet would already do what Select-String does.\r\n\r\nI don't see a particular need for this to _be_ a whole extra cmdlet, and nor do I think adding one additional parameter would be a huge change for this cmdlet. If we're talking adding parameters to `Invoke-WebRequest`, sure, cause for caution. Here? Not so much, in my opinion.\r\n\r\nThat said, looking at the current syntax diagram for `Select-String`, we clearly need to do something about excessive listing of possible values for `-Culture`, but on the whole it doesn't have that many parameters, and that issue is something we need to fix in the help system, not the cmdlet itself.",
    "created_at": "2019-12-19T04:12:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-567323912",
    "id": 567323912,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzMyMzkxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567323912/reactions"
    },
    "updated_at": "2019-12-19T04:15:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567323912",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Some small comments:\r\n\r\n@KirkMunro \r\n> Now, try to match the month using Select-String. This returns nothing.\r\n\r\n```powershell\r\nGet-Date | Select-String -Pattern $month\r\n```\r\n\r\nThis seems rather artificial to me given that PowerShell is an *object-based* shell. Why are you not doing:\r\n\r\n```powershell\r\nGet-Date | where Month -match $month\r\n```\r\nAnd if you *really* want to `grep` against formatted output, it's simple:\r\n```powershell\r\nGet-Date | Out-String -Stream | Select-String -Pattern $month\r\n```\r\n\r\n@mklement0 \r\n> On the input side, there are probably not too many people who rely on the current behavior,\r\n\r\nOn what basis are you making this claim? It would certainly break *my* daily workflow.  Oh and BTW, `Select-String` works against files too so that has to be taken into account.\r\n\r\nFinally\r\n1. Going through the formatter is an order of magnitude slower than `where` or `sls` (as it is today).\r\n2. Formatted output has no guarantee of compatibility. Changing how objects are rendered is one of the things that is explicitly called out as being completely open to change. So writing scripts against formatted output is discouraged.",
    "created_at": "2019-12-19T17:45:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-567591175",
    "id": 567591175,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzU5MTE3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567591175/reactions"
    },
    "updated_at": "2019-12-19T17:45:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567591175",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@bpayette There's scripting in scripts, where you want performance and you want to use .NET objects, and there's ad-hoc use where you are pulling data and you want to get chunks of it quickly and easily. That's why `grep` or `findstr` are used even by folks on the PS Team or PMs not on the PS team in place of `Select-String`, and in place of using `Out-String -Stream`, `Where-Object`, etc. Being able to get information quickly and easily is highly useful, which is the motivation here. The motivation here, at list for me, isn't to use `Select-String` to filter output in scripts.\r\n\r\nMy only argument for updating `Select-String` vs a new command is to have a single command to do easy filtering with highlighting of what it found in-box so that I don't have to worry about what system I'm on when I use it. Given PowerShell is a shell, this seems like solid value to offer across the board. I can use `grep` or `findstr`, but I tend to stick to native, in-box PS that just works everywhere. That's where I think augmenting `Select-String` vs using @SteveL-MSFT's `Select-Text` in his upcoming module adds value.\r\n\r\nGiven the pushback on augmentation of `Select-String` and the concern around breaking changes, I'll just hope that a successor gets enough traction to replace `Select-String` with a suitably short alias in-box, and then just switch to that.",
    "created_at": "2019-12-19T18:13:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-567601661",
    "id": 567601661,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzYwMTY2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567601661/reactions"
    },
    "updated_at": "2019-12-19T18:14:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567601661",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "In addition to the points made by @vexx32  and @KirkMunro:\r\n\r\n> And if you _really_ want to grep against formatted output, it's simple:\r\n\r\n* `Select-String`'s sole purpose is to search through _strings_ (and being able to do that \"quick and dirty\", as @KirkMunro explains, is an invaluable _interactive_ tool).\r\n* Now, if the input isn't composed of strings, searching what _string_ representation of the input makes more sense?\r\n  * What you see in the console (host), i.e. the formatted representations?\r\n  * Or  the result from a `.ToString()` call which produces a near-useless and hard-to-predict stringification you don't typically get to see elsewhere (which answers the _on what basis_ question).\r\n\r\nPiping to `| Out-String -Stream` isn't simple: it's an obscure, cumbersome workaround for something the cmdlet should have done automatically _to begin with_.\r\n\r\n> Oh and BTW, Select-String works against files too so that has to be taken into account.\r\n\r\nYes, the `-LiteralPath` binding via `Get-Item` / `Get-ChildItem` output for file-content searching would have to be retained, which makes for a (preexisting) inconsistency - but an easily explained one.\r\n\r\nThat is, if you really wanted to search a directory listing as printed to the screen, then - and only then - would you need `| Out-String -Stream`.\r\n\r\nApparently we have an `oss` function wrapper for that now - that such a function was created speaks to how often you currently have to resort to that workaround.\r\n\r\n> It would certainly break my daily workflow. \r\n\r\nAssuming the `-LiteralPath` binding is retained, what would break?\r\n\r\nOther than someone inappropriately using `Select-String` with non-string input _in  a script_ (the scenario that's @joeyaiello's concern) - which is where you should definitely check _object properties_ instead - nothing should break, and much is gained.\r\n\r\nTo me, that makes it a bucket 3 change, which spares us the confusion of introducing another cmdlet.\r\n\r\n\r\n",
    "created_at": "2019-12-19T19:25:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-567628146",
    "id": 567628146,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzYyODE0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567628146/reactions"
    },
    "updated_at": "2020-02-04T20:26:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567628146",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Revisiting some of the earlier points:\r\n\r\n> Primarily, we question the overall usefulness of this given the existing `findstr` and `grep` on platforms.\r\n\r\nThe different syntax and varying capabilities between these utilities , let alone having to use _different_ utilities on different platforms to begin with is reason alone to make `Select-String` support the intuitively expected behavior of searching the formatted representations.\r\n\r\n> Going through the formatter is an order of magnitude slower than `where` or `sls` (as it is today).\r\n\r\nIf the intent is to search the formatted representations, that cost is inevitable  - and using `findstr` or `grep` already incurs it.\r\n\r\nAgain, the primary use case is quick-and-dirty _interactive_ search. \r\nIn _programmatic_ use, `Where-Object` should be used instead.\r\nProviding such guidance - along with conversely saying: in _scripts_, use `Select-String` only with _string_ input - as part of the documentation should be sufficient.\r\n\r\n> throw it up on the Gallery, and then we can actually play with an implementation\r\n\r\nIt's not in the Gallery, but I've created a `Select-StringFormatted` wrapper function (which will be slow compared to a proper implementation as part of `SelectString`) in this [Gist](https://gist.github.com/mklement0/46fea9e6e5ef1a3ceaf681c976cb68e3) (also part of [this SO answer](https://stackoverflow.com/a/64633140/45375)), which has `Out-String -Stream` built in - this is what `Select-String` itself should do.\r\n\r\nI recommend defining `scs` as its alias, which is what `Select-String`'s alias should always have been, had its name followed the naming conventions.\r\n\r\nAssuming you have looked at the linked code to ensure that it is safe (which I can personally assure you of, but it's always good to check), you can install it as follows:\r\n\r\n```powershell\r\nirm https://gist.github.com/mklement0/46fea9e6e5ef1a3ceaf681c976cb68e3/raw/Select-StringFormatted.ps1 | iex\r\n```\r\n\r\nSample call (assumes `Set-Alias scs Select-StringFormatted`):\r\n\r\n```\r\nPS> Get-Process | scs service\r\n\r\n     16     3.74      14.09       0.00    5664   0 SecurityHealthService\r\n     10     3.61       6.84       0.00     632   0 services\r\n     12     3.21       7.15       0.00    2388   0 VGAuthService\r\n```\r\n\r\nWhile this is already very convenient, there's room for improvement, given that simply string-filtering the lines doesn't include the header line with the column names; for (implicitly to be) `Format-Table`d input, the header line could be included _for display_, analogous to the existing _for-display_ enhancement of coloring the matching part of the line.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2020-11-01T16:35:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-720115254",
    "id": 720115254,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMDExNTI1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/720115254/reactions"
    },
    "updated_at": "2020-11-01T16:35:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/720115254",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I think that having Select-String search against the formatted output of objects would be a great idea.  As it is, I only use it to search files or plain text as it otherwise acts odd.  Same thing with Set-Clipboard.  If a cmdlet exists to do things with strings, then it should handle it in a way that makes the most sense.  If I manually format something, I don't want Select-String to be searching the FormatEntryData string that it gets from ToString.  I would expect it to search the formatted output.",
    "created_at": "2021-11-10T22:35:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-965808595",
    "id": 965808595,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "IC_kwDOAvT7bc45kRHT",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/965808595/reactions"
    },
    "updated_at": "2021-11-10T22:35:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/965808595",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8600422?v=4",
      "events_url": "https://api.github.com/users/FireInWinter/events{/privacy}",
      "followers_url": "https://api.github.com/users/FireInWinter/followers",
      "following_url": "https://api.github.com/users/FireInWinter/following{/other_user}",
      "gists_url": "https://api.github.com/users/FireInWinter/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FireInWinter",
      "id": 8600422,
      "login": "FireInWinter",
      "node_id": "MDQ6VXNlcjg2MDA0MjI=",
      "organizations_url": "https://api.github.com/users/FireInWinter/orgs",
      "received_events_url": "https://api.github.com/users/FireInWinter/received_events",
      "repos_url": "https://api.github.com/users/FireInWinter/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FireInWinter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FireInWinter/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FireInWinter"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Hear, hear, @FireInWinter, but note that - as with `Set-Clipboard` - it is the - often useless - `.ToString()` return value applied directly to the input object that is used:\r\n\r\n```powershell\r\nPS> @{ foo=1 } | sls hash   # @{ foo=1 }.ToString() -> 'System.Collections.Hashtable'\r\n\r\nSystem.Collections.Hashtable\r\n```",
    "created_at": "2021-11-10T22:40:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10726#issuecomment-965810932",
    "id": 965810932,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10726",
    "node_id": "IC_kwDOAvT7bc45kRr0",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/965810932/reactions"
    },
    "updated_at": "2021-11-10T22:40:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/965810932",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
