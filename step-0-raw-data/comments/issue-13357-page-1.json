[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Certainly misleading, though I think the right solution is not to report an error at all and actually perform to-string conversion (the implied `-Property` parameter is `[object[]]`-typed).\r\n\r\n",
    "created_at": "2020-08-05T20:48:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-669499695",
    "id": 669499695,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTQ5OTY5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/669499695/reactions"
    },
    "updated_at": "2020-08-05T20:48:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/669499695",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Why misleading? The message says clearly that PowerShell expects either a string or a scriptblock but not int. Since PowerShell expects _strongly_ one from two types it does not know what would be right conversion. It is a generic code and we can not force to string conversion because there is a high risk to break something in Engine or in custom scripts/codes.\r\n\r\nSee how works `internal List<MshParameter> ProcessParameters(object[] p, TerminatingErrorContext invocationContext)`.\r\n",
    "created_at": "2020-08-07T11:33:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670472993",
    "id": 670472993,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDQ3Mjk5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670472993/reactions"
    },
    "updated_at": "2020-08-07T11:33:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670472993",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "* It is misleading, because you obviously _can_ convert a `System.32` instance to a `System.String` instance.\r\n\r\n* It shouldn't be an error to begin with, because the only sensible interpretation of something that isn't already a string or a hashtable / script block (with a calculated-property definition)  is to _convert it to a string_.\r\n\r\nWhile it's debatable whether to-string conversion should be applied to just _any_ data type, something that _looks like a number_, such as `0`, in _argument mode_ - in the absence of quoting - is inherently ambiguous: is it the number `0` or string `'0'`?\r\nHere, the only sensible interpretation is as a string.\r\n\r\nIf in the end there _is_ a technical reason that this cannot be implemented, the error message should be revised to say something like: \"if this is a property name that looks like a number, enclose it in quotes\".\r\n\r\n",
    "created_at": "2020-08-07T12:23:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670490444",
    "id": 670490444,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDQ5MDQ0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670490444/reactions"
    },
    "updated_at": "2020-08-07T13:16:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670490444",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There's no technical reason I can think of that this couldn't be implemented. Seems like it's most likely just a simple case of doing a type check where it probably should have been a type conversion, i.e., we're probably doing something like:\r\n```pseudo\r\nif Property.BaseObject is IDictionary\r\n  # handle as calculated property\r\nelse if Property.BaseObject is ScriptBlock\r\n  # handle as unnamed calculated property expression\r\nelse if Property.BaseObject is string\r\n  # treat as property name to sort on\r\n```\r\nthat last branch should not have a type check at all, and instead simply opt for `LanguagePrimitives.ConvertTo<string>(Property)` (which will correctly handle the string conversion for parameters parsed as numbers as well).",
    "created_at": "2020-08-07T12:35:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670494796",
    "id": 670494796,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDQ5NDc5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670494796/reactions"
    },
    "updated_at": "2020-08-07T12:36:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670494796",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @vexx32, that should indeed suffice.\r\n\r\nI got myself confused earlier: there isn't a need to change the `-Property` parameter type, given that the engine implicitly wraps in `PSObject` those arguments that were parsed as numbers _whose default string representation differs from the one given_, with the `PSObject` instance containing the _original (string) representation_, which, as you state, `LanguagePrimitives.ConvertTo<string>()` does utilize.\r\n\r\nThis ensures that passing a bareword such as `1e2`, which becomes a `[double]` that by default stringifies as `100`, is still represented as `'1e2` when converted back to a string.\r\n\r\n\r\n ",
    "created_at": "2020-08-07T13:03:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670505672",
    "id": 670505672,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDUwNTY3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670505672/reactions"
    },
    "updated_at": "2020-08-07T13:03:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670505672",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Why misleading? The message says clearly that PowerShell expects either a string or a scriptblock but not int.\r\n\r\nThe message clearly states that whatever comes over must be convertible to *both* a string and a script block because it is a problem when the value is not convertible to *one* of them.  A script block is convertible to a string but it is debatable whether a string is convertible to a script block, so for the clarity of exposition I shall assume that it is not.  I also do not know of any other type that is convertible to `ScriptBlock`.  That means the winner is… `ScriptBlock` 🎺🎺 and anything that is not one cannot be given as a parameter.  Nice?",
    "created_at": "2020-08-07T13:13:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670509959",
    "id": 670509959,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDUwOTk1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670509959/reactions"
    },
    "updated_at": "2020-08-07T13:13:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670509959",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1363094?v=4",
      "events_url": "https://api.github.com/users/yecril71pl/events{/privacy}",
      "followers_url": "https://api.github.com/users/yecril71pl/followers",
      "following_url": "https://api.github.com/users/yecril71pl/following{/other_user}",
      "gists_url": "https://api.github.com/users/yecril71pl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yecril71pl",
      "id": 1363094,
      "login": "yecril71pl",
      "node_id": "MDQ6VXNlcjEzNjMwOTQ=",
      "organizations_url": "https://api.github.com/users/yecril71pl/orgs",
      "received_events_url": "https://api.github.com/users/yecril71pl/received_events",
      "repos_url": "https://api.github.com/users/yecril71pl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yecril71pl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yecril71pl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yecril71pl"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> that last branch should not have a type check at all, and instead simply opt for LanguagePrimitives.ConvertTo<string>(Property) (which will correctly handle the string conversion for parameters parsed as numbers as well).\r\n\r\nIt would be a huge breaking change - current code explicitly throws on unexpected type. The code is generic. There can be any allowed types, ex., byte,int,long - why would you convert another type to string in the case?\r\n\r\nAlso for generic code an error message can be only generic too.",
    "created_at": "2020-08-07T15:46:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670582135",
    "id": 670582135,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU4MjEzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670582135/reactions"
    },
    "updated_at": "2020-08-07T15:49:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670582135",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> current code explicitly throws on unexpected type. The code is generic. \r\n\r\nCode that throws on an unexpected type is definitely *not* generic.",
    "created_at": "2020-08-07T16:24:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670599123",
    "id": 670599123,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDU5OTEyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670599123/reactions"
    },
    "updated_at": "2020-08-07T16:24:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670599123",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1363094?v=4",
      "events_url": "https://api.github.com/users/yecril71pl/events{/privacy}",
      "followers_url": "https://api.github.com/users/yecril71pl/followers",
      "following_url": "https://api.github.com/users/yecril71pl/following{/other_user}",
      "gists_url": "https://api.github.com/users/yecril71pl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yecril71pl",
      "id": 1363094,
      "login": "yecril71pl",
      "node_id": "MDQ6VXNlcjEzNjMwOTQ=",
      "organizations_url": "https://api.github.com/users/yecril71pl/orgs",
      "received_events_url": "https://api.github.com/users/yecril71pl/received_events",
      "repos_url": "https://api.github.com/users/yecril71pl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yecril71pl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yecril71pl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yecril71pl"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov \r\n\r\n> why would you convert another type to string in the case?\r\n\r\nIt isn't another type, conceptually. In the example in the OP, the intent is clearly to pass a _string_, `0`.\r\n\r\nYes, you can force interpretation as a string with explicit quoting (`'0'`), _but you shouldn't have to_, given that in _argument-parsing mode_ quoting strings is _optional_ - just like you're free to use `Get-Date -UFormat 0` (to use a contrived example) without having to quote the `0`, or just like `Write-Host 1e2` and `Write-Host '1e2'` produce the same output.)\r\n\r\nWhat we're seeing is the confluence of two behaviors:\r\n\r\n* The parameter binder parses a bareword that _looks like_ a number literal as a number rather than a string, but, if it then binds to an effectively _untyped_ parameter (`object` or `PSObject`)  wraps it in a `PSObject` that caches the original string representation as specified on the command line, leaving the door open to treat this argument as a string later.\r\n\r\n  * However, as an optimization, this wrapping happens _only_  if the original string representation differs from the resulting number's default string representation.\r\n\r\n  * Incidentally, this is currently broken for number literals with the `d` (`[decimal]`) and `n` (`[bigint]`) suffixes, specifically - see #13380\r\n\r\n* `Sort-Object` doesn't have distinct parameters for the distinct types it accepts as sort criteria and uses `object` instead. (I guess it has to, given that the parameter is array-valued and must be able to accept a mix of strings and script blocks / hashtables.)\r\n\r\nNote that a `[string]`-typed parameter would indeed accept _any_ type, given that PowerShell happily converts anything to a string.\r\n\r\nIf you're really concerned that existing code _relies_ on `Sort-Object` throwing an error for non-string property arguments, we can limit what non-string types are accepted to the primitive number types plus `[decimal]` and `[bigint]`.\r\n\r\n(However, due to the optimization that results in a `PSObject` wrapper only when truly needed, we can't reliably tell if a given value started out as a _bareword_, so an unambiguously-passed-as-a-number argument would succeed too; e.g. \r\n `Sort-Object (0)`).\r\n\r\n---\r\n\r\nIncidentally: the code in question appears to be shared among cmdlets; for instance, `Select-Object` has the same problem:\r\n\r\n```powershell\r\nPS> [pscustomobject] @{ 0 = 'zero' } | Select-Object 0\r\nSelect-Object: Cannot convert System.Int32 to one of the following types {System.String, System.Management.Automation.ScriptBlock}.\r\n```\r\n\r\n",
    "created_at": "2020-08-07T18:02:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670639940",
    "id": 670639940,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDYzOTk0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670639940/reactions"
    },
    "updated_at": "2020-08-07T18:09:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670639940",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Incidentally: the code in question appears to be shared among cmdlets; for instance,\r\n\r\nYes, it is a generic code. There may be an unpredictable number of cmdlets where this is not the problem but the desired behavior.\r\n",
    "created_at": "2020-08-07T18:14:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670645047",
    "id": 670645047,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDY0NTA0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670645047/reactions"
    },
    "updated_at": "2020-08-07T18:14:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670645047",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "As far as I'm aware, this code is used exclusively for property expressions (which would all benefit from fixing the issue). Are there other use cases?",
    "created_at": "2020-08-07T18:32:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670652195",
    "id": 670652195,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDY1MjE5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670652195/reactions"
    },
    "updated_at": "2020-08-07T18:32:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670652195",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> > Incidentally: the code in question appears to be shared among cmdlets; for instance,\r\n> \r\n> Yes, it is a generic code. There may be an unpredictable number of cmdlets where this is not the problem but the desired behavior.\r\n\r\nNo, it is *shared* code.  I think we would all appreciate an example where converting a number to a string leads to a zombie apocalypse.  Also, `HELP ABOUT_PARSING`: *In argument mode, each value is treated as an expandable string unless    it begins with one of the following special characters*.\r\n",
    "created_at": "2020-08-07T21:39:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13357#issuecomment-670723522",
    "id": 670723522,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13357",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MDcyMzUyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670723522/reactions"
    },
    "updated_at": "2020-08-08T10:51:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/670723522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1363094?v=4",
      "events_url": "https://api.github.com/users/yecril71pl/events{/privacy}",
      "followers_url": "https://api.github.com/users/yecril71pl/followers",
      "following_url": "https://api.github.com/users/yecril71pl/following{/other_user}",
      "gists_url": "https://api.github.com/users/yecril71pl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/yecril71pl",
      "id": 1363094,
      "login": "yecril71pl",
      "node_id": "MDQ6VXNlcjEzNjMwOTQ=",
      "organizations_url": "https://api.github.com/users/yecril71pl/orgs",
      "received_events_url": "https://api.github.com/users/yecril71pl/received_events",
      "repos_url": "https://api.github.com/users/yecril71pl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/yecril71pl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yecril71pl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/yecril71pl"
    }
  }
]
