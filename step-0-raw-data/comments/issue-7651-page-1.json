[
  {
    "author_association": "COLLABORATOR",
    "body": "I think part of the problem is there's no conversion path for `T` to `IEnumerable<T>`.  I've had similar issues inheriting classes with abstract methods that return an `IEnumerable<>`.\r\n\r\nA shorter repro is that this doesn't work:\r\n\r\n```csharp\r\n[System.Collections.Generic.IEnumerable[object]]1\r\n```\r\n\r\nBut this does\r\n\r\n```csharp\r\n[System.Collections.Generic.IEnumerable[object]][object[]]1\r\n```\r\n\r\nIn classes the workaround is to force the return value to something already inheriting `IEnumerable<>` like above, but that doesn't seem to work here.",
    "created_at": "2018-08-29T11:56:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7651#issuecomment-416926291",
    "id": 416926291,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7651",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjkyNjI5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416926291/reactions"
    },
    "updated_at": "2018-08-29T11:56:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416926291",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience In this specific case, the code returns a collection, checks to see if it's length 1 then turns it into a scalar. If the cast worked, we'd then take that scalar and turn it back into a collection of 1 element which is not desirable. More generally, you can't cast a scalar to IEnumerable[T] because converting from a scalar to a collection requires creating an instance of the collection and you can't create an instance of IEnumerable[T], only instances of concrete types that implement IEnumerable[T}.  Now we could add a special case (hack but one of many) in the type converter logic that picked a specific concrete type (probably array of T) to do the conversion but I'm not sure it's desirable. Thoughts?",
    "created_at": "2018-08-30T17:55:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7651#issuecomment-417410560",
    "id": 417410560,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7651",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzQxMDU2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/417410560/reactions"
    },
    "updated_at": "2018-08-30T17:55:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/417410560",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@BrucePay I think the pattern is common enough that it makes sense.  Maybe even the other collection-like interfaces that `T[]` would implement like `IList<T>`, `ICollection<T>`, etc.\r\n\r\nI don't think it would be desirable to *always* force the result to be an array (you wouldn't want to cast a LINQ method result unnecessarily) but if the target object is not already of the specified cast type, then forcing to `T[]` makes a lot of sense to me.",
    "created_at": "2018-08-30T19:03:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7651#issuecomment-417431773",
    "id": 417431773,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7651",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzQzMTc3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/417431773/reactions"
    },
    "updated_at": "2018-08-30T20:30:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/417431773",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Isn't this... expected behavior?\r\n\r\n`([func[system.collections.generic.ienumerable[object]]] { Write-Output @(1) -NoEnumerate }).Invoke()` works fine",
    "created_at": "2019-01-18T11:20:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7651#issuecomment-455513847",
    "id": 455513847,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7651",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTUxMzg0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455513847/reactions"
    },
    "updated_at": "2019-01-18T11:20:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455513847",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@IISResetMe it isn't surprising behavior, but I'd argue that it's not desired behavior.\r\n\r\nThe example given only works because the default array return type `object[]` is already `IEnumerable<object>` so it doesn't need to do anything extra.\r\n\r\nFor example:\r\n\r\n```powershell\r\n# Fails\r\n([func[system.collections.generic.ienumerable[int]]] { Write-Output @(1) -NoEnumerate }).Invoke()\r\n\r\n# Works\r\n([func[int[]]] { Write-Output @(1) -NoEnumerate }).Invoke()\r\n\r\n# Fails\r\n([func[System.Collections.Generic.IEnumerable[object]]] { ,[int[]](1) }).Invoke()\r\n```\r\n\r\nThere's a few interfaces that are often used as return types in abstract classes or delegates. Some extra conversion paths would be a nice bit of quality of life.\r\n\r\n",
    "created_at": "2019-01-20T18:27:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7651#issuecomment-455890197",
    "id": 455890197,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7651",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTg5MDE5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455890197/reactions"
    },
    "updated_at": "2019-01-20T18:27:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455890197",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "It was the same situation when I encountered that SelectMany didn't work in PowerShell.\r\n\r\n```\r\nusing namespace System.Collections.Generic\r\nusing namespace System.Text.RegularExpressions\r\nusing namespace System.Linq\r\n\r\n[Match] $match = [Regex]::Match('{#begin condition header:2 footer:1}', '\\{#(\\w+)(?:\\s+(\\S+))*\\}')\r\n$captures = [Enumerable]::SelectMany($match.Groups, [Func[Group, IEnumerable[string]]] {\r\n    param([Group] $g)\r\n    return [Enumerable]::Select($g.Captures, [Func[Capture, string]] {\r\n        param([Capture] $c)\r\n        return [string] $c.Value\r\n    })\r\n})\r\n\r\nforeach ($capture in $captures) {\r\n    Write-Debug $capture\r\n}\r\n\r\nLine |\r\n  14 |  foreach ($capture in $captures) {\r\n     |           ~~~~~~~~\r\n     | Cannot convert the \"{#begin condition header:2 footer:1}\" value of type \"System.String\" to type \"System.Collections.Generic.IEnumerable`1[System.String]\".\r\n```\r\n\r\nI'll leave a comment for this issue that some people actually encountered it. \r\n",
    "created_at": "2021-08-14T13:39:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7651#issuecomment-898895838",
    "id": 898895838,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7651",
    "node_id": "IC_kwDOAvT7bc41lA_e",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/898895838/reactions"
    },
    "updated_at": "2021-08-14T13:39:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/898895838",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/88583148?v=4",
      "events_url": "https://api.github.com/users/love2hina-net/events{/privacy}",
      "followers_url": "https://api.github.com/users/love2hina-net/followers",
      "following_url": "https://api.github.com/users/love2hina-net/following{/other_user}",
      "gists_url": "https://api.github.com/users/love2hina-net/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/love2hina-net",
      "id": 88583148,
      "login": "love2hina-net",
      "node_id": "MDQ6VXNlcjg4NTgzMTQ4",
      "organizations_url": "https://api.github.com/users/love2hina-net/orgs",
      "received_events_url": "https://api.github.com/users/love2hina-net/received_events",
      "repos_url": "https://api.github.com/users/love2hina-net/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/love2hina-net/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/love2hina-net/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/love2hina-net"
    }
  }
]
