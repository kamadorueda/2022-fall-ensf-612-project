[
  {
    "author_association": "COLLABORATOR",
    "body": "`Add-Type` won't generally resolve .NET types. You shouldn't need to call `Add-Type` for `System.Management.Automation` either; that assembly is always loaded because it's PowerShell's own primary assembly. ðŸ¤” \r\n\r\nIf anything, you might want a `using namespace System.Management.Automation` to allow you to shorten type names.",
    "created_at": "2020-10-10T20:25:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706606312",
    "id": 706606312,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjYwNjMxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706606312/reactions"
    },
    "updated_at": "2020-10-10T20:25:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706606312",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32, thanks for the comment.\r\nI added the `add-type` as one of my first attempt to resolve the issue, but never tried to undo it. ðŸ¥´\r\nAnyways, it does not detract from the actual issue (I have changed the title and description).",
    "created_at": "2020-10-11T08:28:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706669844",
    "id": 706669844,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjY2OTg0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706669844/reactions"
    },
    "updated_at": "2020-10-11T08:32:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706669844",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "NONE",
    "body": "I've always understood it would work this way. \r\n\r\nIf you import the the psm1 file, and then try  `[RuntimeDefinedParameterDictionary]::new()` at the prompt you see the effect of the `using namespace` statement  is not global.  In places like C# I've always though of \"using\" being like a path for executables, and telling the compiler to try prefixes on unresolved names _in that file_ and they don't apply anywhere else. PowerShell doesn't work like that in all cases. If you put `using namespace`  in a ps1 file and dot source it, that namespace is seen globally, but if you have it in a psm1 file and import the module, it isn't. There are similar issues with classes written in PowerShell and loaded from modules, which depending how they are loaded may or may not be visible outside. So things like argument completers can break going from a free-standing ps1 being dot sourced, to same file being loaded as part of a module. \r\n",
    "created_at": "2020-10-11T08:54:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706672531",
    "id": 706672531,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjY3MjUzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706672531/reactions"
    },
    "updated_at": "2020-10-11T08:54:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706672531",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jhoneill, thank you for the explanation.\r\nI was expecting something like this but wanted at least make note of the limitation. I don't mind if this issue is closed in `won't fix`.",
    "created_at": "2020-10-11T11:02:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706687227",
    "id": 706687227,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjY4NzIyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706687227/reactions"
    },
    "updated_at": "2020-10-11T11:02:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706687227",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iRon7  :-)   Things don't work the way most people would expect them to.   The question, really, is how practical it is to change it to be logical.  \r\n\r\nThe `using namespace` statements (and PS-Defined classes) that are in scope when PowerShell examines a function before running it, and the ones that are in scope when it executes the code in the function  body can be different when they get loaded as a module (depending on exactly how the module is done) and I think to most people that's feels wrong.  ",
    "created_at": "2020-10-11T11:35:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706691190",
    "id": 706691190,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjY5MTE5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706691190/reactions"
    },
    "updated_at": "2020-10-11T11:35:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706691190",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, it's a scoped action; it only applies to the scope it's used for. You can scope it to a file, which might be a function, or a module, or a script. But unless you dot source that file (which merges the scope into your current scope) it doesn't apply outside that file.\r\n\r\nThat said, I would tend to agree it should probably work for modules more consistently. I've seen a few less consistent issues with it in modules in the past... but I've also seen plenty of cases where this does work just fine (I use it in PSKoans in at least one or two functions).\r\n\r\nI wonder if the difference is that `[outputtype]` (along with other function attributes like `[argumentcompleter]`) are evaluated in the global scope or something for some reason? @SeeminglyScience might have some idea there.",
    "created_at": "2020-10-11T13:39:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706706411",
    "id": 706706411,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjcwNjQxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706706411/reactions"
    },
    "updated_at": "2020-10-11T14:02:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706706411",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32 yeah, it's whatever scope the attribute happens to be compiled in.  Very unlikely to be the scope where the type is resolvable.\r\n\r\nPart of the problem is that `ITypeName.GetReflectionType()` doesn't really have any visibility into the AST, so it can't check what the current `using` statements are.  Nor does it have any visibility into what types are defined in that scope.  Most of the type `using` statements only work based on `SessionStateScope.TypeResolutionState`.\r\n\r\nIf `ITypeName` kept track of what `using` statements were defined in it's AST (currently it only tracks it's `IScriptExtent`) then `using` statements could properly be \"file scoped\". That wouldn't really solve the problem of defined types (except in some cases with `using module` maybe, though probably better to limit to `using namespace`) but would be nice.",
    "created_at": "2020-10-11T14:43:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706715074",
    "id": 706715074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjcxNTA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706715074/reactions"
    },
    "updated_at": "2020-10-11T14:43:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706715074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n> I wonder if the difference is that `[outputtype]` (along with other function attributes like `[argumentcompleter]`) are evaluated in the global scope or something for some reason? @SeeminglyScience might have some idea there.\r\n\r\nI'm not sure I completely understand the reply. But the way I understood it was when (for example) you type\r\n`command -param X  | select -property [tab]`,  the scope where something is asking for the types that are attributes of -param and asking \"What is the output type of command\" is a different scope from the one where command is defined. `Command` crosses scope but the `using`  statement doesn't and class might or might not depending how the module loaded it.  Since classes loaded by add-type are global, I think it's OK for classes defined with a powershell `class` statement to be as well, but just push all used namespaces into the global scope could end up with name clashes and whether there is a risk the wrong namespace wins. It almost needs an \"export namespace\" command.\r\n \r\n    \r\n",
    "created_at": "2020-10-11T15:04:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706718231",
    "id": 706718231,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjcxODIzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706718231/reactions"
    },
    "updated_at": "2020-10-11T15:04:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706718231",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> the scope where something is asking for the types that are attributes of -param and asking \"What is the output type of command\" is a different scope from the one where command is defined.\r\n\r\nYeah pretty much.  That information is queried from the current interactive scope.\r\n\r\n> `Command` crosses scope but the `using` statement doesn't and class might or might not depending how the module loaded it.\r\n\r\nIt's less about whether `using` does, and more about how tab completion doesn't.\r\n\r\n> Since classes loaded by add-type are global, I think it's OK for classes defined with a powershell `class` statement to be as well\r\n\r\nWithout the ability to declare a namespace that would end with a lot of conflicts. For example it'd be interesting to see how many modules have a class named `Error`.\r\n\r\n> but just push all used namespaces into the global scope could end up with name clashes and whether there is a risk the wrong namespace wins. It almost needs an \"export namespace\" command.\r\n\r\nI'm not sure the solution is to change the state of global, I'd rather see tab completion become aware of the callee's state.\r\n\r\n",
    "created_at": "2020-10-11T15:12:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706719563",
    "id": 706719563,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjcxOTU2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706719563/reactions"
    },
    "updated_at": "2020-10-11T15:12:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706719563",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I guess we already have such issue.",
    "created_at": "2020-10-11T17:23:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13768#issuecomment-706738023",
    "id": 706738023,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13768",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjczODAyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706738023/reactions"
    },
    "updated_at": "2020-10-11T17:23:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/706738023",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
