[
  {
    "author_association": "NONE",
    "body": "Back in the 1970s when I was writing programs in BASIC we had lines which said \r\n```\r\nX = Input \"Enter the X dimension of the thing we're calculating\"\r\nY = Input \"Enter the Y dimension\"\r\n```\r\nPeople still like to use  `Read-Host`  to do the equivalent. Anything of that sort in PowerShell should be a mandatory parameter which can have help text (and behind the scenes calls the same thing as read host).\r\n```PowerShell\r\n[parameter(HelpMessage='Enter the X dimension of the thing we're calculating' , Mandatory=$true)]\r\n$x\r\n```\r\nIf run without specifying `-X` the user sees\r\n```\r\nSupply values for the following parameters:\r\n(Type !? for Help.)\r\nx: !?\r\nEnter the X dimension of the thing we're calculating\r\nx:\r\n```\r\n\r\nThe only case for using `Read-Host` is \"Here are some interim results, which path do you want to take\".  And that is sometimes \"Press enter to continue \" with the implied (or `ctrl-c` to break). There are very few cases where you want _that_ to time out to a pre-determined default.  If the user leaves their screen either the commands bails and returns to the prompt so they need to run it again, or it continues when you needed the user to say \"stop!\"\r\n\r\nIf you absolutely need it you can use this\r\n```PowerShell\r\n$stopTime = [datetime]::Now.AddSeconds(10)\r\nWrite-Host \"Partial results are wibble, wibble, and eckie\"  \r\nWrite-Host \"Input value for foo (default is 'bar'):\" -NoNewline\r\nwhile ([datetime]::Now -lt $stopTime -and -not [console]::KeyAvailable) {start-sleep -Milliseconds 50}\r\nif ([console]::KeyAvailable) {$foo = read-host  } else {write-host ;$foo = 'bar' }\r\n\r\n$foo\r\n```\r\n\r\n`Read-host` is actually calling something in `$host.ui` which implements  `Prompt`, `PromptForChoice`, `PromptForCredential` , `ReadLine`,  `ReadLineAsSecureString`:  this isn't just changing the _command_  it needs a change to all _hosts_ to support it - some hosts (like  .NET Interactive in notebooks) just don't support these inputs, others like VS Code do, but if a version of the language which needs the extra support finds itself on a host without them...  it's a sea of run time errors. \r\n\r\n\r\n ",
    "created_at": "2021-12-21T21:38:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16660#issuecomment-999110578",
    "id": 999110578,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16660",
    "node_id": "IC_kwDOAvT7bc47jTey",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/999110578/reactions"
    },
    "updated_at": "2021-12-21T21:38:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/999110578",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  }
]
