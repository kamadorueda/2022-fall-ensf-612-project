[
  {
    "author_association": "COLLABORATOR",
    "body": "This is rather an odd case. ðŸ¤” \r\n\r\nIn general I tend to recommend against having more than one type of object be output from a single function; there are some known issues with the formatter that look a bit like this. Haven't seen this specific one before though.\r\n\r\nAlthough, it is only a formatting problem; the data is still output. If you do `$data = & ./testme.ps1` then $data will still have all three values in it.",
    "created_at": "2021-05-12T18:21:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15390#issuecomment-839995835",
    "id": 839995835,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15390",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTk5NTgzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/839995835/reactions"
    },
    "updated_at": "2021-05-12T18:22:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/839995835",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I tend to recommend against having more than one type of object be output from a single function\r\n\r\nI think I agree -- but when you get errors and such and/or start trying to instrument code to see what is going on, that becomes pretty hard to ensure.\r\n\r\nThe bottom line is output just gets randomly swallowed up sometimes -- that seems a usability issue.\r\n\r\nThe strange thing is if I output an object before the switchparameter like \"@{bbb=1}\", then the $hash output shows up again...\r\n\r\nIt just seems so fragile. :-(",
    "created_at": "2021-05-12T19:20:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15390#issuecomment-840036424",
    "id": 840036424,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15390",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDAzNjQyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/840036424/reactions"
    },
    "updated_at": "2021-05-12T19:20:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/840036424",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/341166?v=4",
      "events_url": "https://api.github.com/users/rtestardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/rtestardi/followers",
      "following_url": "https://api.github.com/users/rtestardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rtestardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rtestardi",
      "id": 341166,
      "login": "rtestardi",
      "node_id": "MDQ6VXNlcjM0MTE2Ng==",
      "organizations_url": "https://api.github.com/users/rtestardi/orgs",
      "received_events_url": "https://api.github.com/users/rtestardi/received_events",
      "repos_url": "https://api.github.com/users/rtestardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rtestardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rtestardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rtestardi"
    }
  },
  {
    "author_association": "NONE",
    "body": "It works with this syntax:\r\n```\r\nparam(\r\n  [switch]$skip  = $false,\r\n  [switch]$weird = $false\r\n)\r\n\r\nif ($PSBoundParameters.keys -notcontains 'skip')\r\n{\r\n    # $weird  # skip this line and it works!\r\n    'not $skip'\r\n}\r\n\r\n$hash2=@{}\r\n$hash2[\"aaa\"]=1\r\n\r\n\"hash value is\"\r\n$hash2\r\n\r\n$PSBoundParameters\r\n```",
    "created_at": "2021-05-13T10:33:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15390#issuecomment-840471466",
    "id": 840471466,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15390",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDQ3MTQ2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/840471466/reactions"
    },
    "updated_at": "2021-05-13T10:33:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/840471466",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, something with the SwitchParameter being sent to the formatter directly (and not as part of a string) is confusing it, looks like.",
    "created_at": "2021-05-13T11:41:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15390#issuecomment-840501902",
    "id": 840501902,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15390",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDUwMTkwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/840501902/reactions"
    },
    "updated_at": "2021-05-13T11:41:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/840501902",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > I tend to recommend against having more than one type of object be output from a single function\r\n> \r\n> I think I agree -- but when you get errors and such and/or start trying to instrument code to see what is going on, that becomes pretty hard to ensure.\r\n>\r\nIt is at this point `write-verbose` and `write-debug` become your friends  \r\n```\r\n[cmdletbinding()]\r\nparam(\r\n  [switch]$skip ,\r\n  [switch]$weird \r\n)\r\nif (! $skip) {\r\n    Write-Verbose     $weird  \r\n}\r\n$hash2=@{}\r\n$hash2[\"aaa\"]=1\r\n\"hash value is\"\r\n$hash2\r\n}\r\n```\r\n\r\nAs @vexx32  said \r\n\r\n> [it]   is still output. If you do `$data = & ./testme.ps1` then $data will still have all three values in it.\r\n\r\nUnless you use verbose/debug/host the _instrumentation_ gets mixed up with the _output_ and you need need to keep enabling and disabling it. \r\n\r\n(the behavior after outputting a switch is still broken, but that's another issue) \r\n\r\n\r\n\r\n",
    "created_at": "2021-05-14T14:57:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15390#issuecomment-841296363",
    "id": 841296363,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15390",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTI5NjM2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841296363/reactions"
    },
    "updated_at": "2021-05-14T14:57:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841296363",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, I'd echo @jhoneill's point and say if you need informational / debugging messages, use of `Write-Verbose` / `Write-Debug` and/or `Write-Host` depending on your exact needs is what you really want; those all avoid putting the data in the output stream and causing issues like this.\r\n\r\nFor errors I'd use `throw` or `Write-Error`, or (specifically in a function with [cmdletbinding()]) you can also use `$PSCmdlet.ThrowTerminatingError()` or `$PSCmdlet.WriteError()`.\r\n\r\nThat is a bit tangential; this behaviour is still broken, but hopefully using those you should be able to work around it for the current problem you have. ðŸ™‚ ",
    "created_at": "2021-05-14T15:48:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15390#issuecomment-841328845",
    "id": 841328845,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15390",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTMyODg0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841328845/reactions"
    },
    "updated_at": "2021-05-14T15:48:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/841328845",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
