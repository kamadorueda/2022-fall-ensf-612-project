[
  {
    "author_association": "CONTRIBUTOR",
    "body": "cc: @lzybkr, @PaulHigin, @rkeithhill, @TylerLeonhardt: There's a lot to read here, but your feedback in particular on this would be appreciated.",
    "created_at": "2019-09-13T03:04:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-531081251",
    "id": 531081251,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTA4MTI1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/531081251/reactions"
    },
    "updated_at": "2019-09-13T03:04:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/531081251",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Are the listed DNUC paths correct/enough?\r\n\r\n> Should we have $env:PSNonUserCodePath?\r\n\r\nIt seems PSModulePath contains the paths.",
    "created_at": "2019-09-13T04:57:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-531098096",
    "id": 531098096,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTA5ODA5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/531098096/reactions"
    },
    "updated_at": "2019-09-13T04:57:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/531098096",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Not necessarily. Products installed via installers update `PSModulePath`. Users update `PSModulePath`. How can we tell which is user code and which is not? Plus, that's just modules, not scripts. We argued for a `PSScriptPath` environment variable in the past (before open source) but that idea was shot down.",
    "created_at": "2019-09-13T12:41:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-531221545",
    "id": 531221545,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMTIyMTU0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/531221545/reactions"
    },
    "updated_at": "2019-09-13T12:43:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/531221545",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Anyone care to share thoughts on the intent of the current implementation of the debugger attributes, or thoughts about where I'm trying to take this?\r\n\r\nThere's a pretty cool opportunity here to make the debugging experience much, much better and much more focused for all users, without much effort on the part of scripters.\r\n\r\nAlso, a few more things I believe are incorrect and would like to change:\r\n\r\n1. If you set a command breakpoint on a command that happens to have the `DebuggerHidden` attribute, the debugger will not stop on the invocation of that command. I believe that behavior is wrong, because the attribute's effect should apply to the script block where it is used, not to invocations outside of that script block.\r\n\r\n1. If you set a command breakpoint on a function, when that breakpoint triggers, you are already inside of the function. I believe that behavior is also incorrect, because it's inconsistent (command breakpoints for cmdlets break on the command invocations) and it causes the previous issue. No matter what type of command being invoked, a command breakpoint should enter the debugger on the invocation of that command when triggered.\r\n\r\n~Lastly, on the notion of non-user code (`DebuggerNonUserCode`), there is another issue that causes pain for tool builders, where tools can be influenced by user preferences (#10334). User preferences such as `$PSDefaultParameterValues` and `$*Preference` variables should not influence internal PowerShell invocations inside of tools that users use. I was thinking today that an easy application of the `DebuggerNonUserCode` attribute on PowerShell invocations from within tools would be helpful in preventing user preferences from impacting code that is meant to be run as a black box.~ (Strike that, the thoughts in this paragraph are better covered in #10334).",
    "created_at": "2019-09-27T20:57:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-536094076",
    "id": 536094076,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjA5NDA3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536094076/reactions"
    },
    "updated_at": "2019-10-01T19:30:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536094076",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro I like your ideas shared here, they are clear and clean.\r\nI have one concern about \"As a PowerShell tool author,\". I don't like that as module author I _should_ think how another user want to debug _his_ code. I hope  PowerShell debugger could be more smart. (Ex.: VS Code ask me \"Do you want jump in/debug the module too or ignore it?\") I’m afraid that there will be modules that use these attributes incorrectly and this will annoy users that the debugger will behave strangely and it will be necessary to somehow deal with it.\r\n\r\nAlso you could get a feedback in VS Code PowerShell extension repo.\r\n\r\nIn the end, I want to share an idea that only you could develop/weight. Related https://github.com/pester/Pester/issues/1318 Pester set breakpoints on every line in code coverage scenario. It looks very expensive. We could make special debugger mode for the scenario.\r\n\r\n",
    "created_at": "2019-09-28T07:36:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-536162667",
    "id": 536162667,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjE2MjY2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536162667/reactions"
    },
    "updated_at": "2019-09-28T07:36:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536162667",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @iSazonov! Sometimes I wonder if anyone else even cares about the things I'm trying to fix. PowerShell has the potential to offer very efficient debugging, but it isn't there yet.\r\n\r\nOne of my goals with these changes is that the majority of the community shouldn't have to think much about them. Users publishing modules or scripts shouldn't need to apply these attributes in their functions or scripts at all -- they should be able to simply rely on JMC-debugging keeping the debugging experience focused for them and for users who download their scripts/modules.\r\n\r\nI would also want some specific PSSA rules in place to correct users who do apply debugger attributes incorrectly.\r\n\r\nOn the code coverage scenario, I'm thinking about it.",
    "created_at": "2019-09-28T20:20:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-536222440",
    "id": 536222440,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjIyMjQ0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536222440/reactions"
    },
    "updated_at": "2019-09-28T20:21:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536222440",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Sometimes I wonder if anyone else even cares about the things I'm trying to fix.\r\n\r\nNevermind. It is natural. Usually, users prefer a quick workaround to achieve _business_ goals instead of many months of discussion.\r\nMSFT PowerShell team could ask partner teams, partner firms to participate in the repo, share their experience, thoughts and plans (as feature requests). \r\nOn the other hand, MSFT PowerShell team does not have enough resources to process all the PRs and, especially, the overdue ideas.\r\n",
    "created_at": "2019-09-29T06:33:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-536256260",
    "id": 536256260,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjI1NjI2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536256260/reactions"
    },
    "updated_at": "2019-09-29T06:33:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536256260",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro I appreciate you following the new proposed process by initiating discussion in an issue and driving towards consensus.  However, we need more varied feedback from the community.  I've tweeted this issue so hopefully that'll encourage more diverse discussion on agreement on the issue and then agreement on a proposed solution.  The PowerShell team is busy trying to complete commitments we've made to PS7 so it's unlikely this will make it into PS7, but we can certainly spend time on this early in vNext. ",
    "created_at": "2019-10-01T16:25:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-537116177",
    "id": 537116177,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzExNjE3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537116177/reactions"
    },
    "updated_at": "2019-10-01T16:25:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537116177",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "For me as a user the most annoying and confusing thing are the PSReadline breakpoints.\r\nIt would be nice to properly solve the underlying problem but if there is an easier/quicker way to prevent this from happening, then I'd prefer this over something that takes longer to be delivered and agreed upon.",
    "created_at": "2019-10-01T18:03:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-537157325",
    "id": 537157325,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzE1NzMyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537157325/reactions"
    },
    "updated_at": "2019-10-01T18:03:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537157325",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "After carefully reading ... I have to say:\r\n\r\n- I really want the debugger to stop breaking into prompts, readlines, and formatters. \r\n- You clearly think about debugging way more than I do\r\n  - I've never used these attributes on PowerShell code\r\n  - I almost never use command breakpoints outside of demos, I guess because they so frequently result in detours.\r\n- I agree with almost everything you've proposed\r\n   - Doubly so on exposing the internal DebuggerStepThrough property. Internals always vex me.\r\n\r\n\r\nHere are my reservations:\r\n\r\n### I am **_very_** nervous about DebuggerHidden. \r\n\r\nI think even in the compiled world, people use it instead of more appropriate flags because they don't know the difference, and end up hiding stuff that shouldn't be hidden.\r\n\r\nI really don't like the idea that (for example) a ForEach-Object command with DebuggerHidden could make it impossible for me to set breakpoints on the scriptblocks that I'm passing to it or inside commands that it calls. For one, I think that if it's running my code, I need to be able to debug my code. \r\n\r\n_I probably just don't understand the scenario_ that makes it necessary. That said (with the understanding I have now), I don't object to the idea -- but I do feel like if it worked as you proposed, I would want a toggle I could set to force DebuggerHidden to act like DebuggerStepThrough (or disable it altogether).\r\n\r\n### I think that `PSDebuggerNonUserPath` (or something) would be a good idea. \r\n\r\nEach host pre-initializes PSModulePath differently (in theory), so the host needs to also initialize the NonUserPath locations, but still allow 3rd parties (e.g. a product installer), and the user to add additional things to the list.\r\n\r\n--- \r\n\r\nAs for PSDefaultParameterValues, I think that's a completely separate issue we should discuss separately. I think it's super useful, but I also feel like it could be much improved. I think we should _probably_ just always re-define it in module scope. That is, currently authors can, at the top of a module, set `$Script:PSDefaultParameterValues = @{}` to protect themselves from changes at the global scope. It makes sense to me that this should be the default behavior for that variable. In fact, I think that's probably what users actually expect to happen.\r\n\r\nAs for code-coverage, that's also a completely separate issue. It's deffinitely something PowerShell should add (the breakpoint counter is a hack that produces weird counts, and it's painfully slow).",
    "created_at": "2019-10-01T18:22:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-537165261",
    "id": 537165261,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzE2NTI2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537165261/reactions"
    },
    "updated_at": "2019-10-01T18:22:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537165261",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> It would be nice to properly solve the underlying problem but if there is an easier/quicker way to prevent this from happening, then I'd prefer this over something that takes longer to be delivered and agreed upon.\r\n\r\n@bergmeister This is much bigger than just PSReadline. This problem has impacted every PowerShell tool that I know of. I don't know of a quicker fix, and the debugger attributes currently are not functioning the way they should, so correcting how those work is a good approach to this problem. Note, however, that the fixes proposed here should not take long to deliver -- I've been in that code quite a bit. We just need consensus on how this should be fixed, which hopefully we'll work out with the additional eyes on this.\r\n\r\n> ### I am **_very_** nervous about DebuggerHidden.\r\n> \r\n> I think even in the compiled world, people use it instead of more appropriate flags because they don't know the difference, and end up hiding stuff that shouldn't be hidden.\r\n> \r\n> I really don't like the idea that (for example) a ForEach-Object command with DebuggerHidden could make it impossible for me to set breakpoints on the scriptblocks that I'm passing to it or inside commands that it calls. For one, I think that if it's running my code, I need to be able to debug my code.\r\n> \r\n> _I probably just don't understand the scenario_ that makes it necessary. That said (with the understanding I have now), I don't object to the idea -- but I do feel like if it worked as you proposed, I would want a toggle I could set to force DebuggerHidden to act like DebuggerStepThrough (or disable it altogether).\r\n\r\n@Jaykul Despite how I think `DebuggerHidden` should be used, it's more important to note where it shouldn't be used. If you look at PowerShell 7, all formatting script blocks have `DebuggerHidden` applied to them automatically. We still end up in formatting because of how `DebuggerHidden` is implemented (it doesn't affect nested script blocks today), but the single line of code that sets `DebuggerHidden` on any internal format script block should be enough. Another example where `DebuggerHidden` should be used is the `prompt` function.\r\n\r\nIn actual scripts or functions, it should be very rare to see `DebuggerHidden`, to the point where I would suggest if you're using it, you probably shouldn't be, and I would want PSSA to raise visibliity of that with a warning. With respect to passing script blocks in to a function that has `DebuggerHidden`, PSSA should raise an error on any script or function that accepts a script block and has the `DebuggerHidden` attribute set. In those cases, the author should be using `DebuggerStepThrough`.\r\n\r\nRare use aside, I wanted to describe how it would work, which is why I provided the scenarios above. _If `DebuggerHidden` gets in the way of you debugging something, the author is doing it wrong._\r\n\r\n> As for PSDefaultParameterValues, I think that's a completely separate issue we should discuss separately. I think it's super useful, but I also feel like it could be much improved. I think we should _probably_ just always re-define it in module scope. That is, currently authors can, at the top of a module, set `$Script:PSDefaultParameterValues = @{}` to protect themselves from changes at the global scope. It makes sense to me that this should be the default behavior for that variable. In fact, I think that's probably what users actually expect to happen.\r\n\r\n1. I agree, that should be a separate issue. I was reading this back again, and think `Debugger*` attributes need to be just for debugging. I'll continue thoughts related to that point in the discussion on #10334.\r\n\r\n1. Modules already redefine `$PSDefaultParameterValues`, since PowerShell 5, so there's nothing more needed there.\r\n\r\n> As for code-coverage, that's also a completely separate issue. It's deffinitely something PowerShell should add (the breakpoint counter is a hack that produces weird counts, and it's painfully slow).\r\n\r\nAgreed.",
    "created_at": "2019-10-01T19:18:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-537188449",
    "id": 537188449,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzE4ODQ0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537188449/reactions"
    },
    "updated_at": "2019-10-04T11:58:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537188449",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thank you @KirkMunro for bringing all this up.  It's something that has bothered me tremendously for a long time.  I've mostly skimmed the original so far, I'll do a more in-depth read tomorrow but I wanted to mention one thing that caught my eye:\r\n\r\n> Debugging-functionality-wise, DNUC should function just like DST; however, there are two key differences between the current functionality of this attribute today and how it should work going forward:\r\n\r\n> The automatic, dynamic application of that attribute to any file that comes from an installed tool (i.e. the debugger needs to recognize which files are non-user files, and treat them accordingly).\r\nBy default, PowerShell would be configured to only debug user code (\"Just My Code\"), but an option would have to be provided to allow users to debug non-user code when needed. \r\n\r\nI think this as a default across the board would make it a lot harder to cross the initial bridge of \"tons of Read-Host/Write-Host\" to utilizing the debugger.  It's already extremely difficult for folks who have never used a debugger to even understand what's going on and why it's useful.  If they can't easily tell why there breakpoint isn't working, a lot will just give up.  I think from a normal shell it's next to impossible to get an acceptable rate of false positives.\r\n\r\nFrom an editor though, I'm all for it.  I think it should be up to PSES/PS Studio/etc to declare what is and isn't user code (unless overridden by the user of course).\r\n\r\nThanks again for taking on the arduous task of putting all of those issues into words, I look forward to reading the rest in detail tomorrow ❤️ ",
    "created_at": "2019-10-01T23:33:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-537273945",
    "id": 537273945,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzI3Mzk0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537273945/reactions"
    },
    "updated_at": "2019-10-01T23:33:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537273945",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I think this as a default across the board would make it a lot harder to cross the initial bridge of \"tons of Read-Host/Write-Host\" to utilizing the debugger. It's already extremely difficult for folks who have never used a debugger to even understand what's going on and why it's useful. If they can't easily tell why there breakpoint isn't working, a lot will just give up. I think from a normal shell it's next to impossible to get an acceptable rate of false positives.\r\n\r\nI have a few thoughts related to this @seeminglyscience:\r\n\r\n1. What is deemed non-user code by default would be very conservative. Things you install. That's pretty much it.\r\n1. If a user sets a line breakpoint (which are by far the most commonly used breakpoints) in non-user code, that would be detectable in PowerShell itself, so there shouldn't be any surprises there with the proper handling, regardless of whether or not someone is using an editor/visual debugger.\r\n1. Modules and commands (functions, scripts) should have a session-specific property that indicates whether or not they are non-user code.\r\n1. We could automatically flip a non-user code flag based on the addition of a line or script-specific breakpoint. Since that (non-user code) flag is session-specific, that may make for a really easy experience for people without them even realizing what is being done to make that happen.\r\n\r\nI'm hopeful that this combination will increase ease of use by focusing the experience on what users are actually trying to debug. You are right though, the combination of things that does this needs to be geared for easy use by less experienced folk.",
    "created_at": "2019-10-02T02:46:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10530#issuecomment-537312139",
    "id": 537312139,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10530",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzMxMjEzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537312139/reactions"
    },
    "updated_at": "2019-10-02T17:18:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537312139",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
