[
  {
    "author_association": "COLLABORATOR",
    "body": "Perhaps it is the same #4594",
    "created_at": "2020-01-16T13:40:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575155691",
    "id": 575155691,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTE1NTY5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575155691/reactions"
    },
    "updated_at": "2020-01-16T13:40:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575155691",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "The \"related problem\" in that one looks similar but different. But I've just read the issue, not investigated deeply. The one here just looks like a bug though; InnerFormatShapeCommand should be getting a custom view for each, not just the first in the list.",
    "created_at": "2020-01-16T16:43:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575239573",
    "id": 575239573,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTIzOTU3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575239573/reactions"
    },
    "updated_at": "2020-01-16T16:43:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575239573",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18429489?v=4",
      "events_url": "https://api.github.com/users/MikeHillberg/events{/privacy}",
      "followers_url": "https://api.github.com/users/MikeHillberg/followers",
      "following_url": "https://api.github.com/users/MikeHillberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeHillberg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MikeHillberg",
      "id": 18429489,
      "login": "MikeHillberg",
      "node_id": "MDQ6VXNlcjE4NDI5NDg5",
      "organizations_url": "https://api.github.com/users/MikeHillberg/orgs",
      "received_events_url": "https://api.github.com/users/MikeHillberg/received_events",
      "repos_url": "https://api.github.com/users/MikeHillberg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MikeHillberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeHillberg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MikeHillberg"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Is default output in your code Format-Table? Try to change to Format-List.",
    "created_at": "2020-01-17T05:00:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575465548",
    "id": 575465548,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTQ2NTU0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575465548/reactions"
    },
    "updated_at": "2020-01-17T05:00:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575465548",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If I understand the issue correctly, this is sort of by design. For heterogeneous collections, the format to use is selected based on the first object (what properties to show etc.) Subsequent objects just get converted to strings (?). Doing otherwise would slow everything down and produce hard to read output because the headers would be reprinted for each change in object type. The solution is to have a common base class for the objects being emitted and write your formats against that.",
    "created_at": "2020-01-17T06:22:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575482594",
    "id": 575482594,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTQ4MjU5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575482594/reactions"
    },
    "updated_at": "2020-01-17T06:22:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575482594",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It might have been part of the original design, but I think it's worth trying to do it better. ðŸ™‚ \r\n\r\nI'm sure there are some concerns that would need to be addressed to make it work as we'd want, but simply refusing to format objects from a heterogenous collection is an undesirable solution for most folx, I would think.",
    "created_at": "2020-01-17T13:30:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575626253",
    "id": 575626253,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTYyNjI1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575626253/reactions"
    },
    "updated_at": "2020-01-17T13:30:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575626253",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "The default output is pretty ugly, so what I was trying to do was format it. My Provider writes out containers and items, and I was just trying to make the container display with brackets (\"[...]\") in the output.\r\n\r\nFor example, I created a trivial custom provider to debug with, with this ps1xml file (notice that the first view has a <FormatString>):\r\n\r\n```\r\n<Configuration>\r\n  <ViewDefinitions>\r\n    <View>\r\n      <Name>Class1</Name>\r\n      <ViewSelectedBy>\r\n        <TypeName>TestPSPCore.TestClass1</TypeName>\r\n      </ViewSelectedBy>\r\n      <WideControl>\r\n        <ColumnNumber>1</ColumnNumber>\r\n        <WideEntries>\r\n          <WideEntry>\r\n            <WideItem>\r\n              <PropertyName>Name</PropertyName>\r\n              <FormatString>[{0}]</FormatString> <!- <<<<<<<<<< -->\r\n            </WideItem>\r\n          </WideEntry>\r\n        </WideEntries>\r\n      </WideControl>\r\n    </View>\r\n\r\n    <View>\r\n      <Name>Class2</Name>\r\n      <ViewSelectedBy>\r\n        <TypeName>TestPSPCore.TestClass2</TypeName>\r\n      </ViewSelectedBy>\r\n      <WideControl>\r\n        <ColumnNumber>1</ColumnNumber>\r\n        <WideEntries>\r\n          <WideEntry>\r\n            <WideItem>\r\n              <PropertyName>Name</PropertyName>\r\n            </WideItem>\r\n          </WideEntry>\r\n        </WideEntries>\r\n      </WideControl>\r\n    </View>\r\n  </ViewDefinitions>\r\n</Configuration>\r\n```\r\nNow I do a gci, which returns one of each type (named \"1\" and \"2\"), and expect to get\r\n\r\n```\r\n[1]\r\n2\r\n```\r\n\r\nInstead I get:\r\n\r\n```\r\n1\r\n\r\nPSPath        : TestPSPCore\\TestPSPCore::\\2\r\nPSParentPath  : TestPSPCore\\TestPSPCore::\\\r\nPSChildName   : 2\r\nPSDrive       : tpsp\r\nPSProvider    : TestPSPCore\\TestPSPCore\r\nPSIsContainer : False\r\nName          : 2\r\n```\r\n\r\nI did work around it with a common base class. That means that you have to modify the objects to have a custom formatter though. If it's necessary for the object to be designed to be formatted, then what I'd really like is to be able to set a [PSOutput] attribute or some such on a property, and then that's what's used by default to output the object. Or is there a way to cause the ToString() to be used to format the object?\r\n",
    "created_at": "2020-01-17T14:36:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575651086",
    "id": 575651086,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTY1MTA4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575651086/reactions"
    },
    "updated_at": "2020-01-17T14:36:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575651086",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18429489?v=4",
      "events_url": "https://api.github.com/users/MikeHillberg/events{/privacy}",
      "followers_url": "https://api.github.com/users/MikeHillberg/followers",
      "following_url": "https://api.github.com/users/MikeHillberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeHillberg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MikeHillberg",
      "id": 18429489,
      "login": "MikeHillberg",
      "node_id": "MDQ6VXNlcjE4NDI5NDg5",
      "organizations_url": "https://api.github.com/users/MikeHillberg/orgs",
      "received_events_url": "https://api.github.com/users/MikeHillberg/received_events",
      "repos_url": "https://api.github.com/users/MikeHillberg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MikeHillberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeHillberg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MikeHillberg"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> It might have been part of the original design, but I think it's worth trying to do it better. ðŸ™‚\r\n\r\nPersonally I'd really rather not see this.  There aren't many good reasons to return multiple completely separate object types outside of interactively.  This being a sort of hard stop has kind of cemented the best practice of only returning one thing in the community.\r\n\r\n@MikeHillberg Instead of a `WideControl`, could you use a `CustomControl`?  Custom controls and lists can be marked as \"OutOfBand\" which forces this separation.\r\n\r\n```xml\r\n<Configuration>\r\n    <ViewDefinitions>\r\n        <View>\r\n            <Name>Thing</Name>\r\n            <OutOfBand>true</OutOfBand>\r\n            <ViewSelectedBy>\r\n                <TypeName>Thing</TypeName>\r\n            </ViewSelectedBy>\r\n            <CustomControl>\r\n                <CustomEntries>\r\n                    <CustomEntry>\r\n                        <CustomItem>\r\n                            <Text>[</Text>\r\n                            <ExpressionBinding>\r\n                                <PropertyName>Name</PropertyName>\r\n                            </ExpressionBinding>\r\n                            <Text>]</Text>\r\n                        </CustomItem>\r\n                    </CustomEntry>\r\n                </CustomEntries>\r\n            </CustomControl>\r\n        </View>\r\n        <View>\r\n            <Name>Thing2</Name>\r\n            <OutOfBand>true</OutOfBand>\r\n            <ViewSelectedBy>\r\n                <TypeName>Thing2</TypeName>\r\n            </ViewSelectedBy>\r\n            <CustomControl>\r\n                <CustomEntries>\r\n                    <CustomEntry>\r\n                        <CustomItem>\r\n                            <ExpressionBinding>\r\n                                <PropertyName>Name</PropertyName>\r\n                            </ExpressionBinding>\r\n                        </CustomItem>\r\n                    </CustomEntry>\r\n                </CustomEntries>\r\n            </CustomControl>\r\n        </View>\r\n    </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\n```powershell\r\n([PSCustomObject]@{\r\n    PSTypeName = 'Thing'\r\n    Name = 'Thing'\r\n},\r\n[PSCustomObject]@{\r\n    PSTypeName = 'Thing2'\r\n    Name = 'Thing2'\r\n})\r\n\r\n# [Thing]\r\n# Thing2\r\n```",
    "created_at": "2020-01-17T15:11:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575664949",
    "id": 575664949,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTY2NDk0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575664949/reactions"
    },
    "updated_at": "2020-01-17T15:11:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575664949",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Personally I'd really rather not see this. There aren't many good reasons to return multiple completely separate object types outside of interactively. This being a sort of hard stop has kind of cemented the best practice of only returning one thing in the community.\r\n\r\nThat's a good point. True enough. ðŸ™‚ ",
    "created_at": "2020-01-17T16:13:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575691116",
    "id": 575691116,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTY5MTExNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575691116/reactions"
    },
    "updated_at": "2020-01-17T16:13:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575691116",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Sorry, I'm not parsing that. You're saying that heterogeneous collections are bad practice?\r\n\r\nI was thinking of it like the file system, like directories and files. But now I see that the file system provider returns both files and directories as a FileInfo, so it is homogeneous.\r\n\r\nMy solution actually was to make everything homogeneous with a common base class by which subclasses and customize their output in the provider:\r\n\r\n```\r\n    abstract public class PSFormatting\r\n    {\r\n        public abstract string PSName { get; }\r\n    }\r\n```\r\n\r\n\r\n```\r\n<Configuration>\r\n  <ViewDefinitions>\r\n    <View>\r\n      <Name>MyView</Name>\r\n      <ViewSelectedBy>\r\n        <TypeName>NS.PSFormatting</TypeName> <!-- <<<<<<<< -->\r\n      </ViewSelectedBy>\r\n      <WideControl>\r\n        <ColumnNumber>1</ColumnNumber>\r\n        <WideEntries>\r\n          <WideEntry>\r\n            <WideItem>\r\n              <PropertyName>PSName</PropertyName>  <!-- <<<<<<<< -->\r\n            </WideItem>\r\n          </WideEntry>\r\n        </WideEntries>\r\n      </WideControl>\r\n    </View>\r\n  </ViewDefinitions>\r\n</Configuration>\r\n```\r\n",
    "created_at": "2020-01-17T17:08:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575713326",
    "id": 575713326,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTcxMzMyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575713326/reactions"
    },
    "updated_at": "2020-01-17T17:08:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575713326",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18429489?v=4",
      "events_url": "https://api.github.com/users/MikeHillberg/events{/privacy}",
      "followers_url": "https://api.github.com/users/MikeHillberg/followers",
      "following_url": "https://api.github.com/users/MikeHillberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeHillberg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MikeHillberg",
      "id": 18429489,
      "login": "MikeHillberg",
      "node_id": "MDQ6VXNlcjE4NDI5NDg5",
      "organizations_url": "https://api.github.com/users/MikeHillberg/orgs",
      "received_events_url": "https://api.github.com/users/MikeHillberg/received_events",
      "repos_url": "https://api.github.com/users/MikeHillberg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MikeHillberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeHillberg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MikeHillberg"
    }
  },
  {
    "author_association": "NONE",
    "body": "I think part of what got me down this path is that I don't like the default output I see in the FileSystem driver; the little 'd' as a directory indicator isn't obvious enough for me when I'm doing a quick look. \r\n\r\nThe issue of column headings with heterogeneous objects makes sense, but you can have objects with properties in common that don't have a common base class.\r\n",
    "created_at": "2020-01-17T17:14:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575715601",
    "id": 575715601,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTcxNTYwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575715601/reactions"
    },
    "updated_at": "2020-01-17T17:14:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575715601",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18429489?v=4",
      "events_url": "https://api.github.com/users/MikeHillberg/events{/privacy}",
      "followers_url": "https://api.github.com/users/MikeHillberg/followers",
      "following_url": "https://api.github.com/users/MikeHillberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeHillberg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MikeHillberg",
      "id": 18429489,
      "login": "MikeHillberg",
      "node_id": "MDQ6VXNlcjE4NDI5NDg5",
      "organizations_url": "https://api.github.com/users/MikeHillberg/orgs",
      "received_events_url": "https://api.github.com/users/MikeHillberg/received_events",
      "repos_url": "https://api.github.com/users/MikeHillberg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MikeHillberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeHillberg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MikeHillberg"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yep that's the idea!  Another thing you can do without modifying the actual original object is:\r\n\r\n```xml\r\n<Configuration>\r\n    <ViewDefinitions>\r\n        <View>\r\n            <Name>MyView</Name>\r\n            <ViewSelectedBy>\r\n                <TypeName>NS.PSFormattingItemBase</TypeName>\r\n            </ViewSelectedBy>\r\n            <WideControl>\r\n                <ColumnNumber>1</ColumnNumber>\r\n                <WideEntries>\r\n                    <WideEntry>\r\n                        <EntrySelectedBy>\r\n                            <TypeName>NS.PSFormattingContainer</TypeName>\r\n                        </EntrySelectedBy>\r\n                        <WideItem>\r\n                            <PropertyName>Name</PropertyName>\r\n                            <FormatString>[{0}]</FormatString>\r\n                        </WideItem>\r\n                    </WideEntry>\r\n                    <WideEntry>\r\n                        <EntrySelectedBy>\r\n                            <TypeName>NS.PSFormattingLeaf</TypeName>\r\n                        </EntrySelectedBy>\r\n                        <WideItem>\r\n                            <PropertyName>Name</PropertyName>\r\n                        </WideItem>\r\n                    </WideEntry>\r\n                </WideEntries>\r\n            </WideControl>\r\n        </View>\r\n    </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\nThat assumes something like:\r\n\r\n```csharp\r\npublic abstract class PSFormattingBase\r\n{\r\n    public virtual string Name { get; }\r\n}\r\n\r\npublic class PSFormattingContainer : PSFormattingBase\r\n{\r\n}\r\n\r\npublic class PSFormattingLeaf : PSFormattingBase\r\n{\r\n}\r\n```",
    "created_at": "2020-01-17T17:16:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575716539",
    "id": 575716539,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTcxNjUzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575716539/reactions"
    },
    "updated_at": "2020-01-17T17:16:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575716539",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "Nice, I hadn't found the EntrySelectedBy. That still requires you modify the original objects to give them a common base though. Otoh, in my case, using System.Object as a common base works, and then your solution works purely with the ps1xml.\r\n\r\nIt'd be great to call out the homogeneous guideline in the [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.provider.containercmdletprovider.getchilditems?view=pscore-6.2.0#System_Management_Automation_Provider_ContainerCmdletProvider_GetChildItems_System_String_System_Boolean_) and [sample](https://docs.microsoft.com/en-us/powershell/scripting/developer/provider/accessdbprovidersample05?view=powershell-7).\r\n",
    "created_at": "2020-01-17T17:28:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575720436",
    "id": 575720436,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTcyMDQzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575720436/reactions"
    },
    "updated_at": "2020-01-17T17:28:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575720436",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18429489?v=4",
      "events_url": "https://api.github.com/users/MikeHillberg/events{/privacy}",
      "followers_url": "https://api.github.com/users/MikeHillberg/followers",
      "following_url": "https://api.github.com/users/MikeHillberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/MikeHillberg/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MikeHillberg",
      "id": 18429489,
      "login": "MikeHillberg",
      "node_id": "MDQ6VXNlcjE4NDI5NDg5",
      "organizations_url": "https://api.github.com/users/MikeHillberg/orgs",
      "received_events_url": "https://api.github.com/users/MikeHillberg/received_events",
      "repos_url": "https://api.github.com/users/MikeHillberg/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MikeHillberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MikeHillberg/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MikeHillberg"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Nice, I hadn't found the EntrySelectedBy. That still requires you modify the original objects to give them a common base though. Otoh, in my case, using System.Object as a common base works, and then your solution works purely with the ps1xml.\r\n\r\nYou can also just do this:\r\n\r\n```xml\r\n<Configuration>\r\n    <ViewDefinitions>\r\n        <View>\r\n            <Name>MyView</Name>\r\n            <ViewSelectedBy>\r\n                <TypeName>NS.PSFormattingItemBase</TypeName>\r\n            </ViewSelectedBy>\r\n            <WideControl>\r\n                <ColumnNumber>1</ColumnNumber>\r\n                <WideEntries>\r\n                    <WideEntry>\r\n                        <WideItem>\r\n                            <ScriptBlock>\r\n                                if ($_.PSIsContainer) {\r\n                                    return '[{0}]' -f $_.Name\r\n                                }\r\n\r\n                                return $_.Name\r\n                            </ScriptBlock>\r\n                        </WideItem>\r\n                    </WideEntry>\r\n                </WideEntries>\r\n            </WideControl>\r\n        </View>\r\n    </ViewDefinitions>\r\n</Configuration>\r\n```\r\n\r\nA little less clean but totally fine.\r\n\r\n> It'd be great to call out the homogeneous guideline in the [documentation](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.provider.containercmdletprovider.getchilditems?view=pscore-6.2.0#System_Management_Automation_Provider_ContainerCmdletProvider_GetChildItems_System_String_System_Boolean_) and [sample](https://docs.microsoft.com/en-us/powershell/scripting/developer/provider/accessdbprovidersample05?view=powershell-7).\r\n\r\nIt's more a general rule for anything that returns objects.  C# methods, functions, scripts, cmdlets, anything.  Definitely agree that it should be spelled out in a help doc somewhere though, assuming it hasn't already.",
    "created_at": "2020-01-17T17:37:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-575723721",
    "id": 575723721,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTcyMzcyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575723721/reactions"
    },
    "updated_at": "2020-01-17T17:37:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/575723721",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Please open new issue in PowerShell Docs repo if needed.",
    "created_at": "2020-01-31T14:51:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11601#issuecomment-580764496",
    "id": 580764496,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11601",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDc2NDQ5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580764496/reactions"
    },
    "updated_at": "2020-01-31T14:51:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580764496",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
