[
  {
    "author_association": "CONTRIBUTOR",
    "body": "JavaScript implementations cannot read large integers >53 bytes precision, without loss of precision, so it looks like there's no clearly correct answer here, and the main choices are:\r\n\r\n - Pick what another system does and do that; Newtonsoft Json.Net encodes larger integers than JavaScript can read safely and risks compatibility problems, Twitter encodes large numbers as strings and cautions developers to expect that, Google V8 refuses to serialize BigInts saying it isn't supported.\r\n - Encode small values, but error for BigIntegers representing larger values. (Might be unpredictable)\r\n - Do what it does now, with that object encoding, which isn't useful, but is consistent - doesn't promise anything which it can't deliver.\r\n - Defer until such time as ECMAScript / Google have agreed ways of serialising BigInts to JSON, and do what they do.\r\n\r\n----\r\n\r\nBackground links:\r\n\r\n[ECMA-404 JSON standard](https://www.ecma-international.org/publications/standards/Ecma-404.htm)  doesn't put a limit on how large a value can be serialized as an integer in JSON, but JavaScript is limited to reading 53 bytes precision so it can't read integers larger than that, and returns truncated values. Twitter works around this by [using strings to encode its 64-bit numeric identifiers](https://developer.twitter.com/en/docs/basics/twitter-ids) and cautions developers to expect that.\r\n\r\nChrome's JavaScript engine V8 [gained support for BigInt as a data type in 2018](https://developers.google.com/web/updates/2018/05/bigint) but cannot serialize them to JSON, with `VM134:1 Uncaught TypeError: Do not know how to serialize a BigInt`.\r\n\r\nECMAScript [has an open issue](https://github.com/tc39/proposal-bigint/issues/24) for what to do about JSON serialization of BigInts, appears inconclusive, with lots of discussion about compatibility.\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-03-22T23:14:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-475812012",
    "id": 475812012,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTgxMjAxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475812012/reactions"
    },
    "updated_at": "2019-03-22T23:14:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475812012",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/187787?v=4",
      "events_url": "https://api.github.com/users/HumanEquivalentUnit/events{/privacy}",
      "followers_url": "https://api.github.com/users/HumanEquivalentUnit/followers",
      "following_url": "https://api.github.com/users/HumanEquivalentUnit/following{/other_user}",
      "gists_url": "https://api.github.com/users/HumanEquivalentUnit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HumanEquivalentUnit",
      "id": 187787,
      "login": "HumanEquivalentUnit",
      "node_id": "MDQ6VXNlcjE4Nzc4Nw==",
      "organizations_url": "https://api.github.com/users/HumanEquivalentUnit/orgs",
      "received_events_url": "https://api.github.com/users/HumanEquivalentUnit/received_events",
      "repos_url": "https://api.github.com/users/HumanEquivalentUnit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HumanEquivalentUnit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HumanEquivalentUnit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HumanEquivalentUnit"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "/cc @markekraus Have you thoughts?",
    "created_at": "2019-03-23T08:00:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-475849274",
    "id": 475849274,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTg0OTI3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475849274/reactions"
    },
    "updated_at": "2019-03-23T08:01:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475849274",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I think JavaScript is one of thousands of use-cases for JSON and probably a much small minority among those employed in PowerShell. The primary use cases for JSON in PowerShell are serializing and desalinizing data for interaction with REST APIs or for consumption or storage as settings. I see no reason to deny serializing BigInt. There are possibly REST APIs that would depend on such things.\r\n\r\nBut, I'd be more interested in what the .NET Core 3.0 JSON implementation does with them. If we still plan to move from NewtonSoft to the .NET Core native implementation, it probably behooves us to do as they do.",
    "created_at": "2019-03-23T15:33:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-475879215",
    "id": 475879215,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTg3OTIxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475879215/reactions"
    },
    "updated_at": "2019-03-23T15:33:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475879215",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  If we still plan to move from NewtonSoft to the .NET Core native implementation\r\n\r\n@markekraus If we don't still have an issue tracking this please open new issue. Thanks!",
    "created_at": "2019-03-23T16:46:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-475885255",
    "id": 475885255,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTg4NTI1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475885255/reactions"
    },
    "updated_at": "2019-03-23T16:46:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475885255",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Oracle java is the standard\r\n\r\nI disagree. RFC-8259 is the the standard. How any language implements JSON should be based on that standard.\r\n\r\nThe relevant part of the RFC is here https://tools.ietf.org/html/rfc8259#section-6 \r\n\r\n> Note that when such software is used, numbers that are integers and\r\n   are in the range [-(2^53)+1, (2^53)-1] are interoperable in the\r\n   sense that implementations will agree exactly on their numeric\r\n   values.\r\n\r\nWe already support Int64 conversion which is out of range for general interoperability. Int64.MaxValue `9223372036854775807` is greater than Number.MAX_SAFE_INTEGER `9007199254740991`. There is no strict limit on this per the RFC, just a warning with regards to interoperability.\r\n\r\nIf PowerShell was written in Java, then interoperability with jdk12 would be critical. However, we are based on .NET Core so we are bound by their support and limitations. Thus, it is far more important for us to consider .NET Core 3+'s implementation than any other language for any area not explicitly  restricted by RFC-8259.",
    "created_at": "2019-03-24T17:56:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-475983295",
    "id": 475983295,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTk4MzI5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475983295/reactions"
    },
    "updated_at": "2019-03-24T17:56:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/475983295",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I would like to note that if we do end up converting BigInt to a JSON Number by, it will be a breaking change. It _could_ be implemented in a non-breaking manner as a configurable option. However, I suspect what most users would consider the default behavior would be to convert BigInt to JSON Number. Whether we wish to not make it option or what is the default behavior needs to be considered carefully.",
    "created_at": "2019-03-24T22:40:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-476008431",
    "id": 476008431,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjAwODQzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476008431/reactions"
    },
    "updated_at": "2019-03-24T22:40:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476008431",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue creates inconsistent behavior with desktop PowerShell 5 though.  Since ConvertFrom-Json prioritizes BigInteger over Decimal in PSCore, you can't go from JSON back to JSON without breaking the result so long as BigInteger isn't serialized correctly.  This doesn't repro in Windows PowerShell.\r\n\r\nWindows PowerShell 5.1.18362.145:\r\n```powershell\r\nPS C:\\> \"9223372036854775808\" | ConvertFrom-Json | ConvertTo-Json\r\n9223372036854775808\r\n```\r\nThe intermediate type is interpreted as Decimal.\r\n\r\nPSCore 7.0.0-rc.1\r\n```powershell\r\nPS C:\\> \"9223372036854775808\" | ConvertFrom-Json | ConvertTo-Json\r\n{\r\n  \"IsPowerOfTwo\": true,\r\n  \"IsZero\": false,\r\n  \"IsOne\": false,\r\n  \"IsEven\": true,\r\n  \"Sign\": 1\r\n}\r\n```\r\nThe intermediate type is interpreted as BigInteger.",
    "created_at": "2020-01-14T04:18:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9207#issuecomment-573992565",
    "id": 573992565,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9207",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mzk5MjU2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/573992565/reactions"
    },
    "updated_at": "2020-01-14T04:22:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/573992565",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4434856?v=4",
      "events_url": "https://api.github.com/users/zackste/events{/privacy}",
      "followers_url": "https://api.github.com/users/zackste/followers",
      "following_url": "https://api.github.com/users/zackste/following{/other_user}",
      "gists_url": "https://api.github.com/users/zackste/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/zackste",
      "id": 4434856,
      "login": "zackste",
      "node_id": "MDQ6VXNlcjQ0MzQ4NTY=",
      "organizations_url": "https://api.github.com/users/zackste/orgs",
      "received_events_url": "https://api.github.com/users/zackste/received_events",
      "repos_url": "https://api.github.com/users/zackste/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/zackste/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zackste/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/zackste"
    }
  }
]
