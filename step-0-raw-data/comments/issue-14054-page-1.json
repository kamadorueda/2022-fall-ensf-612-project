[
  {
    "author_association": "MEMBER",
    "body": "[BinaryFormatter](https://github.com/PowerShell/PowerShell/search?l=C%23&q=binaryformatter) is really only used by remoting for TimeZone.  The only other case is the communication between `Out-GridView` WPF app and the cmdlet which we can update as that's an internal communication.  However, the remoting change may require a rev to PSRP protocol specification and will break legacy clients although we could have a fallback strategy in the protocol.",
    "created_at": "2021-03-19T22:35:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-803172142",
    "id": 803172142,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzE3MjE0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/803172142/reactions"
    },
    "updated_at": "2021-03-19T22:35:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/803172142",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "cc @PaulHigin ",
    "created_at": "2021-03-19T22:36:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-803172205",
    "id": 803172205,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzE3MjIwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/803172205/reactions"
    },
    "updated_at": "2021-03-19T22:36:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/803172205",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "This seems to also hit remoting from .NET interactive, for which there doesn't appear to be a work around currently. ",
    "created_at": "2021-04-20T17:55:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-823483509",
    "id": 823483509,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzQ4MzUwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823483509/reactions"
    },
    "updated_at": "2021-04-20T17:55:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823483509",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT @fMichaleczek we've recently managed to get our first .NET 6 builds of Devolutions Server, and we've encountered this issue which is fixed for now using EnableUnsafeBinaryFormatterSerialization. Can you confirm that whatever happens with the binary formatter deprecation, future versions of the PowerShell SDK will still be able to connect to older versions of PowerShell, especially for Windows PowerShell 5.1 over a WinRM transport?",
    "created_at": "2022-04-07T18:10:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1092055578",
    "id": 1092055578,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BF3Ia",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1092055578/reactions"
    },
    "updated_at": "2022-04-07T18:10:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1092055578",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/295841?v=4",
      "events_url": "https://api.github.com/users/awakecoding/events{/privacy}",
      "followers_url": "https://api.github.com/users/awakecoding/followers",
      "following_url": "https://api.github.com/users/awakecoding/following{/other_user}",
      "gists_url": "https://api.github.com/users/awakecoding/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/awakecoding",
      "id": 295841,
      "login": "awakecoding",
      "node_id": "MDQ6VXNlcjI5NTg0MQ==",
      "organizations_url": "https://api.github.com/users/awakecoding/orgs",
      "received_events_url": "https://api.github.com/users/awakecoding/received_events",
      "repos_url": "https://api.github.com/users/awakecoding/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/awakecoding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awakecoding/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/awakecoding"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> future versions of the PowerShell SDK will still be able to connect to older versions of PowerShell, especially for Windows PowerShell 5.1 over a WinRM transport?\r\n\r\nAs said in the [BinaryFormatter Obsoletion Strategy](https://github.com/dotnet/designs/blob/main/accepted/2020/better-obsoletion/binaryformatter-obsoletion.md), the code will be removed in **.Net 8**. Until that you can use the code with EnableUnsafeBinaryFormatterSerialization.",
    "created_at": "2022-04-08T06:51:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1092501239",
    "id": 1092501239,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BHj73",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1092501239/reactions"
    },
    "updated_at": "2022-04-08T06:51:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1092501239",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> > future versions of the PowerShell SDK will still be able to connect to older versions of PowerShell, especially for Windows PowerShell 5.1 over a WinRM transport?\n> \n> As said in the [BinaryFormatter Obsoletion Strategy](https://github.com/dotnet/designs/blob/main/accepted/2020/better-obsoletion/binaryformatter-obsoletion.md), the code will be removed in **.Net 8**. Until that you can use the code with EnableUnsafeBinaryFormatterSerialization.\n\nYes, but that doesn't answer the question of backward compatibility with Windows PowerShell 5.1 servers when using a future .NET 8 PowerShell SDK client. I don't know how much it relies on BinaryFormatter, but is it possible to replace just the required bits in the PowerShell SDK such that it keeps working? BinaryFormatter may be deprecated, but Windows PowerShell 5.1 will still be officially supported for years to come as it ships built-in with Windows Server ",
    "created_at": "2022-04-08T12:25:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1092806638",
    "id": 1092806638,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BIufu",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1092806638/reactions"
    },
    "updated_at": "2022-04-08T12:25:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1092806638",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/295841?v=4",
      "events_url": "https://api.github.com/users/awakecoding/events{/privacy}",
      "followers_url": "https://api.github.com/users/awakecoding/followers",
      "following_url": "https://api.github.com/users/awakecoding/following{/other_user}",
      "gists_url": "https://api.github.com/users/awakecoding/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/awakecoding",
      "id": 295841,
      "login": "awakecoding",
      "node_id": "MDQ6VXNlcjI5NTg0MQ==",
      "organizations_url": "https://api.github.com/users/awakecoding/orgs",
      "received_events_url": "https://api.github.com/users/awakecoding/received_events",
      "repos_url": "https://api.github.com/users/awakecoding/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/awakecoding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awakecoding/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/awakecoding"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Yes, but that doesn't answer the question of backward compatibility with Windows PowerShell 5.1 servers\r\n\r\nObviously, the distance between .Net and the .Net Framework increases with each new version and the ecosystem is obviously splitting into two parts. As for PowerShell, this split has already happened and is doubly amplified by the split in .Net, so in my opinion it is not serious to talk about forward or backward compatibility.",
    "created_at": "2022-04-09T18:32:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094102946",
    "id": 1094102946,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BNq-i",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094102946/reactions"
    },
    "updated_at": "2022-04-09T18:32:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094102946",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Correct me if I'm wrong, but from your answer it really looks like we're crossing fingers that by the time PowerShell uses .NET 8, Windows PowerShell 5.1 won't really be a thing anymore.\n\nI agree with deprecating BinaryFormatter, and it makes sense to drop support for it from the .NET runtime, but we need a plan to have a working PowerShell SDK that can still connect to the still-supported Windows PowerShell 5.1 when this happens. It is going to be there for a LONG time, it's built-in to Windows Server, and Windows Server has a long lifetime before reaching its EOL.\n\nI really don't know much about BinaryFormatter, and from Steve's previous answer, it looks like we're using it only in two places (time zones and Out-GridView). If someone could point to the source files affected maybe we could better assess ways to retain compatibility?\n\nAnother possibility would be to move the required classes in a nuget package separate from the .NET runtime that could be used in PowerShell, like Microsoft.Windows.Compatibility: https://docs.microsoft.com/en-us/dotnet/core/porting/windows-compat-pack\n\n<blockquote><img src=\"https://docs.microsoft.com/dotnet/media/dotnet-logo.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/core/porting/windows-compat-pack\">Use the Windows Compatibility Pack to port code - .NET Core</a></strong></div><div>Learn about the Windows Compatibility Pack and how can you use it to port existing .NET Framework code to .NET 5 and .NET Core 3.1.</div></blockquote>",
    "created_at": "2022-04-09T20:52:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094122585",
    "id": 1094122585,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BNvxZ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094122585/reactions"
    },
    "updated_at": "2022-04-09T20:52:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094122585",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/295841?v=4",
      "events_url": "https://api.github.com/users/awakecoding/events{/privacy}",
      "followers_url": "https://api.github.com/users/awakecoding/followers",
      "following_url": "https://api.github.com/users/awakecoding/following{/other_user}",
      "gists_url": "https://api.github.com/users/awakecoding/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/awakecoding",
      "id": 295841,
      "login": "awakecoding",
      "node_id": "MDQ6VXNlcjI5NTg0MQ==",
      "organizations_url": "https://api.github.com/users/awakecoding/orgs",
      "received_events_url": "https://api.github.com/users/awakecoding/received_events",
      "repos_url": "https://api.github.com/users/awakecoding/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/awakecoding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awakecoding/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/awakecoding"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Correct me if I'm wrong, but from your answer it really looks like we're crossing fingers that by the time PowerShell uses .NET 8, Windows PowerShell 5.1 won't really be a thing anymore.\r\n\r\nCurrent MSFT PowerShell team policy is to release next pwsh in the day next .Net version is released.\r\nIf we look [.Net roadmap](https://github.com/dotnet/core/blob/main/roadmap.md#upcoming-ship-dates) .Net 8 is  scheduled for November 2023. So 2024 is a time we lost BinaryFormatter. It is worth noting that we also lose SecurityString and more.\r\nMSFT also officially announced that it is not worth starting projects related to .Net Framework, all new projects should be on .Net.\r\nIf you already have a project on the .Net Framework, you are doomed to struggle with incompatibilities. It will get worse every day. Moreover, .Net is based on a short lifecycle, so you will not have time to pause and respawn.",
    "created_at": "2022-04-10T09:05:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094224389",
    "id": 1094224389,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BOIoF",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094224389/reactions"
    },
    "updated_at": "2022-04-10T09:05:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094224389",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > Correct me if I'm wrong, but from your answer it really looks like we're crossing fingers that by the time PowerShell uses .NET 8, Windows PowerShell 5.1 won't really be a thing anymore.\r\n> \r\n> Current MSFT PowerShell team policy is to release next pwsh in the day next .Net version is released. If we look [.Net roadmap](https://github.com/dotnet/core/blob/main/roadmap.md#upcoming-ship-dates) .Net 8 is scheduled for November 2023. So 2024 is a time we lost BinaryFormatter. It is worth noting that we also lose SecurityString and more. MSFT also officially announced that it is not worth starting projects related to .Net Framework, all new projects should be on .Net. If you already have a project on the .Net Framework, you are doomed to struggle with incompatibilities. It will get worse every day. Moreover, .Net is based on a short lifecycle, so you will not have time to pause and respawn.\r\n\r\nIHMO, integrate System.Text.Json and JsonSerializer, is the first thing to do. Because it's the future and maybe the solution (clijson ?). \r\n ",
    "created_at": "2022-04-10T10:53:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094244684",
    "id": 1094244684,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BONlM",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094244684/reactions"
    },
    "updated_at": "2022-04-10T10:53:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094244684",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I made a twitter thread about this yesterday, and @jborean93 came up with the simplest possible solution for the BinaryFormatter API obsoletion: https://twitter.com/BoreanJordan/status/1512978332887175170?t=VwkOfkZ-zt69Vj8J0TEJzA&s=19\n\nAll we really need is custom code to handle the time zone stuff during the connection sequence. It is benign in nature, and we could make a fix already such that connections work with .NET 6 without re-enabling BinaryFormatter. The real BinaryFormatter APIs are not required, Jordan was able to write custom code for the time zone stuff in his own Python implementation, there aren't that many possible combinations to handle.\n\nAs for Out-GridView, it is only really used interactively, so I suggest we should update the PowerShell server not to use it unless it is already the case, and not bother about backward compatibility since *interactive* PowerShell clients can reasonably switch to PowerShell 7. non-interactive use through the PowerShell SDK is what truly matters.\n\nShould we create a separate issue to add a proper fallback for the time zone stuff in the current code base, link it to this issue? It would fix at least the current problem.\n\nAs for other planned deprecated APIs, are there issues opened for all of them, and can someone link them here so we have a good idea of other issues coming up that would break backward compatibility with Windows PowerShell servers?\n",
    "created_at": "2022-04-10T12:59:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094268466",
    "id": 1094268466,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BOTYy",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094268466/reactions"
    },
    "updated_at": "2022-04-10T12:59:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094268466",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/295841?v=4",
      "events_url": "https://api.github.com/users/awakecoding/events{/privacy}",
      "followers_url": "https://api.github.com/users/awakecoding/followers",
      "following_url": "https://api.github.com/users/awakecoding/following{/other_user}",
      "gists_url": "https://api.github.com/users/awakecoding/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/awakecoding",
      "id": 295841,
      "login": "awakecoding",
      "node_id": "MDQ6VXNlcjI5NTg0MQ==",
      "organizations_url": "https://api.github.com/users/awakecoding/orgs",
      "received_events_url": "https://api.github.com/users/awakecoding/received_events",
      "repos_url": "https://api.github.com/users/awakecoding/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/awakecoding/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awakecoding/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/awakecoding"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "A small point - I would not wish to see a \"powershell server\" edition as noted in the third para.",
    "created_at": "2022-04-10T14:17:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094284676",
    "id": 1094284676,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BOXWE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094284676/reactions"
    },
    "updated_at": "2022-04-10T14:17:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094284676",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3630329?v=4",
      "events_url": "https://api.github.com/users/doctordns/events{/privacy}",
      "followers_url": "https://api.github.com/users/doctordns/followers",
      "following_url": "https://api.github.com/users/doctordns/following{/other_user}",
      "gists_url": "https://api.github.com/users/doctordns/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/doctordns",
      "id": 3630329,
      "login": "doctordns",
      "node_id": "MDQ6VXNlcjM2MzAzMjk=",
      "organizations_url": "https://api.github.com/users/doctordns/orgs",
      "received_events_url": "https://api.github.com/users/doctordns/received_events",
      "repos_url": "https://api.github.com/users/doctordns/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/doctordns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doctordns/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/doctordns"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Looking at the code a bit further, it seems like for the `SessionCapability` message both the client and server exchange don't even use the `TimeZone` value, it just defaults to the default time zone of that host https://github.com/PowerShell/PowerShell/blob/7cc9c874730e87b06dbe54d50e77c1c472996c54/src/System.Management.Automation/engine/remoting/common/WireDataFormat/EncodeAndDecode.cs#L2376-L2392. This means that as a client there doesn't seem to be any consequence to omitting the value at all and they both already ignore it. Going back versions, v2 will try to deserialize this value but is fine if it is omitted. PowerShell 3 is when they removed this deserialization on the server due to what looks like security concerns so I'm fairly confident it's ok for PowerShell as a client to just stop sending that field altogether. Event when looking at what ultimately uses this data from the server it seems like it's only set for [PSSenderInfo.ClientTimeZone](https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.remoting.pssenderinfo.clienttimezone?view=powershellsdk-7.0.0#system-management-automation-remoting-pssenderinfo-clienttimezone) and nothing else internally.\r\n\r\nThe other mentioned usage is with `Out-GridView`, this is not something I'm really knowledgeable on. I cannot even get it working on Linux after following https://devblogs.microsoft.com/powershell/out-gridview-returns/. When attempting to see what it looks like across the wire within PSRemoting not even WinPS allows it so if it uses the binary serializer in any way it should just require an update in the pwsh code and we don't need to worry about being backwards compatible for remoting sessions there\r\n\r\n```powershell\r\n> \"a\" | Out-GridView\r\nOut-GridView : Out-GridView does not work in a remote session.\r\nAt line:1 char:7\r\n+ \"a\" | Out-GridView\r\n+       ~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (Microsoft.Power...GridViewCommand:OutGridViewCommand) [Out-GridView],\r\n    NotSupportedException\r\n    + FullyQualifiedErrorId : RemotingNotSupported,Microsoft.PowerShell.Commands.OutGridViewComman\r\n```\r\n\r\nI have no idea if there are any other usages of `BinaryFormatter`, a quick search brings up https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.Management.UI.Internal/ManagementList/FilterCore/FilterRules/FilterRuleExtensions.cs but I'm not sure what it's used for, considering it's in a namespace with `UI` it probably is the `Out-GridView` stuff.\r\n\r\n<blockquote><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2018/09/Powershell_256.png\" width=\"48\" align=\"right\"><div><img src=\"https://devblogs.microsoft.com/powershell/wp-content/uploads/sites/30/2019/02/Powershell_2561.png\" height=\"14\"> PowerShell Team</div><div><strong><a href=\"https://devblogs.microsoft.com/powershell/out-gridview-returns/\">Out-GridView Returns</a></strong></div><div>Out-GridView Returns! It’s been almost 3 years since PowerShell Core debuted for Linux and Mac, and as we’ve increased our cmdlet coverage more and more, one cmdlet has always stood out as a top, cross-platform request. Today, we are excited to announce that Out-GridView is debuting on all Core-supported platforms through the GraphicalTools Module.</div></blockquote>",
    "created_at": "2022-04-10T22:12:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1094380050",
    "id": 1094380050,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5BOuoS",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094380050/reactions"
    },
    "updated_at": "2022-04-10T22:15:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1094380050",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > future versions of the PowerShell SDK will still be able to connect to older versions of PowerShell, especially for Windows PowerShell 5.1 over a WinRM transport?\r\n> \r\n> As said in the [BinaryFormatter Obsoletion Strategy](https://github.com/dotnet/designs/blob/main/accepted/2020/better-obsoletion/binaryformatter-obsoletion.md), the code will be removed in **.Net 8**. Until that you can use the code with EnableUnsafeBinaryFormatterSerialization.\r\n\r\nAny idea why it may not work in Azure Functions even if EnableUnsafeBinaryFormatterSerialization is set?",
    "created_at": "2022-04-20T15:36:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1104076710",
    "id": 1104076710,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5Bzt-m",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1104076710/reactions"
    },
    "updated_at": "2022-04-20T15:36:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1104076710",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16330285?v=4",
      "events_url": "https://api.github.com/users/antonGritsenko/events{/privacy}",
      "followers_url": "https://api.github.com/users/antonGritsenko/followers",
      "following_url": "https://api.github.com/users/antonGritsenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/antonGritsenko/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/antonGritsenko",
      "id": 16330285,
      "login": "antonGritsenko",
      "node_id": "MDQ6VXNlcjE2MzMwMjg1",
      "organizations_url": "https://api.github.com/users/antonGritsenko/orgs",
      "received_events_url": "https://api.github.com/users/antonGritsenko/received_events",
      "repos_url": "https://api.github.com/users/antonGritsenko/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/antonGritsenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/antonGritsenko/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/antonGritsenko"
    }
  },
  {
    "author_association": "NONE",
    "body": "https://github.com/dotnet/runtime/issues/72132",
    "created_at": "2022-07-13T21:58:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14054#issuecomment-1183718965",
    "id": 1183718965,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14054",
    "node_id": "IC_kwDOAvT7bc5Gjh41",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1183718965/reactions"
    },
    "updated_at": "2022-07-13T21:58:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1183718965",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/580536?v=4",
      "events_url": "https://api.github.com/users/NN---/events{/privacy}",
      "followers_url": "https://api.github.com/users/NN---/followers",
      "following_url": "https://api.github.com/users/NN---/following{/other_user}",
      "gists_url": "https://api.github.com/users/NN---/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/NN---",
      "id": 580536,
      "login": "NN---",
      "node_id": "MDQ6VXNlcjU4MDUzNg==",
      "organizations_url": "https://api.github.com/users/NN---/orgs",
      "received_events_url": "https://api.github.com/users/NN---/received_events",
      "repos_url": "https://api.github.com/users/NN---/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/NN---/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NN---/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/NN---"
    }
  }
]
