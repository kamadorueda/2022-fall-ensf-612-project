[
  {
    "author_association": "NONE",
    "body": "Additional findings: If I change the format of the input text to be more compact, e.g. \r\n```\r\nSet-StrictMode -version latest\r\n\r\n[string] $content = @\"\r\n[\r\n  {\r\n    \"First\": \"1\",\r\n    \"Second\": \"2\"\r\n  }\r\n]\r\n\"@\r\n\r\n$json = (ConvertFrom-Json -InputObject $content)\r\n$json.Second\r\n```\r\n\r\nthen the code runs successfully, and prints '2', even though Strict Mode is set to 2 or higher.\r\n\r\n\r\nUnfortunately, I cannot control the format of the input text so this is not a usable workaround for me.",
    "created_at": "2022-02-02T16:12:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16829#issuecomment-1028104250",
    "id": 1028104250,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16829",
    "node_id": "IC_kwDOAvT7bc49R6A6",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028104250/reactions"
    },
    "updated_at": "2022-02-02T16:14:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028104250",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/644505?v=4",
      "events_url": "https://api.github.com/users/hero101111/events{/privacy}",
      "followers_url": "https://api.github.com/users/hero101111/followers",
      "following_url": "https://api.github.com/users/hero101111/following{/other_user}",
      "gists_url": "https://api.github.com/users/hero101111/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/hero101111",
      "id": 644505,
      "login": "hero101111",
      "node_id": "MDQ6VXNlcjY0NDUwNQ==",
      "organizations_url": "https://api.github.com/users/hero101111/orgs",
      "received_events_url": "https://api.github.com/users/hero101111/received_events",
      "repos_url": "https://api.github.com/users/hero101111/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/hero101111/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hero101111/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/hero101111"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "```powershell\r\n$json=(ConvertFrom-Json -InputObject $content)\r\n$json\r\n\r\nFirst\r\n-----\r\n1\r\n```\r\nWith strict mode off the code shows First - only the property presents as NoteProperty. If we call $json.Second this shows Second. So it is expected behavior if strict mode is on to do not show Second.\r\n```powershell\r\n$json | Get-Member\r\n\r\n   TypeName: System.Management.Automation.PSCustomObject\r\n\r\nName        MemberType   Definition\r\n----        ----------   ----------\r\nEquals      Method       bool Equals(System.Object obj)\r\nGetHashCode Method       int GetHashCode()\r\nGetType     Method       type GetType()\r\nToString    Method       string ToString()\r\nFirst       NoteProperty string First=1\r\n```\r\n\r\n And question is whether the cmdlet works right and do not add Second. I think it would be amazing if this cmdlet added each element of the array as a property since the array could be very large.\r\n",
    "created_at": "2022-02-02T17:52:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16829#issuecomment-1028200416",
    "id": 1028200416,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16829",
    "node_id": "IC_kwDOAvT7bc49SRfg",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028200416/reactions"
    },
    "updated_at": "2022-02-02T17:52:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028200416",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Isn't this because of how pwsh gets a property when the object itself is a collection. With the written json you have 2 objects that are stored with their own unique properties, the equivalent pwsh code is\r\n\r\n```powershell\r\n$json = @(\r\n    [PSCustomObject]@{First = \"1\"}\r\n    [PSCustomObject]@{Second = \"2\"}\r\n)\r\n```\r\n\r\nThe way PowerShell's formatter works is it only displays the properties in the first object (AFAIK) and because your 2nd object doesn't have `First` then it looks like it isn't there. Strict mode is also failing because the array itself does not have a property called `First` or `Second` thus to get what you want you need to do\r\n\r\n```powershell\r\nSet-StrictMode -version latest\r\n\r\n[string] $content = @\"\r\n[\r\n  {\r\n    \"First\": \"1\"\r\n  },\r\n  {\r\n    \"Second\": \"2\"\r\n  }\r\n]\r\n\"@\r\n\r\n$json = (ConvertFrom-Json -InputObject $content)\r\n$json[1].Second # Note the [1] here\r\n```",
    "created_at": "2022-02-02T19:02:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16829#issuecomment-1028267378",
    "id": 1028267378,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16829",
    "node_id": "IC_kwDOAvT7bc49Sh1y",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028267378/reactions"
    },
    "updated_at": "2022-02-02T19:02:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028267378",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "I think the behaviour is as-expected. What you are doing with `$json.Second` is called [member enumeration](https://stackoverflow.com/questions/44607064/powershell-null-file-always-generated-output-of-compare-object/44620191#44620191). Member enumeration tries to read the given property from all array elements. Without strict mode, you can get by even if not all array elements contain the given property. With strict mode on, trying to access a non-existing property is an error.\r\n\r\nWith strict mode you get some safety but it comes at the price of some inconvenience.\r\n\r\nHere is a possible workaround:\r\n~~~powershell\r\n$json.Where{ $_ | Get-Member Second }.Second\r\n\r\n# Short form\r\n$json.Where{ $_ | gm Second }.Second\r\n~~~\r\n\r\nThis implements a safeguard against non-existing properties. The [array method](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_arrays?view=powershell-7.2#methods-of-arrays) `.Where` returns all array elements that match the given predicate. Using `Get-Member` we check if the property `Second` exists. Finally we read the value of the property only from elements that actually have such a property, so strict mode won't complain.\r\n\r\nNote that the output can be an array if there are more than one elements in the JSON with a `Second` member. Here is a way to return the value of the `Second` property only from the first found array element.\r\n\r\n~~~powershell\r\n$json.Where({ $_ | Get-Member Second }, 'First').Second\r\n~~~\r\n",
    "created_at": "2022-02-02T22:15:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16829#issuecomment-1028409160",
    "id": 1028409160,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16829",
    "node_id": "IC_kwDOAvT7bc49TEdI",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028409160/reactions"
    },
    "updated_at": "2022-02-02T22:42:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028409160",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18427509?v=4",
      "events_url": "https://api.github.com/users/zett42/events{/privacy}",
      "followers_url": "https://api.github.com/users/zett42/followers",
      "following_url": "https://api.github.com/users/zett42/following{/other_user}",
      "gists_url": "https://api.github.com/users/zett42/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/zett42",
      "id": 18427509,
      "login": "zett42",
      "node_id": "MDQ6VXNlcjE4NDI3NTA5",
      "organizations_url": "https://api.github.com/users/zett42/orgs",
      "received_events_url": "https://api.github.com/users/zett42/received_events",
      "repos_url": "https://api.github.com/users/zett42/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/zett42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zett42/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/zett42"
    }
  },
  {
    "author_association": "NONE",
    "body": "Glad to see this is not a bug of `ConvertFrom-Json`. Thanks for the concise answers and workaround.",
    "created_at": "2022-02-03T08:54:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16829#issuecomment-1028745945",
    "id": 1028745945,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16829",
    "node_id": "IC_kwDOAvT7bc49UWrZ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028745945/reactions"
    },
    "updated_at": "2022-02-03T08:55:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1028745945",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/644505?v=4",
      "events_url": "https://api.github.com/users/hero101111/events{/privacy}",
      "followers_url": "https://api.github.com/users/hero101111/followers",
      "following_url": "https://api.github.com/users/hero101111/following{/other_user}",
      "gists_url": "https://api.github.com/users/hero101111/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/hero101111",
      "id": 644505,
      "login": "hero101111",
      "node_id": "MDQ6VXNlcjY0NDUwNQ==",
      "organizations_url": "https://api.github.com/users/hero101111/orgs",
      "received_events_url": "https://api.github.com/users/hero101111/received_events",
      "repos_url": "https://api.github.com/users/hero101111/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/hero101111/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hero101111/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/hero101111"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2022-02-04T12:00:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16829#issuecomment-1029924269",
    "id": 1029924269,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16829",
    "node_id": "IC_kwDOAvT7bc49Y2Wt",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1029924269/reactions"
    },
    "updated_at": "2022-02-04T12:00:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1029924269",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
