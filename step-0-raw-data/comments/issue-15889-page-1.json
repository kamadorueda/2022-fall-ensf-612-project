[
  {
    "author_association": "COLLABORATOR",
    "body": "I think this probably has more to do with Python than it does with PS.\n\nThe expected behaviour for PS is the second one you illustrate here; doubling up quotes has the effect of inserting a literal quote. This is important especially for single-quoted strings, as there is otherwise no way of adding a literal single quote into a single-quoted string without using a here-string.\n\nIf you check these examples in PS itself, you can see PS's behaviour is consistent here:\n\n```\nPS> \"a\"\"b\"\"c\"\na\"b\"c\n\nPS> 'a''b''c'\na'b'c \n```",
    "created_at": "2021-08-08T20:45:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-894852879",
    "id": 894852879,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41Vl8P",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894852879/reactions"
    },
    "updated_at": "2021-08-08T20:45:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894852879",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "The issue is about calling a command line of any callable and processing the passed ARGV within the called process. This is different from your example. The behaviour of the Python call is here the same as for a PowerShell callable. For example the short script:\r\n```\r\nwrite-host -NoNewline \"[\"\r\nfor ( $i = 0; $i -lt $args.count; $i++ ) {\r\n    write-host -NoNewline \"'$($args[$i])', \"\r\n}\r\nwrite-host \"]\"\r\n```\r\nHas the same behaviour as the Python one-liner:\r\n```\r\nPS C:\\PowerShell-7.1.3> powershell.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  \"a\"\"b\"\"c\"\r\n['abc', ]\r\nPS C:\\PowerShell-7.1.3> powershell.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  'a''b''c'\r\n['a'b'c', ]\r\nPS C:\\PowerShell-7.1.3>\r\n```\r\nAs my main platform is Posix based - bash/sh/ksh - Linux/Unix/BSD - I would expect a consistent behaviour of concatenated quoted strings and also intermixed with non-quoted. Therefore the following examples are consistent, but in general not as expected:\r\n```\r\nPS C:\\PowerShell-7.1.3> powershell.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  'a'b'c'\r\n['a', 'bc', ]\r\nPS C:\\PowerShell-7.1.3> powershell.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  \"a\"b\"c\"\r\n['a', 'bc', ]\r\n```\r\nThe same concatenation in case of the \"bash\" on WSL:\r\n```\r\nC:\\Users\\test>wsl python -c \"import sys;print(sys.argv[1:])\" \"a\"b\"c\"\r\n['abc']\r\n\r\nC:\\Users\\test>wsl python -c \"import sys;print(sys.argv[1:])\" 'a'b'c'\r\n['abc']\r\n\r\nC:\\Users\\test>\r\n```\r\nand on native Linux:\r\n```\r\ntest:~$ python -c \"import sys;print(sys.argv[1:])\" \"a\"b\"c\"\r\n['abc']\r\ntest:~$ python -c \"import sys;print(sys.argv[1:])\" 'a'b'c'\r\n['abc']\r\ntest:~$ \r\n```\r\nTherefore it seems to me that the concatenation of quoted strings at the command line is in general not consistent.\r\n\r\nTwo remarks:\r\n1. I am currently writing scanner/tokenizer for command line call strings - for raw input as well as the pre-scanned ARGV. \r\n   For bash(Posix) + DOS/cmd.exe + PowerShell. The first is implemented in Python.\r\n   This is the reason I have to deal in detail with the raw command line call string as well as the ARGV.\r\n\r\n2. The pre-scan/parser of the input command line call of a shell is commonly a runtime library - e.g. libc - which \r\n   passes the ARGV to the main of the process. This is at the end  the same for scripts as well as C/C++, C#, \r\n   Python, DOS-Batch, PowerShell, Java, etc. \r\n    The program/script gets(commonly) the ARGV only, thus has no chance/means to split the command line by itself.\r\n",
    "created_at": "2021-08-09T02:07:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-894909002",
    "id": 894909002,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41VzpK",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894909002/reactions"
    },
    "updated_at": "2021-08-09T02:07:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894909002",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "NONE",
    "body": "One additional info related to the difference of the call context for a command line and the pure evaluation at the PowerShell prompt.\r\n\r\nThe following command line calls work:\r\n```\r\nPS C:\\PowerShell-7.1.3> powershell.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  'a'b'c'\r\n['a', 'bc', ]\r\nPS C:\\PowerShell-7.1.3> powershell.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  \"a\"b\"c\"\r\n['a', 'bc', ]\r\n```\r\nBut the pure evaluation at the PowerShell prompt of those example strings fails:\r\n```\r\nPS C:\\Python371> 'a'b'c'\r\nAt line:1 char:4\r\n+ 'a'b'c'\r\n+    ~~~~\r\nUnexpected token 'b'c'' in expression or statement.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : UnexpectedToken\r\n\r\nPS C:\\Python371> \"a\"b\"c\"\r\nAt line:1 char:4\r\n+ \"a\"b\"c\"\r\n+    ~~~~\r\nUnexpected token 'b\"c\"' in expression or statement.\r\n    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException\r\n    + FullyQualifiedErrorId : UnexpectedToken\r\n\r\nPS C:\\Python371>\r\n```\r\n",
    "created_at": "2021-08-09T02:49:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-894918161",
    "id": 894918161,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41V14R",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894918161/reactions"
    },
    "updated_at": "2021-08-09T02:50:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894918161",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Note that it's not actually concatenation, doubling up the quotes works as an escape. e.g. `echo 'they''re here'` gives a string object whose value is `they're here`.  This is further confused by the fact that PowerShell strips inner double quotes, but not single quotes, when calling native executables like python.",
    "created_at": "2021-08-09T03:13:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-894923843",
    "id": 894923843,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41V3RD",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894923843/reactions"
    },
    "updated_at": "2021-08-09T03:13:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894923843",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience\r\nI agree that this is in principle the current implementation, but \r\n1. it seems not to be really consequent and with some inconsistent behaviour\r\n2. i really tried to find sufficiently detailed documentation - but failed\r\n\r\nTherefore see also #15888, with the cases of strings with the concatenation of differently quoted strings:\r\n```\r\n\"a\"'b'\"c\"\r\n```\r\nand\r\n```\r\n'a'\"b\"'c'\r\n```\r\nAs I have written in #15888 these are concatenated and therefore basically have no SEPERATOR(as I interpret the same as the Posix specification).\r\n\r\n> The differently quoted strings are scanned on the first view as three separate string tokens, but they miss a SEPARATOR. The \"outer\" quotes of a string are commonly dropped from a parsed command line string as these are temporary markers grouping the characters into a string. This would result in three concatenated strings with dropped temporary markers - the quotes. Thus as expected a single concatenated string argument - ARGV entry.\r\n\r\n Therefore these should be tokenized into one string, but actually are treated as 3 separate tokens.\r\n\r\nI have the impression, that the tokenization seems not to be consistent. This in particular as I am currently implementing a scanner/lexer/tokenizer for the static tokenization of command lines. This comprises in particular the processing of quotes and escapes(which themself are partially tricky) without dynamic replacement such as variables and subcalls.\r\n",
    "created_at": "2021-08-09T04:09:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-894936852",
    "id": 894936852,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41V6cU",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894936852/reactions"
    },
    "updated_at": "2021-08-09T04:21:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/894936852",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Duplicate of #1995",
    "created_at": "2021-08-12T15:24:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-897732414",
    "id": 897732414,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41gk8-",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/897732414/reactions"
    },
    "updated_at": "2021-08-12T15:24:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/897732414",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-08-13T17:00:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15889#issuecomment-898598490",
    "id": 898598490,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15889",
    "node_id": "IC_kwDOAvT7bc41j4Za",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/898598490/reactions"
    },
    "updated_at": "2021-08-13T17:00:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/898598490",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
