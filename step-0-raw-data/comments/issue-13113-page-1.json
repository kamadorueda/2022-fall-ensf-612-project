[
  {
    "author_association": "COLLABORATOR",
    "body": "Can you check the output from `Get-Module ActiveDirectory | Format-List *`? ðŸ™‚ ",
    "created_at": "2020-07-05T22:21:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653946212",
    "id": 653946212,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk0NjIxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653946212/reactions"
    },
    "updated_at": "2020-07-05T22:21:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653946212",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Generally speaking: using script blocks `{ ... }` with the `[string]`-typed `-Filter` parameter is conceptually problematic - see [this SO (Stack Overflow) answer](https://stackoverflow.com/a/44184818/45375).\r\n\r\nI don't know if that's the case here, but if the Active Directory module is loaded via the [Windows PowerShell compatibility feature](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_windows_powershell_compatibility?view=powershell-7), which uses _implicit remoting_, then the following from the linked SO answer applies (where \"remote\" refers to the hidden Windows PowerShell child process that knows nothing about the calling PowerShell [Core] session's variables):\r\n\r\n----\r\n\r\n**Caveat**: If you use `Get-ADUser` via an [_implicitly remoting_ module](https://technet.microsoft.com/en-us/library/ff720181.aspx), _neither_ `'...'` nor `{ ... }` works, because the variable references are then evaluated on the _remote_ machine, looking for the variables _there_ (in vain); if `(Get-Command Get-ADUser).CommandType` returns `Function`, you're using an implicitly remoting module. \r\n\r\n  * In that event you must use PowerShell's [*string interpolation*](https://stackoverflow.com/a/40445998/45375) (`\"...\"`) or string concatenation from literals and variable references / expressions in order to \"bake\" any variable / expression values _into the string_, _up front_:  \r\n``Get-ADUser -Filter \"sAMAccountName -eq `\"$SamAc`\"\"``\r\n  * Note that for _string_ operands embedded quoting then _is_ necessary.\r\n  * Also, be sure to `` ` ``-escape constants such as `$true`, `$false`, and `$null` inside the `\"...\"` string, so that PowerShell doesn't expand them up front.\r\n  * *Caveat*: This technique may not work with all data types; at least the default stringification of a `[datetime]` instance (e.g., `01/15/2018 16:00:00` is _not_ recognized by the AD provider.\r\n\r\n\r\n",
    "created_at": "2020-07-05T22:43:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653948144",
    "id": 653948144,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk0ODE0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653948144/reactions"
    },
    "updated_at": "2020-07-05T22:59:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653948144",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@tralston I believe @mklement0's comment answers your question. Let us know if you think otherwise.",
    "created_at": "2020-07-06T00:32:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653960949",
    "id": 653960949,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk2MDk0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653960949/reactions"
    },
    "updated_at": "2020-07-06T00:32:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653960949",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "@daxian-dbw @mklement0 Thank you for your responses. @vexx32, I ran the code you asked for and it was reallyyyyyyyyy long, so I didn't include it here. Is there a subset of that info you'd find useful?\r\n\r\nI read the SO article, and I agree, there are anti-patterns associated with curly braces. But my question still remains: why did it change from 5.1 to 7.0.2? Do any you have a more recent version of PS that could test this out on a DC? Since I created this issue, I have thus modified my code to use quotes instead of curly braces, and it works fine now.\r\n\r\nI guess I'm trying to understand if this is such a bad idea, why hasn't more recent versions of PS warned about this type of invocation? Why is the **documentation for [Get-ADUser](https://github.com/MicrosoftDocs/windows-powershell-docs/blob/master/docset/windows/addsadministration/Get-ADUser.md)** still showing this (anti) pattern (see the end of [this section](https://github.com/MicrosoftDocs/windows-powershell-docs/blob/master/docset/windows/addsadministration/Get-ADUser.md#-filter))?\r\n\r\nMaybe it's a breaking change in PS 7.0, or a breaking change in the ActiveDirectory module, or a completely unintentional side-effect. Let's call it what it is: a change/regression in the way the language is executed. If curly braces shouldn't be used at all for string interpolation (which they are in other constructs in PS, like naming variables), that's fine. Let's enforce it across the board. But if for this one function, it doesn't work how it's supposed to work everywhere else, then Get-ADUser needs to be fixed, or it should be updated to give an error on that type of construct. There shouldn't be one input with multiple types of output.\r\n\r\nSorry for the rant! I know there's a huge list of bugs and issues the coders are proposing every minute of the day, and it's a lot of work to assess which are truly bugs or just not writing proper code.",
    "created_at": "2020-07-06T00:54:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653964582",
    "id": 653964582,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk2NDU4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653964582/reactions"
    },
    "updated_at": "2020-07-06T00:55:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653964582",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/348697?v=4",
      "events_url": "https://api.github.com/users/tralston/events{/privacy}",
      "followers_url": "https://api.github.com/users/tralston/followers",
      "following_url": "https://api.github.com/users/tralston/following{/other_user}",
      "gists_url": "https://api.github.com/users/tralston/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tralston",
      "id": 348697,
      "login": "tralston",
      "node_id": "MDQ6VXNlcjM0ODY5Nw==",
      "organizations_url": "https://api.github.com/users/tralston/orgs",
      "received_events_url": "https://api.github.com/users/tralston/received_events",
      "repos_url": "https://api.github.com/users/tralston/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tralston/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tralston/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tralston"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@tralston I believe it'll work just fine if you're on the latest version of Windows 10 and RSAT.  The AD module had to be updated for Core, but afaik it's not coming to Windows 7 (which looks like where your second screenshot is from).\r\n\r\n> Why is the **documentation for [Get-ADUser](https://github.com/MicrosoftDocs/windows-powershell-docs/blob/master/docset/windows/addsadministration/Get-ADUser.md)** still showing this (anti) pattern (see the end of [this section](https://github.com/MicrosoftDocs/windows-powershell-docs/blob/master/docset/windows/addsadministration/Get-ADUser.md#-filter))?\r\n\r\nThe original authors of the AD module seemed to think it was a good idea to pretend to support `ScriptBlock`s.  It's largely brought nothing but confusion though.  /cc @SteveL-MSFT I believe you worked on the Core port, any chance to get this pattern removed from the docs?\r\n\r\n> Let's call it what it is: a change/regression in the way the language is executed. If curly braces shouldn't be used at all for string interpolation (which they are in other constructs in PS, like naming variables), that's fine.\r\n\r\nSo basically, the parameter `Filter` is typed as a `string`.  So behind the scenes, the AD module is doing something like this (though oversimplified):\r\n\r\n```powershell\r\n$myFilter = { thing -eq $otherThing }\r\n$asString = $myFilter.ToString()\r\n$asString -replace '\\$otherThing', $otherThing\r\n```\r\n\r\nNothing in the language actually changed, it's just their hack that broke. There's no actual support for scriptblocks, it's processed exactly the same as if you passed `Get-AdUser -Filter ' thing -eq $otherThing '` (which also shouldn't work but does because of their hack).",
    "created_at": "2020-07-06T01:24:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653970080",
    "id": 653970080,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk3MDA4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653970080/reactions"
    },
    "updated_at": "2020-07-06T01:24:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653970080",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "100000 thanks @SeeminglyScience for that explanation, and calling it \"what it is\". I seriously laughed out loud at this part: \r\n\r\n> The original authors of the AD module seemed to think it was a good idea to pretend to support ScriptBlocks\r\n\r\nSo thank you for brightening my day.",
    "created_at": "2020-07-06T02:15:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653980003",
    "id": 653980003,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk4MDAwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 1,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653980003/reactions"
    },
    "updated_at": "2020-07-06T02:15:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653980003",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/348697?v=4",
      "events_url": "https://api.github.com/users/tralston/events{/privacy}",
      "followers_url": "https://api.github.com/users/tralston/followers",
      "following_url": "https://api.github.com/users/tralston/following{/other_user}",
      "gists_url": "https://api.github.com/users/tralston/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tralston",
      "id": 348697,
      "login": "tralston",
      "node_id": "MDQ6VXNlcjM0ODY5Nw==",
      "organizations_url": "https://api.github.com/users/tralston/orgs",
      "received_events_url": "https://api.github.com/users/tralston/received_events",
      "repos_url": "https://api.github.com/users/tralston/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tralston/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tralston/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tralston"
    }
  },
  {
    "author_association": "NONE",
    "body": "Unless @SteveL-MSFT has anything to add (i.e. updating docs to remove script blocks in AD modules), I'll mark this as resolved.",
    "created_at": "2020-07-06T02:17:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-653980472",
    "id": 653980472,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk4MDQ3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653980472/reactions"
    },
    "updated_at": "2020-07-06T02:17:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653980472",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/348697?v=4",
      "events_url": "https://api.github.com/users/tralston/events{/privacy}",
      "followers_url": "https://api.github.com/users/tralston/followers",
      "following_url": "https://api.github.com/users/tralston/following{/other_user}",
      "gists_url": "https://api.github.com/users/tralston/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tralston",
      "id": 348697,
      "login": "tralston",
      "node_id": "MDQ6VXNlcjM0ODY5Nw==",
      "organizations_url": "https://api.github.com/users/tralston/orgs",
      "received_events_url": "https://api.github.com/users/tralston/received_events",
      "repos_url": "https://api.github.com/users/tralston/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tralston/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tralston/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tralston"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the explanation, @SeeminglyScience, but note that what the AD module is doing is not just simple _text_ expansion of simple variable references in the `-Filter` argument:\r\n\r\nAt least with a `[datetime]`-typed PowerShell variable, AD seems to recognize it properly as a date, which - from what I'm told, I can't personally verify - does _not_ work with the up-front string-expansion approach.\r\n\r\nTherefore, while the up-front string-expansion approach works with strings and numbers, it doesn't work with dates - and perhaps other data types?\r\n\r\nIn other words: while you _must_ use the up-front string-expansion approach whenever _implicit remoting_ is involved (because the AD module then doesn't see the caller's variables) - whether via the Windows PowerShell compatibility feature or via an explicitly created implicit-remoting module via `Import-PSSession` - it seemingly doesn't cover all use cases.\r\n\r\nOr is the workaround for the `[datetime]` case (and possibly others - I personally don't have access to AD).\r\n\r\n",
    "created_at": "2020-07-06T20:43:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-654455266",
    "id": 654455266,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ1NTI2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654455266/reactions"
    },
    "updated_at": "2020-07-06T20:43:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654455266",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, the AD module's solution to the problem of how to make LDAP filters digestible for PS users just fundamentally involves misleading folks as to how it works. It's far too late to change it now, but I think if an effort like that were to be attempted again, it'd need a complete redesign in terms of the approach to avoid potential issues like this.",
    "created_at": "2020-07-06T20:58:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-654461872",
    "id": 654461872,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ2MTg3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654461872/reactions"
    },
    "updated_at": "2020-07-06T20:58:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654461872",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Thanks for the explanation, @SeeminglyScience, but note that what the AD module is doing is not just simple text expansion of simple variable references in the `-Filter` argument:\r\n\r\nYeah I did say it was over simplified ðŸ˜‰.  I was mostly trying to illustrate how the AD module fakes scriptblock support FWIW.\r\n\r\nThat said, isn't it just file time? If so `'PropertyName -eq {0}' -f (Get-Date).ToFileTime()` should work too.",
    "created_at": "2020-07-06T21:19:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-654471153",
    "id": 654471153,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ3MTE1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654471153/reactions"
    },
    "updated_at": "2020-07-06T21:19:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654471153",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @SeeminglyScience (good point re oversimplification).\r\n\r\n* Can you - or someone with AD access - verify that `.ToFileTime()` indeed works (perhaps you already know)? I'd like to update my SO answer accordingly.\r\n\r\n* Is anyone aware of other data types that also need special handling with the up-front string-expansion approach?\r\n",
    "created_at": "2020-07-06T21:24:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-654473074",
    "id": 654473074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ3MzA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654473074/reactions"
    },
    "updated_at": "2020-07-06T21:24:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654473074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@indented-automation is likely to have a good handle on additional oddities there.",
    "created_at": "2020-07-06T21:52:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13113#issuecomment-654484202",
    "id": 654484202,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13113",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ4NDIwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654484202/reactions"
    },
    "updated_at": "2020-07-06T21:52:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654484202",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
