[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Given that `\\` is not a wildcard-expression metacharacter, I would expect it to be treated as a literal in `-Path` arguments too.\r\n\r\nIn https://github.com/PowerShell/PowerShell/issues/6833#issuecomment-389690161 you've talked about the need to support _escaping_ `\\` in paths, without being specific about `-Path` vs. `-LiteralPath`:\r\n\r\n```powershell\r\nSet-Content -LiteralPath '`\\foo.txt' -Value \"bar\"\r\nSet-Content  '`\\foo.txt' -Value \"bar\" # implied -Path\r\n```\r\n\r\nTo me it makes sense to treat the `\\` issue separately from the `-Path` / `-LiteralPath` dichotomy, as the latter is at least currently strictly about _wildcards_.\r\n",
    "created_at": "2018-10-31T16:57:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8158#issuecomment-434765695",
    "id": 434765695,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8158",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDc2NTY5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434765695/reactions"
    },
    "updated_at": "2018-10-31T16:57:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434765695",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 the problem isn't that `\\` is treated as `wildcard`, but that the cmdlets apply path normalization first before using the path.  So all `\\` gets changed to `/` on non-Windows (and vice versa for Windows). \r\n\r\nEven:\r\n\r\n```powershell\r\nset-content \"`\\bar.txt\" -Value \"foo\"\r\n```\r\n\r\nfails as it tries to write to `/bar.txt`",
    "created_at": "2018-10-31T17:27:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8158#issuecomment-434776902",
    "id": 434776902,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8158",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDc3NjkwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434776902/reactions"
    },
    "updated_at": "2018-10-31T17:27:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434776902",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Understood, @SteveL-MSFT. \r\n\r\nMy example commands showed how it _should_ work _once fixed_, based on my interpretation of the conclusion reached in #6833 - did I misread that conclusion?\r\n\r\nMy point was that this escaping should work with both `-Path` and `-LiteralPath` arguments, as the latter distinction - at least so far - relates to wildcards only, and the `\\` / `/` issue is conceptually separate.\r\n\r\nAfter all, I shouldn't have to forgo wildcard matching just so I can get my `\\` chars. interpreted as-is.\r\n\r\nAn aside re your example: If you use _double_ quotes, you'll have to use _two_ `` ` `` chars., because a single one is \"eaten\" by string parsing.\r\n\r\n",
    "created_at": "2018-10-31T17:48:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8158#issuecomment-434784487",
    "id": 434784487,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8158",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDc4NDQ4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434784487/reactions"
    },
    "updated_at": "2018-10-31T17:48:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434784487",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 ok, I see what you mean.  Yes, if escaped properly, it should work with `-Path` as well.",
    "created_at": "2018-10-31T18:52:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8158#issuecomment-434805625",
    "id": 434805625,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8158",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDgwNTYyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434805625/reactions"
    },
    "updated_at": "2018-10-31T18:52:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/434805625",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
