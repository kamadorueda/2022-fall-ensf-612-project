[
  {
    "author_association": "NONE",
    "body": "I know a few people that would be glad to see this addition. ",
    "created_at": "2022-05-30T03:20:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1140643697",
    "id": 1140643697,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5D_Ndx",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1140643697/reactions"
    },
    "updated_at": "2022-05-30T03:20:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1140643697",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19808166?v=4",
      "events_url": "https://api.github.com/users/stevenjudd/events{/privacy}",
      "followers_url": "https://api.github.com/users/stevenjudd/followers",
      "following_url": "https://api.github.com/users/stevenjudd/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenjudd/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stevenjudd",
      "id": 19808166,
      "login": "stevenjudd",
      "node_id": "MDQ6VXNlcjE5ODA4MTY2",
      "organizations_url": "https://api.github.com/users/stevenjudd/orgs",
      "received_events_url": "https://api.github.com/users/stevenjudd/received_events",
      "repos_url": "https://api.github.com/users/stevenjudd/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stevenjudd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenjudd/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stevenjudd"
    }
  },
  {
    "author_association": "NONE",
    "body": "This is a good idea. Details which need bottoming out include: \r\n\r\n- Should it work like -is  so `[valuetype]` works for `[int` ? Or just check types are equal \r\n- Should the `Typename` as a string be converted to the type  ? It may need fewer parser changes if the type does not use []\r\n- Should it look at psTypeNames so something which is masquerading as a Widget is treated as [widget]. (I think this may be needed for deserialized objects, and quite a few \"types\" I work with aren't real types but are are PSCustomObject with PSTypeNames set to get formatting). \r\n\r\n\r\n",
    "created_at": "2022-05-30T12:52:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1141122231",
    "id": 1141122231,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5EBCS3",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1141122231/reactions"
    },
    "updated_at": "2022-05-30T12:52:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1141122231",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "With the caveat that these are **not** _strong_ opinions and **are** _loosely_ held:\r\n\r\n- Probably it should work like `-is [foo]` since that's the closes replacement behavior and what I think users will naively expect\r\n- Casting 'Foo' via `[type]` seems okay to me for the conditional entries ahead of the scriptblocks, e.g. these blocks would have the same behavior as far as the user can tell:\r\n  \r\n  ```powershell\r\n  # -type with string\r\n  switch -type ($InputObject) {\r\n    'Int' { \"Integer! $_\" }\r\n  }\r\n  # -type with casting\r\n  switch -type ($InputObject) {\r\n    [type]'Int' { \"Integer! $_\" }\r\n  }\r\n  # -type with type\r\n  switch -type ($InputObject) {\r\n    [int] { \"Integer! $_\" }\r\n  }\r\n  # is with string cast to type\r\n  switch ($InputObject) {\r\n    { $_ -is [type]'Int' } { \"Integer! $_\" }\r\n  }\r\n  # is with type\r\n  switch ($InputObject) {\r\n    { $_ -is [int] } { \"Integer! $_\" }\r\n  }\r\n  ```\r\n- I'm not familiar with this use case but that _seems_ sensible to me.",
    "created_at": "2022-05-30T16:46:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1141342477",
    "id": 1141342477,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5EB4EN",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1141342477/reactions"
    },
    "updated_at": "2022-05-30T16:46:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1141342477",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14190564?v=4",
      "events_url": "https://api.github.com/users/michaeltlombardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/michaeltlombardi/followers",
      "following_url": "https://api.github.com/users/michaeltlombardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaeltlombardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/michaeltlombardi",
      "id": 14190564,
      "login": "michaeltlombardi",
      "node_id": "MDQ6VXNlcjE0MTkwNTY0",
      "organizations_url": "https://api.github.com/users/michaeltlombardi/orgs",
      "received_events_url": "https://api.github.com/users/michaeltlombardi/received_events",
      "repos_url": "https://api.github.com/users/michaeltlombardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/michaeltlombardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaeltlombardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/michaeltlombardi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Another option would be something like this:\r\n\r\n```powershell\r\nswitch ($obj) {\r\n    -is [string] { }\r\n    -is [int] { }\r\n    'but this also works' { }\r\n    default { }\r\n}\r\n```\r\n\r\nThis is a parse error today, so it would not be a breaking change to add this syntax.",
    "created_at": "2022-05-31T14:36:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1142221201",
    "id": 1142221201,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5EFOmR",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1142221201/reactions"
    },
    "updated_at": "2022-05-31T14:36:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1142221201",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience  you know these details better than I do , but I assumed the present \r\n```\r\nswitch ($obj) {\r\n    <String or number literal>  { }\r\n    {Anything else}  { }\r\n}\r\n ```\r\nWas carved in stone. Pretty much all the flow control statements are `name (thing to evaluate) {thing(s) to do}` and switch is odd because it also has -regex and -wildcard, and what is in `{thing(s) to do}` is a bit more involved so it may already have its own special exceptions. \r\n\r\nIf it is practical for the parser to handle `-is [type]`   would `-gt 100`  or `-in @( 'a', 'b')` etc. be just as do-able.  (i.e. any  `{$_  -op   <operand>}`   can  be simply `-op <operand>`)  ? Because I'm sure they would be welcome too.\r\n",
    "created_at": "2022-05-31T16:36:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1142367078",
    "id": 1142367078,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5EFyNm",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1142367078/reactions"
    },
    "updated_at": "2022-05-31T16:36:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1142367078",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Nothing is carved in stone, anything can be changed but is judged on a scale of impact vs effort. Note though, I'm not weighing in on how I think the scales balance here. Language changes in general have a very high bar of impact to hit because they are very expensive to implement and to maintain.\r\n\r\nBut if the language were just for me, I'd add the syntax I suggested without a doubt.",
    "created_at": "2022-05-31T17:08:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1142396457",
    "id": 1142396457,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5EF5Yp",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1142396457/reactions"
    },
    "updated_at": "2022-05-31T20:59:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1142396457",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> If it is practical for the parser to handle `-is [type]` would `-gt 100` or `-in @( 'a', 'b')` etc. be just as do-able. (i.e. any `{$_ -op <operand>}` can be simply `-op <operand>`) ? Because I'm sure they would be welcome too.\r\n\r\nInteresting, I like the idea of that.",
    "created_at": "2022-07-08T23:51:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17456#issuecomment-1179433368",
    "id": 1179433368,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17456",
    "node_id": "IC_kwDOAvT7bc5GTLmY",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179433368/reactions"
    },
    "updated_at": "2022-07-08T23:51:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179433368",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7864621?v=4",
      "events_url": "https://api.github.com/users/KevinMarquette/events{/privacy}",
      "followers_url": "https://api.github.com/users/KevinMarquette/followers",
      "following_url": "https://api.github.com/users/KevinMarquette/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinMarquette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KevinMarquette",
      "id": 7864621,
      "login": "KevinMarquette",
      "node_id": "MDQ6VXNlcjc4NjQ2MjE=",
      "organizations_url": "https://api.github.com/users/KevinMarquette/orgs",
      "received_events_url": "https://api.github.com/users/KevinMarquette/received_events",
      "repos_url": "https://api.github.com/users/KevinMarquette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KevinMarquette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinMarquette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KevinMarquette"
    }
  }
]
