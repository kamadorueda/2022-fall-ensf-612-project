[
  {
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/PowerShell/PowerShell/pull/9258 is related to this but I am not sure if it covers all situations.",
    "created_at": "2019-05-07T16:11:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-490146396",
    "id": 490146396,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MDE0NjM5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/490146396/reactions"
    },
    "updated_at": "2019-05-07T16:11:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/490146396",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16373649?v=4",
      "events_url": "https://api.github.com/users/kwkam/events{/privacy}",
      "followers_url": "https://api.github.com/users/kwkam/followers",
      "following_url": "https://api.github.com/users/kwkam/following{/other_user}",
      "gists_url": "https://api.github.com/users/kwkam/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kwkam",
      "id": 16373649,
      "login": "kwkam",
      "node_id": "MDQ6VXNlcjE2MzczNjQ5",
      "organizations_url": "https://api.github.com/users/kwkam/orgs",
      "received_events_url": "https://api.github.com/users/kwkam/received_events",
      "repos_url": "https://api.github.com/users/kwkam/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kwkam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kwkam/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kwkam"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "It feels to me the right behavior for `Out-File -FilePath` may be:\r\n- when searching for an existing file, wildcard and escaped wildcard characters are respected, meaning `Out-File -FilePath [ab].txt` should be able to target the existing file `a.txt`, and `Out-File -FilePath '`[out`].txt'` should be able to target the existing file `[out].txt`.\r\n- when no existing file is found, the provided path to `-FilePath` should be used as literal path to create the new file, just like what `New-Item` does, meaning `Out-File -FilePath [hello].txt` should create '[hello].txt' when no existing file found that matches the wildcard pattern.\r\n- redirection operator `>` and `>>` may be better always use `-LiteralPath` parameter when invoking `Out-File`. But this will be a breaking change.\r\n\r\nThe part I don't like about this proposal is that `Out-File -FilePath` would target different files depending on if an existing file that matches the wildcard pattern exists or not. For example, `Out-File -FilePath [ab].txt` would target `a.txt` if that file already exists, and `[ab].txt` if no matching file found.\r\n\r\nThis is a general issue that exists for all cmdlets that do operations that **search** existing files before **create** new files.",
    "created_at": "2019-05-13T17:20:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-491911335",
    "id": 491911335,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkxMTMzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491911335/reactions"
    },
    "updated_at": "2019-05-13T17:20:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491911335",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "https://github.com/PowerShell/PowerShell/pull/9258 is an attempt to address the issue reported here for `Out-File -FilePath`. But I think this is a general issue that should be fixed in a wider scope.",
    "created_at": "2019-05-13T17:22:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-491911988",
    "id": 491911988,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkxMTk4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491911988/reactions"
    },
    "updated_at": "2019-05-13T17:22:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491911988",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I have always been surprised that the behavior of the path (literalpath) parameters varies in different cmdlets. This causes an endless stream of fixes.\r\nIt would be great if the paths (literalpaths) always behaved in the same way, and any deviations were regulated by separate parameters.",
    "created_at": "2019-05-13T18:05:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-491926727",
    "id": 491926727,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MTkyNjcyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491926727/reactions"
    },
    "updated_at": "2019-05-13T18:05:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/491926727",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> It feels to me the right behavior for `Out-File -FilePath` may be:\r\n> \r\n> * when searching for an existing file, wildcard and escaped wildcard characters are respected, meaning `Out-File -FilePath [ab].txt` should be able to target the existing file `a.txt`, and `Out-File -FilePath '`[out`].txt'` should be able to target the existing file `[out].txt`.\r\n> * when no existing file is found, the provided path to `-FilePath` should be used as literal path to create the new file, just like what `New-Item` does, meaning `Out-File -FilePath [hello].txt` should create '[hello].txt' when no existing file found that matches the wildcard pattern.\r\n> * redirection operator `>` and `>>` may be better always use `-LiteralPath` parameter when invoking `Out-File`. But this will be a breaking change.\r\n> \r\n> The part I don't like about this proposal is that `Out-File -FilePath` would target different files depending on if an existing file that matches the wildcard pattern exists or not. For example, `Out-File -FilePath [ab].txt` would target `a.txt` if that file already exists, and `[ab].txt` if no matching file found.\r\n\r\nI believe it is not a good idea to have a single parameter handling two different usages that might conflict with each other. For example, how do we tell if a user typed an incorrect wildcard accidentally, or a literal filename intentionally? To keep the things simple, I would prefer to use the existing Path/LiteralPath concept:\r\n1. Make `-FilePath` an alias of `-Path`\r\n2. Add `-LiteralPath` to the cmdlet\r\n\r\nAs for `>` and `>>`, would it be possible to add configurable settings (e.g. environment variable) to define whether it (or even the engine itself) accepts `-Path` or `-LiteralPath` by default when it is called from console/script-file, to give users more control?",
    "created_at": "2019-05-14T12:35:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-492218653",
    "id": 492218653,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjIxODY1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/492218653/reactions"
    },
    "updated_at": "2019-05-14T12:35:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/492218653",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16373649?v=4",
      "events_url": "https://api.github.com/users/kwkam/events{/privacy}",
      "followers_url": "https://api.github.com/users/kwkam/followers",
      "following_url": "https://api.github.com/users/kwkam/following{/other_user}",
      "gists_url": "https://api.github.com/users/kwkam/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kwkam",
      "id": 16373649,
      "login": "kwkam",
      "node_id": "MDQ6VXNlcjE2MzczNjQ5",
      "organizations_url": "https://api.github.com/users/kwkam/orgs",
      "received_events_url": "https://api.github.com/users/kwkam/received_events",
      "repos_url": "https://api.github.com/users/kwkam/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kwkam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kwkam/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kwkam"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed re consistency, @kwkam.\r\n\r\nThe larger issue, however, is that _output_ file paths should never have been treated as wildcards to begin with, which takes us back to #4726, #6729, and also #9225\r\n\r\nP.S.: The `-FilePath` parameters already are aliased to `-Path`:\r\n\r\n```none\r\nCommand           Name                   Aliases\r\n-------           ----                   -------\r\nExport-FormatData Path                   {FilePath}\r\nInvoke-Command    FilePath               {PSPath}\r\nOut-File          FilePath               {Path}\r\nSet-TraceSource   FilePath               {PSPath, Path}\r\nStart-Process     FilePath               {PSPath, Path}\r\nTee-Object        FilePath               {Path}\r\nTrace-Command     FilePath               {PSPath, Path}\r\n```\r\n\r\nNote that `PSPath` is yet another alias for some of them, which is also problematic, because `PSPath` should be the alias of `-LiteralPath`, to ensure treatment of pipeline input from, e.g., `Get-ChildItem` as the literal paths that they are.\r\n",
    "created_at": "2019-05-22T23:57:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-495017130",
    "id": 495017130,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTAxNzEzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/495017130/reactions"
    },
    "updated_at": "2019-05-22T23:57:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/495017130",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "As @mklement0 pointed in #6729 writing using wildcards to multiple destinations is dangerous.\r\nWhile changing this behavior in Set-Content/Add-Content would be huge breaking change and I guess it is not for Out-File (>,>>), it is seem reasonable to switch Out-File (>,>>) to LiteralPath by default, specially it is not obvious for user that >,>> are mapped to Out-File, I guess nobody use the complex behavior in the redirection.\r\n\r\nAlso PSPath alias already points to LiteralPath in Out-File. (So if path comes from pipeline by name it binds to LiteralPath but I guess it is not mainstream scenario).",
    "created_at": "2021-12-01T11:15:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-983538407",
    "id": 983538407,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "IC_kwDOAvT7bc46n5rn",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/983538407/reactions"
    },
    "updated_at": "2021-12-01T11:18:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/983538407",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  The case we believe is inconsistent is `out-file file``[1``].txt` where you would properly expect this to be treated as literal as you are escaping the escape character.  Looking at the traces, the parser unescapes it once and the parameter binder is sending ``file`[1`].txt`` to the cmdlet.  The cmdlet calls into the FileSystemProvider which receives this but as it's processing the path, during normalization it appears it gets unescaped to just `file[1].txt` and later the code sees this as a valid wildcard pattern and does globbing.\r\n\r\nGiven that the current FileSystemProvider is sensitive to changes, we recommend that this scenario be addressed in FileSystemProvider v2 rather than trying to fix this in v1 and risk regression.",
    "created_at": "2021-12-01T23:48:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9475#issuecomment-984160929",
    "id": 984160929,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9475",
    "node_id": "IC_kwDOAvT7bc46qRqh",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/984160929/reactions"
    },
    "updated_at": "2021-12-01T23:48:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/984160929",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
