[
  {
    "author_association": "COLLABORATOR",
    "body": "Is it specific for `ErrorActionPreference` name?",
    "created_at": "2019-08-06T10:36:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10302#issuecomment-518614248",
    "id": 518614248,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10302",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODYxNDI0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518614248/reactions"
    },
    "updated_at": "2019-08-06T10:36:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518614248",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "No, not at all. That was just what I was using when I encountered the error. Here's a screenshot showing it with an arbitrary variable that I create:\r\n\r\n![image](https://user-images.githubusercontent.com/3515485/62545039-4ad9a380-b837-11e9-8526-92bebbef3e52.png)\r\n",
    "created_at": "2019-08-06T13:45:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10302#issuecomment-518676043",
    "id": 518676043,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10302",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODY3NjA0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518676043/reactions"
    },
    "updated_at": "2019-08-06T13:45:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518676043",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "For reference, without debugging (just reading the code), [this block of code](https://github.com/PowerShell/PowerShell/blob/1be3f4cc0e465ae11ad8e59e9060f5a59e4762eb/src/System.Management.Automation/namespaces/SessionStateProviderBase.cs#L941-L944) seems to be why this happens. Other than the `FileSystem` and `Registry` providers, all other providers that ship with PowerShell seem to take the same create-new-item-and-then-remove-old-item approach to renaming.\r\n\r\nSure enough, here's the Alias provider showing the same issue:\r\n\r\n```none\r\nPS C:\\> New-Alias test Get-Date -Force\r\n>> Get-Alias test\r\n>> & {\r\n>> Rename-Item Alias:test -NewName date\r\n>> }\r\n>> Get-Alias date\r\n>> Get-Alias test\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nAlias           test -> Get-Date\r\n\r\nGet-Alias : This command cannot find a matching alias because an alias with the name 'date' does not exist.\r\nAt line:6 char:1\r\n+ Get-Alias date\r\n+ ~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (date:String) [Get-Alias], ItemNotFoundException\r\n+ FullyQualifiedErrorId : ItemNotFoundException,Microsoft.PowerShell.Commands.GetAliasCommand\r\n\r\nGet-Alias : This command cannot find a matching alias because an alias with the name 'test' does not exist.\r\nAt line:7 char:1\r\n+ Get-Alias test\r\n+ ~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (test:String) [Get-Alias], ItemNotFoundException\r\n+ FullyQualifiedErrorId : ItemNotFoundException,Microsoft.PowerShell.Commands.GetAliasCommand\r\n```\r\n\r\nIf we're to fix this, there should probably be a `ScopedProviderBase` intermediate class that derives from `SessionStateProviderBase` and that we consider deriving `AliasProvider`, `FunctionProvider`, and `VariableProvider` from that intermediate class to ensure that scope is persisted for any update operations that demonstrate buggy/unexpected behavior like this.\r\n\r\nIf `Rename-Item`, `Set-Item`, or other item update commands are only supported in the current scope (probably the only thing we can support at this point while maintaining backwards compatibility where it makes sense to do so), then:\r\n\r\n1. Those operations should create the new item in the current scope and leave the original item in the parent scope.\r\n1. Documentation should clearly indicate how these commands work with respect to scope.\r\n",
    "created_at": "2019-08-06T14:11:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10302#issuecomment-518686725",
    "id": 518686725,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10302",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODY4NjcyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518686725/reactions"
    },
    "updated_at": "2019-08-06T14:12:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518686725",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'd expect too that for PowerShell it would be more \"native\" doesn't remove the global/high-level-scope variable and create variable in local scope, using explicit scope prefix is more safe. It seems we do such things when we create a new scope with copying variables into it.",
    "created_at": "2019-08-06T14:24:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10302#issuecomment-518692238",
    "id": 518692238,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10302",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODY5MjIzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518692238/reactions"
    },
    "updated_at": "2019-08-06T14:24:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518692238",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also for context, I discovered this issue while working on some Pester tests that remove global variables only to then re-create them afterward. When they re-create, they weren't setting the attributes on those variables properly. Instead, they were just assigning a value. That risks impacting other tests, so I thought a better approach would be to rename the variable in the global scope, define a new global variable that I want for my test, and then afterward remove the global variable I defined and then rename the original variable back in the global scope. That way the state of the original variable is preserved beyond the test where it is changed or hidden. I would like that to be possible with `Rename-Item`, but today it is not.\r\n\r\nI'm hoping we can address this without being so conservative that it still isn't possible. If I rename a variable, I would like it to be renamed in the scope in which it resides -- that should be possible given that I can manipulate variables in any scope using PowerShell already. The main concern is doing so without breaking something unintentionally (although I think we should at least break compatibility with the broken way this works now since it is just a source of bugs/unexpected behavior).",
    "created_at": "2019-08-06T14:44:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10302#issuecomment-518700674",
    "id": 518700674,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10302",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODcwMDY3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518700674/reactions"
    },
    "updated_at": "2019-08-06T14:44:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/518700674",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
