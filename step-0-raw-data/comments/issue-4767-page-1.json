[
  {
    "author_association": "CONTRIBUTOR",
    "body": "This is the documented behavior of [`Out-File`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/out-file?view=powershell-5.1). See the `-Width` parameter.\r\n\r\n```powershell\r\nGet-Content logs.log | Select-String -Pattern '6.6' | Set-Content out.txt\r\n```\r\nperforms the behavior you are expecting.",
    "created_at": "2017-09-07T13:57:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-327807517",
    "id": 327807517,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzgwNzUxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327807517/reactions"
    },
    "updated_at": "2017-09-07T14:24:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327807517",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "NONE",
    "body": "@markekraus thanks, however, simply running \r\n\r\n```powershell\r\nGet-Content logs.log  | Out-File out.txt\r\n```\r\n\r\nYields a normal width file - all the original lines are still on one line when you run the command in a windowed console. What is the difference after the string as been piped through `Select-String`?\r\n\r\nEither way, this is confusing behaviour.",
    "created_at": "2017-09-07T15:01:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-327827037",
    "id": 327827037,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzgyNzAzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327827037/reactions"
    },
    "updated_at": "2017-09-07T15:01:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327827037",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8142964?v=4",
      "events_url": "https://api.github.com/users/swinster/events{/privacy}",
      "followers_url": "https://api.github.com/users/swinster/followers",
      "following_url": "https://api.github.com/users/swinster/following{/other_user}",
      "gists_url": "https://api.github.com/users/swinster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/swinster",
      "id": 8142964,
      "login": "swinster",
      "node_id": "MDQ6VXNlcjgxNDI5NjQ=",
      "organizations_url": "https://api.github.com/users/swinster/orgs",
      "received_events_url": "https://api.github.com/users/swinster/received_events",
      "repos_url": "https://api.github.com/users/swinster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/swinster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swinster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/swinster"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The difference is the type of object being processed. `Select-String` returns a `Microsoft.PowerShell.Commands.MatchInfo` ([docs](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-5.1#outputs)) where as `Get-Content` is returning `String`s.  The formatting is different.\r\n\r\nThis also produces the expected results:\r\n\r\n```powershell\r\nGet-Content logs.log  | Select-String -Pattern '6.6' | %{$_.ToString()} | Out-File out.txt\r\n# or \r\nGet-Content logs.log  | Select-String -Pattern '6.6' | %{$_.Line} | Out-File out.txt\r\n```",
    "created_at": "2017-09-07T15:25:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-327834271",
    "id": 327834271,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzgzNDI3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327834271/reactions"
    },
    "updated_at": "2017-09-07T15:30:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327834271",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks @markekraus  :)",
    "created_at": "2017-09-07T15:42:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-327839502",
    "id": 327839502,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzgzOTUwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327839502/reactions"
    },
    "updated_at": "2017-09-07T15:42:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327839502",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8142964?v=4",
      "events_url": "https://api.github.com/users/swinster/events{/privacy}",
      "followers_url": "https://api.github.com/users/swinster/followers",
      "following_url": "https://api.github.com/users/swinster/following{/other_user}",
      "gists_url": "https://api.github.com/users/swinster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/swinster",
      "id": 8142964,
      "login": "swinster",
      "node_id": "MDQ6VXNlcjgxNDI5NjQ=",
      "organizations_url": "https://api.github.com/users/swinster/orgs",
      "received_events_url": "https://api.github.com/users/swinster/received_events",
      "repos_url": "https://api.github.com/users/swinster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/swinster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swinster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/swinster"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "It may be the documented behavior of `Out-File`, but I don't anyone who likes this behavior.",
    "created_at": "2017-09-07T15:44:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-327839989",
    "id": 327839989,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzgzOTk4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327839989/reactions"
    },
    "updated_at": "2017-09-07T15:44:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327839989",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr Kind of. The documented behavior of `Out-File` is \"somewhat\" useful for \"somewhat\" emulating what the console would look like with the output. Most of the behavior complaints I have personally seen are addressed by using `Set-Content` instead. I always just assumed the purpose of `Out-File` was intended for preserving formatting.\r\n\r\nIn this particular instance, perhaps changing the default format behavior of `Microsoft.PowerShell.Commands.MatchInfo` makes sense (if possible). One would reasonably expect `Select-String` to return a `String` and for its output to behave like strings... even though it is documented that it returns `MatchInfo` or `Bool`.",
    "created_at": "2017-09-07T16:02:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-327845467",
    "id": 327845467,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg0NTQ2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327845467/reactions"
    },
    "updated_at": "2017-09-07T16:02:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/327845467",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This behavior seems to break the principle of least astonishment to me.  ",
    "created_at": "2017-09-10T00:20:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328311407",
    "id": 328311407,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMxMTQwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328311407/reactions"
    },
    "updated_at": "2017-09-10T00:20:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328311407",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If we send anything as formatted output on screen how we can route the same in file? Is Out-File cmdlet designed for that? What is Out-* cmlets designed for?",
    "created_at": "2017-09-10T08:31:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328327909",
    "id": 328327909,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMyNzkwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328327909/reactions"
    },
    "updated_at": "2017-09-10T08:31:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328327909",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "IMO, it is `Select-String` that breaks the principle of least astonishment. `Out-File` has its purpose. Maybe the default behavior is debatable, but, that behavior is what distinguishes it from the `*-Content` cmdltes. \r\n\r\n`Select-String`, on the other hand, should probably be returning `String`s. If it did, the formatting would not result in `Out-File` line-wrapping or truncating. This is not to say returning `MatchInfo` is not useful, just not expected as the default behavior, IMO. The name implies it selects `String`s. The output behavior could be changed but I have seen code that does rely on the `MatchInfo` objects. That behavior would need to be preserved (possibly with a switch parameter or something).",
    "created_at": "2017-09-10T10:06:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328332595",
    "id": 328332595,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODMzMjU5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328332595/reactions"
    },
    "updated_at": "2017-09-10T10:06:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328332595",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "`Select-String` returning a `MatchInfo` is definitely useful for the usual reasons returning objects is useful. Here is one example - custom formatting to highlight the match: https://gist.github.com/lzybkr/dcb973dccd54900b67783c48083c28f7",
    "created_at": "2017-09-10T15:24:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328349769",
    "id": 328349769,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODM0OTc2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328349769/reactions"
    },
    "updated_at": "2017-09-10T15:24:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328349769",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr  Absolutely! That's why I originally suggested possibly modifying the default format of `MatchInfo` instead of switching to `String`. If the default format of `MatchInfo` behaved like `String`, It would behave closer to what one would expect in most situations without breaking all the many things that have been made to work with `MatchInfo`.  ",
    "created_at": "2017-09-10T15:40:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328350814",
    "id": 328350814,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODM1MDgxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328350814/reactions"
    },
    "updated_at": "2017-09-10T15:41:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328350814",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The issue is not specific to `Select-String` (whose naming may be debatable, but there's only so much information you can cram into a cmdlet name, and it does operate on strings _as input_), it is fundamental to PowerShell's default output formatting:\r\n\r\nUnfortunately - from what I can tell, without having dug into the source - _all_ `Out-*` cmdlets use the same window width-sensitive formatting, _even though respecting the host's window width really only makes sense for actual host (console) output (by default or via `Out-Host`)_.\r\n\r\nYes, the behavior may be documented, but as @lzybkr and @SteveL-MSFT observe, it is undesirable / unexpected.  \r\nThis is especially true for the `>` redirection operator, which is _effectively_ an alias of `Out-File`.\r\n\r\nThus, the real fix - which is a breaking change, though hopefully a [bucket 3 change](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area) - would be to remove any host window-width sensitivity from `Out-*` cmdlets that don't target the host (console), namely `Out-File` and `Out-String`.\r\n\r\nA simpler demonstration of the problem:\r\n\r\n```powershell\r\n# Default formatting truncates the property value and appends \"...\" to fit the window width.\r\n> [pscustomobject] @{ str = 'x' * 1024 + '!' } \r\nstr                                                                                                                                                                 \r\n---                                                                                                                                                                 \r\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx...\r\n\r\n# Unfortunately, the same truncation happens when you use Out-File, resulting in LOSS OF DATA:\r\n> [pscustomobject] @{ str = 'x' * 1024 + '!' }  | out-file tmp.txt; Get-Content tmp.txt\r\nstr                                                                                                                                                                 \r\n---                                                                                                                                                                 \r\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx...\r\n```\r\n\r\nAs an aside: There seems to be a bug with respect to using `>`  to redirect a `[pscustomobject]` instance to a file - see #4812.\r\n\r\n",
    "created_at": "2017-09-12T02:03:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328709727",
    "id": 328709727,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODcwOTcyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328709727/reactions"
    },
    "updated_at": "2017-09-12T02:03:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328709727",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If '>' is alias for `Out-File` can we replace it with `Set-Content`?\r\n",
    "created_at": "2017-09-12T05:05:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328736964",
    "id": 328736964,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODczNjk2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328736964/reactions"
    },
    "updated_at": "2017-09-12T05:05:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328736964",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Unfortunately - from what I can tell, without having dug into the source - all `Out-*` cmdlets use the same window width-sensitive formatting, _even though respecting the host's window width really only makes sense for actual host (console) output (by default or via `Out-Host`)._\r\n\r\nRight, which is what I have always assumed the `Out-*` commands are intended for. And yes, it does make sense, IMO, to have that functionality for files as well as the console. Sometimes you want the UX captured and `Out-File` accomplishes that goal\r\n\r\nI don't see the point in making `Out-File` behave outwardly like `Set-Content`/`Add-Content` with a different internal implementation. \r\n\r\nIn defense of `Out-File`:\r\n`Out-File` always did what I expected it to do _when I was new to the language_. What I saw on screen I wanted in a file and `Out-File` did just that. It wasn't until I was more familiar with the language and understood the \"object\" aspect of output (came from heavy text based languages) that I even saw this as a limitation.",
    "created_at": "2017-09-12T08:51:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328787342",
    "id": 328787342,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODc4NzM0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328787342/reactions"
    },
    "updated_at": "2017-09-12T08:51:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328787342",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: That would be a huge breaking change, because `Set-Content` performs simple _stringification_ on its input objects, whereas `Out-File` uses the default formatter (there's also the different character encodings, though that will go away soon, at least in Core):\r\n\r\n```powershell\r\n> @{ one = 1 } > t.txt; Get-Content t.txt\r\n\r\nName                           Value                                                                                                                                \r\n----                           -----                                                                                                                                \r\none                            1                                                                                                                                    \r\n\r\n\r\n> @{ one = 1 } | Set-Content t.txt; Get-Content t.txt\r\nSystem.Collections.Hashtable   # same as: @{ one = 1 }.psobject.ToString()\r\n```\r\n\r\nOn a side note: The fact that `Set-Content` seems to use (the equivalent of) `.psboject.ToString()` means that it acts culture-_sensitively_, unlike string _expansion_ (string interpolation in double-quoted strings):\r\n\r\n```powershell\r\n> [cultureinfo]::CurrentCulture = 'de-DE'; 1.2 | sc t.txt; gc t.txt; \"$(1.2)\"\r\n1,2  # Set-Content: culture-SENSITIVE\r\n1.2  # string expansion: culture-INsensitive\r\n```\r\n\r\n`Out-File` is generally culture-sensitive as well, including with respect to .NET _base_ types such as `[double]`.",
    "created_at": "2017-09-12T11:33:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328825427",
    "id": 328825427,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODgyNTQyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328825427/reactions"
    },
    "updated_at": "2017-09-12T12:27:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328825427",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@markekraus:\r\n\r\n> Sometimes you want the UX captured and Out-File accomplishes that goal\r\n\r\nPerhaps, but making capturing of console output _as-is_ the _default behavior_ of `Out-File` and especially `>` is very problematic. (I could see an _opt-in_ to mimicking console in _all_ aspects via `-Width` as helpful.)\r\n\r\n`Out-File` and `Out-String` definitely need to continue to use the default formatter, but, as stated, without the _incidental_ aspect of window width; what would make sense to me is to make them behave as if there's no limit on line length.\r\n\r\n> What I saw on screen I wanted in a file and Out-File did just that\r\n\r\nYes, but not _literally_, just like users understand that, for instance, word wrapping in a text editor is an artifact of _windowed display_, and that the line breaks aren't part of the  underlying file.\r\n\r\nTo recap: line wrapping and value truncation (`...`) are fine for _console display_, but have no business in an output file (unless explicitly requested).\r\n\r\nAs a (naive) user, I expect `Out-File` / `>` to send _data_ to a file, not a \"screen shot\" of the console.\r\n(The fact that default formatting is not the right format to use for stable long-term storage is a separate, more advanced topic.)\r\n",
    "created_at": "2017-09-12T11:50:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328828985",
    "id": 328828985,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODgyODk4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328828985/reactions"
    },
    "updated_at": "2017-09-12T11:50:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328828985",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Yes, but not literally, just like users understand that, for instance, word wrapping in a text editor is an artifact of windowed display, and that the line breaks aren't part of the underlying file.\r\n\r\nWhich is why I'm suggesting that `Select-String` or the default format for `MatchInfo` is at fault here. Normal strings do not wrap in `Out-File`. `Select-String` does not return a string, but one would expect its output to behave like strings if that's what it is supposed to be selecting as indicated by its name. In every other case where you are dealing with strings you will get the expected result with `Out-File`. If `Select-String` is treated like the PowerShell equivalent of `grep`, one would expect what @swinster initially reported to work. And, if `Select-String` actually returned strings or objects that format like strings then it would. I don't think `Out-File` is to blame for doing what it is supposed to do.\r\n\r\nCompare \r\n\r\n```powershell\r\nGet-Content logs.log | Select-String -Pattern '6.6' | Out-File out.txt\r\n```\r\n\r\nto\r\n\r\n```powershell\r\nGet-Content logs.log | Where-Object {$_ -match '6.6'}  | Out-File out.txt\r\n```\r\n\r\nThe latter performs as expected where as the former line-wraps. The same is true of the console. depending on how you have your console oriented, the latter will extent further before wrapping where as the former will wrap at whatever width the console is set to. ",
    "created_at": "2017-09-12T12:00:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328831079",
    "id": 328831079,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODgzMTA3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328831079/reactions"
    },
    "updated_at": "2017-09-12T12:07:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328831079",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> In every other case where you are dealing with strings you will get the expected result with Out-File\r\n\r\nYes, but you're typically _not_ dealing with strings when you use `Out-File` / `>` (if you know you're dealing with strings only, just use `Set-Content` - no need to involve the default formatter).\r\n\r\nAs such, it is the _typical_ use case that - potentially, circumstantially - exhibits the undesirable / unexpected behavior, especially with respect to `>` if you come from a text-only shell such as `cmd.exe` or `bash`.\r\n\r\nThat redirection operator `>` /  a cmdlet named Out-_File_ would have a coupling with _console window size_ is absolutely counter-intuitive - the fact that it is documented notwithstanding.\r\n",
    "created_at": "2017-09-12T12:49:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328842602",
    "id": 328842602,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg0MjYwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328842602/reactions"
    },
    "updated_at": "2017-09-12T12:49:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328842602",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "As for `>` we have Issue for it. \r\nAs for `Out-File` if it's behavior is documented so maybe add switch to dsiable the console width formatting? ",
    "created_at": "2017-09-12T13:02:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328846141",
    "id": 328846141,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg0NjE0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328846141/reactions"
    },
    "updated_at": "2017-09-12T13:02:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328846141",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The question I have is when do you determine when formatting applies or not in `Out-File`?\r\n\r\nFor example:\r\n\r\n```powershell\r\n[pscustomobject]@{\r\n   Property01=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\r\n   Property02=\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\"\r\n} | Out-File C:\\temp\\test.txt\r\n```\r\n\r\nWould you really expect the `Out-file` to show the entire \"stringified\" contents of each property?",
    "created_at": "2017-09-12T13:11:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328848645",
    "id": 328848645,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg0ODY0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328848645/reactions"
    },
    "updated_at": "2017-09-12T13:11:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328848645",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Would you really expect the Out-file to show the entire \"stringified\" contents of each property?\r\n\r\nIndeed I would - in a file, line length needn't be constrained, and including the whole value - i.e., _avoiding loss of data_ - is more important than limiting line length (at least _by default_)\r\n\r\nAlso, remember that not all hosts are consoles and in some the concept of a window may not even apply.\r\n\r\n\r\n",
    "created_at": "2017-09-12T13:18:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328850387",
    "id": 328850387,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg1MDM4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328850387/reactions"
    },
    "updated_at": "2017-09-12T13:19:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328850387",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> avoiding loss of data\r\n\r\nThis is an \"out\" operation, not an \"export\" operation. I would not expect complete serialization from `Out-File` commands, I would expected WYSIWYG. If i need the full contents of a property, I would pipe that property to `Out-File`. Again, I would expect strings to be unmolested by `Out-File` (and they are), but objects I would expect formatting. If I have custom formatting on an object, I would not want that formatting lost to `Out-File`, even if that means data is truncated or wrapped.  If I need the unmolested data I would serialize and export. That is what differentiates `Out-File` from `Set-Conetent` or `Export-Clixml`",
    "created_at": "2017-09-12T13:31:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328853953",
    "id": 328853953,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg1Mzk1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328853953/reactions"
    },
    "updated_at": "2017-09-12T13:31:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328853953",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> This is an \"out\" operation, not an \"export\" operation.\r\n\r\nYes, as stated, output formatting is primarily for _display_ purposes (human eyeballs), and therefore not suitable as a complete, machine-parseable format with longterm format stability.\r\n\r\nThat doesn't mean it shouldn't exhibit the most helpful / least surprising _default_ behavior, however.\r\n\r\n> I would expected WYSIWYG.\r\n\r\nThat's the crux: my sense is that most people do NOT expect that, especially with `>`, and they may only notice when it's too late.\r\n\r\nYes, you _can_ conceive of `Out-File` / `>` as a _console transcript_ (which is not documented as such, though the role of `-Width` is, somewhat), but I think it is ill-advised, for all the reasons discussed (truncation, unexpected line breaks, non-obvious length limit for non-console hosts).\r\n\r\n> I would not want that formatting lost to Out-File, even if that means data is truncated or wrapped\r\n\r\nYou still get the formatting, just not the truncation / wrapping - because that is the unhelpful / unexpected part.\r\n\r\nWe could still preserve the ability to limit line length on an _opt-in_ basis; we already have `-Width`; for convenience, perhaps a new `-ConsoleWidth` _switch_ could be added that uses the console window's current width.\r\n\r\n---\r\n\r\n@iSazonov:  \r\n\r\n> As for > we have Issue for it.\r\n\r\nI couldn't find any existing issue - can you point us to it?\r\n\r\n> As for Out-File if it's behavior is documented so maybe add switch to dsiable the console width formatting?\r\n\r\nIf we reversed the logic (_opt-in_ to limit line length), it would technically be a breaking change, but my sense is that it would fall into [Bucket 3: Unlikely Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-3-unlikely-grey-area), and is therefore worth making.\r\n\r\n\r\n",
    "created_at": "2017-09-12T14:20:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328867726",
    "id": 328867726,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg2NzcyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328867726/reactions"
    },
    "updated_at": "2017-09-12T14:22:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328867726",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Re still getting the formatting: I do see that with _tabular_ output you may end up with misaligned columns in the file if values are never truncated, and imposing a line-length limit - albeit a high, fixed one - still makes sense.",
    "created_at": "2017-09-12T14:25:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328869449",
    "id": 328869449,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg2OTQ0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328869449/reactions"
    },
    "updated_at": "2017-09-12T14:28:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328869449",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Taking another step back: it would be unfortunate, but it's conceivable that there's code out there that relies on parsing `Out-File` / `>` output and would be affected by a change in default behavior.",
    "created_at": "2017-09-12T14:51:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328877313",
    "id": 328877313,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg3NzMxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328877313/reactions"
    },
    "updated_at": "2017-09-12T14:51:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328877313",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": " > That's the crux: my sense is that most people do NOT expect that, especially with >, and they may only notice when it's too late.\r\n\r\nAnd they don't... for strings.. they would.. for objects. and in that respect, `Out-File` works as intended, except when a command like `Select-`**`String`** doesn't actually return strings. :)\r\n\r\n",
    "created_at": "2017-09-12T14:53:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328877878",
    "id": 328877878,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODg3Nzg3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328877878/reactions"
    },
    "updated_at": "2017-09-12T14:54:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328877878",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Taking another step back: it would be unfortunate, but it's conceivable that there's code out there that relies on parsing Out-File / > output and would be affected by a change in default behavior.\r\n\r\nWith object streams, there really is no need to parse the text, so formatting has never been considered a contract in PowerShell.",
    "created_at": "2017-09-12T16:16:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328904091",
    "id": 328904091,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODkwNDA5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328904091/reactions"
    },
    "updated_at": "2017-09-12T16:16:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328904091",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@markekraus: Overall, we're talking about sensible default behavior that doesn't violate the principle of least astonishment: When I send output to a _file_, I'm not thinking about the (usually incidental) width of my console window - if there even is one.\r\n\r\nConsidering the specific output type of a command and choosing between `Set-content` and `>` accordingly is definitely an advanced technique.\r\n\r\nAs for `Select-String` specifically: the `String` name part is defensible in that it refers to the type of the _input_ objects - they either already are strings or they're forced to strings, using (culture-invariant) string expansion.\r\n\r\nAnd in terms of _functionality I think we're in agreement that it is helpful to output `[Microsoft.PowerShell.Commands.MatchInfo]` instances rather than mere strings.\r\n\r\nThere is no good reason for the default output to actively _insert_ a newline instead of just letting the console wrap lines that exceed the window width.\r\n(Another perhaps unexpected aspect of current `Select-String` default output formatting is that it produces leading and trailing empty lines).\r\n\r\nTherefore, the right resolution for the specific `Select-String` issue is the one you already suggested yourself:\r\n\r\n> If the default format of MatchInfo behaved like String, It would behave closer to what one would expect in most situations without breaking all the many things that have been made to work with MatchInfo.\r\n\r\nDo note, however, that `Select-String`'s default output format is context-dependent: the input line only, if the input doesn't come from _files_, and a filename + line-number _prefix_, if it does; to always get the input line only, the `.Line` property must be used.\r\n\r\n\r\n",
    "created_at": "2017-09-12T16:49:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-328914284",
    "id": 328914284,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODkxNDI4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328914284/reactions"
    },
    "updated_at": "2017-09-12T19:48:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/328914284",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">There is no good reason for the default output to actively insert a newline instead of just letting the console wrap lines that exceed the window width.\r\n\r\nDo you suggest remove the window width formatting at all from formatting subsystem and migrate to console wrap?",
    "created_at": "2017-09-13T05:23:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329062330",
    "id": 329062330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTA2MjMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329062330/reactions"
    },
    "updated_at": "2017-09-13T05:23:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329062330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nThat's a good question: I guess I shouldn't have related this to the _console_ at all, given that the formatting subsystem is really console-independent and explicitly creates lines with a hard length limit.\r\nIt is the fact that it derives that limit situationally from the console window width when _not_ printing to the console  that is problematic.\r\n\r\nSo perhaps simply _defaulting to_ `-Width ([int]::MaxValue)` in the case of `Out-File` / `>` and `Out-String` is the right solution - or perhaps a lower, but reasonably high value, so as not to let file sizes get out of hand:\r\n\r\nE.g.,  [implicit] `Format-Table` output composed of a large number of rows with even only a single long value could create unexpectedly large files; in the following example, with no limit on line length, all 3 lines end up 205 characters long, because right-space-padding is applied to the rightmost column too: \r\n\r\n```powershell\r\n([pscustomobject] @{ one = 1; two = 'x' * 100; three = 3 }), \r\n([pscustomobject] @{ one = 1; two = 2; three = 'x' * 100 }),\r\n([pscustomobject] @{ one = 1; two = 2; three = 3 })\r\n```\r\n\r\nAt the end of the day, users still need to understand that the only robust use of `Out-File` / `>` is with _strings_ only - in which case `Set-Content` is the better choice anyway - but by not imposing the console window width we can make the default behavior of `Out-File` / `>` and `Out-String` more useful.\r\n\r\nThe formatting subsystem is a complex beast, however, and I only know it superficially, so do tell me if I'm missing something.\r\n\r\n",
    "created_at": "2017-09-13T15:38:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329208066",
    "id": 329208066,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTIwODA2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329208066/reactions"
    },
    "updated_at": "2017-09-13T15:40:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329208066",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "This was my point of the original post. I'm glad it has provoked discussion and it certainly has enhanced my understanding, but yes, my goal was to pipe out results to a text file, just as you would with `grep` in Linux. What I ended up with was unexpected behaviour, be it documented or otherwise.  \r\n\r\nNow all I have to understand is \"why o why\" is the native PowerShell `Select-String` so poor in performance terms to a ported version of `grep` that appears On the GoW tools (https://github.com/bmatzelle/gow). In a basic test across a number of files (33), `Select-String` appears to be 400% slower than this `grep`. Of course, this is likely is topic of another discussion entirely. ",
    "created_at": "2017-09-13T16:33:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329224308",
    "id": 329224308,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTIyNDMwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329224308/reactions"
    },
    "updated_at": "2017-09-13T16:35:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329224308",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8142964?v=4",
      "events_url": "https://api.github.com/users/swinster/events{/privacy}",
      "followers_url": "https://api.github.com/users/swinster/followers",
      "following_url": "https://api.github.com/users/swinster/following{/other_user}",
      "gists_url": "https://api.github.com/users/swinster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/swinster",
      "id": 8142964,
      "login": "swinster",
      "node_id": "MDQ6VXNlcjgxNDI5NjQ=",
      "organizations_url": "https://api.github.com/users/swinster/orgs",
      "received_events_url": "https://api.github.com/users/swinster/received_events",
      "repos_url": "https://api.github.com/users/swinster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/swinster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/swinster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/swinster"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Years ago I tried setting the default width to int.MaxValue - in the current implementation that kinda works in some places, but in others, it turns out to be a terrible idea - you will get padding to the width you asked for.\r\n\r\nI do think we need to detect where the output is going - and not just for the width. If the output is to a file, we might also want to strip ansi escape sequences (with some sort of option to not do so).\r\n\r\nAs for performance - I lost any incentive to improve the perf of `Select-String` after finding [ripgrep](https://github.com/BurntSushi/ripgrep).  It even has an option to output in a PowerShell friendly way so it wouldn't be too hard to write a wrapper and get objects, but I haven't done that yet.",
    "created_at": "2017-09-13T17:42:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329243332",
    "id": 329243332,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTI0MzMzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329243332/reactions"
    },
    "updated_at": "2017-09-13T17:42:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329243332",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "CoreFX RegEx implementation is so bad?",
    "created_at": "2017-09-14T14:33:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329501357",
    "id": 329501357,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTUwMTM1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329501357/reactions"
    },
    "updated_at": "2017-09-14T14:33:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329501357",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I haven't compared the CLR regex to Rust's regex directly, but I'm confident we can do much better without  touching the CLR's regex code.",
    "created_at": "2017-09-14T17:52:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329559367",
    "id": 329559367,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU1OTM2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329559367/reactions"
    },
    "updated_at": "2017-09-14T17:52:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329559367",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To continue on the tangent, more generally:\r\n\r\nThe ability to call out to external utilities is important - even more so in the Unix world.\r\nI'm sure there are other cmdlets whose performance with large input sets will necessitate using external utilities instead.\r\n\r\nConversely, other shells may want to take advantage of PowerShell's high-level features on demand, by calling PowerShell's CLI as needed.\r\n\r\nThe interfaces to properly support these scenarios aren't quite there yet / may never get there, unfortunately:\r\n\r\n* Problems with calling _out_ of PowerShell (calling external utilities) - from what I understand, these _will_ be fixed:\r\n\r\n   * Problems with POSIX-like globbing: [overeagerness](https://github.com/PowerShell/PowerShell/issues/3931) and [inability to include hidden items](https://github.com/PowerShell/PowerShell/issues/4683).\r\n   * [Lack of predictable argument passing (Unix) / \"re-quoting\" (Windows)](https://github.com/PowerShell/PowerShell/issues/1995#issuecomment-325231274), with `bash -c 'echo \"hi there\"'` (prints just `hi`; #3049) and `/bin/echo \"a b\\\"` (prints `a b\"`, #4358) being two notable cases.\r\n\r\n* Problems with calling _into_ PowerShell (`powershell -command ....`):\r\n\r\n   * [PowerShell's nonstandard startup behavior is problematic](https://github.com/PowerShell/PowerShell/issues/3743), most notably that the  profile is loaded by default.\r\n\r\n  * The above link lists all issues, but two are worth calling out, relating to the `-Command` and `-File` parameters:\r\n\r\n    * They exhibit problematic interactive shell-like behaviors (with or without `-NonInteractive`) and lack consistent argument support - see #3223.\r\n         * `-File -` - to provide a script via stdin (`-`) - is not officially supported and doesn't accept _arguments_ (in addition to exhibiting problematic interactive-like behavior)\r\n        * `-Command -` is officially supported, but _by design_ doesn't accept arguments (and also exhibits problematic interactive-like behavior); see next point.\r\n\r\n    * The way `-Command` currently parses the remaining arguments is problematic in itself and fundamentally incompatible with POSIX-like shells - see https://github.com/PowerShell/PowerShell/issues/4024#issuecomment-312267611\r\n        * E.g., passing a simple string literal `don't` stored in a Bash variable to `powershell -command` as-is currently requires the following acrobatics:  \r\n`v=\"don't\"; powershell -command Write-Output \"'${v//\\'/\\'\\'}'\"`\r\n       * If the `-Command` argument were treated like an ad-hoc _script_ to which _arguments can be passed_, as in POSIX-like shells (instead of reassembling all arguments into a single string that is then _as  a whole_ interpreted as PowerShell code, as currently happens), this would work as follows:  \r\n`v=\"don't\"; powershell -command 'Write-Output $Args' \"$v\"`\r\n\r\n  * The `-Command` issue [will not be fixed](https://github.com/PowerShell/PowerShell/issues/4024#issuecomment-311824860) so as to preserve backward compatibility, which I personally find very problematic; not sure about the others.\r\n\r\n\r\n",
    "created_at": "2017-09-14T18:49:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329575179",
    "id": 329575179,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU3NTE3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329575179/reactions"
    },
    "updated_at": "2017-09-14T18:58:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329575179",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I went through ripgrep repo and see that it's a very young and single man's project. I saw a message that its public API should be re-designed. Also it still haven't library - I'd prefer the same way we use Newton.\r\n\r\nI read [ripgrep perf analize](http://blog.burntsushi.net/ripgrep/). It is veryinteresting. We can benefit from that. For example, make our FileSystem provider (dir traversal) more fast. It seems again related to migration on ETS.",
    "created_at": "2017-09-15T05:10:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4767#issuecomment-329682986",
    "id": 329682986,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4767",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTY4Mjk4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329682986/reactions"
    },
    "updated_at": "2017-09-15T05:10:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/329682986",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
