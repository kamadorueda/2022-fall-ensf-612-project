[
  {
    "author_association": "NONE",
    "body": "I think I have problem in understanding this part:\r\n\r\n> I would not have expected that placing a $( inside a function name, inside quotes (which do not become part of the function name) would not require the closing ')'.\r\n\r\nThis means:\r\n\r\n> You expect putting '$(' inside a function name inside (double) quotes would require the closing ')'.\r\n\r\nThen what you're seeing is just expected by you.\r\n\r\nI wouldn't expect people naming functions with\r\n\r\n```powershell\r\nfunction :\" any name$(hello$a)\" {} # successful\r\nfunction :\" any name$(hello$a\" {} # unsuccessful\r\n```\r\n\r\nBut the first statement creates a function with name `: any name$(hello$a)` (literal), and can be invoked with `& ': any name$(hello$a)'`. The second statement doesn't go through now, but if we compare it to the previous example, that should create a function named `: any name$(hello$a` (literal).\r\n\r\nAlternatively, you could create the latter function in imagination by\r\n\r\n```powershell\r\nfunction :' any name$(hello$a' { 1 | out-host }\r\n# or, equivalently\r\nfunction :\" any name`$(hello`$a\" { 1 | out-host }\r\n\r\n& ': any name$(hello$a' # prints 1\r\n```\r\n\r\nThat said, this is not to dismiss this issue. As seen in your first example, that string is **not** expandable. But those names are really weird! And interestingly, you must **begin** your function name without quotes.",
    "created_at": "2019-01-28T09:10:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8762#issuecomment-458048722",
    "id": 458048722,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8762",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODA0ODcyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458048722/reactions"
    },
    "updated_at": "2019-01-28T09:10:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458048722",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "sorry, @GeeLaw , I double negative'd that one...  :)\r\n\r\nCorrect, so far I cannot start a function name with a quoted text, as in to start it with a space, but if you use a scope modifier (ie `function local:\" hello\" {}`), your effective function name starts with a space, which you can access via `&` and a quoted string.  It is possible to make the first character of a function name a quote though, using a backtick.  ``` function `\"hello`\" {} ``` is function `\"hello\"`.\r\n\r\nI am just trying to make the syntax highlighter work the same way the tokenizer does, as I never know what users might throw at it.",
    "created_at": "2019-01-28T10:00:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8762#issuecomment-458065373",
    "id": 458065373,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8762",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODA2NTM3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458065373/reactions"
    },
    "updated_at": "2019-01-28T10:00:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458065373",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26179051?v=4",
      "events_url": "https://api.github.com/users/msftrncs/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftrncs/followers",
      "following_url": "https://api.github.com/users/msftrncs/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftrncs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/msftrncs",
      "id": 26179051,
      "login": "msftrncs",
      "node_id": "MDQ6VXNlcjI2MTc5MDUx",
      "organizations_url": "https://api.github.com/users/msftrncs/orgs",
      "received_events_url": "https://api.github.com/users/msftrncs/received_events",
      "repos_url": "https://api.github.com/users/msftrncs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftrncs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftrncs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/msftrncs"
    }
  }
]
