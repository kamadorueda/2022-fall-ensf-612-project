[
  {
    "author_association": "NONE",
    "body": "perhaps class is by design static scoping  and scriptblock with validateScript  is interpreted dynamically...maybe you can create your own attribute with class [System.Management.Automation.ValidateArgumentsAttribute] ",
    "created_at": "2020-04-29T13:21:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-621200698",
    "id": 621200698,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTIwMDY5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621200698/reactions"
    },
    "updated_at": "2020-04-29T13:21:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621200698",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "In this specific case you could use `[ValidateRange(0, 10)]` or `[ValidateRange([int]::MinValue, 10)]` depending on your needs.\r\n\r\nBut yeah, classes are handled at parse time, so attributes have some extra restrictions. I'm not sure there's a way around that? Might be, but I would _guess_ there probably isn't much that's really doable there.",
    "created_at": "2020-04-29T14:42:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-621256422",
    "id": 621256422,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTI1NjQyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621256422/reactions"
    },
    "updated_at": "2020-04-29T14:42:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621256422",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32 The simple example is just that - a simple example. My need for ValidateScript is obviously much more complex.\r\n\r\nCould you point me to the documentation where this is listed as expected behavior since you are not surprised about this behavior?\r\n\r\nI could not find many relevant matches doing a web search about validatescript and class but several did have other people wondering about ValidateScript and this problem. So it would not seem to be very well documented.\r\n\r\nIt is disappointing. If class methods are not static like this then I might be able to figure out an ugly workaround if I have to.",
    "created_at": "2020-04-30T01:43:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-621562419",
    "id": 621562419,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTU2MjQxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621562419/reactions"
    },
    "updated_at": "2020-04-30T01:43:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621562419",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14869000?v=4",
      "events_url": "https://api.github.com/users/bluikko/events{/privacy}",
      "followers_url": "https://api.github.com/users/bluikko/followers",
      "following_url": "https://api.github.com/users/bluikko/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluikko/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bluikko",
      "id": 14869000,
      "login": "bluikko",
      "node_id": "MDQ6VXNlcjE0ODY5MDAw",
      "organizations_url": "https://api.github.com/users/bluikko/orgs",
      "received_events_url": "https://api.github.com/users/bluikko/received_events",
      "repos_url": "https://api.github.com/users/bluikko/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bluikko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluikko/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bluikko"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'm mainly not surprised because I've seen it before, both in PS and (more importantly) in C# itself. In compiled code you can't have non-constant/non-primitive values for attributes. It's actually part of the [attribute language specification](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/attributes#attribute-parameter-types) which states:\r\n\r\n> The types of positional and named parameters for an attribute class are limited to the attribute parameter types, which are:\r\n>\r\n> - One of the following types: `bool`, `byte`, `char`, `double`, `float`, `int`, `long`, `sbyte`, `short`, `string`, `uint`, `ulong`, `ushort`.\r\n> - The `type` object.\r\n> - The type `System.Type`.\r\n> - An `enum type`, provided it has public accessibility and the types in which it is nested (if any) also have public accessibility (Attribute specification).\r\n> - Single-dimensional arrays of the above types.\r\n>\r\n> A constructor argument or public field which does not have one of these types, cannot be used as a positional or named parameter in an attribute specification.\r\n\r\nI think there are _similar_ underlying requirements for dynamically compiled assemblies, and .NET in the more general case as well. I'm pretty sure the only reason `[ValidateScript()]` is even a thing is because PowerShell script can do more or less whatever it want, as long as it's willing to handle things on its own. `[ValidateScript()]` is possible in PS probably because PS isn't directly compiling functions, it's doing it piecemeal and can handle attributes however differently it wants, more or less. Attribute classes are free to have whatever properties they want, but they can only use the above types in their constructor parameters when they're decorating a class and need to be resolved at compile time.\r\n\r\nClasses in PS are a different story entirely, and have to be compiled as-is at parse time, meaning there's no deferred compilation or special handling of attributes for the most part, they just behave very much like C# / .NET attributes.\r\n\r\nAs far as documenting it in PowerShell, I'd tend to agree that it should be mentioned somewhere in the classes documentation.",
    "created_at": "2020-04-30T02:22:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-621573753",
    "id": 621573753,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTU3Mzc1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621573753/reactions"
    },
    "updated_at": "2020-04-30T02:24:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621573753",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "/cc @rjmholt ",
    "created_at": "2020-04-30T15:01:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-621910055",
    "id": 621910055,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTkxMDA1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621910055/reactions"
    },
    "updated_at": "2020-04-30T15:01:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621910055",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah @vexx32 has hit it on the head. It looks like we should handle this more gracefully.\r\n\r\nI imagine that this is \"expected if you think about the implementation and extrapolate\", but has not been anticipated by the existing implementation.\r\n\r\nCurrently classes are compiled into dynamic .NET assemblies, and won't tolerate attributes that do something that .NET doesn't like, namely use values that can't be embedded into .NET static metadata.\r\n\r\nI don't see `ValidateScript` ever working as an attribute for classes, but I also don't see that as a big issue since classes don't need to do parameter binding. Instead the validation can be done in the method body (similar to how it would be done for a C# method).\r\n\r\nI think we should:\r\n\r\n- Emit a parse-time semantic error when this attribute is used on a class method\r\n- Update documentation to explicitly document how attributes work with classes",
    "created_at": "2020-04-30T19:15:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-622050637",
    "id": 622050637,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjA1MDYzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622050637/reactions"
    },
    "updated_at": "2020-04-30T19:16:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622050637",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt Are there any other Validation attributes that don't work with classes?\r\n\r\nI am guessing that ValidateDrive and ValidateUserDrive might be a problem. Can you confirm?",
    "created_at": "2020-06-24T23:57:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-649134959",
    "id": 649134959,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTEzNDk1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/649134959/reactions"
    },
    "updated_at": "2020-06-24T23:57:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/649134959",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19415881?v=4",
      "events_url": "https://api.github.com/users/sdwheeler/events{/privacy}",
      "followers_url": "https://api.github.com/users/sdwheeler/followers",
      "following_url": "https://api.github.com/users/sdwheeler/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdwheeler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sdwheeler",
      "id": 19415881,
      "login": "sdwheeler",
      "node_id": "MDQ6VXNlcjE5NDE1ODgx",
      "organizations_url": "https://api.github.com/users/sdwheeler/orgs",
      "received_events_url": "https://api.github.com/users/sdwheeler/received_events",
      "repos_url": "https://api.github.com/users/sdwheeler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sdwheeler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdwheeler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sdwheeler"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Those should work, I think the main issue with ValidateScript is that it has to take a non-constant value (a scriptblock) to do its job.\r\n\r\nAt least, \"work\" in the sense that the attribute can be applied to the class property. Whether the PS engine will recognise them on a class member or not... is another matter entirely. Not sure there, tbh.",
    "created_at": "2020-06-25T00:35:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-649145613",
    "id": 649145613,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTE0NTYxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/649145613/reactions"
    },
    "updated_at": "2020-06-25T00:35:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/649145613",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Interesting discussion. I would still like to see this limitation documented since my original research turned up several other similar questions.\r\n\r\nAfter the explanation above it is obvious why such a limitation exists but many users out there, like me, do not have as deep understanding of PowerShell as you do.\r\n\r\nMy original planned use case for this was doing data binding or simple manual storage&validation of data from a GUI. It is my first attempt at doing more advanced GUI things so it may have been a bad/impossible idea in any case even if the ValidateScript would have worked. It looked like an elegant way to do validation to the untrained eye...",
    "created_at": "2020-06-27T01:55:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-650472509",
    "id": 650472509,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDQ3MjUwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650472509/reactions"
    },
    "updated_at": "2020-06-27T01:58:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650472509",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14869000?v=4",
      "events_url": "https://api.github.com/users/bluikko/events{/privacy}",
      "followers_url": "https://api.github.com/users/bluikko/followers",
      "following_url": "https://api.github.com/users/bluikko/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluikko/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bluikko",
      "id": 14869000,
      "login": "bluikko",
      "node_id": "MDQ6VXNlcjE0ODY5MDAw",
      "organizations_url": "https://api.github.com/users/bluikko/orgs",
      "received_events_url": "https://api.github.com/users/bluikko/received_events",
      "repos_url": "https://api.github.com/users/bluikko/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bluikko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluikko/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bluikko"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @rjmholt Are there any other Validation attributes that don't work with classes?\r\n> \r\n> I am guessing that ValidateDrive and ValidateUserDrive might be a problem. Can you confirm?\r\n\r\nSeem to work just fine.",
    "created_at": "2020-06-27T02:09:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-650473830",
    "id": 650473830,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDQ3MzgzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650473830/reactions"
    },
    "updated_at": "2020-06-27T02:09:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650473830",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14869000?v=4",
      "events_url": "https://api.github.com/users/bluikko/events{/privacy}",
      "followers_url": "https://api.github.com/users/bluikko/followers",
      "following_url": "https://api.github.com/users/bluikko/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluikko/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bluikko",
      "id": 14869000,
      "login": "bluikko",
      "node_id": "MDQ6VXNlcjE0ODY5MDAw",
      "organizations_url": "https://api.github.com/users/bluikko/orgs",
      "received_events_url": "https://api.github.com/users/bluikko/received_events",
      "repos_url": "https://api.github.com/users/bluikko/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bluikko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluikko/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bluikko"
    }
  },
  {
    "author_association": "NONE",
    "body": "I just ran across this when trying to disallow negative `[TimeSpan]` properties. Neither of these work:\r\n\r\n```powershell\r\nclass Repro {\r\n\t[ValidateRange([TimeSpan]::Zero, [TimeSpan]::MaxValue)]\r\n\t[TimeSpan]$SomeDuration\r\n}\r\n\r\nclass Repro {\r\n\t[ValidateScript({ $_ -ge [TimeSpan]::Zero })]\r\n\t[TimeSpan]$SomeDuration\r\n}\r\n```\r\n\r\nwhich is kind of annoying. Both error with `Attribute argument must be a constant.` even though they are constants.\r\n\r\nWould it be possible to extend ValidateRange support to TimeSpan as well?",
    "created_at": "2022-10-03T17:27:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-1265792658",
    "id": 1265792658,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "IC_kwDOAvT7bc5LcnaS",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1265792658/reactions"
    },
    "updated_at": "2022-10-03T17:52:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1265792658",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/25607767?v=4",
      "events_url": "https://api.github.com/users/jantari/events{/privacy}",
      "followers_url": "https://api.github.com/users/jantari/followers",
      "following_url": "https://api.github.com/users/jantari/following{/other_user}",
      "gists_url": "https://api.github.com/users/jantari/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jantari",
      "id": 25607767,
      "login": "jantari",
      "node_id": "MDQ6VXNlcjI1NjA3NzY3",
      "organizations_url": "https://api.github.com/users/jantari/orgs",
      "received_events_url": "https://api.github.com/users/jantari/received_events",
      "repos_url": "https://api.github.com/users/jantari/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jantari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jantari/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jantari"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@jantari The term `constant` in this context means it can be embedded as a raw value in a binary file. That is only supported by [the CLR](https://learn.microsoft.com/en-us/dotnet/standard/clr) for primitives and a handful of special cased types (like `Type`). Structs like `TimeSpan` cannot be as their raw value is an implementation detail subject to change, even if they happen to be a thin wrapper around a primitive like `TimeSpan` is.\r\n\r\nThat said, naturally PowerShell somewhat makes its own rules in this area, and might be able to fake it *outside* of classes. Inside classes would be a lot harder though since at the end of the day it needs to be encoded into metadata (even if only in memory). I'd recommend opening a different issue for the subject of allowing `[TimeSpan]::Zero|MaxValue` in `ValidateRange`",
    "created_at": "2022-10-03T19:23:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12517#issuecomment-1265924603",
    "id": 1265924603,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12517",
    "node_id": "IC_kwDOAvT7bc5LdHn7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1265924603/reactions"
    },
    "updated_at": "2022-10-03T19:23:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1265924603",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
