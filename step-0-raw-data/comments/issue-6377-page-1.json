[
  {
    "author_association": "COLLABORATOR",
    "body": "Hi @alx9r, there are several things going on here.  \r\n\r\nIn your first example with the parameter alias, you aren't actually touching the `$PSEdition` variable. The alias maps `-PSEdition` to `$__PSEdition` which is a completely different variable and so there is no error.\r\n\r\nThe behavior in the second example has to do with scopes and the `AllScope` option. A constant variable may be masked by a non-constant variable in a child scope unless that variable is marked `AllScope`. This is what's happening in your second example. Using '.' instead of '&' will cause it to fail because '.' evaluates the scriptblock in the current scope:\r\n```\r\nPS[1] (20) > & {param($IAmAConstant)} # succeeds because parameter is in child scope\r\nPS[1] (21) > . {param($IAmAConstant)} # fails because parameter is in current scope\r\nCannot overwrite variable IAmAConstant because it is read-only or constant.\r\nAt line:1 char:1\r\n+ . {param($IAmAConstant)} # fails because parameter is in current scop ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : WriteError: (IAmAConstant:String) [], SessionStateUnauthorizedAccessException\r\n    + FullyQualifiedErrorId : VariableNotWritable\r\n```\r\n(See [about_Scopes](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_scopes?view=powershell-6) for more information about how scopes and scope options work.)\r\n\r\nFinally the third example, involving module scopes, does seem to be a bug. Trying to modify a global, constant, allscope variable should result in an error even when evaluating a scriptblock in a module scope.\r\n\r\nTo summarize, marking a variable as `AllScope` prevents it from being hidden in a child scope. And there seems to be a bug in the way `AllScope` variables are being handled when evaluating a scriptblock in a module context. @lzybkr - any thoughts?",
    "created_at": "2018-03-13T16:52:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6377#issuecomment-372737287",
    "id": 372737287,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6377",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjczNzI4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372737287/reactions"
    },
    "updated_at": "2018-03-13T16:52:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372737287",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "NONE",
    "body": ">A constant variable may be masked by a non-constant variable in a child scope unless that variable is marked AllScope. This is what's happening in your second example.\r\n\r\nI see.  The following seems to be consistent with this explanation:\r\n\r\n```PowerShell\r\nSet-Variable IAmAnAllScopeConstant -Value 'constant value' -Option Constant,AllScope\r\n& { Get-Variable IAmAnAllScopeConstant | % Options } # Constant, AllScope\r\n& {param($IAmAnAllScopeConstant)} # fails\r\n\r\nSet-Variable IAmAConstant -Value 'constant value' -Option Constant\r\n. {param($IAmAConstant)} # fails\r\n```",
    "created_at": "2018-03-13T17:06:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6377#issuecomment-372742347",
    "id": 372742347,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6377",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc0MjM0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372742347/reactions"
    },
    "updated_at": "2018-03-13T17:06:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372742347",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "NONE",
    "body": ">Finally the third example, involving module scopes, does seem to be a bug. Trying to modify a global, constant, allscope variable should result in an error even when evaluating a scriptblock in a module scope.\r\n\r\nI'm not sure this is quite on-point, but I've opened #6378 as it seems that a write to an AllScope variable from a module does not affect that variable's value in the \"global\" session state.",
    "created_at": "2018-03-13T17:30:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6377#issuecomment-372750662",
    "id": 372750662,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6377",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc1MDY2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372750662/reactions"
    },
    "updated_at": "2018-03-13T17:57:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372750662",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Finally the third example, involving module scopes, does seem to be a bug. Trying to modify a global, constant, allscope variable should result in an error even when evaluating a scriptblock in a module scope.\r\n\r\n@BrucePay Unlike `$Error` and `$PSDefaultParameterValues` that are declared in every `SessionState`, `$PSEdition` is only declared in the default `SessionState` of the current `Runspace`. So the module scope doesn't have the variable `PSEdition` defined at all, and thus `& $m {param($PSEdition)}` works.\r\n```\r\nPS:106> $m = New-Module {}\r\nPS:107> & $m {Get-Variable PSEdition -Scope local }\r\nGet-Variable : Cannot find a variable with the name 'PSEdition'.\r\nAt line:1 char:7\r\n+ & $m {Get-Variable PSEdition -Scope local }\r\n+       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (PSEdition:String) [Get-Variable], ItemNotFoundException\r\n+ FullyQualifiedErrorId : VariableNotFound,Microsoft.PowerShell.Commands.GetVariableCommand\r\n```\r\nAre you considering making `PSEdition` and other all scope const variables like `$Host` and `$PID` to be declared in every `SessionState`?",
    "created_at": "2018-03-24T00:10:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6377#issuecomment-375829524",
    "id": 375829524,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6377",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTgyOTUyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/375829524/reactions"
    },
    "updated_at": "2018-03-24T00:10:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/375829524",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  }
]
