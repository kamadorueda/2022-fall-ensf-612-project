[
  {
    "author_association": "NONE",
    "body": "Alternately, the streams should just be serialized to the file descriptor corresponding to the stream numbers documented [here](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_redirection?view=powershell-6), and anyone who wants to see progress, warning etc. output on stdout can just manually redirect all of those file descriptors into `1`.",
    "created_at": "2018-10-10T22:00:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-428748671",
    "id": 428748671,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc0ODY3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428748671/reactions"
    },
    "updated_at": "2018-10-10T22:00:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428748671",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3674056?v=4",
      "events_url": "https://api.github.com/users/masaeedu/events{/privacy}",
      "followers_url": "https://api.github.com/users/masaeedu/followers",
      "following_url": "https://api.github.com/users/masaeedu/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaeedu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/masaeedu",
      "id": 3674056,
      "login": "masaeedu",
      "node_id": "MDQ6VXNlcjM2NzQwNTY=",
      "organizations_url": "https://api.github.com/users/masaeedu/orgs",
      "received_events_url": "https://api.github.com/users/masaeedu/received_events",
      "repos_url": "https://api.github.com/users/masaeedu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/masaeedu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaeedu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/masaeedu"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "PowerShell can redirect streams https://blogs.technet.microsoft.com/heyscriptingguy/2014/03/30/understanding-streams-redirection-and-write-host-in-powershell/",
    "created_at": "2018-10-11T16:50:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-429031882",
    "id": 429031882,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTAzMTg4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429031882/reactions"
    },
    "updated_at": "2018-10-11T16:50:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429031882",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, you'll need to redirect the streams from within a PS session. There's not a complete 1:1 mapping of all PS streams to other console streams, so you'll have to perform this redirection when calling from a PS shell or from within the script itself to be sure PowerShell is actually handling the redirections.\r\n\r\nOtherwise, I believe most of these will get squashed into the output / stderr stream(s) by default.",
    "created_at": "2018-10-11T17:22:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-429043673",
    "id": 429043673,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA0MzY3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429043673/reactions"
    },
    "updated_at": "2018-10-11T17:22:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429043673",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32 I don't always have access to the script though (nor to the scripts that it transitively calls). From my perspective I'm just trying to evaluate some black box binary which emits data to a variety of output streams, and I only care about retrieving one of them, which is trivial with other shells and script interpreters.\r\n\r\nIf some functions somewhere do `Write-Warning` or `Write-Debug` or whatever, I want to be able to retrieve the output sans that content.",
    "created_at": "2018-10-11T18:13:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-429062876",
    "id": 429062876,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA2Mjg3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429062876/reactions"
    },
    "updated_at": "2018-10-11T18:13:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429062876",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3674056?v=4",
      "events_url": "https://api.github.com/users/masaeedu/events{/privacy}",
      "followers_url": "https://api.github.com/users/masaeedu/followers",
      "following_url": "https://api.github.com/users/masaeedu/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaeedu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/masaeedu",
      "id": 3674056,
      "login": "masaeedu",
      "node_id": "MDQ6VXNlcjM2NzQwNTY=",
      "organizations_url": "https://api.github.com/users/masaeedu/orgs",
      "received_events_url": "https://api.github.com/users/masaeedu/received_events",
      "repos_url": "https://api.github.com/users/masaeedu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/masaeedu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaeedu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/masaeedu"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "PowerShell has more streams than STDOUT and STDERR, but these are only understood from within PowerShell.  By default, I believe it is expected for the extended streams to be sent to STDOUT from pwsh.exe as it can't send it anywhere else.  Trying to understand the use case here.  If you don't want the Warning stream, you could just add `$WarningPreference = \"SilentlyContinue\"` into the script.  If you want to redirect those streams to something else, you can do it within the script as well.\r\n\r\nAre you asking for something like:\r\n\r\n```none\r\npwsh -warning warning.txt\r\n```\r\n",
    "created_at": "2018-10-11T18:23:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-429066532",
    "id": 429066532,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA2NjUzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429066532/reactions"
    },
    "updated_at": "2018-10-11T18:24:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429066532",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT Processes also have more file descriptors than just `1` and `2`, so maybe the output for each Powershell stream >2 could go to the corresponding file descriptors (at least when you're not running `pwsh` in a tty).\r\n\r\nThe use case is to have a script that uses various modules (e.g. PowerCLI) and emits a fixed format. It's going to live alongside a variety of other scripts (most of which are not implemented in Powershell) that emit an identical format.\r\n\r\nRight now the script pollutes stdout with warning/progress/debug information emitted by the various modules it uses. If this was instead a bash script, stuff that is emitted on fd 3 by a sourced third party script or exe would not contaminate the output of fd 1 (i.e. stdout).\r\n\r\nI can certainly try and suppress everything besides the Powershell output stream at a global level, but I'd prefer to still have this information available if needed. More importantly, I'd like to avoid having to modify the script at all.",
    "created_at": "2018-10-11T19:14:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-429083685",
    "id": 429083685,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA4MzY4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429083685/reactions"
    },
    "updated_at": "2018-10-11T19:19:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429083685",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3674056?v=4",
      "events_url": "https://api.github.com/users/masaeedu/events{/privacy}",
      "followers_url": "https://api.github.com/users/masaeedu/followers",
      "following_url": "https://api.github.com/users/masaeedu/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaeedu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/masaeedu",
      "id": 3674056,
      "login": "masaeedu",
      "node_id": "MDQ6VXNlcjM2NzQwNTY=",
      "organizations_url": "https://api.github.com/users/masaeedu/orgs",
      "received_events_url": "https://api.github.com/users/masaeedu/received_events",
      "repos_url": "https://api.github.com/users/masaeedu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/masaeedu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaeedu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/masaeedu"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT \r\n\r\n> Are you asking for something like:\r\n> ```\r\n> pwsh -warning warning.txt\r\n> ```\r\n\r\nYes, something like that would be very useful, provided it can be specified exhaustively for all Powershell streams.\r\n",
    "created_at": "2018-10-11T19:18:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-429084919",
    "id": 429084919,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTA4NDkxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429084919/reactions"
    },
    "updated_at": "2018-10-11T19:18:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429084919",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3674056?v=4",
      "events_url": "https://api.github.com/users/masaeedu/events{/privacy}",
      "followers_url": "https://api.github.com/users/masaeedu/followers",
      "following_url": "https://api.github.com/users/masaeedu/following{/other_user}",
      "gists_url": "https://api.github.com/users/masaeedu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/masaeedu",
      "id": 3674056,
      "login": "masaeedu",
      "node_id": "MDQ6VXNlcjM2NzQwNTY=",
      "organizations_url": "https://api.github.com/users/masaeedu/orgs",
      "received_events_url": "https://api.github.com/users/masaeedu/received_events",
      "repos_url": "https://api.github.com/users/masaeedu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/masaeedu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/masaeedu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/masaeedu"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Arguably, what PowerShell should always have done is to map _all streams other than the success stream_ to stderr (this is basically what native shells / utilities are forced to do: anything that's not data must go to stderr) - throwing everything into stdout was never a good idea.\r\n\r\nIt is another unfortunate example of PowerShell treating the outside world as an afterthought - which was less of a problem on Windows, but Unix users will expect conformant behavior.\r\n\r\nIt would be a breaking change, @SteveL-MSFT, but perhaps it's not too late for Core?\r\n\r\n\r\n+1  for the option to capture streams individually.\r\n\r\n\r\n\r\n",
    "created_at": "2018-10-18T02:33:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-430854508",
    "id": 430854508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg1NDUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430854508/reactions"
    },
    "updated_at": "2018-10-18T02:33:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430854508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S.: \r\n\r\nWhile everything currently goes to stdout in the absence of redirections or in the presence of only  stdout redirection (`>`, `1>`), at least with a  `2>` (stderr) redirection it is currently possible to capture the _error stream_ separately (e.g., `pwsh ... 2>errs.txt`) - but _only_ the error stream: streams 3 - 6 invariably go to stdout.\r\n\r\nHere are variations of a simple test command that exercises all streams:\r\n\r\n```powershell\r\n# From Bash:\r\n$ pwsh -nop -command \"write-output 1; write-error 2; write-warning 3; write-verbose -vb 4; \\$DebugPreference = 'Continue'; Write-Debug 5; Write-Information -InformationAction continue 6; Write-Host host\"\r\n\r\n\r\n# From cmd.exe\r\nC:> pwsh -nop -command \"write-output 1; write-error 2; write-warning 3; write-verbose -vb 4; $DebugPreference = 'Continue'; Write-Debug 5; Write-Information -InformationAction continue 6; Write-Host host\"\r\n\r\n# From cmd.exe, Windows PowerShell\r\nC:> powershell -nop -command \"write-output 1; write-error 2; write-warning 3; write-verbose -vb 4; $DebugPreference = 'Continue'; Write-Debug 5; Write-Information -InformationAction continue 6; Write-Host host\"\r\n```\r\n",
    "created_at": "2018-10-18T02:54:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-430858013",
    "id": 430858013,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg1ODAxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430858013/reactions"
    },
    "updated_at": "2018-10-18T03:03:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430858013",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 changing from STDOUT to STDERR is probably too big a breaking change to take at this point, adding a switch to `pwsh` to enable this is doable if people will actually use it.  ",
    "created_at": "2018-10-18T03:06:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-430859865",
    "id": 430859865,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg1OTg2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430859865/reactions"
    },
    "updated_at": "2018-10-18T03:06:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430859865",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT, I just remembered the discussion about providing a separate `pwsh-np` binary for starting PowerShell without loading `$PROFILE`, for use in shebang lines (see #992).\r\n\r\nPerhaps we should consider fixing all the broken things there, to provide a CLI that fits better into the Unix world and has saner defaults overall (perhaps with a different name than `pwsh-np`).\r\n\r\nAside from not loading `$PROFILE`, this could include:\r\n\r\n* Sending PS streams 2 - 6 to stderr by default, as discussed here.\r\n* Fixing the CLI issues listed in #3743\r\n\r\n",
    "created_at": "2018-10-18T05:37:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-430881127",
    "id": 430881127,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg4MTEyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430881127/reactions"
    },
    "updated_at": "2018-10-18T05:37:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430881127",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 that may be a good solution as it wouldn't be a breaking change, but then `pwsh-np` may not be a good name to capture the differences to `pwsh`",
    "created_at": "2018-10-18T06:28:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-430890436",
    "id": 430890436,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg5MDQzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430890436/reactions"
    },
    "updated_at": "2018-10-18T06:28:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430890436",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "I just came across this thread as I wanted to capture warning/debug/verbose streams separately too. Turns out you can run pwsh with `pwsh -o XML -c \"Write-Verbose 123\" which pipes XML based messages to stdout and stderr with all of the information (and more) that you can use to capture all output. I have almost managed to make it work properly, my current problem is incorrect order of incoming data e.g. from below script:\r\n\r\n```powershell\r\n$ErrorActionPreference = \"Continue\"\r\n$DebugPreference = \"Continue\"\r\n$VerbosePreference = \"Continue\"\r\n\r\n$PSVersionTable | Out-Host\r\n\r\nWrite-Debug \"Hello DEBUG\"\r\nWrite-Verbose \"Hello VERBOSE\"\r\nWrite-Output \"Hello OUTPUT\"\r\nWrite-Host \"Hello HOST\"\r\nWrite-Information \"Hello INFORMATION\"\r\nWrite-Warning \"Hello WARNING\"\r\nWrite-Error \"Hello ERROR\"\r\nthrow \"Hello THROW\"\r\n```\r\n\r\nI see `Hello DEBUG` and `Hello VERBOSE` before `$PSVersionTable` output.\r\n\r\nI am using node.js to process the output:\r\n\r\n```javascript\r\nconst child_process = require('child_process');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst util = require('util');\r\nconst Saxophone = require('saxophone');\r\n\r\nconst cp = child_process.spawn(\r\n  'pwsh',\r\n  ['-NoProfile', '-NoLogo', '-NonInteractive', '-OutputFormat', 'XML', '-File', path.join(__dirname, 'script.ps1')],\r\n  );\r\n\r\nnew CliXMLParser(cp.stdout, 'stdout');\r\nnew CliXMLParser(cp.stderr, 'stderr');\r\n  \r\nfunction CliXMLParser(stream, name) {\r\n  this.stream = stream;\r\n  this.name = name;\r\n  this.currentTag = null;\r\n  this.debugOut = fs.createWriteStream(util.format('%s.xml', name), 'utf-8')\r\n  const self = this;\r\n\r\n  this.stream.on('data', (chunk) => {\r\n    const text = chunk.toString('utf-8');\r\n    console.log('chunk received', text.slice(0, 100));\r\n    if (text.indexOf('#< CLIXML') === 0) {\r\n  \r\n      self.parser = new Saxophone();\r\n      \r\n      self.parser.on('tagopen', tag => {\r\n        self.currentTag = tag;\r\n      })\r\n      \r\n      self.parser.on('tagclosed', () => {\r\n        self.currentTag = null;\r\n      })\r\n      \r\n      self.parser.on('text', (text) => {\r\n        if (!self.currentTag) {\r\n          return;\r\n        }\r\n  \r\n        const attributes = Saxophone.parseAttrs(self.currentTag.attrs);\r\n        \r\n        if (text.contents === '_x000A_') {\r\n          return; // process.stdout.write(\"\\n\");\r\n        }\r\n\r\n        if(self.currentTag.name === 'ToString') {\r\n          console.log(text.contents)\r\n        }\r\n\r\n        if(attributes.S && attributes.S !== \"Output\") {\r\n          process.stdout.write(util.format('##%s ', attributes.S.toLowerCase()))\r\n        }\r\n        \r\n        if(self.currentTag.name === 'S') {\r\n          console.log(text.contents)\r\n        }\r\n      })\r\n    \r\n      self.parser.on('finish', () => {\r\n        console.log('Parsing finished.');\r\n      });\r\n      \r\n      self.parser.on('error', (err) => {\r\n        console.error(err);\r\n      });\r\n    } else {\r\n      self.debugOut.write(chunk);\r\n\r\n      if (self.parser){\r\n        self.parser.write(chunk);\r\n      }\r\n    }\r\n  })\r\n\r\n  this.stream.on('error', err => {\r\n    console.error(err);\r\n  })\r\n\r\n  this.stream.on('end', () => {\r\n    console.log(\"Closing debug out\")\r\n    self.debugOut.close();\r\n  })\r\n}\r\n\r\n\r\n\r\ncp.on('exit', (code) => {\r\n  console.log(\"Pwsh exited with code %d\", code);\r\n})\r\n\r\n\r\nconsole.log(\"Started pwsh process: %s\", cp.pid);\r\n```",
    "created_at": "2020-04-25T13:51:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-619382796",
    "id": 619382796,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM4Mjc5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619382796/reactions"
    },
    "updated_at": "2020-04-25T13:51:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619382796",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47468?v=4",
      "events_url": "https://api.github.com/users/sponte/events{/privacy}",
      "followers_url": "https://api.github.com/users/sponte/followers",
      "following_url": "https://api.github.com/users/sponte/following{/other_user}",
      "gists_url": "https://api.github.com/users/sponte/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sponte",
      "id": 47468,
      "login": "sponte",
      "node_id": "MDQ6VXNlcjQ3NDY4",
      "organizations_url": "https://api.github.com/users/sponte/orgs",
      "received_events_url": "https://api.github.com/users/sponte/received_events",
      "repos_url": "https://api.github.com/users/sponte/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sponte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sponte/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sponte"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "You may have hit a bug, which I've just reported in #12489.\r\n\r\nAlso, it seems that _host_ output is captured as _success_-stream output (`S=\"Output\"`) rather than _information_-stream output (`S=\"information\"`) - but that may \r\nbe by (historical) design and is probably retained for backward compatibility (the information stream, to which `Write-Host` (but not `Out-Host`) now writes, wasn't introduced until v5).\r\n",
    "created_at": "2020-04-25T15:36:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7989#issuecomment-619397391",
    "id": 619397391,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7989",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM5NzM5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619397391/reactions"
    },
    "updated_at": "2020-04-25T15:36:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619397391",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
