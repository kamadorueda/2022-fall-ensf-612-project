[
  {
    "author_association": "COLLABORATOR",
    "body": "Taking a quick look, seems like the former variables are not flagged with `AllScope` attribute whereas the latter are.\r\n\r\nI imagine there are some design decisions behind that, but can't personally speak to them. @daxian-dbw  @rjmholt might be the best folks to ask (or will know who to ask if not, I suppose). ðŸ™‚ ",
    "created_at": "2020-06-07T08:19:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-640176241",
    "id": 640176241,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDE3NjI0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640176241/reactions"
    },
    "updated_at": "2020-06-07T08:19:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640176241",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "For the majority (more on that at the end) that are available, it's because they are either compiler constants (e.g. `$true`, `$false`, `$null`) *or* they could be valid **locals** based on context.\r\n\r\nFor the latter, take this example:\r\n\r\n```powershell\r\nclass Test {\r\n    static [void] Do() {\r\n        0..10 | & { $input }\r\n    }\r\n}\r\n```\r\n\r\nWhile `$input`, `$PSCmdlet`, `$matches`, etc are not *always* valid locals, determining statically if they are valid is next to impossible (or at the very least way too expensive).\r\n\r\nThe automatic vars that don't work are *always* globals.  You can always access these explicitly by specifying scope, e.g. `$global:Host`.  Personally I prefer this, if you want to access state outside of your class you should (imo) be required to explicitly declare that you're doing so.\r\n\r\nAll that said, I think the list should be further restricted.  These variables are never (afaik) actually locals (or even if they are technically, I think they act more like globals):\r\n\r\n```powershell\r\n$?\r\n$Error\r\n$LastExitCode\r\n$NestedPromptLevel\r\n$PWD\r\n$StackTrace\r\n```",
    "created_at": "2020-06-08T12:33:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-640574650",
    "id": 640574650,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDU3NDY1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640574650/reactions"
    },
    "updated_at": "2020-06-08T12:33:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640574650",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Also maybe the `$Event*` variables should work without an explicit scope modifier.  Though I suppose they're used infrequently enough that requiring `$local:Event` is probably fine.  Actually it seems like using the `local` or `private` modifiers still throw, that should maybe change.",
    "created_at": "2020-06-08T14:05:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-640629905",
    "id": 640629905,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDYyOTkwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640629905/reactions"
    },
    "updated_at": "2020-06-08T14:05:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640629905",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "> if you want to access state outside of your class you should (imo) be required to explicitly declare that you're doing so.\r\n\r\nFWIW I agree with this. I was unaware that (some of the) PowerShell Automatic Variables could be referenced via their `$global:` scope, even though I saw them there in the list returned by `Get-Variable -Scope global`, I guess I thought there was just something _special_ about Automatic Variables haha.\r\n\r\nI initially ran across this issue when I was cleaning up a class for cross-platform compatibility â€” I wanted to replace a bunch of `$env:USERPROFILE` references with the cross-platform-friendly `$HOME` instead. For some other properties, such as user name or host/computer name, I have read that the `[Environment]` static class properties `[Environment]::UserName` and `[Environment]::MachineName` have been implemented in a cross-platform-friendly fashion. This is getting beyond the scope of this specific issue but I wonder if the `[Environment]` class could be fleshed out further to include cross-platform implementations for all common environment variables shared by platforms PowerShell supports?",
    "created_at": "2020-06-08T17:19:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-640762725",
    "id": 640762725,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDc2MjcyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640762725/reactions"
    },
    "updated_at": "2020-06-08T17:21:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640762725",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65730198?v=4",
      "events_url": "https://api.github.com/users/IarwainBen-adar/events{/privacy}",
      "followers_url": "https://api.github.com/users/IarwainBen-adar/followers",
      "following_url": "https://api.github.com/users/IarwainBen-adar/following{/other_user}",
      "gists_url": "https://api.github.com/users/IarwainBen-adar/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IarwainBen-adar",
      "id": 65730198,
      "login": "IarwainBen-adar",
      "node_id": "MDQ6VXNlcjY1NzMwMTk4",
      "organizations_url": "https://api.github.com/users/IarwainBen-adar/orgs",
      "received_events_url": "https://api.github.com/users/IarwainBen-adar/received_events",
      "repos_url": "https://api.github.com/users/IarwainBen-adar/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IarwainBen-adar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IarwainBen-adar/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IarwainBen-adar"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You can use `[Environment]::GetEnvironmentVariable($name)` to retrieve specific environment variables in a similar way. The ones available directly on the class seem to be pretty sparse in comparison to the ones you could use.\r\n\r\nThe class itself is in the .NET core libraries, though. If you want to suggest adding a few extra static members there, it would be best to ask in the [dotnet/runtime](/dotnet/runtime) repo. :slightly_smiling_face:",
    "created_at": "2020-06-08T17:24:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-640765397",
    "id": 640765397,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDc2NTM5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640765397/reactions"
    },
    "updated_at": "2020-06-08T17:24:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640765397",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> This is getting beyond the scope of this specific issue but I wonder if the `[Environment]` class could be fleshed out further to include cross-platform implementations for all common environment variables shared by platforms PowerShell supports?\r\n\r\nMost of the directory based ones should be available through `GetFolderPath`, e.g.\r\n\r\n```powershell\r\n[Environment]::GetFolderPath(\r\n    [Environment+SpecialFolder]::LocalApplicationData)\r\n```\r\n\r\nWill return the equivalent of `$env:LOCALAPPDATA` on Windows and on *nix it'll be either `$env:XDG_DATA_HOME` or `$HOME/.local/share`.",
    "created_at": "2020-06-08T17:52:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-640779252",
    "id": 640779252,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDc3OTI1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640779252/reactions"
    },
    "updated_at": "2020-06-08T17:52:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640779252",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@IarwainBen-adar  One of the decisions we made when implementing classes was to provide a more robust programming environment for PowerShell where static checks verify that variables are set before they are used. Obviously this has to be scoped to the method being defined so if the variable you're referencing is not automatic or local, you must qualify the reference so the compiler knows to skip that variable. Personally I've found this to be super useful when writing large PowerShell scripts. I just throw everything into classes and methods instead of functions and get a ton of help from the static analyzer. ",
    "created_at": "2020-06-10T02:13:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-641677771",
    "id": 641677771,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTY3Nzc3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641677771/reactions"
    },
    "updated_at": "2020-06-10T02:13:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641677771",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "NONE",
    "body": "@bpayette I agree completely! For the most part I've been very happy with PowerShell classes. I was just surprised to learn that not all Automatic Variables are alike. For the Automatic Variables that truly are global, referencing them by their `$global:` scope seems perfectly appropriate.",
    "created_at": "2020-06-10T07:31:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12915#issuecomment-641791671",
    "id": 641791671,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12915",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTc5MTY3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641791671/reactions"
    },
    "updated_at": "2020-06-10T07:31:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641791671",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65730198?v=4",
      "events_url": "https://api.github.com/users/IarwainBen-adar/events{/privacy}",
      "followers_url": "https://api.github.com/users/IarwainBen-adar/followers",
      "following_url": "https://api.github.com/users/IarwainBen-adar/following{/other_user}",
      "gists_url": "https://api.github.com/users/IarwainBen-adar/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IarwainBen-adar",
      "id": 65730198,
      "login": "IarwainBen-adar",
      "node_id": "MDQ6VXNlcjY1NzMwMTk4",
      "organizations_url": "https://api.github.com/users/IarwainBen-adar/orgs",
      "received_events_url": "https://api.github.com/users/IarwainBen-adar/received_events",
      "repos_url": "https://api.github.com/users/IarwainBen-adar/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IarwainBen-adar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IarwainBen-adar/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IarwainBen-adar"
    }
  }
]
