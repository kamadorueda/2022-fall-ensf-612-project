[
  {
    "author_association": "NONE",
    "body": "As a side effect    \r\n`ConvertTo-Csv $list`    \r\nwould also work.  Generally there needs to be a very good reason why `$x | cmdlet`  does something different from `cmdlet $x`, and I've never seen why this is an exception (`ConvertTo-Json` enumerates items, but `convertTo-Csv` outputs properties of the list object).  \r\n\r\n\r\n\r\n",
    "created_at": "2022-09-12T14:54:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1243863679",
    "id": 1243863679,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KI9p_",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1243863679/reactions"
    },
    "updated_at": "2022-09-12T14:54:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1243863679",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The comma that precedes the array in the examples above explicitly makes the array a single object that passes through the pipeline vs each element of the array/collection being passed to the cmdlet.  So in this case, the cmdlet sees it as a single object (keep in mind it could have also been an array of arrays) and serializes it as such vs unrolling the collection.  So this is working by-design so that the user can differentiate treating an array as a collection or a single object through the pipeline.",
    "created_at": "2022-09-12T18:02:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244105272",
    "id": 1244105272,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KJ4o4",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244105272/reactions"
    },
    "updated_at": "2022-09-12T18:02:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244105272",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iRon7, based on the conversation in #8270, I encourage you to open a new issue that explains the rationale for your suggestion in more detail.\r\n\r\n@SteveL-MSFT, the underlying idea is to intentionally allow `ConvertTo-Csv` and `Export-Csv` to accept _collections as a whole_ for the sake of _improved processing speed_ (at the expense of memory consumption).\r\n\r\n`Set-Content` and `Out-File` (and `Write-Output`)  already do that, but it's especially compelling with `ConvertTo-Csv` and `Export-Csv` (and possibly others), where doing anything _other_ than _enumerating_ a collection passed as a single object serves no useful purpose (in other words: the current behavior in that case is useless).\r\n\r\n@jhoneill:\r\n\r\n>  Generally there needs to be a very good reason why `$x | cmdlet` does something different from `cmdlet $x`\r\n\r\nThe reason for the fundamental difference is that `$x` is _implicitly enumerated_ in the pipeline, which doesn't happen if `$x` is passed _as an argument_. That is, `cmdlet` sees the _elements_ of `$x` as input, one by one, in the pipeline scenario, whereas it sees `$x` _as a whole_ in the argument scenario.\r\n\r\n* https://github.com/PowerShell/PowerShell/issues/4242\r\n\r\nprovides the backstory.\r\n",
    "created_at": "2022-09-12T22:18:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244594080",
    "id": 1244594080,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KLv-g",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244594080/reactions"
    },
    "updated_at": "2022-09-12T22:18:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244594080",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 if the request is an optimization to unroll a collection in the cmdlet vs via the pipeline, then would a `-InputCollection` parameter make sense?",
    "created_at": "2022-09-12T22:22:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244601254",
    "id": 1244601254,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KLxum",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244601254/reactions"
    },
    "updated_at": "2022-09-12T22:22:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244601254",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @jhoneill:\r\n> \r\n> > Generally there needs to be a very good reason why `$x | cmdlet` does something different from `cmdlet $x`\r\n> \r\n> The reason for the fundamental difference is that `$x` is _implicitly enumerated_ in the pipeline, which doesn't happen if `$x` is passed _as an argument_.  \r\n\r\n@mklement0 \r\n\r\nYes, I'm well aware of that.   \r\nThere's an expectation that commands do the work need so that    \r\n`cmdlet $x, $y , $z ` or `$x, $y, $z  | cmdlet`  or `$a = @($x, $y, $z)   ; cmdlet $a`  \r\n give the same result. There are a few cases where that wouldn't make sense, but where it would...    \r\n  \r\n",
    "created_at": "2022-09-12T22:34:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244623638",
    "id": 1244623638,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KL3MW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244623638/reactions"
    },
    "updated_at": "2022-09-12T22:34:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244623638",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jhoneill, my point was that given how pipeline-binding parameters currently work, _you shouldn't have this expectation_ - as desirable as this symmetry may be - and if you do, you'll be disappointed, with only a few, not documented-as-such exceptions.\r\n\r\nAs noted before, the only solution that would provide _performance benefits_ is to make all cmdlets where this symmetry makes sense explicitly do their _own_ enumeration.\r\n\r\nA _general_ solution, as part of the _plumbing_ - which would  _not_ be (meaningfully) performance-enhancing, unfortunately - is suggested [here](https://github.com/PowerShell/PowerShell/issues/4242#issuecomment-453827133).\r\n\r\n",
    "created_at": "2022-09-12T22:48:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244660513",
    "id": 1244660513,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KMAMh",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244660513/reactions"
    },
    "updated_at": "2022-09-12T22:49:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244660513",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Given the above, @SteveL-MSFT, I don't think a separate parameter is called for.\r\n\r\nWhat would make sense is to do a systematic review of all standard cmdlets and decide which ones should perform their own enumeration _without ambiguity_ (i.e. those cmdlets for which _not_ enumerating results in _useless_ behavior), and update those (I haven't done this review, and it's possible that `ConvertTo-Csv` and `Export-Csv` are the only candidates).\r\n\r\nSeparately, implementing the (opt-in) plumbing solution mentioned above makes sense to me, even if it doesn't result in performance gains.\r\n\r\n\r\n\r\n",
    "created_at": "2022-09-12T22:55:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244674756",
    "id": 1244674756,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KMDrE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244674756/reactions"
    },
    "updated_at": "2022-09-12T22:55:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244674756",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "The reason that I actually opened a *bug report* for this and not a *feature request* is because aside for the possible performance improvement, this statement\r\n\r\n> this is working by-design so that the user can differentiate treating an array as a collection or a single object through the pipeline.\r\n\r\nmight be ***generally*** correct but is pointless for the `ConvertTo-Csv` - and `Export-Csv` which are only able to generate **flat** `csv` lists by ***their*** design (in my opinion, the particular cmdlet design goals should take president over the general design goal).\r\nAlso note that this general statement doesn't apply to the `Set-Content`/ `Add-Content` cmdlets and for the default display output (`Write-Output` cmdlet) where the user (script author) isn't actually able to *differentiate between an array or a single object* (see also: #17701).\r\n\r\nThere are a [few cases in stackoverflow](https://stackoverflow.com/search?q=PowerShell+%22Length%22%2C%22LongLength%22%2C%22Rank%22%2C%22SyncRoot%22%2C%22IsReadOnly%22%2C%22IsFixedSize%22%2C%22IsSynchronized%22%2C%22Count%22) questions that relate to this expectation where regardless of whether I supply the groups via the pipeline or via a parameter argument, one might (**could**) only expect a *flat* `csv` list as an output (see also: #3865 [Export-Csv -InputObject and ConvertTo-Csv -InputObject export/convert the collection object itself rather than its elements](https://github.com/PowerShell/PowerShell/issues/3865)):\r\n\r\n```PowerShell\r\n$Process = Get-Process | Group-Object -Property PriorityClass\r\nConvertTo-Csv $Process.Group\r\n\r\n\"Length\",\"LongLength\",\"Rank\",\"SyncRoot\",\"IsReadOnly\",\"IsFixedSize\",\"IsSynchronized\",\"Count\" # is bogus\r\n\"258\",\"258\",\"1\",\"System.Object[]\",\"False\",\"True\",\"False\",\"258\"\r\n```\r\n",
    "created_at": "2022-09-13T07:13:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1244995907",
    "id": 1244995907,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KNSFD",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244995907/reactions"
    },
    "updated_at": "2022-09-14T13:09:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1244995907",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @jhoneill, my point was that given how pipeline-binding parameters currently work, _you shouldn't have this expectation_ - as desirable as this symmetry may be - and if you do, you'll be disappointed, with only a few, not documented-as-such exceptions.\r\n\r\n@mklement0  yes I think we understand each other.  That expectation grows up because that's how well written commands work. PowerShell classes teach people that `foreach ($f in $files)  {Invoke-Something $f}` is rarely necessary and `$files | inovke-Something` or `invoke-Something $files`  is \"normal\", and that they should write new commands to work that way.    \r\n\r\n Your later description that in some cases \" _not_ enumerating results in _useless_ behavior \"  sums it up neatly :-)  Useless, and (I think) often unexpected   \r\n\r\nSome things like `Get-Member`, do the right thing by _not_ enumerating, (how else do we learn about the enumerable object ?  ) For export-CSV it's the wrong thing - and finding and fixing similar cases would be a benefit.  \r\n",
    "created_at": "2022-09-13T10:47:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1245232979",
    "id": 1245232979,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KOL9T",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1245232979/reactions"
    },
    "updated_at": "2022-09-13T10:47:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1245232979",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2022-09-14T12:01:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1246661078",
    "id": 1246661078,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KTonW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246661078/reactions"
    },
    "updated_at": "2022-09-14T12:01:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246661078",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "As explained, I would like the general closure statement in this issue to be reconsidered and more specific towards the concerned `ConvertTo-Csv` and `Export-Csv` cmdlets.\r\nIn other words, can this issue been `reopened` and the `Resolution-Answered` label removed to prevent it from automatically being closed again.",
    "created_at": "2022-09-14T12:27:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1246690171",
    "id": 1246690171,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KTvt7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246690171/reactions"
    },
    "updated_at": "2022-09-14T13:08:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246690171",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iRon7, I agree that this is worth tackling, but in a generalized manner - which amounts to a nontrivial amount of work:\r\n\r\nI forgot that I _did_ try to compile a list of all cmdlets where passing arrays as a whole results in unless behavior, namely those in Category C from #4242 (additions / corrections welcome).\r\n\r\nThus, as that issue's title states, one possible resolution - and to me the preferred one - is to make _all_ cmdlets in that category do their own enumeration of collections received as single objects.\r\n\r\n#4242 has languished for 5 years now, and it is focused on the `-InputObject`-vs.-pipeline asymmetry.\r\nBut as this discussion here shows, it also prevents chunked input from the pipeline.\r\n\r\nSo the question is whether there's a willingness to tackle this, bot for the sake of invocation symmetry and, perhaps more importantly, for the performance benefits it offers.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-09-14T12:54:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1246724118",
    "id": 1246724118,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KT4AW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246724118/reactions"
    },
    "updated_at": "2022-09-14T12:54:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246724118",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0  I'm looking at your category C items with a view to taking them to the cmdlet working group \r\n\r\nThere might be some quibbles about what is truly in category C.  With `Where-object`,  someone somewhere is bound to want to use the count of members or even `-is [Array]` in a _where_ condition. But the list is a helpful place to start from.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-09-14T14:40:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1246870509",
    "id": 1246870509,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KUbvt",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246870509/reactions"
    },
    "updated_at": "2022-09-14T14:40:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1246870509",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @jhoneill - cmdlet-specific evaluation is definitely called for.\r\n\r\nIn that context, revisiting how the pipeline-binding parameters are _typed_ is also worthwhile (`object[]` vs. `object`), as discussed in #4242, and with respect to _performance_, particularly, in https://github.com/PowerShell/PowerShell/issues/18070#issuecomment-1247008638\r\n\r\nWorth noting: #4242, which was focused on just _by-argument_ parameter binding without _batching via the pipeline_ being in the picture, discusses assuming that pipeline input is _already enumerated_ and performing the cmdlet-internal enumeration only for _argument_-bound values.\r\n\r\nIn order to support batching, however, this distinction mustn't be made.\r\n\r\n\r\n",
    "created_at": "2022-09-14T16:29:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1247018950",
    "id": 1247018950,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KU__G",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1247018950/reactions"
    },
    "updated_at": "2022-09-14T16:29:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1247018950",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0  Yes, I was just reading the comment the 18070, and if for anything which looks at the InputObject parameter generally, the object vs Object[] question should be on the radar.    \r\nI wonder, without having checked, if the commands which unroll arrays tend towards having `Object[]` and the ones which don't towards `Object` \r\n\r\nWhen I'm coding in PowerShell I leave `InputObject` as object (which is implied so I don't need to have it in the param block), and where a process block would be \r\n```\r\nProcess { \r\n  Do_stuff_with $InputObject\r\n}\r\n```\r\nI typically have\r\n```\r\nProcess {\r\n    foreach ($i in  $InputObject ) {\r\n      Do_stuff_with $i\r\n    }\r\n}\r\n```\r\nI don't spend enough time in c# to know if that is equally easy to do there - PowerShell is very tolerant of \r\n`foreach ($i in $ScalarVariable)`  but this simple change means if the object is an array it unrolls (one level, not nested arrays) and if its scalar it processes as normal. \r\n",
    "created_at": "2022-09-14T16:54:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1247048407",
    "id": 1247048407,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KVHLX",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1247048407/reactions"
    },
    "updated_at": "2022-09-14T16:54:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1247048407",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "A quick look suggests that only `Set-Content` / `Add-Content` and `Join-String` have `psobject[]` parameters, not the other ones in Category B - as discussed, `psobject[]` / `object[]` parameters best avoided so as not to create array-allocation overhead with scalar input objects from the pipeline.\r\n\r\nIn C# you cannot directly enumerate scalars with `foreach`, so reflection is needed to check if a given object is an enumerable.\r\n\r\n\r\n\r\n",
    "created_at": "2022-09-14T21:22:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18071#issuecomment-1247316275",
    "id": 1247316275,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18071",
    "node_id": "IC_kwDOAvT7bc5KWIkz",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1247316275/reactions"
    },
    "updated_at": "2022-09-14T21:22:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1247316275",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
