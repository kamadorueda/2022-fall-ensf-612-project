[
  {
    "author_association": "NONE",
    "body": "This behavior is so subtle that people might have been implicitly taking advantage of the fact that delay-bind scripts doesn't **pollute** the caller's scope.\r\n\r\nMy understanding is that pipeline-extraction scripts (`ValueFromPipeline(ByPropertyName)`) are mapping that are supposed to be pure (free of side-effect), while clearly `ForEach-Object` is more on the side of imperative paradigm, resembling the `foreach` statement. The choice for `Where-Object` is somehow arbitrary, but is useful for the case\r\n\r\n```powershell\r\n$i = 0;\r\nGet-Items | Where-Object { (++$i) % 2 }\r\n```\r\n\r\nOne might ask why such usage wouldn't benefit the pipeline-extraction scenario, i.e., **what's wrong if we execute the extraction scripts in the caller's scope**. The answer is that there might be multiple parameters delay-bound. If the extraction script blocks have side effects, the order of extraction would affect the result. E.g., consider\r\n\r\n```powershell\r\n# Imaginary\r\n$i = 0;\r\nGet-SomeItem | Use-SomePipeline -IndexMod2 { <# ??? #> } -IndexMod3 { <# ??? #> }\r\n\r\n# Currently possible version\r\n$i = [pscustomobject]@{ 'Value' = 0 };\r\nGet-SomeItem | Use-SomePipeline -IndexMod2 { <# ??? #> } -IndexMod3 { <# ??? #> }\r\n```\r\n\r\nIt is impossible to write the script correctly without knowing the order of delay-binding -- should I increase `$i` in the script for `IndexMod2` or `IndexMod3`? I'm not sure whether PowerShell has the order of which parameter is bound before which documented. If that's undocumented, that's undefined to me, and if the extraction scripts had side effects, the whole script wouldn't be useful because of undefined behavior.\r\n\r\nThe invocation order for `ForEach-Object` and `Where-Object` is clear, so it makes sense to allow execution in the caller's scope.",
    "created_at": "2019-03-14T23:35:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-473105013",
    "id": 473105013,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzEwNTAxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473105013/reactions"
    },
    "updated_at": "2019-03-14T23:35:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473105013",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> clearly ForEach-Object is more on the side of imperative paradigm\r\n\r\nAgreed. For `Foreach-Object` and `Where-Object`, running in the caller's scope allows us to do more than just writing results to the pipeline.\r\nAlso, `Foreach-Object` has `-Begin`, `-Process` and `-End` three script blocks, and they need to run in the same scope.\r\n\r\nAs for delay-bind script blocks in parameter binding, the purpose is simply to do some quick transformation/calculation on the value from pipeline, and it makes sense to isolate the execution to not pollute the caller's scope.",
    "created_at": "2019-03-15T03:22:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-473144769",
    "id": 473144769,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzE0NDc2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473144769/reactions"
    },
    "updated_at": "2019-03-15T03:22:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473144769",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> This behavior is so subtle \r\n\r\nThe behavioral _distinction_ is indeed so subtle that it invites everlasting confusion.\r\nEven if you understand the rationale - and the multiple-delay-bind-script-block scenario is a good argument _for_ the distinction _in principle_, but, due to its exoticness, to my mind _not in practice_ - _remembering_ it is a challenge.\r\n\r\n> it makes sense to isolate the execution to not pollute the caller's scope.\r\n\r\nTo paraphrase a common saying: One person's pollution is another person's treasure.\r\n\r\nGiven:\r\n\r\n```powershell\r\nPS> $i = 0; 'a', 'b' | ForEach-Object { (++$i) }\r\n1\r\n2\r\n```\r\n\r\nwhy shouldn't a delay-bind script block with `Rename-Item` work the same?\r\n\r\n```powershell\r\n# Does NOT work as intended, because a *local* $i variable is created on every invocation.\r\nPS>  $i = 0; $null = New-Item -Force tf-a, tf-b; Get-Item tf-? |\r\n           Rename-Item -NewName { '{0}-{1}' -f ++$i, $_.Name  } -WhatIf\r\nWhat if: Performing ... \"Rename File\" on target \"Item: .../tf-a Destination: .../1-tf-a\".\r\nWhat if: Performing ... \"Rename File\" on target \"Item: .../tf-b Destination: .../1-tf-b\".\r\n```\r\n\r\nThat is not a hypothetical example, by the way: it's a real-world scenario for renaming files with sequence numbers that I've come across multiple times on Stack Overflow.\r\n\r\n\r\n",
    "created_at": "2019-03-15T03:51:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-473149411",
    "id": 473149411,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzE0OTQxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473149411/reactions"
    },
    "updated_at": "2019-03-15T03:55:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473149411",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S.: The flip side of this issue is that it's currently extremely cumbersome to implement your own cmdlet / advanced function that processes a given script block in the _caller's_ scope (\"dot-sourced\") with `$_` support, the way that `ForEach-Object`  / `Where-Object` / `Measure-Command` do - see #3581",
    "created_at": "2019-03-15T04:02:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-473150971",
    "id": 473150971,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzE1MDk3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473150971/reactions"
    },
    "updated_at": "2019-03-15T04:02:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473150971",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, I've hit that one too @mklement0. Takes me a few attempts to realize what I'm doing wrong, and thankfully the solution is relatively easy -- just scope-bind the variable properly (either to $script: or $global: usually works OK.) 😄 ",
    "created_at": "2019-03-15T04:02:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-473151031",
    "id": 473151031,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzE1MTAzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473151031/reactions"
    },
    "updated_at": "2019-03-15T04:02:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473151031",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "> the solution is relatively easy -- just scope-bind the variable properly (either to $script: or $global: usually works OK.) 😄\r\n\r\n@vexx32 Would you please be able to expand on this?  Pretty sure I'm up against this issue, so wanted to explore your suggestion further.\r\n\r\n",
    "created_at": "2020-06-17T08:58:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-645248397",
    "id": 645248397,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTI0ODM5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645248397/reactions"
    },
    "updated_at": "2020-06-17T08:58:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645248397",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26512373?v=4",
      "events_url": "https://api.github.com/users/wisemoth/events{/privacy}",
      "followers_url": "https://api.github.com/users/wisemoth/followers",
      "following_url": "https://api.github.com/users/wisemoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisemoth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/wisemoth",
      "id": 26512373,
      "login": "wisemoth",
      "node_id": "MDQ6VXNlcjI2NTEyMzcz",
      "organizations_url": "https://api.github.com/users/wisemoth/orgs",
      "received_events_url": "https://api.github.com/users/wisemoth/received_events",
      "repos_url": "https://api.github.com/users/wisemoth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/wisemoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisemoth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/wisemoth"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0's not-working example was:\r\n```ps1\r\n$i = 0\r\n$null = New-Item -Force tf-a, tf-b; Get-Item tf-? |\r\n    Rename-Item -NewName { '{0}-{1}' -f ++$i, $_.Name  } -WhatIf\r\n```\r\n\r\nIn that case you can workaround it with something like:\r\n\r\n```ps1\r\n$script:i = 0\r\n$null = New-Item -Force tf-a, tf-b; Get-Item tf-? |\r\n    Rename-Item -NewName { '{0}-{1}' -f ++$script:i, $_.Name  } -WhatIf\r\n```\r\n\r\nGenerally you should only run into this kind of issue if you've a need to _set_ or change the variable value from inside the delay-bind scriptblock. 🙂 ",
    "created_at": "2020-06-17T13:25:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-645371829",
    "id": 645371829,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTM3MTgyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645371829/reactions"
    },
    "updated_at": "2020-06-17T13:25:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645371829",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @vexx32. Note that there's also the more obscure `[ref]`-based workaround from the OP, which, however, does have that advantage that it predictably targets the _parent_ scope (the caller's specific scope), whatever it may be (you could alternatively implement this via `Get-Variable` / `New-Variable -PassThru` in the calling scope):\r\n\r\n```powershell\r\n[ref] $iRef = 0; $null = New-Item -Force tf-a, tf-b; Get-Item tf-? |\r\n           Rename-Item -NewName { '{0}-{1}' -f ++$iRef.Value, $_.Name  } -WhatIf\r\n```",
    "created_at": "2020-06-17T13:37:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7157#issuecomment-645378899",
    "id": 645378899,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7157",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTM3ODg5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645378899/reactions"
    },
    "updated_at": "2020-06-17T13:38:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645378899",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
