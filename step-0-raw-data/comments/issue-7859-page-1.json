[
  {
    "author_association": "COLLABORATOR",
    "body": "This seems like the right way to efficiently build/return the nested module info objects. But for the sake of having considered other ideas, wouldn't users expect a fully live nested module info object here?\r\n\r\nSince the fake module info is the same type that would normally be returned by `Test-ModuleManifest` but is hollow, the fact that we took an optimised path means you now don't get back fields like `ModuleBase` and have no idea why. Unlike `RequiredModules`, `NestedModules` really forms a tree, and you might want to traverse that -- but now you wouldn't be able to consistently expect to be able to use that behaviour.\r\n\r\n[Further down in the same method](https://github.com/PowerShell/PowerShell/blob/76c9da189dd5990010fbce3d44890d9659be9b0e/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L2927-L2949) when nested modules are read, we actually go and read their manifest and load a module info.\r\n\r\nCreating fake info objects from the nested module specifications is certainly more efficient, but I think it's a breaking change from previous (pre-regression) behaviour. See Windows PowerShell's version of the same:\r\n```\r\nPS C:\\Users\\roholt\\Documents\\Dev\\sandbox\\mod> $x = Test-ModuleManifest .\\mod.psd1\r\nPS C:\\Users\\roholt\\Documents\\Dev\\sandbox\\mod> $x.NestedModules |fl *\r\n\r\n\r\nLogPipelineExecutionDetails : False\r\nName                        : x\r\nPath                        : C:\\Users\\roholt\\Documents\\Dev\\sandbox\\mod\\x.psm1\r\nImplementingAssembly        :\r\nDefinition                  :\r\nDescription                 :\r\nGuid                        : 00000000-0000-0000-0000-000000000000\r\nHelpInfoUri                 :\r\nModuleBase                  : C:\\Users\\roholt\\Documents\\Dev\\sandbox\\mod\r\nPrivateData                 :\r\nTags                        : {}\r\nProjectUri                  :\r\nIconUri                     :\r\nLicenseUri                  :\r\nReleaseNotes                :\r\nRepositorySourceLocation    :\r\nVersion                     : 0.0\r\nModuleType                  : Script\r\nAuthor                      :\r\nAccessMode                  : ReadWrite\r\nClrVersion                  :\r\nCompanyName                 :\r\nCopyright                   :\r\nDotNetFrameworkVersion      :\r\nExportedFunctions           : {[Banana, Banana]}\r\nPrefix                      :\r\nExportedCmdlets             : {}\r\nExportedCommands            : {[Banana, Banana]}\r\nFileList                    : {}\r\nCompatiblePSEditions        : {}\r\nModuleList                  : {}\r\nNestedModules               : {}\r\nPowerShellHostName          :\r\nPowerShellHostVersion       :\r\nPowerShellVersion           :\r\nProcessorArchitecture       : None\r\nScripts                     : {}\r\nRequiredAssemblies          : {}\r\nRequiredModules             : {}\r\nRootModule                  :\r\nExportedVariables           : {}\r\nExportedAliases             : {}\r\nExportedWorkflows           : {}\r\nExportedDscResources        : {}\r\nSessionState                :\r\nOnRemove                    :\r\nExportedFormatFiles         : {}\r\nExportedTypeFiles           : {}\r\n```\r\n\r\nI think we may be committed to doing the inefficient thing.",
    "created_at": "2018-09-25T21:35:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7859#issuecomment-424509667",
    "id": 424509667,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7859",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDUwOTY2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424509667/reactions"
    },
    "updated_at": "2018-09-25T21:35:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424509667",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@rjmholt You raise a fair point.  However, I think most cases the user doesn't need a complete object.  In the issue, the problem with the current behavior is that the `NestedModules` property gets cleared out when used with `Update-ModuleManifest` which is dataloss for the customer.  The fake moduleinfo is sufficient as the modulemanifest is really just a hashtable.  Although it seems I should add a test to Update-ModuleManifest.\r\n\r\nI would suggest deferring whether we want to add capability to get the entire tree of objects until there is a customer request for it.  ",
    "created_at": "2018-09-25T22:01:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7859#issuecomment-424516683",
    "id": 424516683,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7859",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDUxNjY4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424516683/reactions"
    },
    "updated_at": "2018-09-25T22:01:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424516683",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I would suggest deferring whether we want to add capability to get the entire tree of objects until there is a customer request for it.\r\n\r\nMaybe use lazy for the objects?",
    "created_at": "2018-09-26T05:20:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7859#issuecomment-424588308",
    "id": 424588308,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7859",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDU4ODMwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424588308/reactions"
    },
    "updated_at": "2018-09-26T05:20:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424588308",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@SteveL-MSFT Thanks for fixing this regression! It looks good to me, but since the same code is used both here and for `requiredModules`, would it make sense to have a private helper method to encapsulate the code for creating the fake `ModuleInfo` object?\r\n\r\nThe helper method can be a iterator method, which can be used for both here an `requiredModules`:\r\n```\r\nprivate IEnumerable<ModuleInfo> CreateFakeModuleObject(IEnumerable<ModuleSpecification> moduleSpecs)\r\n{\r\n    foreach (ModuleSpecification moduleSpec in moduleSpecs)\r\n    {\r\n        var fakeModuleInfo = new PSModuleInfo(moduleSpec.Name, Context, null);\r\n        if (moduleSpec.Guid.HasValue)\r\n        {\r\n            fakeModuleInfo.SetGuid(moduleSpec.Guid.Value);\r\n        }\r\n        fakeModuleInfo.SetVersion(moduleSpec.RequiredVersion ?? moduleSpec.Version);\r\n        yield fakeModuleInfo;\r\n    }\r\n}\r\n```",
    "created_at": "2018-09-27T18:16:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7859#issuecomment-425192647",
    "id": 425192647,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7859",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTE5MjY0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/425192647/reactions"
    },
    "updated_at": "2018-09-27T18:20:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/425192647",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@daxian-dbw yes, I'll make that change.  Thanks!",
    "created_at": "2018-09-27T19:30:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7859#issuecomment-425215349",
    "id": 425215349,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7859",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxNTM0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/425215349/reactions"
    },
    "updated_at": "2018-09-27T19:30:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/425215349",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
