[
  {
    "author_association": "NONE",
    "body": "\r\nI think this is a quirk of how the member and index operations work\r\n`@(@{1=\"One\"},@{1=\"Uno\"})[1]` \r\n\r\nApplies the index to the array.    And `.1` doesn't work at all (it's not a valid member name)\r\n\r\nSo in your example `(@{ foo = 1 }, @{ foo = 2 })[1]` is the first item of the array.  \r\n\r\n`@(1,2,3)[\"Hello\"]`  Doesn't throw an error even through a string isn't valid as an array index.   And we can apply indexes to things which don't actually have them `$pid[0]`  is the same as `$pid` and `$pid[1]` or `$pid[\"hello\"]` don't throw errors.   \r\n`$Array.Something` acts as `foreach ($item in array) {$item.something}` and this is relied on in more places than we can count (especially where code assumes it is dealing with one object but is actually dealing with a single-member array,  note that with `$pid[0]`.  `$pid.count`, `foreach ($p in $Pid)`  etc we can make the opposite assumption ). \r\n\r\nIs there a need for a special behaviour in the index operator when the supplied index for an array is not an number?  Certainly there are cases like displaying a list of files and doing \"$f = Read-Host \"Enter the Number(s) of the files you want\" and then getting `$files[$f]`  where we would not want the user typing `Name` to get all the file names .  If pushed I could argue the case for not allowing index to do anything different, I just wonder if there is a stronger counter-argument? \r\n\r\n\r\n",
    "created_at": "2022-06-11T09:39:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1152889969",
    "id": 1152889969,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5Et7Rx",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152889969/reactions"
    },
    "updated_at": "2022-06-11T09:39:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152889969",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It looks like you've found another inconsistency, given that `@{1=\"One\"}.1` works just fine, why shouldn't\r\n`(@{1=\"One\"}, @{1=\"Uno\"}).1`? See #17520.\r\n\r\n(That something like `@{1a=\"One\"}` doesn't work as a hashtable literal unless the key is quoted, and that `@{'1a'=\"One\"}.1a` doesn't work as a property access are separate problems: #15925 and #14036).\r\n\r\nRe `[1]`: Note that we needn't consider _positional_ indexing in this discussion, because in member-access enumeration positional indexing is always applied to the _collection itself_, given that type-native members take precedence over looking for members on the elements of the collection.\r\n\r\nNote that, strictly speaking, `IDictionary` entries aren't _members_ (properties), but as a _syntactic convenience_ PowerShell _usually_ allows you to treat them as such, with dot notation being supported interchangeably with _key_-based indexing (with subtle differences around key types).\r\n\r\n * Afterthought: however, `[]`, the index operator still _accesses a member_, namely the parameterized `Item` property that `[]` is syntactic sugar for.\r\n\r\nAnd it is the inconsistency of this interchangeable use only applying to _scalars_ in the case of key-based indexing that this issue is about.\r\n\r\nI don't feel strongly about this, and given that I only stumbled upon it recently, it suggests that not too many users run into it.\r\nWhether or not a change is made, I'd say that a note in [about_Member-Access_Enumeration](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Member-Access_Enumeration) is called for.\r\n\r\n\r\n\r\n",
    "created_at": "2022-06-11T13:29:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1152928537",
    "id": 1152928537,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5EuEsZ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152928537/reactions"
    },
    "updated_at": "2022-07-08T17:19:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152928537",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "> It looks like you've found another inconsistency, given that `@{1=\"One\"}.1` works just fine, why shouldn't `(@{1=\"One\"}, @{1=\"Uno\"}).1`? See #17520.\r\n\r\nI can't imagine why it would be - some of these have a logic whether one agrees with it or not: but any logic I can think of depends on .1  _Never working_ if it ever works, it should always work. \r\n\r\nI think most of it can be  addressed with documentation. \r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-06-11T20:11:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1152991086",
    "id": 1152991086,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5EuT9u",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152991086/reactions"
    },
    "updated_at": "2022-06-11T20:11:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152991086",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "Updated to v7.2.5 yesterday, and this just bit me in the bum. Why did it have to change?  Now I need to update all my scripts ðŸ˜¢ \r\n",
    "created_at": "2022-07-08T16:54:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1179190971",
    "id": 1179190971,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5GSQa7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179190971/reactions"
    },
    "updated_at": "2022-07-08T16:54:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179190971",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32635002?v=4",
      "events_url": "https://api.github.com/users/fluffy-cakes/events{/privacy}",
      "followers_url": "https://api.github.com/users/fluffy-cakes/followers",
      "following_url": "https://api.github.com/users/fluffy-cakes/following{/other_user}",
      "gists_url": "https://api.github.com/users/fluffy-cakes/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fluffy-cakes",
      "id": 32635002,
      "login": "fluffy-cakes",
      "node_id": "MDQ6VXNlcjMyNjM1MDAy",
      "organizations_url": "https://api.github.com/users/fluffy-cakes/orgs",
      "received_events_url": "https://api.github.com/users/fluffy-cakes/received_events",
      "repos_url": "https://api.github.com/users/fluffy-cakes/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fluffy-cakes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fluffy-cakes/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fluffy-cakes"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The Engine-WG discussed this yesterday and concluded that the behavior is by design. Indexing is considered an operation that already targets collections specifically. We do not believe it makes sense to propagate the operation to items in the collection.",
    "created_at": "2022-07-08T17:12:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1179204494",
    "id": 1179204494,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5GSTuO",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179204494/reactions"
    },
    "updated_at": "2022-07-08T17:12:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179204494",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Updated to v7.2.5 yesterday, and this just bit me in the bum. Why did it have to change? Now I need to update all my scripts ðŸ˜¢\r\n\r\nThis thread is a just a feature request (one that was declined), no changes have come from it.\r\n\r\nIf you'd like help troubleshooting what broke in your script you can open a discussion or ask on the [PowerShell discord server](https://aka.ms/psdiscord).",
    "created_at": "2022-07-08T17:15:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1179206802",
    "id": 1179206802,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5GSUSS",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179206802/reactions"
    },
    "updated_at": "2022-07-08T17:15:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179206802",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Non-actionable food for thought that may help with conceptual clarity in future matters: \r\n\r\nThis issue wasn't so much a feature request but was meant to highlight an inconsistency that may be surprising.\r\n\r\nI should have framed it better originally: An index operation (`[...]`) is just as much a _member access_ as using `.` is; `[...]` is simply syntactic sugar for `.Item(...)`.\r\n\r\nWhile hash tables (dictionaries) are technically collections, in PowerShell they're more treated like _scalar objects_ with the collection of entries treated like _properties_ - hence the interchangeable use of `.foo` and `['foo']`, for instance, and the non-enumeration of dictionaries in the pipeline.\r\n\r\nThus, my sense is that PowerShell users aren't likely to conceive of `['foo']` (let alone `.foo`) as accessing a _collection_.\r\n\r\nGiven what the index expression is syntactic sugar for, one might expect this to work (though `.foo` is simpler anyway), but it doesn't:\r\n\r\n```powershell\r\n# !! -> .Item() is preempted by the Array type's own method, \r\n# !!     which breaks with an argument that can't be coerced to [int]\r\n(@{ foo = 1 }, @{ foo = 2 }).Item('foo')\r\n```\r\n\r\nThat is, the precedence that member-access enumeration gives to members that exist directly on the collection type itself seems to be based on _name only_ : that the collection's elements may have a better overload match in terms of argument type or even have the _only_ match if the parameter count differs isn't considered (doing so may not be practical).\r\n\r\nTo bypass this problem, use of the intrinsic `.ForEach()` method _should_ help, but currently doesn't, due to an apparent bug affecting `[hashtable]`, specifically (not also `[ordered]` ones or generic dictionaries):\r\n\r\n```powershell\r\n# !! Inexplicably fails (returns empty collection).\r\n#    It does work with [ordered], however.\r\n#    The equivalent .ForEach({ $_.Item('foo') }) works with either type.\r\n(@{ foo = 1 }, @{ foo = 2 }).ForEach('Item', 'foo')\r\n```\r\n\r\nSee #17649\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-07-08T19:10:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17514#issuecomment-1179287539",
    "id": 1179287539,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17514",
    "node_id": "IC_kwDOAvT7bc5GSn_z",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179287539/reactions"
    },
    "updated_at": "2022-07-08T19:13:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179287539",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
