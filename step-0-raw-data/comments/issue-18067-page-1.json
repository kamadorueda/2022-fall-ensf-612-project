[
  {
    "author_association": "NONE",
    "body": "Generally we advise people to write a `param()` block , and if you do \r\n`type function:\\myFunction `  you'll see that the _syntax_ of a script block  contains Param(), and the `function` _statement_ prepends something in () to the _statement block_ with `param ` \r\n\r\nIntroducing new alternative syntax for something which already works allows someone to write code which _should_ work with older versions in a way that _doesn't_  \r\n\r\nSyntax-wise this \r\n```\r\n[OutputType([string])]\r\nfunction MyFunction ($param1, $param2)\r\n```\r\n is something we do see in c# , and we do use it for PowerShell variable / parameter declarations. To my eye it jars to have something which affects a statement before the statement keyword. That could be fixed, but the previous objection remains - time spent working on something which guides to style would tell people not to use would probably be seen as wasted. \r\n\r\n\r\n  \r\n\r\n",
    "created_at": "2022-09-10T16:15:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18067#issuecomment-1242761414",
    "id": 1242761414,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18067",
    "node_id": "IC_kwDOAvT7bc5KEwjG",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242761414/reactions"
    },
    "updated_at": "2022-09-10T16:15:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242761414",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "In my opinion, such a simplified syntax as `function ($arg1, $arg2) {}` is used for embedding in scripts when the type of output data is precisely known. This is not even a function,  as a purpose, but a subroutine for organizing the structure of the script.",
    "created_at": "2022-09-10T16:41:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18067#issuecomment-1242765057",
    "id": 1242765057,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18067",
    "node_id": "IC_kwDOAvT7bc5KExcB",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242765057/reactions"
    },
    "updated_at": "2022-09-10T16:41:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242765057",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I believe OutputType is only for cmdlets.",
    "created_at": "2022-09-10T19:47:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18067#issuecomment-1242795278",
    "id": 1242795278,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18067",
    "node_id": "IC_kwDOAvT7bc5KE40O",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242795278/reactions"
    },
    "updated_at": "2022-09-10T19:47:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242795278",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I believe OutputType is only for cmdlets.\r\n\r\nActually when I was testing it I found you can *attach* it a variable. Why anyone *would* is another question\r\nAnd \r\n[outputType([String])]\r\nParam()\r\n\r\nas the first two lines in a PS1 file works. \r\n",
    "created_at": "2022-09-10T19:56:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18067#issuecomment-1242796481",
    "id": 1242796481,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18067",
    "node_id": "IC_kwDOAvT7bc5KE5HB",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242796481/reactions"
    },
    "updated_at": "2022-09-10T19:56:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242796481",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jhoneill I didn't realize there were such recommendations. The default \"function\" snippet that ISE has uses that syntax, it's only the advanced function snippets that use the param block.  \r\nEven though it's just 1 more line, it feels like unnecessary bloat to define the param block inside the function like that.\r\n\r\n@237dmitry Yes, that's exactly how I use it but I also want tab completion to work and I need the OutputType attribute to give the completion code enough info to give meaningful completions.",
    "created_at": "2022-09-10T20:02:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18067#issuecomment-1242797067",
    "id": 1242797067,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18067",
    "node_id": "IC_kwDOAvT7bc5KE5QL",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242797067/reactions"
    },
    "updated_at": "2022-09-10T20:02:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242797067",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/42123497?v=4",
      "events_url": "https://api.github.com/users/MartinGC94/events{/privacy}",
      "followers_url": "https://api.github.com/users/MartinGC94/followers",
      "following_url": "https://api.github.com/users/MartinGC94/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinGC94/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MartinGC94",
      "id": 42123497,
      "login": "MartinGC94",
      "node_id": "MDQ6VXNlcjQyMTIzNDk3",
      "organizations_url": "https://api.github.com/users/MartinGC94/orgs",
      "received_events_url": "https://api.github.com/users/MartinGC94/received_events",
      "repos_url": "https://api.github.com/users/MartinGC94/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MartinGC94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinGC94/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MartinGC94"
    }
  },
  {
    "author_association": "NONE",
    "body": "@MartinGC94  \r\n\r\nI've been steering people to this for years,   https://github.com/PoshCode/PowerShellPracticeAndStyle it's the defacto style guide   and  https://github.com/PoshCode/PowerShellPracticeAndStyle/blob/master/Style-Guide/Code-Layout-and-Formatting.md   says use `[cmdletbinding()]` everywhere, which requires a `param ()` inside the statement block,  although in one place this guide _does_ show non-advanced functions the parameters outside. I'm sure I didn't just morph \"be advanced cmdlet-ready\" into \"only use the `param()` syntax\" myself - I've been saying it for so long I've forgotten the origin.  \r\n\r\nOn snippets -  https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_language_keywords?view=powershell-7.2  says `begin` / `process` / `end` and `param` are - as language keywords - written with an lower-case letter (like `function` , `for` , `if` , `while`  etc). But the the ISE snipets capitalize them (and don't follow the layout rules which are built into the  VS code extension - \"don't put { on it's own line, in a statement, any more than you would in a foreach-object or where object cmdlet\")     \r\nSo I wouldn't take the snippets as gospel on style, (code in help is gloriously inconsistent). \r\n\r\nIn a .ps1 you write` param ()` \r\nIn a scriptblock passed to `invoke-command` or `&` you write `param()`\r\nA  `function` statement can build a script block to be saved to `function:` by adding parameters, as a `param()`, to the _statement block_ (the bit between `{` and `}` in a _statement_ is _not_ a _script block_, but a function _is_ a saved script block).  I've always seen this ability as a crutch for people who don't write code _as_ PowerShell, but are  trying to write JavaScript, or VBS or C#  _in_ PowerShell. It's often a signpost that what follows will need re-writing.    \r\nBut the _block_ in the `function` statement should be the whole of the definition (and that means comment based help INSIDE which is also wrong in the snippets). That way we can remove the `function` line and the final `}` and make it a ps1 file or replace the starting part with `{` and use it as a script block  or go in the other direction just as simply. \r\n\r\n\r\n\r\n\n\n<blockquote><img src=\"https://opengraph.githubassets.com/59fcaf12c2eb018567cd55717c2b6c60f947916547d11ff54aa73c479c70a513/PoshCode/PowerShellPracticeAndStyle\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PoshCode/PowerShellPracticeAndStyle\">GitHub - PoshCode/PowerShellPracticeAndStyle: The Unofficial PowerShell Best Practices and Style Guide</a></strong></div><div>The Unofficial PowerShell Best Practices and Style Guide - GitHub - PoshCode/PowerShellPracticeAndStyle: The Unofficial PowerShell Best Practices and Style Guide</div></blockquote>\n<blockquote><img src=\"https://opengraph.githubassets.com/59fcaf12c2eb018567cd55717c2b6c60f947916547d11ff54aa73c479c70a513/PoshCode/PowerShellPracticeAndStyle\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PoshCode/PowerShellPracticeAndStyle\">PowerShellPracticeAndStyle/Code-Layout-and-Formatting.md at master · PoshCode/PowerShellPracticeAndStyle</a></strong></div><div>The Unofficial PowerShell Best Practices and Style Guide - PowerShellPracticeAndStyle/Code-Layout-and-Formatting.md at master · PoshCode/PowerShellPracticeAndStyle</div></blockquote>\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_language_keywords\">about Language Keywords - PowerShell</a></strong></div><div>Describes the keywords in the PowerShell scripting language.</div></blockquote>",
    "created_at": "2022-09-11T00:47:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/18067#issuecomment-1242828115",
    "id": 1242828115,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/18067",
    "node_id": "IC_kwDOAvT7bc5KFA1T",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242828115/reactions"
    },
    "updated_at": "2022-09-11T00:47:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1242828115",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  }
]
