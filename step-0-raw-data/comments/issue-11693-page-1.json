[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mklement0 I've always thought that this API was an under-appreciated feature given that template reification is such a common task in this business. Historically, since `ExpandString` is \"eval equivalent\" it was left as API only for \"security-ish\" reasons.  So +1 for suggesting it. As for naming, how about `Expand-Template` as a more evocative name? `Expand-Template -path template.json`. ",
    "created_at": "2020-04-19T19:07:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11693#issuecomment-616208591",
    "id": 616208591,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11693",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjIwODU5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/616208591/reactions"
    },
    "updated_at": "2020-04-19T19:07:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/616208591",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "FYI, one of the things we did in `Plaster` to make template expansion safer was to create a constrained runspace with just a few commands we figured folks needed for template expansion within the context of Plaster.  See https://github.com/PowerShell/Plaster/blob/16787a8fed9f425a35c4af6f89ba852d177094e2/src/InvokePlaster.ps1#L229-L302\r\n\r\nI wonder if this could be applied to an `Expand-Template` command (at least by default) to make it safer?  You could always provide some sort of `-Force` parameter to allow access to the current runspace and all commands.\r\n\n\n<blockquote><img src=\"https://avatars0.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/Plaster\">PowerShell/Plaster</a></strong></div><div>Plaster is a template-based file and project generator written in PowerShell. - PowerShell/Plaster</div></blockquote>",
    "created_at": "2020-04-19T19:49:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11693#issuecomment-616214594",
    "id": 616214594,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11693",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjIxNDU5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/616214594/reactions"
    },
    "updated_at": "2020-04-19T19:49:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/616214594",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The `ExpandString()` returns just null for untrusted source. Since we have Ast for the template we should do a check in Begin block of the Expand-Template with a \"security\" Visitor. If we add a list of trusted variable names in Expand-Template with a parameter the \"security\" Visitor can do very strong check on the template Ast.\r\n\r\nAnybody with Visitor creation experience could easily create a Expand-Template prototype on PowerShell script.",
    "created_at": "2020-09-23T06:27:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11693#issuecomment-697161034",
    "id": 697161034,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11693",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzE2MTAzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/697161034/reactions"
    },
    "updated_at": "2020-09-23T06:27:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/697161034",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
