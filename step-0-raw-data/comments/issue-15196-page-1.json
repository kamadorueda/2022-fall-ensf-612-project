[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Even though the type itself doesn't implement `IEnumerable`, PowerShell treats instances of `System.Data.DataTable` as enumerable rather than requiring you to use their (enumerable) `.Rows` property explicitly (which to me is both surprising and consistently implemented - see bottom section).\r\n\r\nTherefore, `$dt.xyz` - in the absence of `.xyz` property on the `System.Data.DataTable` instance _itself_ -  performs _member enumeration_, i.e. it behaves like `$dt.Rows.xyz` == `$dt.Rows | % { $_.xyz }`.\r\n\r\nIn the absence of a `.xyz` property on the individual rows too, `$null` is returned for each, so with 2 rows you get a `($null, $null)` array.\r\nWith strict mode in effect, you get an error, as expected.\r\n\r\n---\r\n\r\nAnother manifestation of this behavior is that `$dt.Count` returns `(1, 1)`, because - in given that `System.Data.DataTable` itself has no `.Count` property - `.Rows.Count` is returned, and each row - as a _scalar_ -has a count of 1.\r\n\r\nAlso, indexing doesn't work as expected: `$dt[0]` is _not_ the same as `$dt.Rows[0]`; instead, with indexing `System.Data.DataTable` is unexpectedly treated as a _scalar_, and `[0]` therefore returns the instance itself, i.e.. the _whole table_.\r\n\r\n\r\n\r\n",
    "created_at": "2021-04-10T13:24:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15196#issuecomment-817136377",
    "id": 817136377,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15196",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzEzNjM3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817136377/reactions"
    },
    "updated_at": "2021-04-10T13:24:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817136377",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I understood that there could be a different behavior, which is not documented, so we have to find out to know.\r\nThis has been achieved :-)\r\n\r\nIn the following case (a bit twisted), the result is different:\r\n```powershell\r\n #Crée une fonction à partir d'une closure\r\n${Function:Test-GenericIEnumerable}=.{\r\n    #On recherche le type ouvert de l'interface générique IEnumerable\r\n    $GenericIEnumerable=[Type]'System.Collections.Generic.IEnumerable`1'\r\n\r\n    Return { \r\n     #La variable $InputObject implémente-t-elle l'interface générique IEnumerable ?\r\n      param( $InputObject )\r\n        foreach ($Interface in $InputObject.GetType().GetInterfaces())\r\n        {\r\n            #On suppose une seule implémentation de l'interface générique IEnumerable (https://stackoverflow.com/a/7852650)\r\n           if ($Interface.IsGenericType)\r\n           { \r\n               if ($Interface.GetGenericTypeDefinition() -eq $GenericIEnumerable) \r\n               {return $true}\r\n           }\r\n        }\r\n        return $false\r\n    }.GetNewClosure()\r\n}\r\n\r\n$Dt.Rows -is [System.Collections.IEnumerable]\r\n# True\r\n\r\nTest-GenericIEnumerable $Dt.Rows\r\n# False\r\nTest-GenericIEnumerable $Dt.xyz\r\n# True\r\n```\r\nSo is this the only type that behaves like this or how else can we identify them?",
    "created_at": "2021-04-10T13:57:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15196#issuecomment-817140764",
    "id": 817140764,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15196",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE0MDc2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817140764/reactions"
    },
    "updated_at": "2021-04-10T13:57:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817140764",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4894452?v=4",
      "events_url": "https://api.github.com/users/LaurentDardenne/events{/privacy}",
      "followers_url": "https://api.github.com/users/LaurentDardenne/followers",
      "following_url": "https://api.github.com/users/LaurentDardenne/following{/other_user}",
      "gists_url": "https://api.github.com/users/LaurentDardenne/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LaurentDardenne",
      "id": 4894452,
      "login": "LaurentDardenne",
      "node_id": "MDQ6VXNlcjQ4OTQ0NTI=",
      "organizations_url": "https://api.github.com/users/LaurentDardenne/orgs",
      "received_events_url": "https://api.github.com/users/LaurentDardenne/received_events",
      "repos_url": "https://api.github.com/users/LaurentDardenne/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LaurentDardenne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LaurentDardenne/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LaurentDardenne"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> the result is different:\r\n\r\nThat is to be expected: `$Dt.Rows`, with `.Rows` being a type-native property of a `[System.Data.DataTable]` instance, is of type `[System.Data.DataRowCollection]` is an `IEnumerable`, but not a _generic_ enumerable.\r\n\r\nBy contrast, `$Dt.xyz`, the result of _member enumeration_  is an `[object[]]` array (which it always is with two or more elements) , which _is_ a generic enumerable.\r\n\r\n> So is this the only type that behaves like this or how else can we identify them?\r\n\r\nWhich types PowerShell considers enumerable is based on hard-coded rules:\r\n\r\n* Any **type that implements** the **[`IEnumerable`](https://docs.microsoft.com/en-US/dotnet/api/System.Collections.IEnumerable) / [``IEnumerable`1``](https://docs.microsoft.com/en-US/dotnet/api/System.Collections.Generic.IEnumerable-1)** .NET interface(s)\r\n  * **_Except_** the following, which are _not_ automatically enumerated:\r\n\r\n    * [`IDictionary`](https://docs.microsoft.com/en-US/dotnet/api/System.Collections.IDictionary) / [``IDictionary`2``](https://docs.microsoft.com/en-US/dotnet/api/System.Collections.Generic.IDictionary-2), which notably includes `[hashtable]` (`@{ ... }`, as a literal) and its ordered cousin, [`OrderedDictionary`](https://docs.microsoft.com/en-US/dotnet/api/System.Collections.Specialized.OrderedDictionary) (`[ordered] @{ ... }`, as a literal)\r\n\r\n    * [`XmlNode`](https://docs.microsoft.com/en-US/dotnet/api/System.Xml.XmlNode), the base type for `[xml]` ([`XmlDocument`](https://docs.microsoft.com/en-US/dotnet/api/System.Xml.XmlDocument))\r\n\r\n    * _Strings_ ([`String`](https://docs.microsoft.com/en-US/dotnet/api/System.String)); note that `'foo'.Count` is `1` (the intrinsic property reflecting that a string is considered a _scalar_ (single thing)), whereas `'foo'.Length` is `3` (the type-native property that returns the character count).\r\n\r\n* **_Additionally_, [`System.Data.DataTable`](https://docs.microsoft.com/en-US/dotnet/api/System.Data.DataTable)** (which *itself* doesn't implement `IEnumerable`, only its `.Rows` property does).\r\n\r\nSee https://github.com/PowerShell/PowerShell/blob/48c7e112db8f0506a74555c83ecb8bec509b6597/src/System.Management.Automation/engine/LanguagePrimitives.cs#L523",
    "created_at": "2021-04-10T18:42:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15196#issuecomment-817185609",
    "id": 817185609,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15196",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE4NTYwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817185609/reactions"
    },
    "updated_at": "2021-04-10T18:42:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817185609",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks for these explanations, however accessing a non-existent property should generate an error.",
    "created_at": "2021-04-11T12:26:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15196#issuecomment-817299395",
    "id": 817299395,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15196",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzI5OTM5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817299395/reactions"
    },
    "updated_at": "2021-04-11T12:26:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817299395",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4894452?v=4",
      "events_url": "https://api.github.com/users/LaurentDardenne/events{/privacy}",
      "followers_url": "https://api.github.com/users/LaurentDardenne/followers",
      "following_url": "https://api.github.com/users/LaurentDardenne/following{/other_user}",
      "gists_url": "https://api.github.com/users/LaurentDardenne/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LaurentDardenne",
      "id": 4894452,
      "login": "LaurentDardenne",
      "node_id": "MDQ6VXNlcjQ4OTQ0NTI=",
      "organizations_url": "https://api.github.com/users/LaurentDardenne/orgs",
      "received_events_url": "https://api.github.com/users/LaurentDardenne/received_events",
      "repos_url": "https://api.github.com/users/LaurentDardenne/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LaurentDardenne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LaurentDardenne/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LaurentDardenne"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It does, if you use `Set-StrictMode -Version 2` or higher, just as with any other property access:\r\n\r\n```powershell\r\n@{ Off = $true }, @{ Version = 2 }  | % {\r\n  Write-Verbose -vb \"-- With strict mode -$($_.Keys[0]):$($_.Values[0]):\"\r\n  Set-StrictMode @_\r\n  ([pscustomobject] @{}).NoSuchProp\r\n  [Data.DataTable]::new().NoSuchProp\r\n}\r\n```\r\n\r\n\r\n",
    "created_at": "2021-04-11T20:08:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15196#issuecomment-817365123",
    "id": 817365123,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15196",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzM2NTEyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817365123/reactions"
    },
    "updated_at": "2021-04-12T22:40:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/817365123",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-04-14T00:00:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15196#issuecomment-819125421",
    "id": 819125421,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15196",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTEyNTQyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819125421/reactions"
    },
    "updated_at": "2021-04-14T00:00:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819125421",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
