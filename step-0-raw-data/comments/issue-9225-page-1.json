[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Isn't the wildcard behavior a function of the provider?  In this case the ENV: provider, but in the case of a drive letter, its the file system provider.   Does PowerShell need to tell the provider to accept it as a 'literal' path?   I have also run in to the wildcard situation using the ENV provider using the namespace convention, but I think I was testing with a `*`.\r\n\r\nThe above example also gives a different error if the wildcard resolved to multiple items.\r\n```\r\nCannot process variable because variable path 'env:[foo]' resolved to multiple items. You can get or set the variable value only one item at a time.\r\nAt line:1 char:1\r\n+ ${env:[foo]}\r\n+ ~~~~~~~~~~~~\r\n+ CategoryInfo          : InvalidArgument: (:) [], PSArgumentException\r\n+ FullyQualifiedErrorId : Argument\r\n```\r\n\r\nThe double backticking seems peculiar, as it only seems to be accepted as demonstrated, so it appears to be on purpose.  It seems to be special to just the namespace variable notation.\r\n\r\nAt this point I would be willing to bet somewhere someone had a use for wildcard paths with the namespace variable notation, and so that's why this exists.\r\n\r\nI am thinking about if these notations should be added to the PowerShell/EditorSyntax PR that I have been working on.   I suspect they only apply to certain providers, of which those providers could be redefined or changed so there is probably no consistent way to scope these specific notations.",
    "created_at": "2019-03-30T00:09:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9225#issuecomment-478184893",
    "id": 478184893,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9225",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODE4NDg5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/478184893/reactions"
    },
    "updated_at": "2019-03-30T00:09:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/478184893",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26179051?v=4",
      "events_url": "https://api.github.com/users/msftrncs/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftrncs/followers",
      "following_url": "https://api.github.com/users/msftrncs/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftrncs/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/msftrncs",
      "id": 26179051,
      "login": "msftrncs",
      "node_id": "MDQ6VXNlcjI2MTc5MDUx",
      "organizations_url": "https://api.github.com/users/msftrncs/orgs",
      "received_events_url": "https://api.github.com/users/msftrncs/received_events",
      "repos_url": "https://api.github.com/users/msftrncs/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftrncs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftrncs/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/msftrncs"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Namespace variable notation applies to _all_ providers that have PSDrives available, but isn't **usable** with all of them. In order to be usable with this syntax, the provider has to implement `IContentCmdletProvider` (i.e., `Get-Content` has to be implemented for that provider).\r\n\r\nIt also won't resolve to the provider if the PSDrive name is already taken by an existing scope (e.g., a PSDrive named `global` won't work, because that's a defined scope name).\r\n\r\nI think that this is most likely to be an accidental result of the default providers by default applying globbing unless it's specifically requested to process the path as literal. The fact that a path that does resolve to multiple items fails to do anything other than throw an error would appear to support that, I think. ðŸ˜„ ",
    "created_at": "2019-03-30T00:41:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9225#issuecomment-478189179",
    "id": 478189179,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9225",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODE4OTE3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/478189179/reactions"
    },
    "updated_at": "2019-03-30T00:41:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/478189179",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the clarifications, @vexx32.\r\n\r\n@msftrncs \r\n\r\n> At this point I would be willing to bet somewhere someone had a use for wildcard paths with the namespace variable notation, and so that's why this exists.\r\n\r\nI think it's more likely _accidental_ (I'm speculating), perhaps dating back to a time _before_ the great `-Path` / `-LiteralPath` schism, when _only_ wildcard expressions existed.\r\n\r\nSimilarly unhelpful behavior (accepting a wildcard, but requiring resolution to a single item):\r\n\r\n* has just been corrected in #9202, where it turned out to be a security concern\r\n\r\n* a fix for the related #4726 is pending.\r\n\r\n* a decision was recently made to complement `switch -File` with `switch -LiteralFile` - see #8988\r\n",
    "created_at": "2019-04-15T15:19:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9225#issuecomment-483296240",
    "id": 483296240,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9225",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4MzI5NjI0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483296240/reactions"
    },
    "updated_at": "2019-04-15T15:19:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/483296240",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
