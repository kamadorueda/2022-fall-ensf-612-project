[
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Could you please comment?",
    "created_at": "2018-07-20T04:51:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-406488396",
    "id": 406488396,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQ4ODM5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406488396/reactions"
    },
    "updated_at": "2018-07-20T04:51:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406488396",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PeterWhittaker:\r\n\r\nI don't think you should expect the behavior you're describing, and I don't see the actual behavior you're describing on macOS, at least not on PowerShell Core v6.1.0-preview.3 (see what you get with my code at the bottom).\r\n\r\nAs for your expectations:\r\n\r\n`. ./afile` would only _execute_ something if there's either an extension-less _but executable_ `aFile` in the current dir, or a (not-required-to-be-executable) `afile.ps1` file, with the former taking precedence if both are present; if the file exists, but is neither executable nor has extension `.ps1`, it is opened as if it were a _document_.\r\n\r\n`. <filename>` with `<filename>` being a mere name (no path component) by (security-minded) design only ever looks for a file of that name in the directories listed in `$env:PATH` (see below), not in the _current_ directory.\r\n\r\n(As an aside: The syntax of`Write-Host(\"Hello\")` suggests a misconception; as a command, you shouldn't invoke `Write-Host` with _method_ syntax (parentheses around argument list, `,`-separated  arguments); use _argument_ syntax (command-line syntax) instead: `Write-Host \"Hello\"` (no parantheses, whitespace-separated arguments), or, if something should just display in the terminal by default, `\"Hello\"` - no explicit output command needed, unless you specifically want to bypass PowerShell's success output stream.)\r\n\r\n----\r\n\r\nSome background:\r\n\r\nIt is true that on Unix-like platforms the filename extension is irrelevant with respect to whether a file is _executable_, but in order to execute a file you must specify its _exact_ filename, so if it happens to have an extension (which is rare, but (unfortunately) does happen with `.sh` used for shell scripts), it _must_ be specified.\r\n\r\nTherefore, in a POSIX-like shell (such as `bash`), if the script name is `afile.sh`, you can _not_  invoke it with `./afile` or `. ./afile` (in the current directory).\r\n\r\nThis is where PowerShell's behavior differs: it _does_ implicitly look for its _own_ scripts and, if no `afile` - without extension is present - looks for `afile.ps1` and executes that, _in-process_ and - if `. ` was used - in the current scope.\r\n(As in POSIX-like shells, the script file need not have the executable permission bit(s) set in that case.)\r\n\r\nThat you must use `./` in order to target `afile` / `afile.ps1` _in the current dir._ (as opposed to finding a file of that name somewhere in `$env:PATH`) - whether with direct invocation or via \"dot-sourcing\" (`.  `) or via `&` - is a sensible security measure that is actually [mandated by POSIX](http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#dot), and `bash` happens to be in violation of it (though it does look in `$env:PATH` _first_).\r\n\r\nAn additional difference is that in PowerShell you can invoke _anything_ with `.`, not just PowerShell _scripts_ (whereas POSIX-like shells invariably interpret the filename operand as a _script written in that shell's language_ and choke on binaries, for instance); if the operand happens not to be a PowerShell script, `.` behaves as if you had invoked the operand directly (or as if you had used `&` - the distinction between `&` and `.` only matters for (in-process) PowerShell code)).\r\n\r\nI don't see any problems with these selective differences between PowerShell and POSIX-like shells - they strike me as useful extensions.\r\n\r\n----\r\n\r\nLet me give examples that you can run as-is:\r\n\r\nSetup:\r\n\r\n```powershell\r\n# Create extension-less script with shebang line and make it executable.\r\n\"#!/usr/bin/env pwsh`n'hi from out-of-process t'\" > t; chmod a+x t\r\n# Create a regular *.ps1 file\r\n'\"hi from in-process t.ps1\"' > t.ps1\r\n# Create text file.\r\n'foo' > t.txt\r\n```\r\n\r\nTests:\r\n\r\n```powershell\r\n# Invoke by name \"t\" only; this should invoke the extension-less, executable file with the shebang line\r\nPS> . ./t\r\nhi from out-of-process t\r\n\r\n# Invoke with exact file name.\r\n# Note that if you were to delete \"t\" (the executable file with the shebang line), \r\n# then . ./t would be sufficient to target \"t.ps1\"\r\nPS> . ./t.ps1\r\nhi from in-process t\r\n\r\n# Invoke a document (something that is neither executable nor has extension .ps1)\r\n# Equivalent of: Invoke-Item t.txt\r\n# Note that Invoke-Item does *not* require the ./ prefix to target a file in the current dir., \r\n# because *opening* documents is not a security risk, but it's fair for .  and &  - whose main\r\n# purpose is *execution* - to require it.\r\nPS> . ./t.txt\r\n# opens t.txt in the default text editor.\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2018-07-22T17:46:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-406884366",
    "id": 406884366,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg4NDM2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406884366/reactions"
    },
    "updated_at": "2018-07-22T17:46:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406884366",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'll have to wait for PWSH to be updated or install the preview, then: Under my version (documented above), I see very odd behaviour indeed: Create an ordinary file called \"fred\" with content \"Hello\", then dot source it as described below:\r\n\r\n```\r\nPS > . ./fred\r\n# PS opens a new window, writes Hello there - not at all expected\r\nPS > chmod +x fred\r\nPS > . ./fred\r\n# nothing appears to happen - there is no output in the current PWSH, no windows open\r\nPS > mv ./fred ./fred.ps1 # fred.ps1 still executable\r\nHello\r\n# as expected, at last\r\nPS > chmod -x fred.ps1\r\nPS > . ./fred.ps1\r\nHello\r\n# as expected\r\n```\r\n\r\nNow open a shell in the same folder, add echo to the beginning of the file, as in\r\n\r\n```\r\necho \"Hello\"\r\n```\r\n\r\nand repeat all four tests, and do four more: without the leading ./ on the file name, as in\r\n\r\n```\r\nsh $ . fred\r\n```\r\n\r\nThe result? Hello is displayed all eight times.\r\n\r\nSo maybe this is a known bug, corrected in the preview edition. We'll see.\r\n\r\nPS Thanks for the heads-up on method syntax vs argument syntax: I'm still learning PWSHisms and that was a very useful comment indeed.",
    "created_at": "2018-07-22T22:35:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-406902379",
    "id": 406902379,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkwMjM3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406902379/reactions"
    },
    "updated_at": "2018-07-22T22:36:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406902379",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/150474?v=4",
      "events_url": "https://api.github.com/users/PeterWhittaker/events{/privacy}",
      "followers_url": "https://api.github.com/users/PeterWhittaker/followers",
      "following_url": "https://api.github.com/users/PeterWhittaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterWhittaker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PeterWhittaker",
      "id": 150474,
      "login": "PeterWhittaker",
      "node_id": "MDQ6VXNlcjE1MDQ3NA==",
      "organizations_url": "https://api.github.com/users/PeterWhittaker/orgs",
      "received_events_url": "https://api.github.com/users/PeterWhittaker/received_events",
      "repos_url": "https://api.github.com/users/PeterWhittaker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PeterWhittaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterWhittaker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PeterWhittaker"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": " > `PS > . ./fred`\r\n\r\nAs stated, given that the file neither has extension `.ps1` nor is marked as executable, it is treated as a _document_, as if you had run `Invoke-Item ./fred` or, using the native `open` macOS utility, `open ./fred`.\r\n\r\nWhat that does specifically depends on what default programs you've set up; on my machine, for instance, it opens the file in Visual Studio Code.\r\nIt's unclear what you mean by \"opens a new window\", but I suspect that the file is opened in TextEdit.app, the macOS default text editor (check the menu bar while the window is up).\r\n\r\nGiven the extended mandate of `.` in PowerShell - the ability  to invoke _anything_ - it makes sense to reserve the assumption that the target file contains PowerShell source code to be sourced to _files with extension `.ps1` only_.\r\n\r\nYou could argue that this extended mandate should be revoked and that `.` should _only_ support sourcing PowerShell source code, and - like POSIX-like shells, analogously - should _blindly assume_ that whatever file argument is passed contains PowerShell sourced that should be \"dot-sourced\", whereas currently this assumption is currently reserved solely for file arguments _with extension `.ps1`_. Consider this, however:\r\n\r\n* Changing the behavior of `.` would be a breaking change.\r\n\r\n*  It's unlikely that you'll want to create _extension-less_ PowerShell source-code files _for the purpose of \"dot-sourcing\"_; instead, extension-less PowerShell source-code files are most likely _executable scripts with a shebang line_, which are designed to run _out-of-process_, which contradicts the purpose of \"dot-sourcing\".\r\n\r\n> `PS > chmod +x fred`\r\n> `PS > . ./fred`\r\n\r\nNow the file is executable, so an _attempt_ is made to _execute_ it (but _not_ to \"dot-source\" it, because it lacks extension `.ps1`).\r\n_Presumably_ (someone familiar with the code should correct me, if necessary), PowerShell delegates execution to the _system_, which _fails_ in this case, because the plain-text file that is marked as executable _lacks a shebang line_ that specifies the interpreter to pass the file to.\r\n\r\nThat said, it shouldn't fail _quietly_, so that is worth creating a separate issue for.\r\n\r\n> `PS > mv ./fred ./fred.ps1 # fred.ps1 still executable`\r\n> `Hello`\r\n> `# as expected, at last`\r\n> `PS > chmod -x fred.ps1`\r\n> `PS > . ./fred.ps1`\r\n> `Hello`\r\n\r\nAs stated, `.ps1` files are special in PowerShell: you can invoke or \"dot-source\" them at will, whether they're executable files or not.\r\n\r\n---\r\n\r\nAs for your `sh` commands:\r\n\r\nYes, as stated, POSIX-like shells _blindly_ assume that files you pass to `.` contain code in _their_ shell language - PowerShell deviates from that (see above). Also note that POSIX-like shells have no \"native\" filename extension, so they - unlike PowerShell with its `.ps1` -  _cannot_ infer from a given filename whether it contains shell code or not (the ill-advised, unofficial, non-shell-specific `.sh` convention notwithstanding).\r\n\r\n`bash`, as stated, _in violation of POSIX_, allows you to do `. fred` without needing to refer to a file in the current directory with prefix `./` - this is _not_ worth supporting in PowerShell.\r\n\r\nFor _direct_ invocation, POSIX-like shells also have a _fallback mechanism_, if delegating to the system to invoke an _executable_ file fails due to _absence of a shebang line_. They default to executing such a file as either _themselves_ or with `/bin/sh`.\r\n\r\nThat strikes me as another practice that is _not_ worth adopting in PowerShell: reporting an error seems more sensible to me - as noted, PowerShell currently fails _silently_, which should be fixed.\r\n",
    "created_at": "2018-07-22T23:42:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-406906314",
    "id": 406906314,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkwNjMxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406906314/reactions"
    },
    "updated_at": "2018-07-22T23:46:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406906314",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Great explanation, thanks. Makes the overall design approach clear.\r\n\r\nRe the separate issue: Since you have the preview, can you try the \"fail quietly\" case and let me now the outcome? If it is \"fail quietly\", I'll open an issue; if it is otherwise, I'll either get the preview or wait for the general update, then open the issue: I'm not sure it is worth opening an issue for something fixed in the preview.",
    "created_at": "2018-07-23T00:08:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-406908015",
    "id": 406908015,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkwODAxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406908015/reactions"
    },
    "updated_at": "2018-07-23T00:08:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406908015",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/150474?v=4",
      "events_url": "https://api.github.com/users/PeterWhittaker/events{/privacy}",
      "followers_url": "https://api.github.com/users/PeterWhittaker/followers",
      "following_url": "https://api.github.com/users/PeterWhittaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterWhittaker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PeterWhittaker",
      "id": 150474,
      "login": "PeterWhittaker",
      "node_id": "MDQ6VXNlcjE1MDQ3NA==",
      "organizations_url": "https://api.github.com/users/PeterWhittaker/orgs",
      "received_events_url": "https://api.github.com/users/PeterWhittaker/received_events",
      "repos_url": "https://api.github.com/users/PeterWhittaker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PeterWhittaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterWhittaker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PeterWhittaker"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PeterWhittaker: Glad to hear it was helpful.\r\n\r\nYes, the quiet-failure issue exists even in the latest preview release (PowerShell Core v6.1.0-preview.3), but I've actually just created an issue for it myself: #7336\r\n\r\nNote that while there is no _error message_, it is possible to detect the failure by querying `$LASTEXITCODE` (which is `8` in this case).",
    "created_at": "2018-07-23T02:13:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-406919407",
    "id": 406919407,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkxOTQwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406919407/reactions"
    },
    "updated_at": "2018-07-23T02:13:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/406919407",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 : #7336 is an excellent bug report, far better than I could have written at this stage.\r\n\r\nRe this report, it seems to me it can be closed as in effect \"working by design\", but I'd appreciate guidance on how to proceed and remain \"on side\" for this repo: Should I close, and with what labels/status, should someone close, etc. Thanks!",
    "created_at": "2018-07-23T18:30:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-407156730",
    "id": 407156730,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE1NjczMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/407156730/reactions"
    },
    "updated_at": "2018-07-23T18:30:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/407156730",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/150474?v=4",
      "events_url": "https://api.github.com/users/PeterWhittaker/events{/privacy}",
      "followers_url": "https://api.github.com/users/PeterWhittaker/followers",
      "following_url": "https://api.github.com/users/PeterWhittaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterWhittaker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PeterWhittaker",
      "id": 150474,
      "login": "PeterWhittaker",
      "node_id": "MDQ6VXNlcjE1MDQ3NA==",
      "organizations_url": "https://api.github.com/users/PeterWhittaker/orgs",
      "received_events_url": "https://api.github.com/users/PeterWhittaker/received_events",
      "repos_url": "https://api.github.com/users/PeterWhittaker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PeterWhittaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterWhittaker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PeterWhittaker"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @PeterWhittaker.\r\n\r\n@iSazonov has already added the label `Resolution-Answered`, so I think all that's left to do is for you to close the issue.",
    "created_at": "2018-07-23T18:33:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-407157685",
    "id": 407157685,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE1NzY4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/407157685/reactions"
    },
    "updated_at": "2018-07-23T18:33:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/407157685",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Perfect, done!",
    "created_at": "2018-07-23T18:35:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-407158303",
    "id": 407158303,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzE1ODMwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/407158303/reactions"
    },
    "updated_at": "2018-07-23T18:35:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/407158303",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/150474?v=4",
      "events_url": "https://api.github.com/users/PeterWhittaker/events{/privacy}",
      "followers_url": "https://api.github.com/users/PeterWhittaker/followers",
      "following_url": "https://api.github.com/users/PeterWhittaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/PeterWhittaker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PeterWhittaker",
      "id": 150474,
      "login": "PeterWhittaker",
      "node_id": "MDQ6VXNlcjE1MDQ3NA==",
      "organizations_url": "https://api.github.com/users/PeterWhittaker/orgs",
      "received_events_url": "https://api.github.com/users/PeterWhittaker/received_events",
      "repos_url": "https://api.github.com/users/PeterWhittaker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PeterWhittaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PeterWhittaker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PeterWhittaker"
    }
  },
  {
    "author_association": "NONE",
    "body": "For anybody who'd rather pwsh worked like you expect your shell to work, instead of how shells are \"supposed\" to work, you can use a cludge like this:\r\n\r\n```pwsh\r\nfunction Source-Anything($path) {\r\n  $tempFile = (New-TemporaryFile).FullName + \".ps1\"\r\n  Copy-Item $path $tempFile\r\n  . $tempFile\r\n}\r\n```\r\n\r\nI don't think you can hack pwsh to make `. afile` work, but now you can run `Source-Anything afile`",
    "created_at": "2020-10-29T20:06:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-718991240",
    "id": 718991240,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxODk5MTI0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/718991240/reactions"
    },
    "updated_at": "2020-10-29T20:06:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/718991240",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2829438?v=4",
      "events_url": "https://api.github.com/users/darthwalsh/events{/privacy}",
      "followers_url": "https://api.github.com/users/darthwalsh/followers",
      "following_url": "https://api.github.com/users/darthwalsh/following{/other_user}",
      "gists_url": "https://api.github.com/users/darthwalsh/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/darthwalsh",
      "id": 2829438,
      "login": "darthwalsh",
      "node_id": "MDQ6VXNlcjI4Mjk0Mzg=",
      "organizations_url": "https://api.github.com/users/darthwalsh/orgs",
      "received_events_url": "https://api.github.com/users/darthwalsh/received_events",
      "repos_url": "https://api.github.com/users/darthwalsh/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/darthwalsh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darthwalsh/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/darthwalsh"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To recap, @darthwalsh: There is no benefit, only drawbacks, to making `. afile` work: \r\n\r\nRequiring `. ./afile.ps1`:\r\n\r\n* (a) prevents accidental execution of a different executable `afile` somewhere in `$env:PATH` if no `afile` executable happens to be present in the current dir. \r\n* (b) there's never a reason to author a PowerShell script that you want to execute _in-process_, via sourcing, _without_ the helpfully descriptive `.ps1`  extension.\r\n",
    "created_at": "2020-10-29T20:55:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7319#issuecomment-719016893",
    "id": 719016893,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7319",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxOTAxNjg5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/719016893/reactions"
    },
    "updated_at": "2020-10-29T20:56:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/719016893",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
