[
  {
    "author_association": "NONE",
    "body": "I have a less-contrived exampled that is hurting me now.\r\n\r\nMS Documentation says (see [Modules with compatible PowerShell Editions](https://docs.microsoft.com/en-us/powershell/scripting/gallery/concepts/module-psedition-support?view=powershell-7.2#option-2-use-psedition-variable-in-the-psd1-file-to-load-the-proper-dlls)) that a recommended way to create modules with support for multiple editions (Core + Desktop) is to use a check for `$PSEdition` in the `psd1` file. \r\n\r\nThis works fine for regular module usage. The `psd1` passes the `Test-ModuleManifest` check, and it imports and works just fine.\r\n\r\nHowever, I am trying to automate parts of the process of updating the manifest. Specifically, bumping the version number and rebuilding the various `*ToExport` keys (e.g. `FunctionsToExport` etc.). For this, I've been trying to use the safe(r) `Import-PowerShellDataFile`, but it complains with `InvalidOperationException`: `Cannot generate a PowerShell object for a ScriptBlock evaluating dynamic expressions.`\r\n\r\nIn my case, I can more or less ignore the offending entries in the `psd1` file (I'll be using `Invoke-Expression` when `Import-PowerShellDataFile` fails). But I need to use Option 2 (i.e. using the `$PSEdition` check) because I am using newer code syntax (null-coalescing) in the `ScriptsToProcess` script file for the Core edition, and a backward-compatible shim for the Desktop edition.\r\n\r\nPerhaps a simple switch on the `Import-PowerShellDataFile` that allows a minimal evaluation, such as only the AST that allows either this `$PSEdition` check, or simple string manipulation, etc.? Or maybe a parameter to select the language mode? Like `-LanguageMode RestrictedLanguage`, for instance?",
    "created_at": "2021-12-31T03:22:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3213#issuecomment-1003253772",
    "id": 1003253772,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3213",
    "node_id": "IC_kwDOAvT7bc47zHAM",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1003253772/reactions"
    },
    "updated_at": "2021-12-31T05:26:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1003253772",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/37203424?v=4",
      "events_url": "https://api.github.com/users/AlanMcBee/events{/privacy}",
      "followers_url": "https://api.github.com/users/AlanMcBee/followers",
      "following_url": "https://api.github.com/users/AlanMcBee/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlanMcBee/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AlanMcBee",
      "id": 37203424,
      "login": "AlanMcBee",
      "node_id": "MDQ6VXNlcjM3MjAzNDI0",
      "organizations_url": "https://api.github.com/users/AlanMcBee/orgs",
      "received_events_url": "https://api.github.com/users/AlanMcBee/received_events",
      "repos_url": "https://api.github.com/users/AlanMcBee/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AlanMcBee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlanMcBee/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AlanMcBee"
    }
  }
]
