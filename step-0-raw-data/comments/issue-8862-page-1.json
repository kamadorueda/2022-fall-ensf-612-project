[
  {
    "author_association": "COLLABORATOR",
    "body": "This really got a lot of traction :)\r\nSeems like an area that comes up as problematic in the wild from time to time.\r\n\r\n",
    "created_at": "2019-03-13T22:57:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-472638663",
    "id": 472638663,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjYzODY2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/472638663/reactions"
    },
    "updated_at": "2019-03-13T22:57:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/472638663",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Only just saw this now - seems well worth doing.\r\n",
    "created_at": "2019-11-09T16:48:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-552116940",
    "id": 552116940,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjExNjk0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552116940/reactions"
    },
    "updated_at": "2019-11-09T17:44:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552116940",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> problematic in the wild from time to time.\r\n\r\nJust came across https://stackoverflow.com/q/58660818/45375, where an out-of-memory exception occurred even in a _streaming_ scenario; that is, the objects weren't even collected in full in memory and instead just piped back to `Export-Csv`.\r\n\r\nIs the problem in this case one of mounting memory pressure due to lack of garbage collections? Would it make sense to build periodic garbage collection into the command?\r\n\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/58660818/memory-exception-while-filtering-large-csv-files\">Memory exception while filtering large CSV files</a></strong></div><div>getting memory exception while running this code. Is there a way to filter one file at a time and write output and append after processing each file. Seems the below code loads everything to memory...</div></blockquote>",
    "created_at": "2019-11-09T17:48:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-552121936",
    "id": 552121936,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjEyMTkzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552121936/reactions"
    },
    "updated_at": "2019-11-09T17:48:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552121936",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "https://stackoverflow.com/a/60356120/45375 may give this issue a bit more exposure.\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/60353691/powershell-importing-16mb-csv-into-powershell-variable-creates-600mbs-of-powe\">PowerShell: Importing 16MB CSV Into PowerShell Variable Creates >600MB's of PowerShell Memory Usage</a></strong></div><div>I'm trying to understand why PowerShell's memory balloons so much when I import a file that's ~16MB's as a variable. I can understand there's additional memory structure around that variable but I'...</div></blockquote>",
    "created_at": "2020-02-22T19:55:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-589992430",
    "id": 589992430,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTk5MjQzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/589992430/reactions"
    },
    "updated_at": "2020-02-22T19:55:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/589992430",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Shouldn't this be done (or also possible) via a calculated property, like:\r\n```PowerShell\r\n$e = Import-Csv -Path .\\data.csv -Property\r\n    @{Name = 'Name'; Type = [string]},\r\n    @{Name = 'Number'; Type = [long]},\r\n    @{Name = 'When'; Type = [DateTime]}\r\n}\r\n```\r\nWhere the default type is a `PSNoteProperty`.\r\n\r\nI guess that a calculated `Type` property attribute also makes sense for (some of) the existing cmdlets (e.g. `Sort-Object`)  that support calculated properties via the `-Property` parameter.\r\n\r\nAt second thought, I think this isn't possible as the property types of a `PSCustomObject` can't be changed itself only the type of the object contained by the `PSNoteProperty` but that wouldn't safe any memory...  😒",
    "created_at": "2020-02-23T10:02:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-590051704",
    "id": 590051704,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDA1MTcwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/590051704/reactions"
    },
    "updated_at": "2020-02-23T12:25:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/590051704",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yet another thought to consider:  \r\nA `[DataTable]` (with `[string]` type columns) appears to consume a little more memory then a **class with string props** (~4.5Gb) but might just require a simple **`-AsDataTable`** switch. Besides a `[DataTable]` also easily converts into a `[PSCustomObject[]]`.\r\n",
    "created_at": "2020-02-23T13:44:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-590070348",
    "id": 590070348,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDA3MDM0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/590070348/reactions"
    },
    "updated_at": "2020-02-23T13:48:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/590070348",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Interesting ideas, @iRon7, but they are _complementary_ to what is being proposed here, so I encourage you to create new issues:\r\n\r\n* Even with the current, `[pscustomobject]`-only output, being able to specify column (property) types could be helpful - possibly combined with the next proposal.\r\n\r\n  * However, my sense is that concisely specifying _types_ is more important than also being able to _rename_ columns, so something like `-ColumnType @{ Id = [long]; Date = [datetime] }`, which would allow you to specify output types for a given _subset_ of columns identified by name would make more sense to me; those columns not mentioned would remain `[string]`-typed.\r\n\r\n* Producing optimized standard-type output such as `[DataTable]` would also be handy, as a simpler alternative to creating a custom output type up front (as proposed here). \r\n  * I haven't personally looked into it, but @iSazonov has suggested looking into `IDataView` for similar purposes - see #8855\r\n   * #11027 proposes introducing `-AsHashtable` for outputting (ordered) hashtables.\r\n\r\nAlso, something that probably fits better into the context of _this_ issue and the associated PR (#8860) in terms of implementation, is what @bergmeister has [suggested before](https://github.com/PowerShell/PowerShell/pull/8860#issuecomment-462191253) (emphasis added):\r\n\r\n> Do you think it would make sense to let the cmdlet **create a default type of the ResultType based on the CSV header** (i.e. create a default class with string properties for-each column)? This way the average consumer would still benefit from it without having to specify complex parameters and defining the custom class would then be an additional, optional optimisation on top of it?\r\n\r\n\r\n",
    "created_at": "2020-02-23T18:18:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/8862#issuecomment-590099364",
    "id": 590099364,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/8862",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5MDA5OTM2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/590099364/reactions"
    },
    "updated_at": "2020-02-23T18:29:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/590099364",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
