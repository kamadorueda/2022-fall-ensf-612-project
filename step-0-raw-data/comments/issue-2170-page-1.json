[
  {
    "author_association": "NONE",
    "body": "The `Name` parameter is the name of the package, not the file in the package.\n\nSee [get-uptime package on PowerShell Gallery](https://www.powershellgallery.com/packages/get-uptime) -- its name is `get-uptime`, not `get-uptime.ps1`. Meanwhile, [this package on PowerShell Gallery](https://www.powershellgallery.com/packages/Azure.Storage) is named `Azure.Storage`. Therefore it is valid to have a package name with a dot `.`.\n\nThe first thing to consider is that, what happens if I upload two packages called `Use-Ps1` and `Use-Ps1.ps1`? I am not sure whether I cannot do this and I would not like to do that just to test a rare case out (practically no one does this, making a package name end in `.ps1` or `.psm1`, I think) and pollute the repository. Please do let me know if one cannot have `Use-Ps1.ps1` as the package name.\n\nSpeaking from the perspective of \"packages\", I think one shouldn't use `Use-Ps1.ps1` to refer to a package called `Use-Ps1`. After all, the `Use-Ps1` package can include several script files and it sounds strange to save `Use-Ps1.ps1`, but getting more than one file.\n\nSuppose the worst possible implementation is used in the next version of PowerShell: When you `Save-Script -Name '<Abc>.ps1'`, the cmdlet first searches for a package exactly named `<Abc>.ps1` (if it does not do this, some packages can never be downloaded), if it fails, it falls back to `<Abc>`. Then you are risking leading a new fashion of breaking dependencies -- when people find `Saving-Script` an `<Abc>.ps1` sounds good since it calls the fact of saving _a_ script out, people start `Saving-Script` `get-uptime.ps1` for this fashionable reason, and all of a sudden, someone uploads `get-uptime.ps1` package and everyone gets screwed up.\n\nMoral: be accurate.\n\nThough this will not be a breaking change, as nobody ever named their package `<Abc>.ps1` (or is there?!), and we can add `Accurate` switch to this command, allowing one to download a script package with its name appended with `.ps1` is stilled not recommended.\n",
    "created_at": "2016-09-02T19:13:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244463618",
    "id": 244463618,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ2MzYxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244463618/reactions"
    },
    "updated_at": "2016-09-02T19:13:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244463618",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As a naive user, I would expect save-script to accept a filename with extension for the name and do the right thing. \n\nIf the downside is things getting confused when someone (wrongly!) publishes a package with a .ps1 at the end, maybe the right thing is to ignore it unless the user specifies they really want that with the switch. (And perhaps prevent doing that accidentally in as many package managers as reasonable).\n\nI'd make them use a more pejorative sounding switch name than \"Accurate\" if they really want to load a package with .ps1 tacked onto the end of the name, but I'm cranky.\n",
    "created_at": "2016-09-05T05:24:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244661096",
    "id": 244661096,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY2MTA5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244661096/reactions"
    },
    "updated_at": "2016-09-05T05:24:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244661096",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1749839?v=4",
      "events_url": "https://api.github.com/users/bjtucker/events{/privacy}",
      "followers_url": "https://api.github.com/users/bjtucker/followers",
      "following_url": "https://api.github.com/users/bjtucker/following{/other_user}",
      "gists_url": "https://api.github.com/users/bjtucker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bjtucker",
      "id": 1749839,
      "login": "bjtucker",
      "node_id": "MDQ6VXNlcjE3NDk4Mzk=",
      "organizations_url": "https://api.github.com/users/bjtucker/orgs",
      "received_events_url": "https://api.github.com/users/bjtucker/received_events",
      "repos_url": "https://api.github.com/users/bjtucker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bjtucker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bjtucker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bjtucker"
    }
  },
  {
    "author_association": "NONE",
    "body": "Hmmm... Got a solution that both keeps backward compatibility and teaches the users.\n\nRename the parameter `Name` to `PackageName`, and add an alias (of course it's `Name`) for `PackageName`. New users will see `PackageName` in help or when tabbing thru the param list, and will surely understand what the parameter should be.\n",
    "created_at": "2016-09-05T05:27:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244661433",
    "id": 244661433,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY2MTQzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244661433/reactions"
    },
    "updated_at": "2016-09-05T05:27:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244661433",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As a general rule - PowerShell attempts to more like an AK47 than an M16 - loose and reliable vs tight and finicky.  My Issue was making the case that we don't want to be too precise here and that we know what the user is doing one way or the other so let them be sloppy and we'll figure it out.  If they give us NAME, we look for the file NAME.ps1, why not exact the NAME if they specify Name.ps1?\n\nSo the question is, for scripts, what is the relationship between the \"name\" and the \"filename\"?\n\nOn Windows, you could assert that schema is that the FILENAME is of the form NAME.ps1.\nBut on Linux, a script can have a FILENAME in the form NAME.  (We don't need .ps1 on Linux because you can put #!/path/powershell as the first line of the script instead).\n\nSo the first question to answer is whether we would allow BOTH  FOO and FOO.PS1 to be published to the gallery?\n\nIn order to answer that Q, I would ask another question, would we allow FOO, FOo, Foo, foo to be published as different scripts?  Unix is case sensitive, so these could be completely different scripts on Linux.\n\nMy initial reaction is to say NO - that for the gallery, we should use the Case-Preserving/Case-Insensitive rule.  I've never heard a compelling argument for why the increase in usable namespace warranted the corresponding increase in errorspace.  Of course I'm biased in this regard because I make lots of mistakes and I want a system that is forgiving.\n\nWhen we pull on this thread long enough, I think it leads us to the question of community interaction - do we expect both the Unix and Windows scripts to be shared in the same repository.  If the repository supports case sensitivity for the Unix community, it would support different scripts being named FOO and foo and you could write those scripts so that FOO required foo to run.  Of course, this would break completely on a Windows system.\n\nThoughts:\n1. The gallery exists and is used by the Windows community.\n2. I think it is beneficial for both Unix and Windows community to share a common repository.\n3. Adopting a case-preserving/case-insensitive rule for the repository is good tradeoff to accomplish that.\n4. Ergo = adopting a sloppy model where we accept NAME.PS1 or NAME is desirable.  If you give us either, it will be easy for us to find the NAME and the FILENAME so we should just be nice and do the work for the user.\n\nWe are left with the remaining hard problem:\n- Since Unix allows scripts with just a NAME and not a .ps1 extension - do we allow those scripts to be published in the gallery or do we require them to have a .ps1 extension?\n\nI'm inclined to trying and make that work but then encouraging people to adopt the best practice of always using a .PS1 extension AND putting #! in the first line.\n\nI would love thoughts on that topic.\n",
    "created_at": "2016-09-05T15:43:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244774499",
    "id": 244774499,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc3NDQ5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244774499/reactions"
    },
    "updated_at": "2016-09-05T15:43:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244774499",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6188114?v=4",
      "events_url": "https://api.github.com/users/jpsnover/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpsnover/followers",
      "following_url": "https://api.github.com/users/jpsnover/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpsnover/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpsnover",
      "id": 6188114,
      "login": "jpsnover",
      "node_id": "MDQ6VXNlcjYxODgxMTQ=",
      "organizations_url": "https://api.github.com/users/jpsnover/orgs",
      "received_events_url": "https://api.github.com/users/jpsnover/received_events",
      "repos_url": "https://api.github.com/users/jpsnover/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpsnover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpsnover/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpsnover"
    }
  },
  {
    "author_association": "NONE",
    "body": "Well said Jeffrey Snover! \n\nThis could one strong topic to discuss in the next MVP Summit. Scripts collaboration between Windows and Linus will be a challenge . I wouldn't be good that a FOO, foO, or fOo.Ps1 would overwrite a foo.PS1 script in the gallery. So, again, the adoption of best practices for Linux will be critical. \n\nThis a good discussion!\n",
    "created_at": "2016-09-05T16:10:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244779304",
    "id": 244779304,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc3OTMwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244779304/reactions"
    },
    "updated_at": "2016-09-05T16:10:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244779304",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "NONE",
    "body": "I agree that we should NEVER use Use-Ps1.ps1 as the same **package** name. But again, we should not confuse users with the name of a file in a package and the package itself.\n\nThere are many subtle things if you make `Save-Script` look for `Abc` given **package** name `Abc.ps1`.\n1. Should we make `Save-Module` look for `Abc` given the package name `Abc.psm1`?\n2. Should we make `Save-Script` look for `Abc` given the package name `Abc.ps1.ps1`, since a recursive elimination should be applied?\n\nNow PSGallery keeps package names Case-Preserving/Case-Insensitive, that's good.\n\nAnother analogy is that, everyone who uses PowerShell should know that, we should `Invoke-Item .\\a.txt`, not `Invoke-Item .\\a` with extension hidden. And the user should be clear that he is saving a script **package**, not a script file, though the package could contain just one file.\n\nYet another analogy is that, say you have a git repo that has `abc.ps1` in it, nobody will `git clone remote://abc.ps1`, because they know they are cloning a **repo**, not a file.\n\nAnd you can't deal with the case, when the package name is `Get-TaskmgrMeasures` and there are two files, `Get-UpTime.ps1` and `Get-MemoryUsage.ps1`. The changed behaviour becomes unintuitive again.\n\nMy point is that, this change may seem helpful and forgiving for newbies, but causes subtle trouble when looked into further. Therefore, what should be done, I think, is to guide and educate the user more effectively, by renaming the name of `Name` to `PackageName`.\n\nOn the cross-platform scripting, I think the idea of shebanging the script is great.\n",
    "created_at": "2016-09-05T16:52:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244785488",
    "id": 244785488,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc4NTQ4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244785488/reactions"
    },
    "updated_at": "2016-09-05T16:52:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244785488",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@GeeLaw I might have confused the discussion.  \n\nWhat I'm saying is that for FOO.PS1 - the NAME is always FOO and the FILENAME is always FOO.PS1.  Full Stop.\n\nFrom there, I'm saying that a user should be able to specify either the name or the filename for publishing, saving, updating etc and that we should be able to figure out the rest.  We can do this because there is a 1 to 1 correspondence between a script package and a script file and because the cmdlet name itself is telling us that it is working with a SCRIPT and therefore can allow this shortcut.  \n\nThis is not case with modules or git repos so I don't think we have the problem that you are worried about.  Double check my thinking on that and if I got it wrong - give me an step-by-step where it breaks down because I'm not seeing it right now.\n\nThanks for the engagement @GeeLaw !\n",
    "created_at": "2016-09-05T17:56:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244793015",
    "id": 244793015,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc5MzAxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244793015/reactions"
    },
    "updated_at": "2016-09-05T18:13:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244793015",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6188114?v=4",
      "events_url": "https://api.github.com/users/jpsnover/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpsnover/followers",
      "following_url": "https://api.github.com/users/jpsnover/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpsnover/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpsnover",
      "id": 6188114,
      "login": "jpsnover",
      "node_id": "MDQ6VXNlcjYxODgxMTQ=",
      "organizations_url": "https://api.github.com/users/jpsnover/orgs",
      "received_events_url": "https://api.github.com/users/jpsnover/received_events",
      "repos_url": "https://api.github.com/users/jpsnover/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpsnover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpsnover/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpsnover"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jpsnover You forgot dependencies. See [this package](https://www.powershellgallery.com/packages/Update-Windows) on PowerShell Gallery. When you `Save-Script -Name Update-Windows -Path .`, you get `PSWindowsUpdate` folder (the module the script depends on) as well as `Update-Windows.ps1` -- it's _not saving a_ file, therefore this might cause confusion.\n\nThere is `.EXTERNALSCRIPTDEPENDENCIES` in script info created by `New-ScriptFileInfo`. Though a script package can contain only one script file, it can implicitly contain more files by adding dependencies.\n\nI have to apologise for my example since you cannot `Save-Script -Name Get-TaskmgrMeasures` without getting a `Get-TaskmgrMeasures.ps1`. And at the same time, Unix users shouldn't be allowed to publish a script without extension name as we see all script packages in PowerShell Gallery contains (by itself) exactly one script file (named `<PackageName>.ps1`) and one manifest file (named `<PackageName.nuspec>` -- new practices shouldn't break this. But still, it's great practice to add shebang line in scripts published for cross-platform usage.\n\nOne more thing, for a new user (who might run into this problem **without** knowing how to fix this immediately), he could visit the repository (e.g. PowerShell gallery) and copy the line of saving/installing the package from the website. Therefore most users shouldn't have problem saving/installing a package with correct name.\n",
    "created_at": "2016-09-06T03:34:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-244842266",
    "id": 244842266,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDg0MjI2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244842266/reactions"
    },
    "updated_at": "2016-09-06T03:34:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/244842266",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> We are left with the remaining hard problem:\n> •Since Unix allows scripts with just a NAME and not a .ps1 extension - do we allow those scripts to be published in the gallery or do we require them to have a .ps1 extension?\n> \n> I'm inclined to trying and make that work but then encouraging people to adopt the best practice of  always using a .PS1 extension AND putting #! in the first line.\n\nIf we require #! for the Windows world  it is logical to require  .PS1 for Unix world. Reciprocal convergence.\n",
    "created_at": "2016-10-06T13:05:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-251955627",
    "id": 251955627,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTk1NTYyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/251955627/reactions"
    },
    "updated_at": "2016-10-06T13:05:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/251955627",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I agree with this sentiment:\n\n> If we require #! for the Windows world it is logical to require .PS1 for Unix world. Reciprocal convergence.\n\nNot only that, what if there is support for a .ps2 extension in future builds of PowerShell? To maintain consistency with all of PowerShell I think requiring both the shebang and the file extension is the way to go, and PSScriptAnalyzer can help make this easier for folks to learn/accept.\n",
    "created_at": "2016-10-06T13:49:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-251966717",
    "id": 251966717,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTk2NjcxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/251966717/reactions"
    },
    "updated_at": "2016-10-06T13:49:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/251966717",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": "This is a great discussion focused on what the gallery & PowerShellGet cmdlets support. \nThe only hard stake in the ground that I'll put is that PowerShellGallery is the place we are establishing where users should look for stable scripts regardless of platform. That's our mission.\nIt seems we have consensus around avoiding user confusion that could arise around case sensitivity. I'd welcome compelling arguments for being case-insensitive.\n\nFor the file names, though, doesn't this impact what a file name can be generally in our platform across all environments? We make lots of assumptions about files based on file extension that go beyond naming a script for separate use. \nFor example, when Pester runs, are we going to look for and attempt to load any file in the tests folder, whether or not it's a .PS1? Script Analyzer makes a bunch of assumptions today about files based on file extension as well. It's just a script file, so shouldn't module contents follow the same rules as standalone scripts?  If not, what would be a good rule set?  \n",
    "created_at": "2016-10-06T16:35:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-252018036",
    "id": 252018036,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjAxODAzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/252018036/reactions"
    },
    "updated_at": "2016-10-06T17:55:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/252018036",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ghost",
      "id": 10137,
      "login": "ghost",
      "node_id": "MDQ6VXNlcjEwMTM3",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ghost"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Extensions in Windows is allowed\nExtensions in Linux   is allowed\n\nExtensions in Windows is a base.\nExtensions in Linux   is optional.\n\nWindows use extensions to detect file type. High level API based on extensions to launch appropriated application.\nLinux   don't use extensions to detect file type. Linux always open a file and analyze a file mark to launch appropriated application.\n\nWindows use external file type mark. Optimized for GUI.\nLinux use internal file type mark. Don't optimized for GUI.\n\nSo our way is single and it is reciprocal convergence.\n\nInterestingly, Windows can create multiple files of the same name but different types in one folder because there is a different extensions. Linux can not do like that.\n\n@JKeithB \n\n>  I'd welcome compelling arguments for being case-insensitive.\n\nCase-insensitive is user-friendly. Linux use this too - for URL in browsers, ex. 😊 \n",
    "created_at": "2016-10-07T07:24:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-252171288",
    "id": 252171288,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjE3MTI4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/252171288/reactions"
    },
    "updated_at": "2016-10-07T07:24:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/252171288",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Another perspective on being case-kept and case-insensitive: though most modern file system are case-sensitive, a lot of high-level API set, e.g. Win32, adopts case-kept and case-insensitive. AFAIK, the default setting on Mac doesn't allow two files whose names differ only by case.\n\nSummary till now:\n1. A script package named `<abc>` will contain (by itself) only one script named `<abc>.ps1`, till now;\n2. It is possible to publish `<abc>.ps1.ps1` to the repo, but no one has done that yet;\n3. A script package can have external dependency, therefore `Save-Script` might give several script files, and this is a current practice;\n4. The only cross-platform-compatible way is to use both extensions and shebang line, and being case-insensitive.\n\nBecause of point 3, I am against allowing the user to save `Get-UpTime` package by invoking `Save-Script -Name Get-UpTime.ps1`. This could cause confusion because you are not only saving one script file.\n\nPoint 4 arises from a broader topic on cross-platform PSGallery.\n",
    "created_at": "2016-10-07T07:41:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-252173933",
    "id": 252173933,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MjE3MzkzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/252173933/reactions"
    },
    "updated_at": "2016-10-07T07:41:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/252173933",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This issue was moved to PowerShell/PowerShellGet#22\n",
    "created_at": "2016-10-17T16:02:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2170#issuecomment-254251501",
    "id": 254251501,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2170",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI1MTUwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/254251501/reactions"
    },
    "updated_at": "2016-10-17T16:02:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/254251501",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
