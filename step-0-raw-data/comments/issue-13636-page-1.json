[
  {
    "author_association": "CONTRIBUTOR",
    "body": "I agree that the `ModuleCmdletBase` _base_ class isn't the appropriate place to place verbose/debug/progress messages for _all_  written-in-PowerShell modules (if I understand correctly).\r\n\r\nIn light of that, I suggest referencing `ModuleCmdletBase` in the issue's title, not `Import-Module`, because for the latter _specifically and exclusively_, the current, detailed export/import-related verbose messages _are_ helpful.",
    "created_at": "2020-09-15T22:55:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693021220",
    "id": 693021220,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzAyMTIyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693021220/reactions"
    },
    "updated_at": "2020-09-17T01:36:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693021220",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "```powershell\r\n ipmo posh-git -Verbose\r\nVERBOSE: Loading module from path 'C:\\Program Files\\WindowsPowerShell\\Modules\\posh-git\\0.7.3\\posh-git.psd1'.\r\nVERBOSE: Importing function 'Add-PoshGitToProfile'.\r\nVERBOSE: Importing function 'Add-SshKey'.\r\nVERBOSE: Importing function 'Enable-GitColors'.\r\nVERBOSE: Importing function 'Expand-GitCommand'.\r\nVERBOSE: Importing function 'Get-AliasPattern'.\r\nVERBOSE: Importing function 'Get-GitBranch'.\r\nVERBOSE: Importing function 'Get-GitDirectory'.\r\nVERBOSE: Importing function 'Get-GitStatus'.\r\nVERBOSE: Importing function 'Get-PromptPath'.\r\nVERBOSE: Importing function 'Get-SshAgent'.\r\nVERBOSE: Importing function 'Get-SshPath'.\r\nVERBOSE: Importing function 'Invoke-NullCoalescing'.\r\nVERBOSE: Importing function 'Start-SshAgent'.\r\nVERBOSE: Importing function 'Stop-SshAgent'.\r\nVERBOSE: Importing function 'TabExpansion'.\r\nVERBOSE: Importing function 'tgit'.\r\nVERBOSE: Importing function 'Update-AllBranches'.\r\nVERBOSE: Importing function 'Write-GitStatus'.\r\nVERBOSE: Importing function 'Write-Prompt'.\r\nVERBOSE: Importing variable 'GitPromptScriptBlock'.\r\nVERBOSE: Importing alias '??'.\r\n```\r\n\r\nDo you want to remove all \"VERBOSE: Importing function/cmdlet/alias\" lines?",
    "created_at": "2020-09-16T06:27:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693201455",
    "id": 693201455,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzIwMTQ1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693201455/reactions"
    },
    "updated_at": "2020-09-16T06:27:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693201455",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> In light of that, I suggest referencing `ModuleCmdletBase` in the issue's title, not `Import-Module`, because for the latter _specifically and exclusively_, the current, detailed export/import-related verbose messages _are_ helpful.\r\n\r\n@mklement0: How are they helpful? If you invoke a command that results in implicit import of a module that contains 2000 cmdlets, how do those 2000 verbose messages help you? Or is there some other part of the verbose output that simply echoes line-by-line what is in a manifest or what you can find at any time using `Get-Command -Module $moduleName` that you find helpful?\r\n\r\n> Do you want to remove all \"VERBOSE: Importing function/cmdlet/alias\" lines?\r\n\r\n@vexx32: I think that should be considered, yes. Or at a minimum, consolidation of the verbose information. Learning what commands are included in a module is basic, introductory PowerShell knowledge: you can check anytime using `Get-Command -Module PoshGit`. Spewing out dozens (or hundreds and more) verbose messages from a single command invocation should be questioned no matter what that command is, for the sole reason that commands are used in scripts, and having one command flood any message stream makes it difficult to very simply turn on verbose output to review additional details from an entire script. The signal to noise ratio becomes skewed way too dramatically in favor of noise.\r\n\r\nSpeaking as a PowerShell toolbuilder, there are many scenarios where I want to simply have verbose logging turned on by default, because I'm running scripts unattended and should something happen, I want the extra detail immediately, without having to go back and try to reproduce whatever happened and get the detail at that point in time. If those scripts that run unattended produce logs that are flooded with noise, it becomes much more difficult to get to the bottom of what is going on should a problem occur.\r\n\r\nPowerShell logs should be intentional, enough information to be useful, but not so much information that it becomes spam. Perhaps a single message indicating what was imported. Something like \"VERBOSE: Imported 19 functions and 1 alias from module PoshGit.\". Note I didn't include the variable count there, because having verbose messages for variables that are imported _is_ useful since there is no discovery mechanism for those, but for cmdlets, functions and aliases, there are better ways to get that information that allow message logs to be consumed more easily. Personally though, I would just pull those messages entirely, because they don't help in understanding what is technically going on should an issue occur.\r\n\r\nI also think PowerShell streams are misunderstood, and therefore misused. My take:\r\n\r\n* Verbose is for messages that will help users troubleshoot why a command that they invoked interactively or in their script may have failed, when the error message itself is not enough. It is also to report information that is not otherwise available (site redirects on a REST API invocation, etc.), which again is intended to help someone understand a bit more technical detail to troubleshoot issues.\r\n\r\n* Debug is for messages that will help a command author understand why their command is failing when someone else invoked it (or when they invoked it if they are actively debugging it). These can contain more internal details, and there may be many debug messages if they are necessary for deep troubleshooting, but their target audience is command authors\r\n\r\n* Progress is for messages that communicate progress in longer running commands or scripts.\r\n\r\n* Information is for messages that help a user understand what is being done in a script (if they are reviewing an ongoing run log or console where a command is running) or what was done by a script (if they are reviewing output of a script after the fact). It is also for developers to have additional streams if they need to pass information through PowerShell, where they can tag the stream and then have specific handling for that stream, passing object data out to a runtime.\r\n\r\nMy focus is not interactive use (which is what the current verbose messages output from `Import-Module` seem to be targeting). My focus is large scale unattended enterprise automation, and being able to consume useful logs during execution or after the fact. I've already worked around the verbose logging issue I'm calling out here, but to do so I had to turn off verbose logging from all invoked commands, and leave verbose logging on only for explicit Write-Verbose calls in scripts that are run unattended. I would have preferred simply capturing all verbose messages in the logs, but neither myself nor my customers want to sift through noise when reviewing log files.\r\n",
    "created_at": "2020-09-16T14:07:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693429786",
    "id": 693429786,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzQyOTc4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693429786/reactions"
    },
    "updated_at": "2020-09-16T14:23:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693429786",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@KirkMunro \r\n\r\n> How are they helpful?\r\n\r\nI meant that if you call `Import-Module` _directly_, such as in the context of developing a module, these messages are helpful, as they tell you whether what you meant to export is actually being exported: it helps both with discovering _automatic_ exports and verifying that your manifest / `*.psm1` file work correctly.\r\n\r\nI fully agree that _implicit_ use of `Import-Module` should _not_ result in these messages (or perhaps perhaps a _single_ message at most, as you propose) - but I have not looked into any implementation / refactoring issues / conceptual hurdles involved, except to note that putting such messages into a _base_ class that many cmdlets besides `Import-Module` are based on sounds like the wrong place.\r\n\r\n\r\n",
    "created_at": "2020-09-16T14:32:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693446408",
    "id": 693446408,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzQ0NjQwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693446408/reactions"
    },
    "updated_at": "2020-09-17T13:50:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693446408",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro I get the feeling your issue isn't really with the verbose messages that `Import-Module` emits but with how verbose preference is propagated.  I feel the same way and tbh it's part of why I mostly don't bother with writing to alternate streams in script command.  If I want write verbose messages, then the user also has to deal with all of the verbose messages of every command I use internally.\r\n\r\nIt might be too late to change any of that, but it's not really a good reason remove verbose messages from commands that already use it.  For instance, I've 100% used `Import-Module`'s verbose messages to troubleshoot module loading.  It's actually one of a small handful of commands where that's turned out to be useful.",
    "created_at": "2020-09-16T17:42:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693558235",
    "id": 693558235,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU1ODIzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693558235/reactions"
    },
    "updated_at": "2020-09-16T17:53:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693558235",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience: There's no doubt that the verbose messages may be useful to troubleshoot module loading; however, there is also no doubt that the volume of messages produced by module loading pollutes the logs produced by a script when verbose logging is enabled.\r\n\r\n1. Are they the _right_ messages to troubleshoot the issues that you encountered?\r\n1. Is Verbose the right level of detail for those messages? Or would Debug be a better fit for users who are debugging modules, now that -Debug doesn't prompt users anymore?\r\n1. Is the quantity of messages generated appropriate for the command? The signal to noise ratio is way off at the moment.\r\n1. If you are debugging module loading, is it about your own modules, where you want to make sure that the proper resources are exported from the module? Aren't there better tools for that already in PowerShell? The lack of an error message should be indicative of success without having verbose messages to add flavor, and when it comes to exports, as suggested, the messages produced could be compressed dramatically.\r\n\r\nAlso, do you feel that module/command authors should be the target for `-Verbose` messages?\r\n\r\nLots of questions, I know. But just because `ipmo -Verbose` _can_ be useful, doesn't mean it's the right solution for what it is trying to accomplish.",
    "created_at": "2020-09-16T18:12:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693573867",
    "id": 693573867,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU3Mzg2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693573867/reactions"
    },
    "updated_at": "2020-09-16T18:13:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693573867",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also @SeeminglyScience: you are correct, my issue extends beyond `Import-Module` (PowerShellGet cmdlets are also a bit too verbose-happy), but I can't think of one other command where I think verbose usage went so far like this, and it's such a core piece of functionality that I think it's worth figuring out if there isn't a better way.",
    "created_at": "2020-09-16T18:17:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693576327",
    "id": 693576327,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU3NjMyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693576327/reactions"
    },
    "updated_at": "2020-09-16T18:17:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693576327",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Tbh much of the current verbose output _feels_ like it'd be better placed with `-Debug` instead, especially all the \"exporting\"/\"importing\" messages. \r\n\r\nI agree that they're sometimes useful, but those use cases are few and far between from what I've seen myself, and it's much more useful when an author is debugging the import than when a user / automation task wants some slightly more detailed logging information.",
    "created_at": "2020-09-16T18:39:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693588416",
    "id": 693588416,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU4ODQxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693588416/reactions"
    },
    "updated_at": "2020-09-16T18:39:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693588416",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> there is also no doubt that the volume of messages produced by module loading pollutes the logs produced by a script when verbose logging is enabled.\r\n\r\nSo first things first, I don't think auto loading should emit any verbose output.  I'm with you there, that doesn't make sense imo.  Aside from auto loading again I think the issue is with propagation not the command itself.  I think that when the `Verbose` switch is specified that it shouldn't propagate past the callee.  Way too often it ends up being a flood of implementation detail noise.\r\n\r\nCan that be changed? 🤷 \r\n\r\n> 1. Are they the _right_ messages to troubleshoot the issues that you encountered?\r\n\r\nYeah I think so.  It's detailing what's happening in a way that isn't super implementation detail specific.\r\n\r\n> 2. Is Verbose the right level of detail for those messages? Or would Debug be a better fit for users who are debugging modules, now that -Debug doesn't prompt users anymore?\r\n\r\nIt's mostly just detailing what it's doing.  I imagine debug to be more for state dumps or other very implementation detail specific information.\r\n\r\n> 3. Is the quantity of messages generated appropriate for the command? The signal to noise ratio is way off at the moment.\r\n\r\nIf you're trying to get verbose information about `Import-Module` I think it's appropriate.\r\n\r\n> Also, do you feel that module/command authors should be the target for `-Verbose` messages?\r\n\r\nActually I've only ever used it as a consumer.  As an author I just debug the psm1.\r\n\r\n> 4. If you are debugging module loading, is it about your own modules, where you want to make sure that the proper resources are exported from the module?\r\n\r\nThe occasions that I've used it it's been tracking down an issue with someone else's module that I've installed.",
    "created_at": "2020-09-16T18:50:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-693593723",
    "id": 693593723,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzU5MzcyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693593723/reactions"
    },
    "updated_at": "2020-09-16T18:50:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/693593723",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I've hidden my previous comments on realizing that I had jumped to conclusions and misremembered things. Take two:\r\n\r\n* Only the `*-Module` cmdlets derive from `ModuleCmdletBase`.\r\n\r\n* From what I can tell, auto-loading does _not_ trigger `Import-Module`'s verbose messages, only explicit `Import-Module` calls:\r\n\r\n```powershell\r\n# Auto-loading: Verbose Import-Module messages are NOT emitted.\r\n& { [CmdletBinding()] param() Remove-Module PSReadLine; (Get-PSReadLineOption).EditMode; Write-Verbose Done. } -vb\r\n\r\n# Explicit loading: Verbose Import-Module messages ARE emitted.\r\n& { [CmdletBinding()] param() Import-Module PSReadLine; (Get-PSReadLineOption).EditMode; Write-Verbose Done. } -vb\r\n```\r\n\r\n* I agree with @SeeminglyScience that **the primary problem is that turning on verbose output for _advanced scripts / functions_ (as opposed to cmdlets) results in unwanted noise, because verbose output is then turned on _for all commands called inside that script / function too_ rather than just for the `Write-Verbose` statement directly contained in the script / function**; calls to _other_ commands inside a script/function should be considered an _implementation_ detail and therefore _not_ produce verbose output (unless explicitly requested).\r\n\r\n  * This is a consequence of PowerShell's dynamic scoping, which even applies in the case of passing the `-Verbose` _switch_, which PowerShell translates to a function/script-local `$VerbosePreference` _variable_ with value `Continue`, which all descendant scopes therefore see.\r\n\r\nThe following workaround is too cumbersome in practice, but it shows what I think the behavior should be:\r\n\r\n```powershell\r\n& {\r\n  [CmdletBinding()]\r\n  param()\r\n\r\n  # If verbose output is turned on, hide the setting from the descendant scopes,\r\n  # but make all Write-Verbose calls *in this scope only* emit verbose output.\r\n  if ($VerbosePreference -eq 'Continue') {\r\n    $VerbosePreference = 'SilentlyContinue' # Hide from cmdlet calls and descendant scopes.\r\n    # Apply only to Write-Verbose calls in the current scope.\r\n    $private:PSDefaultParameterValues = $PSDefaultParameterValues ? $PSDefaultParameterValues.Clone() : [System.Management.Automation.DefaultParameterDictionary]::new()\r\n    $private:PSDefaultParameterValues['Write-Verbose:Verbose'] = $true\r\n  }\r\n\r\n  # This is now quiet.\r\n  Import-Module PSReadLine\r\n\r\n  # Simulate a call to other PowerShell functions / scripts:\r\n  # This is now quiet too.\r\n  & {\r\n    Write-Verbose 'in child scope'\r\n  }\r\n\r\n  # Only this will print.\r\n  Write-Verbose Done.\r\n\r\n} -Verbose\r\n```\r\n\r\n",
    "created_at": "2020-09-17T13:49:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694248516",
    "id": 694248516,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI0ODUxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694248516/reactions"
    },
    "updated_at": "2020-09-17T14:59:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694248516",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "From memory, if `$VerbosePreference` is set to a visible state before running something that causes an auto-import, it _will_ dump a ton of things to the verbose stream.\r\n\r\nAlso, I might be misremembering, but I _think_ it'll do similar if running a script from a file on disk with `-Verbose` (which will need it to have cmdletbinding, of course).",
    "created_at": "2020-09-17T14:12:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694263924",
    "id": 694263924,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI2MzkyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694263924/reactions"
    },
    "updated_at": "2020-09-17T14:12:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694263924",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32, my previous examples show that neither is the case, and from the global scope you can verify with\r\n`Remove-Module PSReadLine; $VerbosePreference = 'Continue'; (Get-PSReadLineOption).EditMode`\r\n",
    "created_at": "2020-09-17T14:22:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694270588",
    "id": 694270588,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI3MDU4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694270588/reactions"
    },
    "updated_at": "2020-09-17T14:22:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694270588",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Is there something unclear about my previous example, @vexx32? It ensures that module `PSReadLine` isn't loaded, turns on verbose output globally, and triggers auto-import of `PSReadLine` via the `Get-PSReadLineOption` call - and _no_ verbose messages print. Doesn't that contradict your claim, or am I missing something?",
    "created_at": "2020-09-17T14:26:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694273099",
    "id": 694273099,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI3MzA5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694273099/reactions"
    },
    "updated_at": "2020-09-17T21:16:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694273099",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 looks like it does on first import, but not if the module was already loaded at one point. For binary modules at least.",
    "created_at": "2020-09-17T14:27:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694273582",
    "id": 694273582,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI3MzU4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694273582/reactions"
    },
    "updated_at": "2020-09-17T14:27:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694273582",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "No, it definitely does spam verbose stream. I wonder if it's different for PSReadLine for some reason (are compiled modules different?)... but, as a quick example, try executing any PowerShellGet (2.x, haven't tried with the betas of v3) command before having it imported and with $VerbosePreference set.\r\n\r\n```ps1\r\nRemove-Module PowerShellGet, PackageManagement\r\n$VerbosePreference = 'Continue'\r\nFind-Module PSWordCloud\r\n```\r\n\r\nI can reproduce on consecutive re-imports with script modules, so I can only assume that oddity is specific to binary modules.",
    "created_at": "2020-09-17T14:27:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694273631",
    "id": 694273631,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI3MzYzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694273631/reactions"
    },
    "updated_at": "2020-09-17T14:28:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694273631",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Okay so auto loading itself doesn't trigger it, it's the same preference propagation problem.  The module I was testing with had logic in the `psm1` to `Import-Module` a dll.\r\n\r\nSo technically it's not triggering during auto load, but if you auto load a script module it looks like it anyway.",
    "created_at": "2020-09-17T14:39:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694281264",
    "id": 694281264,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI4MTI2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694281264/reactions"
    },
    "updated_at": "2020-09-17T14:39:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694281264",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience, there is another factor at play, because with _self-contained_ modules I see it neither with binary nor with script modules:\r\n\r\n```powershell\r\n# Binary module:\r\n# In a pristine session, before ever having imported the 'ThreadJob' module (via a Start-ThreadJob) call:\r\n$VerbosePreference = 'Continue'; $null = Start-ThreadJob { 'hi' }; $VerbosePreference = 'SilentlyContinue'\r\n\r\n# Script module:\r\n# Uses the 'Native' module (Install-Module Native)\r\n$VerbosePreference = 'Continue'; ins echo; $VerbosePreference = 'SilentlyContinue'\r\n```\r\n\r\n**The culprit is loading _dependent_ modules via a _module manifest_'s `RequiredModules` key**: modules  automatically imported this way indeed generate verbose output (but only for these dependent modules) - which is arguably a _bug_.\r\n\r\nIt also explains @vexx32's symptom, because `PowerShellGet` loads `PackageManagement` via the `RequiredModules` entry.\r\n\r\nUpdate: Additionally, the problem surfaces with **_nested modules_ loaded via the `NestedModules` key** and **run-on-import-in-the-caller's-scope scripts specified via the `ScriptsToProcess` key**, as well as with **any code that runs in the _script_ scope of `*.psm1` files being imported, notably `Export-ModuleMember`** - in short: any _cmdlet calls_ and any _PowerShell code_ that is automatically run during import can surface verbose output.",
    "created_at": "2020-09-17T14:44:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694284160",
    "id": 694284160,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI4NDE2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694284160/reactions"
    },
    "updated_at": "2020-09-17T18:18:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694284160",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That's part of it, I think, but I think it also has to do with whether the script module uses `Export-ModuleMember`. For example, PSKoans doesn't use that (though it has its own verbose messaging which I'm now considering just removing lol) and it doesn't get the same behaviour; all its exports are only defined by the PSD1.\r\n\r\nPester, on the other hand, _does_.\r\n\r\nThough it does look like loading via RequiredModules adds some additional bits and pieces.",
    "created_at": "2020-09-17T14:49:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694287200",
    "id": 694287200,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI4NzIwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694287200/reactions"
    },
    "updated_at": "2020-09-17T14:49:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694287200",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32, for `Export-ModuleMember` calls this is to be expected: they execute in PowerShell code that acts on `$VerbosePreference` set to `Continue` (either via an ancestral variable or via `-Verbose`); note that the messages are _`Export-ModuleMember`'s_, not `Import-Module`'s.\r\n\r\nAs such, this is simply another manifestation of the [dynamic scoping problem discussed above](https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694248516), and something the workaround would eliminate.\r\n\r\n",
    "created_at": "2020-09-17T14:54:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694290633",
    "id": 694290633,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDI5MDYzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694290633/reactions"
    },
    "updated_at": "2020-09-17T14:55:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694290633",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Let me try to summarize:\r\n\r\nThere are two _independent_ problems:\r\n\r\n* How the existing (in-box) cmdlets may use the various output streams inappropriately or too liberally:\r\n\r\n  * (a) Reviewing the in-box cmdlets seems worthwhile, but one thing we need to be clear on: are the streams other than `1` and `2` (success and error) considered part of a cmdlet's public contract? In other words: have we made it clear and can we reasonably assume that existing code out there _doesn't_ rely on existing verbose / debug / information messages not to change?\r\n\r\n  * (b) To guide all command authors with respect to stream use in the future, I've asked for a new conceptual help topic, `about_Streams`, and I've copied some of @KirkMunro's thoughts there - see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6643\r\n\r\n* How as a user you get _additional verbose output that you didn't ask for_, resulting in unwanted noise that drowns out the information of interest:\r\n\r\n  * (c) We've seen that _auto-loading_ of modules is quiet for the modules _themselves_, but _not for their dependencies_, if any, and _not_ for script-level `*.psm1` code, notably `Export-ModuleMember` calls, if any (I've updated the [comment above](https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694284160) to hopefully list all specific scenarios).\r\n     * I suspect the current, inconsistent behavior is a fallout from the implementation rather than by design: seemingly, any cmdlet call and PowerShell code that executes during auto-import can surface verbose messages.\r\n     * My vote is to resolve this inconsistency so that auto-import is _always_ quiet.\r\n     * See #13657\r\n\r\n  * [Withdrawn after further discussion in #13658]  ~~(d) The bigger problem is the dynamic scoping issue [detailed above](https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694248516), causing calls to _other commands_ inside scripts / functions to emit verbose output too.~~\r\n\r\n     *  ~~Again, the question is whether fixing this would be considered a breaking change; even if not, we need to think through how to fix it.~~\r\n\r\n\r\n \r\n\r\n\r\n",
    "created_at": "2020-09-17T18:26:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-694417277",
    "id": 694417277,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDQxNzI3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694417277/reactions"
    },
    "updated_at": "2020-11-02T15:26:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694417277",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I've created #13657 for (c) and #13658 for (d).",
    "created_at": "2020-09-18T20:26:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-695069966",
    "id": 695069966,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTA2OTk2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/695069966/reactions"
    },
    "updated_at": "2020-11-02T15:16:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/695069966",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Regarding the first problem, I think I've come up with a solution that should work for everyone. For this to work though, the docs need to explicitly call out the proper guidance (the [new docs](https://github.com/MicrosoftDocs/PowerShell-Docs/pull/6745/files#diff-fdb684a3a96c707109f16fe14ddd51067e57f500eb8a55391a2a40627d54f8aaR1-R110) do not provide sufficient guidance yet), and we of course need to agree that this is the proper approach.\r\n\r\nA lot of the issues I have with PowerShell these days, this issue being no exception, stem from the needs of the interactive user being entirely different from the needs of the automator. Teams building PowerShell functionality do very well for the former, because it is easier -- they can test it very easily in the PowerShell console; however, they generally don't do as well for the latter.\r\n\r\nIn this case, as well as in all cmdlets, the developer needs to decide if the message they are outputting is for interactive use or not. If it is for interactive use (examples include welcome messages like you get from `Connect-MgGraph`, messages about cmdlets using non-approved verbs like you get from `Import-Module`, and messages about what was imported into a session like you get from `Import-Module`), the best vehicle that we have today to communicate such messages is writing them to the information stream with an `Interactive` tag. Tagging messages is the key. Any message that only has usefulness in an interactive session should be written this way. The benefit of this approach is that such messages could be completely silenced whenever PowerShell is run in a non-interactive session.\r\n\r\nIt may be useful to support tagging for messages written to other streams such as the `Verbose` stream, but I think getting messages meant for display in an interactive session are by their very nature informational messages, so the Information stream with an appropriate tag seems very appropriate for these types of messages. That would allow both interactive scenarios to be supported as they are today, while allowing back-end, unattended automation scenarios to run silently unless there is something important enough to write to one of the streams.\r\n\r\nIf this is an agreed upon approach, we may need some new functionality, such as an easy mechanism to silence interactive informational messages so that they don't clutter up Azure Function logs or other unattended automation logs with noise that is irrelevant to the person reviewing those logs, unless we can determine that the session is interactive and automatically silence those messages in the runtime in those scenarios.\r\n\r\nThoughts?",
    "created_at": "2020-10-15T15:05:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13636#issuecomment-709388262",
    "id": 709388262,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTM4ODI2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/709388262/reactions"
    },
    "updated_at": "2020-10-15T15:05:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/709388262",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
