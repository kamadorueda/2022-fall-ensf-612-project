[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mklement0\r\n\r\n> But, in contrast, PowerShell's outside CLI would still need to accept something like `-File -a`.\r\n\r\nAs a point of clarity, this is not something under PowerShell's control as the calling shell (bash, another PowerShell, CMD, ksh, etc) has final say in the matter. What you are specifically requesting here is to maintain the current argument parsing for arguments passed from the calling shell to the PowerShell binary upon initialization. Correct?",
    "created_at": "2017-08-20T17:21:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4624#issuecomment-323598863",
    "id": 323598863,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4624",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzU5ODg2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323598863/reactions"
    },
    "updated_at": "2017-08-20T17:23:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323598863",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@markekraus:\r\n\r\n> What you are specifically requesting here is to maintain the current argument parsing for arguments passed from the calling shell to the PowerShell binary upon initialization. Correct?\r\n\r\nCorrect: `powershell -File -foo.ps1` currently works already, and should continue to work.  \r\n(And as _one_ aspect of conceptual simplicity and consistency, the same should work _predictably_ PowerShell-_internally_ as well (when calling functions/cmdlets)).\r\n\r\nCalling from a POSIX-like shell (Unix; e.g., `bash`),  `powershell -File -foo.ps1` is indistinguishable from variants `powershell -File '-foo.ps1'` and `powershell -File \"-foo.ps1\"`, because the POSIX-like shell performs _quote removal_ before passing the array of arguments as literals to the target command: `powershell` sees just literals `-File` and `-foo.ps1` in all cases.\r\n\r\nConceivably, PowerShell _could_ - but shouldn't, in my view - then place _additional_ requirements on the arguments passed, based on _its_ syntax requirement, such as for the received `-foo.ps1` argument to still be represented as `'-foo.ps1'`, for instance, _if_ \r\nthe decision were made (I hope not) that `-`-prefixed tokens are only recognized as _arguments_ when _quoted_.\r\n\r\nIf such a requirement existed, you'd have to call `powershell -File \"'-foo.ps1'\"` (or `powershell -File '\"-foo.ps1\"'`) - and such two-unrelated-quoting-layers awkwardness is best avoided.\r\n\r\nUnfortunately, we already have that awkwardness with respect to how `-Command` parsing works: because it assembles all arguments into a single string that it then interprets based on PowerShell rules, you do need two-layer quoting; e.g.:\r\n\r\n```powershell\r\n# Oops! \"The string is missing the terminator: '.\"\r\n# PowerShell ended up interpreting `Write-Output don't` as the script.\r\npowershell -noprofile -command Write-Output \"don't\"\r\n\r\n# OK, but clearly cumbersome:\r\n# With shell-variable-based arguments, it gets even trickier.\r\npowershell -noprofile -command Write-Output \"\\\"don't\\\"\"\r\n```\r\n\r\nSee https://github.com/PowerShell/PowerShell/issues/4024#issuecomment-312267611 for more.\r\n\r\n",
    "created_at": "2017-08-20T18:57:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4624#issuecomment-323604452",
    "id": 323604452,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4624",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzYwNDQ1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323604452/reactions"
    },
    "updated_at": "2017-08-20T19:05:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/323604452",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
