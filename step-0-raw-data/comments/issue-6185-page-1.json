[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Interesting find.\r\n\r\nI'd say that the right behavior is to pass the bound parameter value _as-is_, whether it happens to be a scalar or an array; no enumeration should be applied, so the current behavior is definitely unexpected.\r\n\r\nJust to state it explicitly: In your example, the validation script block is unexpectedly called _once for each array element_, with `$_` bound to that element, even though you're passing the array as a single value.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2018-02-18T23:03:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6185#issuecomment-366556443",
    "id": 366556443,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6185",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU1NjQ0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/366556443/reactions"
    },
    "updated_at": "2018-02-18T23:03:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/366556443",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "The mind boggling thing is that it happens even when the parameter is explicitly typed as an array. It has been this way since at least PowerShell 3. I haven't personally tested any further back. It makes validating an array as a whole basically impossible with ValidateScript which is annoying for things like byte arrays that are used a ton in crypto stuff.\r\n\r\nHere's a more visual example.\r\n\r\n```powershell\r\nfunction Test-ByteArray {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter(Mandatory,Position=0)]\r\n        [ValidateScript({\r\n            Write-Verbose \"(Validate)     Type: $($_.GetType())\"\r\n            Write-Verbose \"(Validate)   Length: $($_.Length)\"\r\n            Write-Verbose \"(Validate) Contents: $($_ -join ',')\"\r\n            return $true\r\n\r\n        })]\r\n        [byte[]]$InputObject\r\n    )\r\n\r\n    Write-Verbose \"(Function)     Type: $($InputObject.GetType())\"\r\n    Write-Verbose \"(Function)   Length: $($InputObject.Length)\"\r\n    Write-Verbose \"(Function) Contents: $($InputObject -join ',')\"\r\n\r\n}\r\n\r\n$VerbosePreference = 'Continue'\r\n$bytes = [byte[]]@(27,42,35)\r\nTest-ByteArray $bytes\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nVERBOSE: (Validate)     Type: byte\r\nVERBOSE: (Validate)   Length: 1\r\nVERBOSE: (Validate) Contents: 27\r\nVERBOSE: (Validate)     Type: byte\r\nVERBOSE: (Validate)   Length: 1\r\nVERBOSE: (Validate) Contents: 42\r\nVERBOSE: (Validate)     Type: byte\r\nVERBOSE: (Validate)   Length: 1\r\nVERBOSE: (Validate) Contents: 35\r\nVERBOSE: (Function)     Type: byte[]\r\nVERBOSE: (Function)   Length: 3\r\nVERBOSE: (Function) Contents: 27,42,35\r\n```\r\n\r\n",
    "created_at": "2019-08-12T21:09:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6185#issuecomment-520596547",
    "id": 520596547,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6185",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDU5NjU0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/520596547/reactions"
    },
    "updated_at": "2019-08-12T21:09:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/520596547",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2327255?v=4",
      "events_url": "https://api.github.com/users/rmbolger/events{/privacy}",
      "followers_url": "https://api.github.com/users/rmbolger/followers",
      "following_url": "https://api.github.com/users/rmbolger/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmbolger/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rmbolger",
      "id": 2327255,
      "login": "rmbolger",
      "node_id": "MDQ6VXNlcjIzMjcyNTU=",
      "organizations_url": "https://api.github.com/users/rmbolger/orgs",
      "received_events_url": "https://api.github.com/users/rmbolger/received_events",
      "repos_url": "https://api.github.com/users/rmbolger/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rmbolger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmbolger/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rmbolger"
    }
  }
]
