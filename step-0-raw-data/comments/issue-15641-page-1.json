[
  {
    "author_association": "NONE",
    "body": "And FYI\r\n\r\nEnter-PSSession from that linux client does work:\r\n\r\n```powershell\r\n\r\nPS > enter-pssession -HostName machinename -UserName username -Port 22\r\nusername@machinename's password:\r\n[machinename]: PS C:\\Users\\username\\Documents>\r\n\r\n```\r\n",
    "created_at": "2021-06-22T19:27:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866270412",
    "id": 866270412,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjI3MDQxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866270412/reactions"
    },
    "updated_at": "2021-06-22T19:27:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866270412",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The error seems to indicate that `ssh` isn't found on the `PATH`. The runspace connection calls `ssh` as a new process to set up the connection and uses the stdio pipes to communicate with the target. If `ssh` can't be found then the process cannot be created. Is the host doing `dotnet run` the same as the one you tried the `Enter-PSSession` from or a different host? What's the output when you run `which ssh`?",
    "created_at": "2021-06-22T20:08:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866298046",
    "id": 866298046,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjI5ODA0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866298046/reactions"
    },
    "updated_at": "2021-06-22T20:08:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866298046",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jborean93 Yes that is what i thought as well.\r\n\r\nYes the Enter-PSSession is run on the same host.\r\n\r\n```none\r\n\r\n[/mnt/c/work/util]\r\nPS > which ssh\r\n/usr/bin/ssh\r\n\r\n\r\n\r\n```",
    "created_at": "2021-06-22T20:11:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866299923",
    "id": 866299923,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjI5OTkyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866299923/reactions"
    },
    "updated_at": "2021-06-22T20:11:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866299923",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Hmm I wonder if `dotnet run` is doing something with the environment. You could write to the console the value of `PATH` to see if `/usr/bin` is included but I would be very surprised if it was not.",
    "created_at": "2021-06-22T20:12:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866300768",
    "id": 866300768,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjMwMDc2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866300768/reactions"
    },
    "updated_at": "2021-06-22T20:12:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866300768",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "From a windows client it does the same thing:\r\n\r\n```powershell\r\n[C:\\Work\\util]\r\nPS > get-command ssh\r\n\r\nCommandType     Name                                               Version    Source\r\n-----------     ----                                               -------    ------\r\nApplication     ssh.exe                                            8.1.0.1    C:\\Windows\\System32\\OpenSSH\\ssh.exe\r\n\r\n\r\n[C:\\Work\\util]\r\nPS > enter-pssession -HostName machinename -UserName username -Port 22\r\nusername @machinename 's password:\r\n[username@machinename ]: PS C:\\Users\\username \\Documents>\r\n```\r\n\r\nAnd when you run the program\r\n\r\n```none\r\n[C:\\Work\\util]\r\nPS > dotnet run\r\nSystem.ComponentModel.Win32Exception (2): The system cannot find the file specified.\r\n   at System.Diagnostics.Process.StartWithCreateProcess(ProcessStartInfo startInfo)\r\n   at System.Diagnostics.Process.Start()\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute(Action`1 processStarted)\r\n   at Microsoft.DotNet.Cli.Utils.Command.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Execute()\r\n   at Microsoft.DotNet.Tools.Run.RunCommand.Run(String[] args)\r\n   at Microsoft.DotNet.Cli.Program.ProcessArgs(String[] args, ITelemetry telemetryClient)\r\n   at Microsoft.DotNet.Cli.Program.Main(String[] args)\r\n```",
    "created_at": "2021-06-22T20:15:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866302797",
    "id": 866302797,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjMwMjc5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866302797/reactions"
    },
    "updated_at": "2021-06-22T20:15:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866302797",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Hmm I wonder if `dotnet run` is doing something with the environment. You could write to the console the value of `PATH` to see if `/usr/bin` is included but I would be very surprised if it was not.\r\n\r\nI have built then and run it published, standalone, and with dotnet run.  I could change the program to dump the PATH, as well.",
    "created_at": "2021-06-22T20:17:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866303829",
    "id": 866303829,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjMwMzgyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866303829/reactions"
    },
    "updated_at": "2021-06-22T20:17:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866303829",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "NONE",
    "body": "New Code\r\n\r\n```C#\r\nusing System;\r\nusing System.Management.Automation;\r\nusing System.Management.Automation.Remoting;\r\nusing System.Management.Automation.Runspaces;\r\n\r\nnamespace util\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            System.Console.WriteLine($\"Path={Environment.GetEnvironmentVariable(\"PATH\")}\");\r\n            System.Console.WriteLine();\r\n\r\n            var connectionInfo = new SSHConnectionInfo(\"username\", \"machinename\", null, port: 22)\r\n            {\r\n            };\r\n\r\n            var runspace = RunspaceFactory.CreateRunspace(connectionInfo);\r\n            runspace.Open();\r\n\r\n\r\n            System.Console.WriteLine(\"Hit any key to exit...\");\r\n            System.Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nOutput\r\n\r\n```powershell\r\n[/mnt/c/work/util]\r\nPS > dotnet run\r\nPath=/opt/microsoft/powershell/7:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/PowerShell/7/:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Users/Administrator/AppData/Local/Microsoft/WindowsApps:/mnt/c/Work/DevTools/AseUtil:/mnt/c/Work/DevTools/AseDiag:/mnt/c/Users/Administrator/.dotnet/tools:/mnt/c/Users/Administrator/AppData/Local/Programs/Microsoft VS Code/bin:/snap/bin:/home/administrator/.dotnet/tools\r\n\r\nUnhandled exception. System.Management.Automation.Remoting.PSRemotingDataStructureException: An error has occurred which PowerShell cannot handle. A remote session might have ended.\r\n ---> System.ComponentModel.Win32Exception (2): No such file or directory\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.CreateProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Int32 creationFlags, Int32& lpChildPid, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcess(ProcessStartInfo startInfo, StreamWriter& standardInput, StreamReader& standardOutput, StreamReader& standardError)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcessImpl(ProcessStartInfo startInfo, StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcess(StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n   at System.Management.Automation.Remoting.Client.SSHClientSessionTransportManager.CreateAsync()\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.SendNegotiationAsync(RemoteSessionState sessionState)\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerImpl.HandleStateChanged(Object sender, RemoteSessionStateEventArgs arg)\r\n   at System.Management.Automation.ExtensionMethods.SafeInvoke[T](EventHandler`1 eventHandler, Object sender, T eventArgs)\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerStateMachine.RaiseStateMachineEvents()\r\n   at System.Management.Automation.Remoting.ClientRemoteSessionDSHandlerStateMachine.ProcessEvents()\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.Runspaces.AsyncResult.EndInvoke()\r\n   at System.Management.Automation.Runspaces.Internal.RunspacePoolInternal.EndOpen(IAsyncResult asyncResult)\r\n   at System.Management.Automation.Runspaces.Internal.RemoteRunspacePoolInternal.Open()\r\n   at System.Management.Automation.Runspaces.RunspacePool.Open()\r\n   at System.Management.Automation.RemoteRunspace.Open()\r\n   at util.Program.Main(String[] args) in /mnt/c/work/util/Program.cs:line 20\r\n\r\n[/mnt/c/work/util]\r\nPS > which ssh\r\n/usr/bin/ssh\r\n```",
    "created_at": "2021-06-22T20:22:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866307288",
    "id": 866307288,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjMwNzI4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866307288/reactions"
    },
    "updated_at": "2021-06-22T20:25:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866307288",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks for the info, I was able to replicate it myself using the `Microsoft.PowerShell.SDK` `7.1.3`. When running it with `strace` I can see the following when running from `dotnet`\r\n\r\n```\r\n[pid 91377] vfork(strace: Process 91480 attached\r\n <unfinished ...>\r\n[pid 91480] rt_sigaction(SIGHUP, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGINT, NULL, {sa_handler=0x7fd44402a440, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGINT, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGQUIT, NULL, {sa_handler=0x7fd44402a440, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGQUIT, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGILL, NULL, {sa_handler=0x7fd4be2cf920, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGILL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTRAP, NULL, {sa_handler=0x7fd4be2cf9c0, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTRAP, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGABRT, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGBUS, NULL, {sa_handler=0x7fd4be2cfaf0, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGBUS, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGFPE, NULL, {sa_handler=0x7fd4be2cfa50, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGFPE, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGUSR1, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGSEGV, NULL, {sa_handler=0x7fd4be2cfba0, sa_mask=[RT_2], sa_flags=SA_RESTORER|SA_ONSTACK|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGSEGV, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGUSR2, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGPIPE, NULL, {sa_handler=SIG_IGN, sa_mask=[PIPE], sa_flags=SA_RESTORER|SA_RESTART, sa_restorer=0x7fd4bea1d320}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGALRM, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTERM, NULL, {sa_handler=0x7fd4be2cff80, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTERM, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGSTKFLT, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGCHLD, NULL, {sa_handler=0x7fd44402a440, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGCHLD, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGCONT, NULL, {sa_handler=0x7fd44402a440, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGCONT, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTSTP, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTTIN, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGTTOU, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGURG, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGXCPU, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGXFSZ, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGVTALRM, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGPROF, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGWINCH, NULL, {sa_handler=0x7fd44402a440, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGWINCH, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGIO, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGPWR, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGSYS, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_2, NULL, {sa_handler=0x7fd4be2cfe70, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7fd4bef47a20}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_2, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7fd4bef47a20}, NULL, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_3, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_4, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_5, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_6, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_7, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_8, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_9, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_10, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_11, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_12, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_13, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_14, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_15, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_16, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_17, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_18, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_19, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_20, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_21, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_22, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_23, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_24, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_25, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_26, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_27, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_28, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_29, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_30, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_31, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigaction(SIGRT_32, NULL, {sa_handler=SIG_DFL, sa_mask=[], sa_flags=0}, 8) = 0\r\n[pid 91480] rt_sigprocmask(SIG_SETMASK, [], ~[KILL STOP RTMIN RT_1], 8) = 0\r\n[pid 91480] execve(\"/home/jborean/dev/abc/bin/Debug/net5.0/abc\", [\"/home/jborean/dev/abc/bin/Debug/\"...], 0x55c605764700 /* 64 vars */ <unfinished ...>\r\n[pid 91377] <... vfork resumed>)        = 91480\r\n```\r\n\r\nWhen I run the same thing from `pwsh` directly I get\r\n\r\n```\r\n[pid 95068] stat(\"/usr/bin/ssh\", {st_mode=S_IFREG|0755, st_size=843296, ...}) = 0\r\n[pid 95068] access(\"/usr/bin/ssh\", X_OK) = 0\r\n[pid 95068] pipe([94, 95])              = 0\r\n[pid 95068] fcntl(94, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 95068] fcntl(95, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 95068] pipe([96, 97])              = 0\r\n[pid 95068] fcntl(96, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 95068] fcntl(97, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 95068] pipe([98, 99])              = 0\r\n[pid 95068] fcntl(98, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 95068] fcntl(99, F_SETFD, FD_CLOEXEC) = 0\r\n[pid 95068] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7fa9effff910) = 95077\r\nstrace: Process 95077 attached\r\n[pid 95077] set_robust_list(0x7fa9effff920, 24 <unfinished ...>\r\n[pid 95068] close(94 <unfinished ...>\r\n[pid 95077] <... set_robust_list resumed>) = 0\r\n[pid 95068] <... close resumed>)        = 0\r\n[pid 95068] close(97)                   = 0\r\n[pid 95068] close(99)                   = 0\r\n[pid 95077] dup2(94, 0)                 = 0\r\n[pid 95077] dup2(97, 1)                 = 1\r\n[pid 95077] dup2(99, 2)                 = 2\r\n[pid 95077] chdir(\"/usr/bin\" <unfinished ...>\r\n[pid 95068] lseek(95, 0, SEEK_CUR <unfinished ...>\r\n[pid 95077] <... chdir resumed>)        = 0\r\n[pid 95068] <... lseek resumed>)        = -1 ESPIPE (Illegal seek)\r\n[pid 95077] rt_sigaction(SIGINT, {sa_handler=SIG_IGN, sa_mask=[], sa_flags=SA_RESTORER, sa_restorer=0x7faaea968a20}, {sa_handler=0x7faae114c440, sa_mask=[], sa_flags=SA_RESTORER|SA_RESTART|SA_SIGINFO, sa_restorer=0x7faaea968a20}, 8) = 0\r\n[pid 95077] execve(\"/usr/bin/ssh\", [\"/usr/bin/ssh\", \"-l\", \"vagrant\", \"-s\", \"test.wsman.env\", \"powershell\"], 0x7fa9e801e9e0 /* 64 vars */ <unfinished ...>\r\n```\r\n\r\nGranted instead of a fork it's calling clone but we can see that the ultimate `execve` call is calling `/usr/bin/ssh` from the PowerShell process compared to the dotnet executable I'm running from for the .NET side. This would indicate to me that the following code is failing to find `ssh` so the value of `filePath` is an empty string https://github.com/PowerShell/PowerShell/blob/ea19ceac4a4afac2e8dd456a85a5591aeb2dacb0/src/System.Management.Automation/engine/remoting/common/RunspaceConnectionInfo.cs#L2146-L2160. I'm not sure how I could test this out but [GetExecutionContextFromTLS](https://github.com/PowerShell/PowerShell/blob/ea19ceac4a4afac2e8dd456a85a5591aeb2dacb0/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L1077-L1086) will most likely be returning `null` because there isn't a Runspace in the thread local storage and thus `filePath` is going to be `null`.\r\n\r\nIt sounds like the code needs to be modified to either fallback to just calling `ssh` if the full path cannot be resolved (not sure if that will cause a failure) or use a different method in cases where there is no default runspace.",
    "created_at": "2021-06-22T21:30:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866348006",
    "id": 866348006,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjM0ODAwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866348006/reactions"
    },
    "updated_at": "2021-06-22T21:30:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866348006",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks to @SeeminglyScience who pointed out that `Runspace.DefaultRunspace` is publicly settable you can get this working today by doing this\r\n\r\n```csharp\r\nusing System;\r\nusing System.Management.Automation;\r\nusing System.Management.Automation.Remoting;\r\nusing System.Management.Automation.Runspaces;\r\n\r\nnamespace util\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var connectionInfo = new SSHConnectionInfo(\"vagrant\", \"test.wsman.env\", null, port: 22)\r\n            {\r\n            };\r\n\r\n            using (var runspace = CreateRunspace(connectionInfo))\r\n            {\r\n                System.Console.WriteLine(\"Hit any key to exit...\");\r\n                System.Console.ReadKey();\r\n            }\r\n        }\r\n\r\n        private static Runspace CreateRunspace(RunspaceConnectionInfo connectionInfo)\r\n        {\r\n            using (var defaultRunspace = RunspaceFactory.CreateRunspace())\r\n            {\r\n                defaultRunspace.Open();\r\n                Runspace.DefaultRunspace = defaultRunspace;\r\n\r\n                try\r\n                {\r\n                    var runspace = RunspaceFactory.CreateRunspace(connectionInfo);\r\n                    runspace.Open();\r\n\r\n                    return runspace;\r\n                }\r\n                finally\r\n                {\r\n                    Runspace.DefaultRunspace = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAs there is now a default runspace in the TLS, the full path to `ssh` is found and used when starting the connection process. I still think the code should be updated so this isn't required but it's enough to get you going today.",
    "created_at": "2021-06-22T22:22:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866376263",
    "id": 866376263,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjM3NjI2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 3,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866376263/reactions"
    },
    "updated_at": "2021-06-22T22:25:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866376263",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks for looking into this so quickly.  I will try the above, and let you know how it goes for us.\r\n\r\nThanks again!!!",
    "created_at": "2021-06-22T22:46:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866386373",
    "id": 866386373,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjM4NjM3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866386373/reactions"
    },
    "updated_at": "2021-06-22T22:46:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866386373",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "NONE",
    "body": "The above code works for me as well, so this should be a good workaround.\r\n\r\nOne more quick question if you happen to know.\r\n\r\nThis is part of something we are doing for a big test automation effort, is there a way to present the password for the user of the SSH connection?  I know we can try to setup the keyfile stuff, but it would be nice to be able to supply the password as well.\r\n\r\nThe above code prompts for the password, it would just be nice to be able to supply it, since we have it.\r\n",
    "created_at": "2021-06-22T23:05:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866393440",
    "id": 866393440,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjM5MzQ0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866393440/reactions"
    },
    "updated_at": "2021-06-22T23:05:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866393440",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Unfortunately not in PowerShell, or at least not simply. The ssh process is writing directly to the console/tty so you can’t really affect it in PowerShell. You could replace `ssh` in your `PATH` with something that calls `sshpass` or handles the prompt tty but that’s pretty advanced stuff. In reality you should be avoiding password auth and use SSH keys wherever possible.",
    "created_at": "2021-06-22T23:07:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866394542",
    "id": 866394542,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjM5NDU0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866394542/reactions"
    },
    "updated_at": "2021-06-22T23:08:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866394542",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It turns out it is a bit simpler than I expected, with PowerShell you can do something like\r\n\r\n```powershell\r\n$script = Set-Content ./my_ssh -Value @'\r\n#!/usr/bin/env bash\r\n\r\nsshpass -p vagrant /usr/bin/ssh \"$@\"\r\n'@\r\nchmod +x ./my_ssh\r\n\r\n$ExecutionContext.InvokeCommand.PostCommandLookupAction = {\r\n    param ($Command, $EA)\r\n\r\n    if ($Command -eq 'ssh') {\r\n        $EA.Command = Get-Command (Join-Path $PSScriptRoot 'my_ssh')\r\n    }\r\n}\r\ntry {\r\n    Invoke-Command -HostName test.wsman.env -UserName vagrant -ScriptBlock { $env:USERPROFILE }\r\n}\r\nfinally {\r\n    $ExecutionContext.InvokeCommand.PostCommandLookupAction = $null\r\n}\r\n```\r\n\r\nThis can easily be adapted and added to the `defaultRunspace` execution context to achieve the same thing in pure .NET but there are numerous downsides that essentially make this quite fragile:\r\n\r\n* This relies on an implementation detail that could change in a future release\r\n* You can only change the executable that is run, you cannot adjust or dynamically set values without adjusting the target executable\r\n  * This could technically be done through env vars or some other side channel like named pipes but the former isn't really secure and the latter would take quite a bit of work\r\n  * At least for doing this in PowerShell you want to be careful you aren't overriding an existing `PostCommandLookupAction` as there can only be one set at a time\r\n\r\nSo yes it's possible but I wouldn't recommend it and save yourself the time by using SSH keys.",
    "created_at": "2021-06-23T01:05:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866443293",
    "id": 866443293,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjQ0MzI5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866443293/reactions"
    },
    "updated_at": "2021-06-23T01:05:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866443293",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jborean93  I have gone with the keyfile approach.   The most basic program does in fact work.\r\n\r\nThe for my real program, that utilizes System.CommandLine, i still have issues.\r\n\r\nI see something like this:\r\n\r\n```\r\n22/2021 9:35:54 PM -07:00   3388 samplepowershell.1.Run         (Win32Exception): The filename, directory name, or volume label syntax is incorrect.\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.CreateProcessWithRedirectedStd(ProcessStartInfo startInfo, SafePipeHandle& stdInPipeServer, SafePipeHandle& stdOutPipeServer, SafePipeHandle& stdErrPipeServer)\r\n   at System.Management.Automation.Runspaces.SSHConnectionInfo.StartSSHProcessImpl(ProcessStartInfo startInfo, StreamWriter& stdInWriterVar, StreamReader& stdOutReaderVar, StreamReader& stdErrReaderVar)\r\n```\r\n\r\nIf I move logic into a simple console application that is not utilizing System.CommandLine, things work as expected.",
    "created_at": "2021-06-23T04:50:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866519508",
    "id": 866519508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjUxOTUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866519508/reactions"
    },
    "updated_at": "2021-06-23T04:50:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866519508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "NONE",
    "body": "Sorry about the last issue.  I found a subtle difference on when I was opening the runspace.  I fixed that up, and now things are working as expected.",
    "created_at": "2021-06-23T05:03:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-866524119",
    "id": 866524119,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2NjUyNDExOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866524119/reactions"
    },
    "updated_at": "2021-06-23T05:03:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/866524119",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/27844532?v=4",
      "events_url": "https://api.github.com/users/stwolfe/events{/privacy}",
      "followers_url": "https://api.github.com/users/stwolfe/followers",
      "following_url": "https://api.github.com/users/stwolfe/following{/other_user}",
      "gists_url": "https://api.github.com/users/stwolfe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stwolfe",
      "id": 27844532,
      "login": "stwolfe",
      "node_id": "MDQ6VXNlcjI3ODQ0NTMy",
      "organizations_url": "https://api.github.com/users/stwolfe/orgs",
      "received_events_url": "https://api.github.com/users/stwolfe/received_events",
      "repos_url": "https://api.github.com/users/stwolfe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stwolfe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stwolfe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stwolfe"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PowerShell/wg-powershell-remoting \r\nWe agree that this is a bug that needs to be addressed.  Since there is a workaround the target milestone for this is set to 7.3 consider.",
    "created_at": "2021-06-28T22:05:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-870076001",
    "id": 870076001,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3MDA3NjAwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/870076001/reactions"
    },
    "updated_at": "2021-06-28T22:05:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/870076001",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "To be clear, I feel this issue can be addressed by:\r\n\r\n- PowerShell throws a terminating error when the SSH client cannot be found (which is currently done via PowerShell command look up), so the reason for the connection attempt failure is clear.\r\n- Possibly provide an additional optional connection parameter that specifies the full path to SSH (not sure if this is needed as it seems SSH should be the default path look up).\r\n\r\n@jborean93 solution using sshpass to obtain a user password is really interesting.  But I don't think we can support connection by user credential until SSH itself adds support for safely passing in credentials.  Currently, key pairs appear to be the only widely supported safe way to connect non-interactively.",
    "created_at": "2021-10-12T17:12:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15641#issuecomment-941207467",
    "id": 941207467,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15641",
    "node_id": "IC_kwDOAvT7bc44Ga-r",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/941207467/reactions"
    },
    "updated_at": "2021-10-12T17:12:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/941207467",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  }
]
