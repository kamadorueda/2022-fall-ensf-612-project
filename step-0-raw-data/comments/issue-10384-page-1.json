[
  {
    "author_association": "MEMBER",
    "body": "An empty array is not a place holder.\r\nFor each key-value pair in `TestMetadata.json`, CI will start a pwsh session with only that feature enabled, and then run the specified tests:\r\n - if the value is a non-empty array, run the tests defined in the array.\r\n - if the value is an empty array, run all powershell tests.\r\n\r\nSo, `\"PSManageBreakpointsInRunspace\": []` means starting a pwsh session with only the experimental feature `PSManageBreakpointsInRunspace` turned on, and then run all powershell tests in that session.\r\n\r\nFor the failure in `Get-ExperimentalFeature.Tests.ps1`, the corresponding tests were added recently after enabling all experimental features by default for preview releases. It assumes all experimental features should be enabled, and thus will fail with only `PSManageBreakpointsInRunspace` is turned on. No idea about the `CompatiblePSEditions.Module.Tests.ps1` failure though, it looks to me unrelated to any experimental feature.\r\n\r\nGiven that now all experimental features are enabled by default except for official release, there is no point to depend on `TestMetadata.json` for testing an experimental feature. The only purpose of it is to test the experimental feature infrastructure itself. However, tests for all experimental features should check if the expected feature is enabled, and skip the tests if not.",
    "created_at": "2019-08-20T07:22:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10384#issuecomment-522889178",
    "id": 522889178,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10384",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjg4OTE3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/522889178/reactions"
    },
    "updated_at": "2019-08-20T07:22:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/522889178",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for these details @daxian-dbw, they are very helpful.\r\n\r\n> An empty array is not a place holder.\r\n> For each key-value pair in `TestMetadata.json`, CI will start a pwsh session with only that feature enabled, and then run the specified tests:\r\n> \r\n>     * if the value is a non-empty array, run the tests defined in the array.\r\n> \r\n>     * if the value is an empty array, run all powershell tests.\r\n\r\nCan we add to that support for if the value is `$null` don't run any specific PowerShell tests? That could allow for identification that an Experimental Feature requires some manual testing.\r\n\r\n> So, \"PSManageBreakpointsInRunspace\": [] means starting a pwsh session with only the experimental feature PSManageBreakpointsInRunspace turned on, and then run all powershell tests in that session.\r\n\r\nI don't think many contributors are aware of that. It would be great if that behavior was documented in the Experimental Feature documentation. \r\n\r\n> No idea about the CompatiblePSEditions.Module.Tests.ps1 failure though, it looks to me unrelated to any experimental feature.\r\n\r\nThat's what I thought as well, yet that failure went away when I removed my update to `TestMetadata.json`. 🤷‍♂ \r\n\r\n> Given that now all experimental features are enabled by default except for official release, there is no point to depend on TestMetadata.json for testing an experimental feature. The only purpose of it is to test the experimental feature infrastructure itself. However, tests for all experimental features should check if the expected feature is enabled, and skip the tests if not.\r\n\r\nThere is a minor issue with this: I discovered some tests that should have been skipped if an experimental feature was not enabled were accidentally enabled (and failing) all the time because of how I configured `TestMetadata.json`. Since tests are not just run in CI, but also in dev environments, I think all experimental feature test files (as identified in `TestMetadata.json`) should be run with experimental features disabled.\r\n\r\nNow that we're running tests with all experimental features on by default in preview builds, we should still depend on `TestMetadata.json`, but in the opposite way: use it to identify test files related to experimental features, and run those tests explicitly with all experimental features disabled. That will allow CI to catch Pester test issues early so that they don't impact other developers.",
    "created_at": "2019-08-20T13:58:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10384#issuecomment-523027713",
    "id": 523027713,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10384",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzAyNzcxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523027713/reactions"
    },
    "updated_at": "2019-08-20T13:58:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523027713",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> I don't think many contributors are aware of that. It would be great if that behavior was documented in the Experimental Feature documentation.\r\n\r\nAbsolutely. I will update the [`testing-guidelines`](https://github.com/PowerShell/PowerShell/blob/master/docs/testing-guidelines/testing-guidelines.md) shortly after.\r\n\r\n> Can we add to that support for if the value is `$null` don't run any specific PowerShell tests? That could allow for identification that an Experimental Feature requires some manual testing.\r\n\r\nI'm not sure about the the usefulness of this setting because no one will monitor `TestMetadata.json` to track what experimental features requires manual testing.\r\n\r\n> we should still depend on TestMetadata.json, but in the opposite way: use it to identify test files related to experimental features, and run those tests explicitly with all experimental features disabled. That will allow CI to catch Pester test issues early so that they don't impact other developers.\r\n\r\nI agree that we should have a way to catch the experimental feature tests that do not skip tests appropriately when the corresponding feature is disabled. But `TestMetadata.json` cannot be simply used in the opposite way for this because we still depend on its current behavior to test the experimental feature infrastructure itself -- `ExpTest.FeatureOne` is not a real experimental feature that would be enabled by default, but a fake one only to test the experimental feature code. Having the developers to update the corresponding book-keeping file for the experimental feature tests to be added will also be a problem, as the tests will run by default and there won't be a reason to force them to update a file like `TestMetadata.json`.",
    "created_at": "2019-08-20T21:55:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10384#issuecomment-523210522",
    "id": 523210522,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10384",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzIxMDUyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523210522/reactions"
    },
    "updated_at": "2019-08-20T21:55:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523210522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Ok. I'm going to close this out since you're going to update the `testing-guidelines` doc, and this is really a non-issue based on the additional information you provided (thanks for that).",
    "created_at": "2019-08-21T20:14:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10384#issuecomment-523630528",
    "id": 523630528,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10384",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzYzMDUyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523630528/reactions"
    },
    "updated_at": "2019-08-21T20:14:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/523630528",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
