[
  {
    "author_association": "COLLABORATOR",
    "body": "/cc @bergmeister Thoughts?",
    "created_at": "2020-04-11T08:11:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612363297",
    "id": 612363297,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjM2MzI5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612363297/reactions"
    },
    "updated_at": "2020-04-11T08:11:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612363297",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Perhaps we could add more for PSScriptAnalyzer in Engine/API.",
    "created_at": "2020-04-11T08:12:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612363469",
    "id": 612363469,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjM2MzQ2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612363469/reactions"
    },
    "updated_at": "2020-04-11T08:12:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612363469",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Perhaps we could create a supplementary module of static analysis attributes, so that we can ship that module in-box in future versions of us, but something like PSScriptAnalyzer could just take a dependency on that module and have them available downlevel to ps5.1 as well.",
    "created_at": "2020-04-11T17:33:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612472716",
    "id": 612472716,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjQ3MjcxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612472716/reactions"
    },
    "updated_at": "2020-04-11T17:33:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612472716",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Such attribute would definitely help but since I assume this issue was created due to the known issue of the `PSUseDeclaredVarsMoreThanAssignments` PSSA rule that has false positives when variable usage crosses multiple scriptblocks? Therefore an alternative would also be to relax the rule and assume invocation in current scope. Personally, I was never too bother about its false positives and find the rule itself still useful. The problem of PSSA not being aware of Pester syntax like e.g. a variable declared in `BeforeAll` would still remain with such attributes I suppose.",
    "created_at": "2020-04-12T21:05:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612675904",
    "id": 612675904,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjY3NTkwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612675904/reactions"
    },
    "updated_at": "2020-04-12T21:05:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612675904",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Would it? Both `BeforeAll {}` and `It {}` invoke their scripts in the same scope -- that of the parent `Context {}` or `Describe {}` block. As such, you could apply such an attribute to both `It` and the `Before`/`After`-type blocks and remove those false positives. There would still be _some_ if you're declaring values outside a context/describe, but iirc that's generally considered poor form anyway?",
    "created_at": "2020-04-12T21:08:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612676205",
    "id": 612676205,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjY3NjIwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612676205/reactions"
    },
    "updated_at": "2020-04-12T21:08:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612676205",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Such attribute would definitely help but since I assume this issue was created due to the known issue of the `PSUseDeclaredVarsMoreThanAssignments` PSSA rule that has false positives when variable usage crosses multiple scriptblocks?\r\n\r\nIt's an easy example of something that already exists that could benefit, but not my motivation for creating the issue.\r\n\r\nI was working on a sort of type inference overhaul.  Part of that was making the variable inference more accurate which involves some flow analysis.  I realized the same problem that plagues that rule would make any sort of flow analysis inaccurate whenever command with a scriptblock was used.\r\n\r\n> The problem of PSSA not being aware of Pester syntax like e.g. a variable declared in BeforeAll would still remain with such attributes I suppose.\r\n\r\nI think you'd just put the attribute on `BeforeAll` no?  I guess it depends how the rule is set up, but if you're actually trying to check execution flow, marking `BeforeAll` with `InvokedInCurrentScope` and leaving the `It` blocks undecorated should give enough information.",
    "created_at": "2020-04-12T22:17:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612684425",
    "id": 612684425,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjY4NDQyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612684425/reactions"
    },
    "updated_at": "2020-04-12T22:17:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612684425",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, you're right about Pester's BeforeAll. I initially thought PSSA would need to know the order of execution but it actually seems that `PSUseDeclaredVarsMoreThanAssignments` doesn't care about the order, i.e. `foo $a; $a =42` makes it not trigger a warning, one could also argue this is actually a bug...\r\nMy main point is that if the problem we try to solve is reducing the false positives of this rule, we could relax it and just assume current scope, WDYT?",
    "created_at": "2020-04-12T22:42:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612687268",
    "id": 612687268,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjY4NzI2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612687268/reactions"
    },
    "updated_at": "2020-04-13T08:07:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612687268",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> My main point is that if the problem we try to solve is reducing the false positives of this rule, we could relax it an just assume current scope, WDYT?\r\n\r\nLike I said that rule was just a convenient example of something existing that could benefit, but not why I opened the issue.  I think a lot of potential tools could benefit from this sort of data.\r\n\r\nThat said, relaxing it to assume current scope would probably be sufficient for that rule specifically.  Personally I'd like to see it *catch more* like the order problem you refer to, but that would probably be a pretty significant undertaking (e.g. if you're in a loop, that order is still valid for accessing the same var).",
    "created_at": "2020-04-12T23:53:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612694356",
    "id": 612694356,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjY5NDM1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612694356/reactions"
    },
    "updated_at": "2020-04-12T23:53:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612694356",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If we look C# nullable annotations there are  many new attributes. For the issue I want to know - do we expect a set of new attributes for such annotations for static analysis? My concern is that it is public API and we need a good design before start.",
    "created_at": "2020-04-13T06:07:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612766562",
    "id": 612766562,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjc2NjU2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612766562/reactions"
    },
    "updated_at": "2020-04-13T06:07:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612766562",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Given that there is more than half a year of .Net 5 and therefore also PowerShell Previews, there should be enough time to test and iterate over the design. Now is actually the best time to experiment :)",
    "created_at": "2020-04-13T08:19:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612802931",
    "id": 612802931,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjgwMjkzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612802931/reactions"
    },
    "updated_at": "2020-04-13T08:19:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612802931",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah I think there's a lot of room for more annotations to assist with static analysis.  Like @bergmeister  mentioned, there's no need to wait until we figure out what all of them will be.\r\n\r\nAt a high level the most important things to me are:\r\n\r\n1. They are used *purely* for static analysis.  They have zero run time effect.\r\n1. Tooling matches based on type *name* not *identity*.\r\n\r\nTo expand on `#2`, I expect to be able to target `PowerShellStandard.Library` 5.1 and still support a new static analysis attribute like this:\r\n\r\n```csharp\r\nnamespace System.Management.Automation\r\n{\r\n    [AttributeUsage(AttributeTargets.Property | AttributeTargets.Parameter)]\r\n    internal sealed class InvokedInCurrentScopeAttribute : Attribute\r\n    {\r\n        public string WhenPresent { get; set; }\r\n    }\r\n}\r\n\r\nnamespace MyProject.Commands\r\n{\r\n    [Cmdlet(VerbsDiagnostic.Test, \"MyCommand\")]\r\n    public InvokeMyCommandCommand : PSCmdlet\r\n    {\r\n        [Parameter]\r\n        [InvokedInCurrentScope]\r\n        public ScriptBlock Action { get; set; }\r\n    }\r\n}\r\n```\r\n\r\nMaybe PowerShell can be a little less strict than roslyn and ignore namespace as well.",
    "created_at": "2020-04-13T14:18:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-612917704",
    "id": 612917704,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMjkxNzcwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612917704/reactions"
    },
    "updated_at": "2020-04-13T14:18:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/612917704",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> there's no need to wait until we figure out what all of them will be.\r\n\r\nThe API is public and will be used in external repo - so we need to get approval from PowerShell Committee and security team. So it is better to start with good design so as not to waste their time.\r\n\r\nI guess we need a base abstract class like \"StaticAnalyzerAttribute\".\r\n",
    "created_at": "2020-04-14T05:31:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12287#issuecomment-613234327",
    "id": 613234327,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzIzNDMyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/613234327/reactions"
    },
    "updated_at": "2020-04-14T05:31:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/613234327",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
