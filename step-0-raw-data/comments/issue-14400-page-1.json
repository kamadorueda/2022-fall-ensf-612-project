[
  {
    "author_association": "CONTRIBUTOR",
    "body": "It might be a bit surprising but it's not ambiguous. `$using:` can only be used in a _scriptblock_ and there is no scriptblock here. As far as the user experience goes, when we were designing the feature we felt that having this work:\r\n```powershell\r\n$foo = \"Hello\"\r\n# doesn't require `$using:`  because it's just parameter passing\r\nwrite-output $foo &\r\n```\r\nbut this\r\n```powershell\r\n$foo = \"hello\"\r\n$foo &\r\n```\r\nfail was a bad experience. So we made it just work.",
    "created_at": "2020-12-17T23:51:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14400#issuecomment-747777537",
    "id": 747777537,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14400",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Nzc3NzUzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747777537/reactions"
    },
    "updated_at": "2020-12-17T23:51:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747777537",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for clarifying the design intent, @bpayette.\r\n\r\n> `$using:` can only be used in a _scriptblock_\r\n\r\nOf course, hypothetically, that doesn't prevent treating `$foo` in statement `$foo &` _as if it were a script block_ [_update_:  that is indeed what happens - see [below](https://github.com/PowerShell/PowerShell/issues/14400#issuecomment-748207497)] - which is a reasonable assumption to make if you conceive of `Start-Job { ... }` and `... &` as mere _syntax variations_, especially given how ` &`, the background operator,  is [currently documented](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_Operators?view=powershell-7.2#background-operator-):\r\n\r\n> This operator is functionally equivalent to `Start-Job`.\r\n\r\n---\r\n\r\nI do get that the user experience is better if the background operator does _not_ require `$using:`, but - at least hypothetically - it does prevents certain scenarios.\r\n\r\nThe ambiguity exists relative to `Start-Job`, but if we focus on the background operator alone, it's more a case of _invariably shadowing_ variables local to the background job and therefore not being able to refer to them:\r\n\r\nThe OP already demonstrates it with respect to `$Error`, but let me show another example:\r\n\r\n```powershell\r\nPS> $FormatEnumerationLimit = 42; ($FormatEnumerationLimit &) | Receive-Job -wait -AutoRemoveJob\r\n42  # $FormatEnumerationLimit referred to the CALLER'S copy\r\n```\r\n\r\nvs.\r\n\r\n```powershell\r\nPS> $FormatEnumerationLimit = 42; sajb { $FormatEnumerationLimit } | rcjba\r\n4  # The JOB's default vlue.\r\n```\r\n\r\nIt may be mostly hypothetical, but with the background operator there is no straightforward way that I'm aware of that would allow you to unambiguously reference the _background job_'s `$FormatEnumerationLimit` copy - to that end, an _inverse_ `$using:` construct would be needed.\r\n\r\n(Yes, you could do `$FormatEnumerationLimit='@'; (& ([scriptblock]::create('$FormatEnumerationLimit')) &) | Receive-Job -wait -AutoRemoveJob`, but, needless to say, that is both highly obscure and cumbersome.)\r\n",
    "created_at": "2020-12-18T02:15:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14400#issuecomment-747823280",
    "id": 747823280,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14400",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzgyMzI4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747823280/reactions"
    },
    "updated_at": "2020-12-18T17:05:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/747823280",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To offer an example that is perhaps closer to real life:\r\n\r\n```powershell\r\n# !! This prints the CALLER's $PWD, as explicit use of $using:PWD would.\r\n# !! There is no way to refer to the JOB's $PWD when using the background operator.\r\n(& { Set-Location /; $PWD } &) | Receive-Job -Wait -AutoRemoveJob\r\n```\r\n\r\nIncidentally, by contrast, with `$PID` it is the _job's_ copy that is visible by default:\r\n\r\n```powershell\r\nPS> $PID; ($PID &) | Receive-Job -Wait -AutoRemoveJob\r\n21873\r\n31086\r\n```\r\n\r\nBecause of that, `$using` actually helps in _this_ case:\r\n\r\n```powershell\r\nPS> $PID; ($using:PID &) | Receive-Job -Wait -AutoRemoveJob\r\n21875\r\n21875\r\n```\r\n\r\nAlso note the use of `$using:` _without_ an explicit script block (`{ ... }`), contradicting your earlier claim that `$using:` can only be used inside one.\r\n\r\nGenerally, though, for full feature parity with `Start-Job` a hypothetical `$callee:` pseudo scope would be needed, to bypass shadowing of the job's variables by the caller's.\r\n\r\nI understand that this isn't really called for in practice, but it highlights the limitations of the background operator.\r\n\r\nI will open a docs issue to request clarifying the difference between the background operator and `Start-Job` and will close this issue then.\r\n",
    "created_at": "2020-12-18T17:04:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14400#issuecomment-748207497",
    "id": 748207497,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14400",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0ODIwNzQ5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748207497/reactions"
    },
    "updated_at": "2020-12-18T18:36:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/748207497",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
