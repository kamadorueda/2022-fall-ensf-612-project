[
  {
    "author_association": "MEMBER",
    "body": "Why not use the `::new` syntax to create a new object? It's faster than `new-object` and does utilize the type directly. For example:\r\n```\r\n[System.Uri]::new('http://www.example.com/')\r\n[System.Data.SqlClient.SqlConnection]::new($ConnectionString)\r\n[System.Collections.Generic.HashSet[System.String]]::new()\r\n```",
    "created_at": "2018-08-13T17:30:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-412599175",
    "id": 412599175,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU5OTE3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412599175/reactions"
    },
    "updated_at": "2018-08-13T17:30:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412599175",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, it's honestly just easier to call the constructor directly. I agree `New-Object` should be able to work like this anyway, but the constructor being both easier and faster make this mostly a non-issue for me.",
    "created_at": "2018-08-13T18:00:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-412608993",
    "id": 412608993,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjYwODk5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412608993/reactions"
    },
    "updated_at": "2018-08-13T18:00:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412608993",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@AikenBM  Be aware that you aren't actually passing a type literal when you do  `New-Object [some.type]`, you're passing in the _string_ `\"[some-type]\"`. This is because arguments are parsed in _argument_ mode where '[' is simply treated as being part of a string. If you wrap the type in parens, forcing _expression_ mode parsing as in\r\n```powershell\r\nNew-Object ([System.URI]) -argument http://example.com\r\n```\r\nthen you get what you expect. There have been requests in the past to allow the type conversion code for `string` to `Type` to also allow type name strings to include '[',']' so `[type] '[int]'` would work along with with `[type] 'int`' but we felt that it was essentially obfuscating the parsing modes making things overall less clear. ",
    "created_at": "2018-08-13T20:29:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-412652950",
    "id": 412652950,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjY1Mjk1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412652950/reactions"
    },
    "updated_at": "2018-08-13T20:29:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412652950",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I typically do this and get completion at the prompt and in VSCode. ISE if I recall too. Am I missing something here?\r\n\r\n```powershell\r\nNew-Object System.IO.FileInfo -ArgumentList ~/.bashrc\r\n```",
    "created_at": "2018-08-13T21:42:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-412674975",
    "id": 412674975,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjY3NDk3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412674975/reactions"
    },
    "updated_at": "2018-08-13T21:42:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412674975",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14023826?v=4",
      "events_url": "https://api.github.com/users/thezim/events{/privacy}",
      "followers_url": "https://api.github.com/users/thezim/followers",
      "following_url": "https://api.github.com/users/thezim/following{/other_user}",
      "gists_url": "https://api.github.com/users/thezim/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/thezim",
      "id": 14023826,
      "login": "thezim",
      "node_id": "MDQ6VXNlcjE0MDIzODI2",
      "organizations_url": "https://api.github.com/users/thezim/orgs",
      "received_events_url": "https://api.github.com/users/thezim/received_events",
      "repos_url": "https://api.github.com/users/thezim/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/thezim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thezim/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/thezim"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Perhaps it's worth simply modifying `New-Object`'s code specifically to account for possible start and end brackets and act accordingly?",
    "created_at": "2018-08-14T14:41:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-412896234",
    "id": 412896234,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjg5NjIzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412896234/reactions"
    },
    "updated_at": "2018-08-14T14:41:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412896234",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@daxian-dbw Because [it's apparently community best practice](https://github.com/PoshCode/PowerShellPracticeAndStyle/blob/master/Best-Practices/Building-Reusable-Tools.md#pure-01-use-native-powershell-where-possible).\r\n\r\nAlso, `::new()` is about as well-documented as `@().ForEach()` and `@().Where()` are.  If we're going to rely on it as the primary method of instancing objects, it ought to be much better documented.  It's only ever used in reference to user defined classes in the documentation.\r\n\r\n@BrucePay Ok, so _yes_, there _is_ a reason that New-Object couldn't accept an actual data type instead of requiring a string representation of the data type.  I do see that with this:\r\n\r\n```\r\nPS > function Test-DataType ($DataType) { $DataType.NameSpace }\r\nPS > Test-DataType ([int])\r\nSystem\r\nPS > Test-DataType [int]\r\nPS >\r\n```\r\n\r\n@thezim Hm.  That is basically what I'm trying to do and it does not work for me via the command line or with VSCode's PowerShell module (VSCode 1.25.1, PS module 1.8.2).  Maybe something on my system is just not working correctly, however, because it does seem to work for my coworker.  And it does seem to work for me if I RDP to a server and run PowerShell there.  Looks like I will need to reset my environment completely and test it again.\r\n",
    "created_at": "2018-08-14T20:41:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-413008724",
    "id": 413008724,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzAwODcyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/413008724/reactions"
    },
    "updated_at": "2018-08-14T20:41:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/413008724",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31443007?v=4",
      "events_url": "https://api.github.com/users/AikenBM/events{/privacy}",
      "followers_url": "https://api.github.com/users/AikenBM/followers",
      "following_url": "https://api.github.com/users/AikenBM/following{/other_user}",
      "gists_url": "https://api.github.com/users/AikenBM/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AikenBM",
      "id": 31443007,
      "login": "AikenBM",
      "node_id": "MDQ6VXNlcjMxNDQzMDA3",
      "organizations_url": "https://api.github.com/users/AikenBM/orgs",
      "received_events_url": "https://api.github.com/users/AikenBM/received_events",
      "repos_url": "https://api.github.com/users/AikenBM/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AikenBM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AikenBM/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AikenBM"
    }
  },
  {
    "author_association": "NONE",
    "body": "Alright, so after correcting my system, I do get code completion with `New-Object`.  I am not sure what was not working before, but it does explain a number of other quirks I've noticed for awhile.\r\n\r\nI do think the suggestion that @vexx32 put forth makes sense, as it's really not clear why these should work:\r\n\r\n    New-Object ([System.URI]) -Argument http://example.com\r\n    New-Object System.URI -Argument http://example.com\r\n\r\nAnd this should not:\r\n\r\n    New-Object [System.URI] -Argument http://example.com\r\n\r\nParticularly when you get to things like typed collections:\r\n\r\n    New-Object System.Collections.Generic.HashSet[String]      ## OK\r\n    New-Object ([System.Collections.Generic.HashSet[String]])  ## OK\r\n    New-Object \"System.Collections.Generic.HashSet[String]\"    ## OK\r\n    [System.Collections.Generic.HashSet[String]]::new()        ## OK\r\n\r\n    New-Object [System.Collections.Generic.HashSet[String]]    ## Error\r\n    New-Object \"[System.Collections.Generic.HashSet[String]]\"  ## Error\r\n\r\nI understand what @BrucePay means about obfuscation of what's going on, but you've _still_ got inconsistent behavior.  I understand this is the compromise you've opted for, but if concern about users not knowing what's going on is the reason it's like it is now, why isn't it in the documentation somewhere?  \r\n\r\nIt seems particularly odd because the `-as`, `-is`, and `-isNot` operators are completely different:\r\n\r\n    \"5\" -is int     ## Error\r\n    \"5\" -is [int]   ## OK\r\n    \"5\" -is ([int]) ## OK\r\n    \"5\" -is 'int'   ## OK\r\n    \"5\" -is '[int]' ## Error\r\n\r\nIt's just very confusing to me from a language semantic perspective.  I don't think either behavior is wrong, and I do understand what's going on.  It's just not at all intuitive that there are two behaviors here.  It's not intuitive what the conventions are and there's no clarification in the documentation why there's a difference in behavior.  Even `about_Type_Operators` doesn't talk about it, which is the closest topic I can find that discusses data types.  I'm actually kind of surprised there isn't an `about_Types` document that explains the semantics and conventions of types.\r\n",
    "created_at": "2018-08-16T12:56:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-413536063",
    "id": 413536063,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUzNjA2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/413536063/reactions"
    },
    "updated_at": "2018-08-16T12:56:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/413536063",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31443007?v=4",
      "events_url": "https://api.github.com/users/AikenBM/events{/privacy}",
      "followers_url": "https://api.github.com/users/AikenBM/followers",
      "following_url": "https://api.github.com/users/AikenBM/following{/other_user}",
      "gists_url": "https://api.github.com/users/AikenBM/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AikenBM",
      "id": 31443007,
      "login": "AikenBM",
      "node_id": "MDQ6VXNlcjMxNDQzMDA3",
      "organizations_url": "https://api.github.com/users/AikenBM/orgs",
      "received_events_url": "https://api.github.com/users/AikenBM/received_events",
      "repos_url": "https://api.github.com/users/AikenBM/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AikenBM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AikenBM/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AikenBM"
    }
  },
  {
    "author_association": "NONE",
    "body": "I am going to close this because I was able to resolve my core issue.",
    "created_at": "2018-08-16T12:57:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7514#issuecomment-413536203",
    "id": 413536203,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7514",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUzNjIwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/413536203/reactions"
    },
    "updated_at": "2018-08-16T12:57:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/413536203",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31443007?v=4",
      "events_url": "https://api.github.com/users/AikenBM/events{/privacy}",
      "followers_url": "https://api.github.com/users/AikenBM/followers",
      "following_url": "https://api.github.com/users/AikenBM/following{/other_user}",
      "gists_url": "https://api.github.com/users/AikenBM/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AikenBM",
      "id": 31443007,
      "login": "AikenBM",
      "node_id": "MDQ6VXNlcjMxNDQzMDA3",
      "organizations_url": "https://api.github.com/users/AikenBM/orgs",
      "received_events_url": "https://api.github.com/users/AikenBM/received_events",
      "repos_url": "https://api.github.com/users/AikenBM/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AikenBM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AikenBM/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AikenBM"
    }
  }
]
