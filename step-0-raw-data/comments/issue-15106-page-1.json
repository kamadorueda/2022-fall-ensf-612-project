[
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2021-04-03T14:00:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-812869202",
    "id": 812869202,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjg2OTIwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/812869202/reactions"
    },
    "updated_at": "2021-04-03T14:00:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/812869202",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I've opened an issue to ask the .NET team about this, however as I wrote it some thoughts occurred to me:\r\n\r\n1. Why are we trying to detect and override a user misconfiguration? Shouldn't we just let it fail and let the user fix it? If we do it through a series of internal logic, I feel we're just going to end up with complicated, hard-to-explain behaviour that's hard to justify for users.\r\n2. If we are determined to do it this way, why do we need to set a boolean early on? Could we instead do one of:\r\n    - Wait until the first thread we must create and then add logic to catch and retry\r\n    - Make the current boolean getter a cached lazy value that only creates and tests the thread on demand",
    "created_at": "2021-04-12T23:57:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-818318516",
    "id": 818318516,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxODMxODUxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/818318516/reactions"
    },
    "updated_at": "2021-04-12T23:57:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/818318516",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The problem is that we default to STA for compatibility with Windows PowerShell which is needed for winforms/WPF which requires STA.  This was a breaking change from PowerShell Core 6 (which defaulted to MTA) with PowerShell 7 and is affecting some users who don't even care about winforms/WPF.\r\n\r\nWhether STA or MTA is used is needed to be determined before we create the first runspace.  The exception occurs when the console host tries to open the runspace as that is when the thread is actually created.  I don't think it makes sense for the API to create the runspace to override STA and magically make it MTA.  Doing it in the host makes more sense to me as the user isn't explicitly requesting it (unless `-STA` is specified)",
    "created_at": "2021-04-13T00:24:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-818328882",
    "id": 818328882,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxODMyODg4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/818328882/reactions"
    },
    "updated_at": "2021-04-13T00:24:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/818328882",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> This results in an error and unusable PowerShell runspace. \r\n\r\nI wonder - no exception is on the SKUs from SetApartmentState()? \r\n\r\nI see we use StaMode property only in one place.\r\nhttps://github.com/PowerShell/PowerShell/blob/2f3f39906f6f58e1028672ae3aeffb83934c5153/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L1536\r\nAnd I guess the issue is in\r\nhttps://github.com/PowerShell/PowerShell/blob/2f3f39906f6f58e1028672ae3aeffb83934c5153/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L195\r\n\r\nand\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2f3f39906f6f58e1028672ae3aeffb83934c5153/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L1168\r\n\r\nI believe we could not add a test in StaMode but add a fix in the two places. It would be more _reliable_ solution.",
    "created_at": "2021-04-13T08:06:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-818535830",
    "id": 818535830,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxODUzNTgzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/818535830/reactions"
    },
    "updated_at": "2021-04-13T08:07:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/818535830",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The exception doesn't occur with calling `SetApartmentState()` (unless it's an already running thread), it's at thread start.  However, I've reached out to the COM team to see if there's a better way to detect if STA is supported rather than checking the `ProductName` in the registry.",
    "created_at": "2021-04-13T20:03:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-819016919",
    "id": 819016919,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTAxNjkxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819016919/reactions"
    },
    "updated_at": "2021-04-13T20:03:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819016919",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> The exception doesn't occur with calling `SetApartmentState()` (unless it's an already running thread), it's at thread start.\r\n\r\nMy thought just to start a thread and process the exception. Cases (I don't know that is right):\r\n- we can write an error and continue\r\n- we can write an error and terminate\r\n- we can fallback to MTA and cache the fact.",
    "created_at": "2021-04-14T03:25:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-819201191",
    "id": 819201191,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTIwMTE5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819201191/reactions"
    },
    "updated_at": "2021-04-14T03:25:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819201191",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Got an answer from COM team on a better way to check if STA is supported but requires a PInvoke. ",
    "created_at": "2021-04-14T19:33:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-819779042",
    "id": 819779042,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTc3OTA0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819779042/reactions"
    },
    "updated_at": "2021-04-14T19:33:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819779042",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Interesting, the proposal assumes pwsh will terminate at argument parsing time is STA is not supported.\r\nBut this makes pwsh behavior very weird:\r\n- at argument parsing time we always set a default to STA\r\n- then on Unix we magically switch to OS default - MTA - in OpenConsoleRunspace() method although command line parser doesn't allow STA at all.\r\n- on Windows at argument parsing time now we write an error and terminate if STA switch explicitly set and Windows doesn't support STA.\r\n\r\nThis obviously leads to endless problems. I would prefer simpler logic.\r\n\r\nI also believe that using COM based validation is a _flawed strategy_. If we think about Minimal PowerShell without WPF, COM, WinRT and so on we will have to remove the code with that subsystems. Ideally the STA check should be in the subsystems and PowerShell should catch the unsupported exception for appropriate processing.\r\n\r\nReally we have no need to do the check at all to fix the issue. \r\nProposal:\r\n- Explicitly set StaMode to false on Unix and  to true if IsDesktopWindows (It corresponds to the fact that we compile for WPF with `Microsoft.NET.Sdk.WindowsDesktop`)\r\n- catch (ThreadStartException) exception near OpenConsoleRunspace(). (We already process such exception in Clipboard (Show-Command, Out-Grid, HelpWindow), TaskBarJumpList, COM, WMI, CredSSP, New-Object for COM). Fallback to MTA since we want the specific Windows build works (and maybe catch result if needed).",
    "created_at": "2021-04-15T04:57:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820094944",
    "id": 820094944,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDA5NDk0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820094944/reactions"
    },
    "updated_at": "2021-04-15T05:29:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820094944",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> This obviously leads to endless problems. I would prefer simpler logic.\r\n\r\nI share similar concerns, though perhaps not as well developed. I think the _implementation_ in this PR is now good, but I'm concerned that the actual behaviour is just a stopgap and given that this is actually a public behaviour (albeit a subtle one -- or perhaps moreso because it's subtle), we should instead look at it at a high level and have a design discussion around what makes sense from the perspective of \"what should the public contract be in the absence of prior behaviour\" rather than \"what's the shortest distance from what we have today to what works\".\r\n\r\nFor example, if we were writing the documentation for the thread mode in which PowerShell starts, I think we should prefer the behaviour that is simple, where it's straightforward both what the default is and how the configuration operates.\r\n\r\nIf, instead, the logic is \"well, on Unix it does this, and on some Windows SKUs it does that, but on other Windows SKUs it does this third thing\" then it's not logic that users can meaningfully depend on and is a weak contract; it's flaky or it may as well be. If it can't be explained in a single clause in documentation, it's probably a bad behaviour.\r\n\r\nWe need to make this behaviour well-defined and dependable, rather than trying to second guess users and have it \"just work\" by resisting user configuration. Especially when it comes to something subtle like apartment state, users should be able to categorically know that PowerShell's main runspace is STA or MTA without having to run through a flowchart, unless we have a really good reason for forcing that complexity.\r\n\r\nSo with that in mind I think we should ask for this to be reviewed by the relevant working group/subject matter experts.",
    "created_at": "2021-04-15T06:43:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820160842",
    "id": 820160842,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDE2MDg0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820160842/reactions"
    },
    "updated_at": "2021-04-15T06:46:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820160842",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> unless we have a really good reason for forcing that complexity.\r\n\r\nEverything was fine there until we returned the WPF support. As result the current state is inevitably difficult.\r\nAnother question if we want to migrate from WPF to MAUI. I wonder how MAUI works on Unix if there is no STA.\r\n\r\nI see no problem if we fallback to MTA on Windows systems that do not have STA, since there will be no WPF and it seems rest  of subsystems already address STA absence. (What's going on with  Clipboard (Show-Command, Out-Grid, HelpWindow), TaskBarJumpList, COM, WMI, CredSSP, New-Object for COM) on such Windows?)",
    "created_at": "2021-04-15T07:27:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820186506",
    "id": 820186506,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDE4NjUwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820186506/reactions"
    },
    "updated_at": "2021-04-15T07:27:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820186506",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Another question if we want to migrate from WPF to MAUI.\r\n\r\nI suspect that despite being able to make our own migration (although that would require more work that currently isn't planned), users with existing scripts that use WPF expect continued compatibility.",
    "created_at": "2021-04-15T15:37:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820526680",
    "id": 820526680,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDUyNjY4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820526680/reactions"
    },
    "updated_at": "2021-04-15T15:37:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820526680",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> However, pwsh defaults to STA to support WinForms/WPF (same as Windows PowerShell)\r\n\r\nI think it would be useful for us to summarise the state of things so far in terms of which PowerShell version has what behaviour and what are the motivating scenarios.\r\n\r\nIs the following accurate?\r\n\r\n- Non-Windows has no concept of apartment state, because it's a COM concept\r\n- WinPS defaults to STA, and `-mta` overrides that to MTA. The default of STA is to enable WPF by default.\r\n- PS 6 defaulted to MTA because .NET Core 2 didn't have WPF and we had no reason to think it would return. There was no `-sta` or `-mta` flag.\r\n- PS 7 and .NET Core 3 reintroduced WPF. PowerShell changed its default back to STA to make WPF work, breaking SKUs where STA was unavailable.\r\n\r\nSome questions:\r\n\r\n- What's the purpose and behaviour of the `-mta` and `-sta` flags when:\r\n    - They are used to override the default?\r\n    - They match the default?\r\n    - They set an unsupported behaviour?\r\n- What's the full explanation for PS 6 defaulting to MTA? Absent WPF it was still a breaking change and COM is not something where I would think we'd benefit greatly from configuring differently, so I would imagine we'd want a good reason for subtly breaking things there.\r\n- Were there existing scenarios depending on MTA that were broken when PS 7 switched the default?",
    "created_at": "2021-04-15T15:57:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820542318",
    "id": 820542318,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDU0MjMxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820542318/reactions"
    },
    "updated_at": "2021-04-15T16:00:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820542318",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Is the following accurate?\r\n\r\nYes.\r\n\r\n> Were there existing scenarios depending on MTA that were broken when PS 7 switched the default?\r\n\r\nNo. \r\n(We could think about MTA as \"no threading limitations\" and STA as \"apply some threading limitations\")\r\n\r\n> What's the full explanation for PS 6 defaulting to MTA?\r\n\r\nWe just followed default .Net behavior that is MTA on all platforms. It was ok until .Net ported WPF to .Net Core and we retrieved WPF to pwsh too.\r\n\r\n> Absent WPF it was still a breaking change and COM is not something where I would think we'd benefit greatly from configuring differently, so I would imagine we'd want a good reason for subtly breaking things there.\r\n\r\nI am not sure I understand the phrase. While pwsh was MTA the COM subsystem did set STA explicitly so COM support was still working. And this keeps on working the same today.\r\nAs I said earlier, other subsystems work in a similar way, or should work in a similar way if possible.\r\n\r\n> What's the purpose and behaviour of the -mta and -sta flags when:\r\nThey are used to override the default?\r\n\r\nGood question :-) \r\nSTA allows to use some GUI controls https://www.sapien.com/blog/2015/03/09/powershell-studio-knowing-when-to-use-sta-mode/\r\nMTA allows specific thread scenarios (I have no examples)\r\n\r\n> They match the default?\r\n\r\nInteresting, PowerShell 2 default is MTA. But it raised issues with GUI scripts and default was changed to STA in PowerShell 3.\r\nISE always is STA as GUI tool.\r\n\r\n> They set an unsupported behavior?\r\n\r\nIf we set MTA and call an GUI control we get an exception.\r\nIf we set STA and a script uses an advanced threading the script will stop working.\r\n\r\n\r\n\n\n<blockquote><img src=\"http://www.sapien.com/blog/wp-content/uploads/2015/03/2Sapien_Blog1.png\" width=\"48\" align=\"right\"><div>SAPIEN Blog</div><div><strong><a href=\"https://www.sapien.com/blog/2015/03/09/powershell-studio-knowing-when-to-use-sta-mode/\">PowerShell Studio: Knowing when to use STA mode</a></strong></div><div>Follow @SAPIENDavid Recently, on our forums, a user asked why certain controls didn’t function correctly or threw an error when he unchecked the STA option in PowerShell Studio.  STA (Single Threaded Apartment) and MTA (Multi-Threaded Apartment) determine how a process manages legacy COM objects and</div></blockquote>",
    "created_at": "2021-04-15T18:21:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820637008",
    "id": 820637008,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDYzNzAwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820637008/reactions"
    },
    "updated_at": "2021-04-15T18:21:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820637008",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Regarding PSCore6, it was changed to MTA because PowerShell Core 5 (what was shipped on NanoServer originally) was MTA and this is because NanoServer doesn't support STA.  I'm pretty sure .NET Core didn't support STA initially until later when it was at \"parity\" with .NET Framework.  For PowerShell 7, we did change the default back to STA because of support for WPF/WinForms that was added to .NET Core.\r\n\r\nOnce STA or MTA is set on a thread, you can't change it.  So once the default runspace created by ConsoleHost (in this case) has set the ApartmentState, that's it.  This is why the switches exist for pwsh.exe and allow to be set if the user knows they are calling some COM API that requires one or the other to work successfully.\r\n\r\nI think the only scenario PowerShell users have encountered STA vs MTA is using winforms/WPF from script.  The cases where Windows itself doesn't support STA, the usage of PowerShell is as a console or automation and I haven't heard of any scenarios where they needed STA (or aware of the problem until they try PS7).\r\n",
    "created_at": "2021-04-15T21:18:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820737714",
    "id": 820737714,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDczNzcxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820737714/reactions"
    },
    "updated_at": "2021-04-15T21:18:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820737714",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "So for example, a set of behaviours that would make sense to me is:\r\n\r\n- No apartment state flag: PS tries to be STA on Windows but falls back to MTA, always MTA on Unix.\r\n- `-sta`: PS starts in STA, if STA is not supported it crashes with a helpful message\r\n- `-mta`: PS starts in MTA, if you used WPF and hit issues it's time to read the docs\r\n\r\nI don't love that the default isn't simply the implicit version of an explicit configuration, and I've seen plenty of docs where the default or undefined configuration seems innocent enough but ends up being very complex because it tortuously tries to \"just work\". In this circumstance though, I don't think the default is that complicated -- you either end up in STA, or if that's not supported, MTA.\r\n\r\nThe important part for me is that when you explicitly set an option, you either get the configured result or it crashes, there's no \"suggestion noted\" behaviour where we quietly just give you MTA when you use `-sta` on a platform where it doesn't work.\r\n\r\nIt does raise the question to me of providing the `-sta` flag at all; on Unix the decision was made that since you can't configure it you don't get a switch. But now our matrix is more complicated.",
    "created_at": "2021-04-15T23:41:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820805533",
    "id": 820805533,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDgwNTUzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820805533/reactions"
    },
    "updated_at": "2021-04-15T23:41:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820805533",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> So for example, a set of behaviours that would make sense to me is:\r\n> \r\n> * No apartment state flag: PS tries to be STA on Windows but falls back to MTA, always MTA on Unix.\r\n> * `-sta`: PS starts in STA, if STA is not supported it crashes with a helpful message\r\n> * `-mta`: PS starts in MTA, if you used WPF and hit issues it's time to read the docs\r\n\r\nIt is ideal.\r\nA complicity with default will be only on GUI-less Windows (Nano) but this is not the version that ill-informed users are using. \r\n\r\n> It does raise the question to me of providing the -sta flag at all; on Unix the decision was made that since you can't configure it you don't get a switch. But now our matrix is more complicated.\r\n\r\nIn history the default was changed **thrice**! So it is better to keep the parameters :-)",
    "created_at": "2021-04-16T04:21:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-820895266",
    "id": 820895266,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDg5NTI2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820895266/reactions"
    },
    "updated_at": "2021-04-16T04:21:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820895266",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Leaving a question here in anticipation of the @PowerShell/powershell-committee on this.\r\n\r\nI'm fairly ignorant of apartment state in general, and my knowledge is limited to the kind of historical context that @SteveL-MSFT referenced above.\r\n\r\nIn what sort of situations would a user care about their apartment state beyond the two scenarios relevant in this issue (i.e. whether or not WPF/WinForms is supported, and whether or not pwsh starts up in the default case on some Windows SKUs). \r\n\r\n@rjmholt, you alluded to this a little bit in some of your responses around the user needing to hold a flow chart in their head around apartment state. But what sort of user needs to do that, and for what? ",
    "created_at": "2021-04-21T21:42:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824377492",
    "id": 824377492,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDM3NzQ5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824377492/reactions"
    },
    "updated_at": "2021-04-21T21:42:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824377492",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this and is ok with handling the check in the consolehost so that it starts on Windows skus that don't support STA and explicitly specifying `-sta` on such a system fails",
    "created_at": "2021-04-21T22:45:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824412840",
    "id": 824412840,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDQxMjg0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824412840/reactions"
    },
    "updated_at": "2021-04-21T22:45:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824412840",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Isn't it easier to just check this System.Threading.Thread.CurrentThread.ApartmentState?\r\n\r\nBy default we start in STA on Windows but if an Windows build doesn't support STA it start in MTA mode. Yes?",
    "created_at": "2021-04-22T04:12:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824524179",
    "id": 824524179,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDUyNDE3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824524179/reactions"
    },
    "updated_at": "2021-04-22T04:14:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824524179",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "No, by default ApartmentState is `Unknown` unless explicitly set to STA or MTA.  You only need STA or MTA to interop with COM.",
    "created_at": "2021-04-22T04:13:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824524609",
    "id": 824524609,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDUyNDYwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824524609/reactions"
    },
    "updated_at": "2021-04-22T04:14:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824524609",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Interesting, in debugger I see MTA for main thread. This brings us back to the idea that try-fallback (and cache result) approach should work even more reliable and predictable.",
    "created_at": "2021-04-22T04:48:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824535224",
    "id": 824535224,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDUzNTIyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824535224/reactions"
    },
    "updated_at": "2021-04-22T04:48:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824535224",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The @PowerShell/powershell-committee discussed the option to have runspace creation handle the problem of STA support, but decided against it as ApartmentState is set via the Runspace API and should be respected.  The console, however, is not something most users need to think about STA vs MTA and should just start and for advanced users, they can rely on the `-sta` and `-mta` switches.",
    "created_at": "2021-04-22T05:01:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824539741",
    "id": 824539741,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDUzOTc0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824539741/reactions"
    },
    "updated_at": "2021-04-22T05:01:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824539741",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> ApartmentState is set via the Runspace API and should be respected\r\n\r\nIf it is all about \"You only need STA or MTA to interop with COM.\" the proposal with fallback in `_worker.SetApartmentState(apartmentState);` will work very well since the fallback will be raised only on Windows builds without COM.\r\n\r\n(Such fallback is used already in New-Object but in another scenario.)",
    "created_at": "2021-04-22T05:10:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-824542662",
    "id": 824542662,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDU0MjY2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824542662/reactions"
    },
    "updated_at": "2021-04-22T05:12:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824542662",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": ":tada:`v7.2.0-preview.6` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.6)\n",
    "created_at": "2021-05-27T17:32:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/15106#issuecomment-849812548",
    "id": 849812548,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15106",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0OTgxMjU0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849812548/reactions"
    },
    "updated_at": "2021-05-27T17:32:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/849812548",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
