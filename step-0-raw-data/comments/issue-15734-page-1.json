[
  {
    "author_association": "NONE",
    "body": "Actually, I've realised that my request is not quite right. There is no need to introduce a new parameter **EscapedPath**. rather, we can abandon *LiteralPath* and any function that yields a path, should just return it already escaped, so that means that commands like **Get-ChildItem**/**Get-Item** would need to be changed and the other commands that I have mentioned would remain unchanged. Or you could introduce a new switch parameter to **Get-ChildItem**/**Get-Item** let's call it ___Escape___  which would invoke the escaping of paths. (Title changed to reflect this)\r\n",
    "created_at": "2021-07-07T10:49:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15734#issuecomment-875502112",
    "id": 875502112,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15734",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTUwMjExMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/875502112/reactions"
    },
    "updated_at": "2021-07-07T10:55:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/875502112",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
      "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
      "followers_url": "https://api.github.com/users/plastikfan/followers",
      "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
      "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/plastikfan",
      "id": 49785914,
      "login": "plastikfan",
      "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
      "organizations_url": "https://api.github.com/users/plastikfan/orgs",
      "received_events_url": "https://api.github.com/users/plastikfan/received_events",
      "repos_url": "https://api.github.com/users/plastikfan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/plastikfan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There are a lot of use cases mixed in with paths and I think returning the wildcard escaped variant for the output here is wrong. I could be using the full path for many things unrelated to these cmdlet, e.g. calling a .NET function, writing the value to a file, etc. All these values don't understand the concept of wildcards and it would be wrong for them to contain them IMO. \r\n\r\nOne of the methods to avoid all this pain is to pipe the objects into each other, e.g.\r\n\r\n```powershell\r\n$item = Get-Item -LiteralPath 'C:\\temp\\[folder]'\r\n\r\n# Do stuff with $item\r\n\r\n$item | Remove-Item\r\n```\r\n\r\nThis works because the `-LiteralPath` accept input by property name and it has an alias `PSPath` that matches to the `PSPath` outputted by `Get-Item`. This means that it's essentially the same as doing `Remove-Item -LiteralPath $item.PSPath`.\r\n\r\n> Paradoxically, **New-Item** does not use LiteralPath, so I'm not sure how it handles wilcard characters in file system paths.\r\n\r\nIt's simple, `New-Item` creates something and thus doesn't have a concept of wildcards at all. Wildcards are only useful when you are trying to interact with existing objects",
    "created_at": "2021-07-07T20:24:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15734#issuecomment-875908070",
    "id": 875908070,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15734",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NTkwODA3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/875908070/reactions"
    },
    "updated_at": "2021-07-07T20:24:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/875908070",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I guess we could add an flag in source cmdlet if an object comes from file system (vs from user) so that cmdlet consumer can see if it really need to do globbing for Path parameter.\r\nWe could consider real Exists property of FileSystemInfo class if we don't get perf penalty.",
    "created_at": "2021-11-30T06:15:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15734#issuecomment-982320958",
    "id": 982320958,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15734",
    "node_id": "IC_kwDOAvT7bc46jQc-",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/982320958/reactions"
    },
    "updated_at": "2021-11-30T06:19:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/982320958",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
