[
  {
    "author_association": "COLLABORATOR",
    "body": ".Net MSFT team recommends to migrate to .Net Core. So it's time to migrate Windows PowerShell scripts to PowerShell 7. \r\nIn PowerShell 7 web cmdlets was optimized for many scenarios and do not consume large memory. These optimizations will be never ported to Windows PowerShell.\r\n(If you see issues with these cmdlets please report.)\r\nSo you can continue to use Windows PowerShell while you can but it is recommended to begin migration to PowerShell 7.\r\n\r\n@PaulHigin Have you thoughts about the backward compatibility scenario?",
    "created_at": "2020-04-22T12:34:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-617751525",
    "id": 617751525,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzc1MTUyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617751525/reactions"
    },
    "updated_at": "2020-04-22T12:34:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617751525",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I found some folks talking about how PowerShell limits the amount of RAM allocated to the remote session, which is 150MB. I adjusted it using the following on the remote system:\r\n> \r\n> ```powershell\r\n> Set-Item WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB 1000000\r\n> Set-Item WSMan:\\localhost\\Plugin\\Microsoft.PowerShell\\Quotas\\MaxMemoryPerShellMB 1000000\r\n> Restart-Service WinRM\r\n> ```\r\nCan you verify the output of this command  on the remote server  ?\r\n`Get-Item WSMan:\\localhost\\Plugin\\*\\Quotas\\MaxMemoryPerShellMB`\r\n\r\nI think you have set the MaxMemory for Windows PowerShell but not for PowerShell 7. \r\n\r\n\r\n",
    "created_at": "2020-04-22T14:43:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-617822663",
    "id": 617822663,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzgyMjY2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617822663/reactions"
    },
    "updated_at": "2020-04-22T14:43:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617822663",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There haven't been any changes that I am aware of in PS7 remoting affecting max allowed memory.  The default values are the same for either Windows PowerShell (\"microsoft.powershell\") or PowerShell 7 (\"powershell.7\").  In both cases the default value is unlimited ([int]::MaxValue).\r\n\r\nBut you can check the configuration on the target machine, to see if it has changed from the default value, as @fMichaleczek  points out.  You should check both the individual endpoint plugin, but also the overall quota setting for the machine:\r\n\r\n```powershell\r\n# Individual powershell.7 plugin\r\ndir WSMan:\\localhost\\Plugin\\Microsoft.PowerShell\\Quotas\\MaxMemoryPerShellMB\r\n\r\n# Machine wide max shell memory\r\ndir WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB\r\n```",
    "created_at": "2020-04-22T15:44:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-617859606",
    "id": 617859606,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzg1OTYwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617859606/reactions"
    },
    "updated_at": "2020-04-22T15:44:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617859606",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "NONE",
    "body": "@PaulHigin I think you're wrong. There is a dedicated plugin configured for each version of PowerShell. (And if i remember, it was the same with PS2.0 + PS3-5.1) and the value of 1Gb is hardcoded in Install-PowerShellRemoting.ps1.\r\n\r\nThis is the result of my previous command on my computer :\r\n```\r\nPS> Get-Item WSMan:\\localhost\\Plugin\\*\\Quotas\\MaxMemoryPerShellMB | Select PSPath, Value\r\n\r\nPSPath                                                                           Value\r\n------                                                                           -----\r\nWSMan::localhost\\Plugin\\microsoft.powershell\\Quotas\\MaxMemoryPerShellMB          2147483647\r\nWSMan::localhost\\Plugin\\microsoft.powershell.workflow\\Quotas\\MaxMemoryPerShellMB 2147483647\r\nWSMan::localhost\\Plugin\\microsoft.powershell32\\Quotas\\MaxMemoryPerShellMB        2147483647\r\nWSMan::localhost\\Plugin\\PowerShell.7\\Quotas\\MaxMemoryPerShellMB                  1024\r\nWSMan::localhost\\Plugin\\PowerShell.7.0.0\\Quotas\\MaxMemoryPerShellMB              1024\r\n```\r\n\r\nThis is conform to the file Install-PowerShellRemoting.ps1\r\n\r\n```\r\nPS> Get-Content $PSHome\\Install-PowerShellRemoting.ps1 | Where { $_ -like \"*MaxMemoryPerShellMB*\" -or $_ -like \"*\\Plugin\\*\" }\r\n\r\n$regKey = \"HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WSMAN\\Plugin\\$pluginEndpointName\"\r\n    <Quotas IdleTimeoutms=\"7200000\" MaxConcurrentUsers=\"5\" MaxProcessesPerShell=\"15\" MaxMemoryPerShellMB=\"1024\" MaxShellsPerUser=\"25\"\r\n```\r\n",
    "created_at": "2020-04-22T16:27:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-617886092",
    "id": 617886092,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzg4NjA5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617886092/reactions"
    },
    "updated_at": "2020-04-22T16:27:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617886092",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yes, there is a quotas setting for each endpoint (plugin) configured on the target machine.  But there is also a machine wide setting that sets max values allowed for each individual plugin.  In any case the default quota values is unlimited for the latest versions of PowerShell (Windows PowerShell 5.1, PS 6, PS 7).  Earlier versions of PowerShell had arbitrary fixed default values, but this was opened up for later versions.",
    "created_at": "2020-04-22T17:10:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-617910666",
    "id": 617910666,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzkxMDY2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617910666/reactions"
    },
    "updated_at": "2020-04-22T17:10:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617910666",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "NONE",
    "body": "@PaulHigin this is my report and test. \r\n\r\n## Protocol\r\n\r\nI use this simple code to reproduce the memory consumption\r\n`1..50|%{$x=1}{[array]$x+=$x}`\r\n\r\nI monitor the memory of the wsmprovhost.exe process\r\n\r\nThe Shell config is default : \r\n```\r\nPS C:\\Windows\\System32> dir WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB\r\n   WSManConfig: Microsoft.WSMan.Management\\WSMan::localhost\\Shell\r\n\r\nType            Name                           SourceOfValue   Value\r\n----            ----                           -------------   -----\r\nSystem.String   MaxMemoryPerShellMB                            2147483647\r\n```\r\n\r\n## PowerShell.7 / MaxMemoryPerShellMB = 1Gb (default)\r\n\r\n\"OperationStopped: Exception of type 'System.OutOfMemoryException' was thrown\"\r\nwsmprovhost.exe consume less than 1Gb\r\n\r\n## PowerShell.7 / MaxMemoryPerShellMB = 4Gb\r\n\r\n\"Array dimensions exceeded supported range.\"\r\nwsmprovhost.exe consume over 3Gb\r\n\r\n## Machine wide setting\r\n\r\nWhen I change the quota, I see this warning : \r\n```\r\nThe updated configuration is effective only if it is less than or equal to the value of global quota WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB. \r\nVerify the value for the global quota using the PowerShell cmdlet \"Get-Item WSMan:\\localhost\\Shell\\MaxMemoryPerShellMB\".\r\n```\r\n\r\n## Windows PowerShell 5.1 default quota\r\n\r\nIn theory and practical, I think there is no quota for Windows PowerShell 5.1 on Win10 Updated and  i found that very very dangerous (i will have to verify default quota on Windows Server...)\r\n",
    "created_at": "2020-04-22T18:13:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-617944363",
    "id": 617944363,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzk0NDM2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617944363/reactions"
    },
    "updated_at": "2020-04-22T18:13:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/617944363",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">> In theory and practical, I think there is no quota for Windows PowerShell 5.1 on Win10 Updated and i found that very very dangerous (i will have to verify default quota on Windows Server...)\r\n\r\nThat is only the default setting.  You can set the quotas to whatever makes sense for your needs.",
    "created_at": "2020-04-23T16:02:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-618486140",
    "id": 618486140,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODQ4NjE0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618486140/reactions"
    },
    "updated_at": "2020-04-23T16:02:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618486140",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "NONE",
    "body": "@PaulHigin @iSazonov\r\n\r\n- I think the PowerShell Comitee will have to examine if we stay like that or if we have to align PowerShell on Windows to Windows PowerShell ?  Introduce an additional step to the PowerShell installer when you choose to enable PSRemoting should be a great idea (to force people to know what they do) but i understand it costs a lot of works.\r\n\r\n- There is also a need to update about_session_configurations for PowerShell 6+ because it give wrong information who apply to Window PowerShell (SessionName = Microsoft.PowerShell).\r\n[about_session_configurations/V7](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_session_configurations?view=powershell-7)\r\n\r\nI dislike the idea to give unlimited memory with a long time out (2h). If you want to reproduce my issue, i give bellow an example who could consume unlimited memory (limited for 3Gb in this example) for 2h on Windows PowerShell. SSH protocol has a KeepAlive mecanism, so it's easy to have a small timeout on openssh-server. PSRemoting over WinRM is a popular thing, I think adding a KeepAlive mecanism on client side, could resolve the issue and doesn't need a change on the protocol.\r\n\r\n## Comparaison PSRemoting\r\n\r\n| Parameters                    | Windows PowerShell over WinRM | PowerShell over WinRM | PowerShell over OpenSSH |\r\n| ----------------------------- | ----------------------------- | --------------------- | ----------------------- |\r\n| IdleTimeoutms                 | 7200000                       | 7200000               | 3000 (1)                |\r\n| MaxConcurrentCommandsPerShell | 2147483647                    | 1000                  | N/A                     |\r\n| MaxConcurrentUsers            | 2147483647                    | 5                     | N/A                     |\r\n| MaxIdleTimeoutms              | 2147483647                    | 43200000              | N/A                     |\r\n| MaxMemoryPerShellMB           | 2147483647                    | 1024                  | N/A                     |\r\n| MaxProcessesPerShell          | 2147483647                    | 15                    | N/A                     |\r\n| MaxShells                     | 2147483647                    | 25                    | N/A                     |\r\n| MaxShellsPerUser              | 2147483647                    | 25                    | N/A                     |\r\n\r\n(1) source : [What is the default idle timeout for OpenSSH?](https://unix.stackexchange.com/questions/150402/what-is-the-default-idle-timeout-for-openssh)\r\n\r\n## Issue with a long time out and unlimited memory\r\n\r\nFrom an admin pwsh.exe :  \r\n```\r\n& {\r\n# start a process of pwsh which connect to Windows PS Endpoint and execute a high memory job\r\n$proc = start pwsh @(\"-noexit\", \"-c\", 'icm -session (nsn localhost -conf Microsoft.PowerShell) { try {1..50|%{$x=1}{[array]$x+=$x}} catch {$_} }') -Win Hidden -Pass\r\n\r\n# wait a little that the invoke command have consume enough memory\r\nsleep -s 60\r\n\r\n# kill the process\r\nkill $proc.ID\r\n\r\n# verify the wsmprovhost memory consumption\r\ngps wsmprovhost | select Name,@{N='WorkingSetInMb';E={[Math]::Round($_.ws/1MB)}}\r\n\r\n}\r\n```\r\n\r\nResult : \r\n```\r\nName        WorkingSetInMb\r\n----        --------------\r\nwsmprovhost           2876\r\n```\r\n\r\nThe memory come back after the WinRM timeout the session (2h).",
    "created_at": "2020-04-23T19:50:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-618626555",
    "id": 618626555,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODYyNjU1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618626555/reactions"
    },
    "updated_at": "2020-04-23T19:50:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618626555",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  Introduce an additional step to the PowerShell installer when you choose to enable PSRemoting should be a great idea\r\n\r\nI think we should keep Installer simple otherwise it will confuse and annoying users.\r\n\r\n> There is also a need to update about_session_configurations for PowerShell 6+\r\n\r\nPlease open new issue in PowerShell-Docs repo or pull PR there.\r\n\r\nAlso I think we could increase MaxMemoryPerShellMB up to 2 Gb for PowerShell Core - modern computers have usually 2 and more Gb memory. Although it was more correct to make it more frugal.\r\n\r\n\r\n",
    "created_at": "2020-04-24T04:26:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-618794401",
    "id": 618794401,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODc5NDQwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618794401/reactions"
    },
    "updated_at": "2020-04-24T04:26:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618794401",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm closing this issue, as it appears to be related to the DotNet legacy API not handling 2GB or larger objects properly during IO read stream operations, and have since opened a new question (#13721).",
    "created_at": "2020-09-30T20:28:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12423#issuecomment-701626860",
    "id": 701626860,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12423",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTYyNjg2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/701626860/reactions"
    },
    "updated_at": "2020-09-30T20:28:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/701626860",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6956305?v=4",
      "events_url": "https://api.github.com/users/ChrisLynchHPE/events{/privacy}",
      "followers_url": "https://api.github.com/users/ChrisLynchHPE/followers",
      "following_url": "https://api.github.com/users/ChrisLynchHPE/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisLynchHPE/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ChrisLynchHPE",
      "id": 6956305,
      "login": "ChrisLynchHPE",
      "node_id": "MDQ6VXNlcjY5NTYzMDU=",
      "organizations_url": "https://api.github.com/users/ChrisLynchHPE/orgs",
      "received_events_url": "https://api.github.com/users/ChrisLynchHPE/received_events",
      "repos_url": "https://api.github.com/users/ChrisLynchHPE/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ChrisLynchHPE/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisLynchHPE/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ChrisLynchHPE"
    }
  }
]
