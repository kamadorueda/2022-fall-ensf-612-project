[
  {
    "author_association": "NONE",
    "body": "> Why I can't I override this behavior? Unix shells allow me to do this. Is there another way?\r\n\r\nIn Windows (unlike Unix) the current directory is in the PATH by design. If you add `.` to the PATH environment variable you're doing an useless job. To avoid typing `.\\` you can try to rewrite `$env:PATH` in `$funcion:prompt`, something like:\r\n\r\n```powershell\r\n# $profile\r\n\r\n$env:Path += \";$pwd\"\r\n\r\n# function Global:prompt {   ### Maybe you have to make Global function\r\n\r\nfunction prompt {\r\n...\r\n$env:Path = $env:PATH -replace ';[^;]+$', \";$pwd\"\r\n}\r\n```",
    "created_at": "2022-07-09T05:53:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179485430",
    "id": 1179485430,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GTYT2",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179485430/reactions"
    },
    "updated_at": "2022-07-09T06:38:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179485430",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > Why I can't I override this behavior? Unix shells allow me to do this. Is there another way?\r\n> \r\n> In Windows (unlike Unix) the current directory is in the PATH by design. If you add `.` to the PATH environment variable you're doing an useless job. To avoid typing `.\\` you can try to rewrite `$env:PATH` in `$funcion:prompt`, something like:\r\n> \r\n\r\n@237dmitry   Sorry, that's not correct.   In `Cmd`  the current directory is treated as being on the path as it was in command.com and CP/M. PowerShell does not, and explains that it does not. \r\n\r\n![image](https://user-images.githubusercontent.com/16209593/178100828-870385c5-fbd4-437a-a0ff-98ae2a0354a2.png)\r\n\r\nUsing prompt to do it is not very reliable; `cd <apppath>; <appName>` wouldn't work \r\n\r\n\r\nBecause I have scripts in my `WindowsPowerShell` directory which I need to run in PowerShell 7 where the profile directory is `PowerShell`\r\nI have these 4 lines in my profile - the last one handles the issue of modules sometimes not being on `PSModulepath.`  \r\n```\r\n$psDir = Join-path ([System.Environment]::GetFolderPath( [System.Environment+SpecialFolder]::MyDocuments)) \"\\windowsPowershell\"\r\nif (-not (Test-Path $psDir)) {$psdir = $PSScriptRoot}\r\nSet-Item -Path \"Env:\\PATH\" (\".;$psDir\\;\"+(Get-Content \"ENV:\\PATH\"))  #Linux is case sensitive and uses \"PATH\"; windows isnt and uses \"Path\".\r\nif ($env:PSModulePath -notmatch [regex]::Escape($psDir)) { $env:PSModulePath += \";$psDir\\Modules\" }\r\n ```\r\n\r\n\r\n@jeffythedragonslayer  - you want a version of line 3 -  I think some variation of     \r\n`Set-Item -Path \"Env:\\PATH\" (\".;\"+(Get-Content \"ENV:\\PATH\") ) `     \r\nhas been in my profile since 2007 or 2008 - and if I trust my memory just setting it in the Path environment variable before PowerShell starts doesn't work, you need to do it in the PowerShell session.  I can't recall if there is a reason I couldn't use `$env:path` and used `Set-item` and `Get-Content`\r\n \r\nThat works. \r\n<img width=\"688\" alt=\"image\" src=\"https://user-images.githubusercontent.com/16209593/178101014-e761e9f0-1502-4912-9490-d2c3a5d26a51.png\">\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-07-09T10:10:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179517596",
    "id": 1179517596,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GTgKc",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179517596/reactions"
    },
    "updated_at": "2022-07-09T10:10:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179517596",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> PowerShell does not\r\n\r\nThis is a security restriction. Is not it so?\r\n\r\n> Using prompt to do it is not very reliable; `cd <apppath>; <appName>` wouldn't work\r\n\r\nI will note that I am absolutely satisfied with how it is now.  I just suggested a solution. And, I don't have any file with the ';' symbol in its full name.",
    "created_at": "2022-07-09T11:15:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179526142",
    "id": 1179526142,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GTiP-",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179526142/reactions"
    },
    "updated_at": "2022-07-09T11:15:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179526142",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > PowerShell does not\r\n> \r\n> This is a security restriction. Is not it so?\r\n\r\nBecause a malicious script could be placed in the users directory with a name like \"notepad.ps1\" powershell broke with previous practice so that in its default state things were slightly more secure. It is also easy to add \".\" but hard to remove it.  So following \"secure by default\" is good and the inconvenience is small.  \r\n\r\n\r\n> \r\n> > Using prompt to do it is not very reliable; `cd <apppath>; <appName>` wouldn't work\r\n> \r\n> I will note that I am absolutely satisfied with how it is now. I just suggested a solution. And, I don't have any file with the ';' symbol in its full name.\r\n\r\nYou wouldn't have files with ; in their name. But you might want to do \r\n\r\n```\r\ncd 'C:\\Program Files\\Notepad++\\'  ;   'Notepad++.exe'\r\n```\r\nentering two commands as one. \r\n\r\n  \r\n\r\n\r\n\r\n",
    "created_at": "2022-07-09T13:33:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179546227",
    "id": 1179546227,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GTnJz",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179546227/reactions"
    },
    "updated_at": "2022-07-09T19:48:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179546227",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> entering two commands as one.\r\n\r\nMy variant does not work ((",
    "created_at": "2022-07-09T14:47:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179556501",
    "id": 1179556501,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GTpqV",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179556501/reactions"
    },
    "updated_at": "2022-07-09T14:47:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179556501",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This is a security feature that you could override by adding `.` to your path.  It's not something I would do.  And I would NOT RECOMMEND it but a quick test indicates it works:\r\n```powershell\r\nPS> $env:PATH += \".\"  # Don't do this!\r\nPS> '@echo \"This is a bat script\"' > echo.bat\r\nPS> echo.bat\r\n\"This is a bat script\"\r\n```\r\nThe reason PowerShell doesn't automatically run scripts in the current dir is that bad things can happen.  For example, if a bad actor places a native command in the current dir (that your credentials allow), that effectively overrides another, potentially built-in command you use without your knowledge, you invoke the bad script without even knowing it:\r\n```powershell\r\nPS> $env:PATH = \".;$env:PATH\" # Don't do this!\r\nPS> '@echo \"This is a bat script, might do something you would not like\" && certmgr.msc' > certmgr.bat\r\nPS> certmgr\r\n\"This is a bat script, might do something you would not like\"\r\n```\r\nHere you might have thought you were going to invoke the Windows `certmgr.msc` utility, but the bat file was able to interject itself, and normally you wouldn't know that it did.  BTW even with the dot at the end of the PATH, a bad actor could rely on frequently mistyped commands such as `dit`, `gti` or `gx` (instead of dir, git, gc).\r\n \r\nIMO PowerShell is working \"as designed\". \r\n \r\nDoes anybody know if there is a tag or something you can place on a fenced code block to indicate to tools like Copilot not to EVER recommend this code?\r\n ",
    "created_at": "2022-07-09T20:41:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179603765",
    "id": 1179603765,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GT1M1",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179603765/reactions"
    },
    "updated_at": "2022-07-09T20:43:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179603765",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> This is a security feature that you could override by adding `.` to your path. It's not something I would do. And I would NOT RECOMMEND it \r\n\r\nIt is something I do myself, but advise people to think carefully about before doing it\r\n\r\n> a quick test indicates it works:\r\n> \r\n> ```powershell\r\n> PS> $env:PATH += \".\"  # Don't do this!\r\n> PS> '@echo \"This is a bat script\"' > echo.bat\r\n> PS> echo.bat\r\n> \"This is a bat script\"\r\n> ```\r\n\r\nNote that in this case `echo.bat` runs the script but `echo`  will run the PowerShell alias (and would run a function or cmdlet before searching the path). \r\n\r\n> \r\n> The reason PowerShell doesn't automatically run scripts in the current dir is that bad things can happen. For example, if a bad actor places a native command in the current dir (that your credentials allow), that effectively overrides another, potentially built-in command you use without your knowledge, you invoke the bad script without even knowing it:\r\n> \r\n> ```powershell\r\n> PS> $env:PATH = \".;$env:PATH\" # Don't do this!\r\n> PS> '@echo \"This is a bat script, might do something you would not like\" && certmgr.msc' > certmgr.bat\r\n> PS> certmgr\r\n> \"This is a bat script, might do something you would not like\"\r\n> ```\r\n\r\nThis is correct in all regards and is the logic behind the original design. However. \r\n1. In your first example you put \".\" last on the path, if a user does that, then the original executable is found. In this version \".\" comes first allowing the script to be found. \r\n2. The bad actor needs to drop scripts which match names of _commands which will be run_ into directories you will be in when you issue those commands. I need to know that you run `certmgr` from the prompt and not via [win]R , and that you put yourself in the a \"cert files\" directory first.  \r\n3. If the directory is being attacked is the where your profile is found. why not just append `set-alias certmgr \"~\\certmgr.bat\"` to the profile? Or add a module to the `modules` directory which defines `certmgr` that will then be loaded on demand? If anywhere on the path or PSModulePath is attackable, it's a place for malicious scripts, \".\" is a moving target. But with access to the profile an attacker can add somewhere to the path/psmodulepath.  \r\n4. If a bad actor was able to do this, in reality there were dozens of worse things they could do, and probably did do. \r\n\r\n\r\n> IMO PowerShell is working \"as designed\".\r\n\r\nIt is. The correct decision was made - i.e. where there are choices for configuration and one is even slightly more secure it  should be the default.  \r\n\r\n In reality the example I gave above:\r\n```\r\ncd \\program files\\notepad++\r\nnotepad++\r\n```\r\nisn't something I'd ever type.  I would type `\\prog[TAB]\\note[tab]\\not[tab]`   even in the current directory I'd type `note[tab]` and PowerShell would expand it to `.\\notepad++.exe`   the message \"Save typing AND improve security with tab completion\" is probably the right one to give. But if people have a way of working which they want to stick to, and understand the small risk that comes with it, PowerShell allows them to make that choice. \r\n",
    "created_at": "2022-07-10T11:46:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1179712616",
    "id": 1179712616,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GUPxo",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179712616/reactions"
    },
    "updated_at": "2022-07-10T11:46:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1179712616",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks for submitting this issue! We are marking by design for some of the listed reasons above. ",
    "created_at": "2022-07-11T17:40:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1180687061",
    "id": 1180687061,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5GX9rV",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1180687061/reactions"
    },
    "updated_at": "2022-07-11T17:40:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1180687061",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/20605456?v=4",
      "events_url": "https://api.github.com/users/StevenBucher98/events{/privacy}",
      "followers_url": "https://api.github.com/users/StevenBucher98/followers",
      "following_url": "https://api.github.com/users/StevenBucher98/following{/other_user}",
      "gists_url": "https://api.github.com/users/StevenBucher98/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/StevenBucher98",
      "id": 20605456,
      "login": "StevenBucher98",
      "node_id": "MDQ6VXNlcjIwNjA1NDU2",
      "organizations_url": "https://api.github.com/users/StevenBucher98/orgs",
      "received_events_url": "https://api.github.com/users/StevenBucher98/received_events",
      "repos_url": "https://api.github.com/users/StevenBucher98/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/StevenBucher98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/StevenBucher98/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/StevenBucher98"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2022-07-12T21:01:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17652#issuecomment-1182496841",
    "id": 1182496841,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17652",
    "node_id": "IC_kwDOAvT7bc5Ge3hJ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1182496841/reactions"
    },
    "updated_at": "2022-07-12T21:01:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1182496841",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
