[
  {
    "author_association": "COLLABORATOR",
    "body": "> Note: The tokens in question, such as -foo:bar look like named PowerShell arguments,\r\n\r\n@mklement0 As i describe in the comments in #6292, these **_are_** named PowerShell arguments. Always. Parameter binding is done long after the compile is complete.  Now in the compiled AST, the token for `-foo:` has a flag indicating that there was no space after it in the source code. The `NativeCommandParameterBinder` looks at this AST element to see if it has the flag is set then concatenates the parameter and argument with no space between them. If it's not set, then a space is inserted. This only works if the arguments  are literal (i.e. the `NativeCommandParameter` was access to the AST for the argument). In the splatting case, the arguments are values, not literal arguments so you get a space. \r\n\r\nOne way to fix this is to propagate the \"NoSpace\" token property into metadata on the corresponding string value. The `NativeCommandParameterBinder` could then check for this metadata when converting it's arg array into a string. It's probably worth thinking about this a bit more to see if there are other cases (especially *nix specific cases) that should be addressed.\r\n",
    "created_at": "2018-03-14T17:27:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6360#issuecomment-373107132",
    "id": 373107132,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6360",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzEwNzEzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373107132/reactions"
    },
    "updated_at": "2018-03-14T17:27:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373107132",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "#6492 (since closed as a duplicate) shows that splatting `@args` is also broken when calling PowerShell functions (not just external programs):\r\n\r\nSupporting that scenario is presumably even trickier, because the expectation here is that the named parameters are passed through as-is, with their original types.\r\n\r\nHere's a simplified repro:\r\n\r\n```powershell\r\nfunction b {\r\n  Param\r\n  (\r\n      [Switch] $p1,\r\n      [int] $p2,\r\n      $rest\r\n  )\r\n  \"`$p1: [$p1]\"\r\n  \"`$p2: [$p2]\"\r\n  \"`$rest: [$rest]\"\r\n}\r\n\r\n& { b @args } -p1:$false 666\r\n```\r\n\r\n```powershell\r\n$p1: [True]  # `-p1:` was interpreted as just `-p1`\r\n$p2: [0]      # `$false`, as a separate argument, was coerced to [int] 0\r\n$rest: [666] # what was meant to be the 2nd argument was passed as the 3rd\r\n```\r\n\r\nThe workaround - and preferable solution to begin with - is to define the same `param()` block in the relaying function and splat with `@PSBoundParameters`.",
    "created_at": "2018-03-25T13:53:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6360#issuecomment-375972209",
    "id": 375972209,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6360",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTk3MjIwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/375972209/reactions"
    },
    "updated_at": "2019-06-03T22:27:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/375972209",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I just spent the past week or so wrestling with this issue. After tracking it down to forced switch parameter values (such as `-foo:$bar`) not getting set after splatting with `@Args`, I thought this must be an obscure scoping issue. Imagine my surprise when I discovered that forcing any switch parameter value this way wouldn't have the expected behavior. I tested it even with the Powershell 7 Preview 1 release and the same issue still arises. I would hope that it would be fixed after more than a year of being a known problem...\r\n\r\nFor reference, this is the test I created to show the bug. Saw it on a Server 2016 machine with Powershell 7 Preview 1, as well as a Server 2012 R2 machine with Powershell 5.1.\r\n\r\n```powershell\r\nfunction foo\r\n{\r\n    param(\r\n        [switch]$testArg = $false\r\n    )\r\n\r\n    write-host \"Test arg value: '$testArg'\"\r\n}\r\n\r\nfunction bar\r\n{\r\n    foo @Args\r\n}\r\n\r\n$testSplat = @{\r\n    testArg = $false\r\n}\r\n\r\nwrite-host \"#### Foo tests ####\"\r\n\r\nfoo\r\nfoo -testArg:$true\r\nfoo -testArg:$false\r\nfoo @testSplat\r\n\r\nwrite-host \"#### Bar tests ####\"\r\n\r\nbar\r\nbar -testArg:$true\r\nbar -testArg:$false\r\nbar @testSplat\r\n```\r\n\r\n",
    "created_at": "2019-06-03T16:18:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6360#issuecomment-498325863",
    "id": 498325863,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6360",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODMyNTg2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498325863/reactions"
    },
    "updated_at": "2019-06-03T16:18:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498325863",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7739085?v=4",
      "events_url": "https://api.github.com/users/Jerald/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jerald/followers",
      "following_url": "https://api.github.com/users/Jerald/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jerald/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jerald",
      "id": 7739085,
      "login": "Jerald",
      "node_id": "MDQ6VXNlcjc3MzkwODU=",
      "organizations_url": "https://api.github.com/users/Jerald/orgs",
      "received_events_url": "https://api.github.com/users/Jerald/received_events",
      "repos_url": "https://api.github.com/users/Jerald/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jerald/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jerald/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jerald"
    }
  }
]
