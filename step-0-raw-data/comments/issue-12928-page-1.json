[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience  Correct and by design. Intrinsic variables already have a set of rules for when and how they are bound. This API was not intended to change those rules. What it does is allow you to provide ambient context to the script block when it executes. This is used by DSC internally to define the set of resources (functions) available inside a configuration (function). For example, if you want to make a function available to a scriptblock without setting it in the current scope and thus making it visible to everything you do, you can use this API. It's particularly useful in modules where you can't use dynamic scoping to provision an execution environment. Does that make sense?",
    "created_at": "2020-06-10T01:59:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12928#issuecomment-641673774",
    "id": 641673774,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12928",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTY3Mzc3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641673774/reactions"
    },
    "updated_at": "2020-06-10T01:59:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641673774",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience  Correct and by design. Intrinsic variables already have a set of rules for when and how they are bound. This API was not intended to change those rules. What it does is allow you to provide ambient context to the script block when it executes. This is used by DSC internally to define the set of resources (functions) available inside a configuration (function). For example, if you want to make a function available to a scriptblock without setting it in the current scope and thus making it visible to everything you do, you can use this API. It's particularly useful in modules where you can't use dynamic scoping to provision an execution environment. Does that make sense?",
    "created_at": "2020-06-10T02:00:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12928#issuecomment-641674214",
    "id": 641674214,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12928",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTY3NDIxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641674214/reactions"
    },
    "updated_at": "2020-06-10T02:00:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641674214",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@bpayette It works, you can set intrinsic variables with this API.  The API iterates the `List<PSVariable>` looking for intrinsic variables and removes them to be handled separately (through `InvokeWithPipe` parameters).\r\n\r\nThis issue is just about the `List<>` argument getting mutated because of internal logic.  I would have expected a copy of the list to have been made if changes were needed before it passed the list to `InvokeWithPipe`.",
    "created_at": "2020-06-10T02:06:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12928#issuecomment-641675771",
    "id": 641675771,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12928",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTY3NTc3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641675771/reactions"
    },
    "updated_at": "2020-06-10T02:06:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641675771",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
