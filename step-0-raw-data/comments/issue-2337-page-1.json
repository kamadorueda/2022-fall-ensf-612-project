[
  {
    "author_association": "MEMBER",
    "body": "Great idea.  I actually implemented this at one point (V2 or V3, I forget) but we didn't end up taking the change.\n\nIt is a potential breaking change - though probably an obscure one. The most likely breakage we envisioned was in scripts that generate PowerShell - though that's still a bit of a stretch. Imagine some script like this:\n\n``` powershell\n$indent = 4\n$t = [regex]::Replace(@\"\n    `$x = @\"\n        hello world\n    \"@\n    `$x\n\"@, \"^ {$indent}\", \"\", [System.Text.RegularExpressions.RegexOptions]::Multiline)\niex $t\n```\n\nIn other words, maybe the generator wants a nicely indented here string in a here string, and unindents them before executing.\n",
    "created_at": "2016-09-22T18:46:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-248992717",
    "id": 248992717,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk5MjcxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/248992717/reactions"
    },
    "updated_at": "2016-09-22T18:46:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/248992717",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I would also welcome the ability to define a here string in one line (for convenient copy-paste-ability). Because sometimes I have strings with single quotes and dollar signs in them where I cannot use either single or double quotes and have to escape the special characters.",
    "created_at": "2018-05-22T21:04:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-391140368",
    "id": 391140368,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE0MDM2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391140368/reactions"
    },
    "updated_at": "2018-05-22T21:04:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391140368",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "It seems weird to call a single line string a here string.\r\n\r\nOne syntax we discussed but never implemented was very similar to a [Rust raw string literal](https://doc.rust-lang.org/reference/tokens.html#raw-string-literals), In PowerShell it might have looked like:\r\n\r\n```\r\nPS> \"abc '@' def\" -eq @'\r\nabc ''@' def\r\n'@ # Today's here string syntax\r\nTrue\r\nPS> \"abc '@' def\" -eq @''abc '@' def''@ # Proposed raw string #1\r\nTrue\r\nPS> \"abc ''@'' def\" -eq @'''abc ''@'' def'''@ # Proposed raw string #2\r\nTrue\r\n```\r\n\r\nThe point being that the delimiter is a variable number of characters so you can not worry about escaping or doubling up inside the string literal - just add more quotes in the delimiter when you hit a case where you'd double up the quote to get the literal quote in the string value.",
    "created_at": "2018-05-22T21:49:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-391152107",
    "id": 391152107,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1MjEwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 3,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391152107/reactions"
    },
    "updated_at": "2018-05-22T21:49:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391152107",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "That idea of rust raw literal strings would be awesome except that it cannot deal well with strings that start with a (single) quote, therefore a different character should be chosen in my opinion. Do you think this would be technically difficult to implement?",
    "created_at": "2018-05-22T22:00:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-391154794",
    "id": 391154794,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1NDc5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391154794/reactions"
    },
    "updated_at": "2018-05-22T22:05:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391154794",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "New delimiters should be straight forward.\r\n\r\nTo handle the quote problem - you could emulate markdown which ignores whitespace immediately after/before the delimiter, e.g.:\r\n\r\n```\r\nPS> \"'a'\" -eq @' 'a' '@\r\nTrue\r\n```\r\n\r\nThis of course might be a problem if you want leading/trailing whitespace in your string, but you'll have this problem no matter what character you choose - single quote, space, etc.",
    "created_at": "2018-05-22T22:19:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-391158886",
    "id": 391158886,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTE1ODg4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391158886/reactions"
    },
    "updated_at": "2018-05-22T22:19:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/391158886",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Looking at the prior PR, @SteveL-MSFT @lzybkr, it looks like the implementation was rejected due to it being insufficiently thorough.\r\n\r\nCan we get a committee decision or recommendation on the desired implementation for this? I note @SteveL-MSFT mentioned that we may want to have a consistent indentation level of whitespace that is snipped at the start of each line, determined by the string terminator, and @iSazonov posited we could use visible characters to define this level as well.\r\n\r\nI'm more than happy to attack this problem, it seems to me that it could be attacked at the tokenizer level without much difficulty, potentially, but I'd like to have a concrete definition of the expectation here.\r\n\r\nWould we need an RFC drafted and approved for this first?",
    "created_at": "2019-01-08T14:22:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-452315388",
    "id": 452315388,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjMxNTM4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/452315388/reactions"
    },
    "updated_at": "2019-01-08T14:22:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/452315388",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 I think a mini-RFC would be good to cover the desired usage and compatibility.  The main concern from the associated PR which was not approved is that it was a breaking change if whitespace was intended.  The recommendation is to propose a new token to make it explicit on the new behavior and not modify the existing behavior.",
    "created_at": "2019-01-08T17:20:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-452380310",
    "id": 452380310,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjM4MDMxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/452380310/reactions"
    },
    "updated_at": "2019-01-08T17:20:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/452380310",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> To handle the quote problem - you could emulate markdown which ignores whitespace immediately after/before the delimiter, e.g.: `PS> \"'a'\" -eq @' 'a' '@`\r\n> This of course might be a problem if you want leading/trailing whitespace in your string, but you'll have this problem no matter what character you choose - single quote, space, etc.\r\n\r\nWould it be too awful if you had to declare how many delimiters you intended to use?\r\n\r\n```powershell\r\n@[2]'''a'\r\n''@\r\n```\r\n\r\n(using brackets because `@2''` clashes with splatting a variable named 2).\r\n\r\nor in the end header, there's room for a lot more non-clashing ideas, although it would mean a parsing lookahead:\r\n\r\n```powershell\r\n    @'''a'\r\n    ''@{hereStringDelimiterLength=2; hereStringStyle=IndentedIgnoreWhitespace}@\r\n```\r\n\r\n",
    "created_at": "2019-03-27T05:06:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-476977324",
    "id": 476977324,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njk3NzMyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476977324/reactions"
    },
    "updated_at": "2019-03-27T05:15:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476977324",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/187787?v=4",
      "events_url": "https://api.github.com/users/HumanEquivalentUnit/events{/privacy}",
      "followers_url": "https://api.github.com/users/HumanEquivalentUnit/followers",
      "following_url": "https://api.github.com/users/HumanEquivalentUnit/following{/other_user}",
      "gists_url": "https://api.github.com/users/HumanEquivalentUnit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/HumanEquivalentUnit",
      "id": 187787,
      "login": "HumanEquivalentUnit",
      "node_id": "MDQ6VXNlcjE4Nzc4Nw==",
      "organizations_url": "https://api.github.com/users/HumanEquivalentUnit/orgs",
      "received_events_url": "https://api.github.com/users/HumanEquivalentUnit/received_events",
      "repos_url": "https://api.github.com/users/HumanEquivalentUnit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/HumanEquivalentUnit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HumanEquivalentUnit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/HumanEquivalentUnit"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Is it worth pointing out that PowerShell already handles here strings as starting with just TWO characters? The third character is completely superflous (mandatory, but totally unnecessary). Try writing `$x = @\"here\"` and see what PowerShell says: \r\n\r\n> No characters are allowed after a here-string header but before the end of the line.\r\n\r\nThe here-string header is just the first two characters, but there's a requirement that the actual content be on the next line.\r\n\r\n## Let's talk about the real problem\r\n\r\n1. Why do you want to do this?\r\n2. Why do you care about where the `\"@` has to go?\r\n\r\nI suspect what's really going on is that people are using editors like VS Code which does code folding based on indenting instead of braces and needing to put `\"@` in the first column **breaks the code folding**\r\n\r\n**We need to address the tooling,** not the language.\r\n\r\nI mean, I know it's awkward to have strings stuck up against the margins in in the code, but I also know that breaking code folding is the main reason it bothers _me_. If we make the here strings suddenly allow white space (we should definitely allow it after the `@\"` too, because it's just easier not to worry about invisible things, and it won't break any existing code), the very next day someone's going to realize that what we really wanted was the same amount of leading space that comes before the `\"@` to be trimmed off of each line in the string, so our multi-line strings are lined up relative to where we are in the code, not relative to the start of the line! \r\n\r\nWe'll end up seeing stuff like this all over the place in PowerShell code:\r\n\r\n```posh\r\n  @\"\r\n    Some wacky\r\n    Multiline\r\n    String\r\n  \"@ -replace '(?m)^\\s{2}'\r\n```\r\n\r\nOr worse, people will start indenting with tabs, so they can use spaces \"inside\" the indent ...",
    "created_at": "2019-03-27T05:46:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-476986427",
    "id": 476986427,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njk4NjQyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476986427/reactions"
    },
    "updated_at": "2019-03-27T05:46:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476986427",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> VS Code which does code folding based on indenting\r\n\r\nNot any more.  The PowerShell extension does code folding based on the AST (not indenting) since the v1.10 release thanks to @glennsarti.",
    "created_at": "2019-03-27T14:08:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-477172183",
    "id": 477172183,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE3MjE4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 5,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/477172183/reactions"
    },
    "updated_at": "2019-03-27T14:08:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/477172183",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "1.  Q:  Why do you want to do this?:\r\nA: I use here strings for sending nested JSON events to splunk.  I generate the event formatting in JSON and then write vars > string and use Send-SplunkEvent with the JSON as -inputobject\r\n2.  Q:  Why do you care about where the \"@ has to go?  \r\nA:  I'm generally doing this a few levels indented for a loop/if-then and it breaks the indenting of that level.  \r\n\r\nAn example is the below below here code:\r\n`    $JSONEvent = @\"\r\n{\r\n    \"accountId\": \"$($Account)\",\r\n    \"category\": \"$($Check.Category)\",\r\n    \"id\": \"$($Check.ID)\",\r\n    \"name\": \"$($Check.Name)\",\r\n    \"time\": \"$($Checkitems.Timestamp)\",\r\n$($Event)\r\n}\r\n\"@  #This needs to be at the start of the line, without indentation`\r\n\r\nThis is part of a script to get AWS Trusted Advisor data for each account.  I fill in the usual suspects account, check name etc.  then drop a munged $Event on the end of the object as that varies in field count/name for each check.  The section the above is a part of, is 2 indents in at this point, it'd just be nice to have this stay in the same indent.\r\n\r\n#Edit, didn't preserve the code formatting..\r\n",
    "created_at": "2020-02-05T00:58:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-582190851",
    "id": 582190851,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjE5MDg1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/582190851/reactions"
    },
    "updated_at": "2020-02-05T00:59:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/582190851",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/43255270?v=4",
      "events_url": "https://api.github.com/users/brendan-sherrin/events{/privacy}",
      "followers_url": "https://api.github.com/users/brendan-sherrin/followers",
      "following_url": "https://api.github.com/users/brendan-sherrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/brendan-sherrin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/brendan-sherrin",
      "id": 43255270,
      "login": "brendan-sherrin",
      "node_id": "MDQ6VXNlcjQzMjU1Mjcw",
      "organizations_url": "https://api.github.com/users/brendan-sherrin/orgs",
      "received_events_url": "https://api.github.com/users/brendan-sherrin/received_events",
      "repos_url": "https://api.github.com/users/brendan-sherrin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/brendan-sherrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brendan-sherrin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/brendan-sherrin"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@bergmeister  and @lzybkr, I love the idea of a _single-line_ raw string literal, which would also help with the problem #13068 is trying to solve.\r\n\r\nGiven that _this_ issue is primarily about allowing indented here-string end delimiters, I've created a separate proposal in #13204, based on @lzybkr's ideas.\r\n",
    "created_at": "2020-07-17T17:07:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-660229338",
    "id": 660229338,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDIyOTMzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/660229338/reactions"
    },
    "updated_at": "2020-07-17T17:07:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/660229338",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Was working on something off to the side yesterday that reminded me of this issue. For me, it's not just about the code folding but the readability/scannability of the code; here-strings are the only thing _I've_ run across that mandate breaking indentation behavior and it's _jarring_ to see it and then have to move your eyes back to where everything else is.\r\n\r\nThat people are writing indentation trimmers for here-strings is indicative of the problem being long-standing.\r\n\r\nIf a new pairing of symbols is required for indentation-trimming here-strings, maybe we could use one of the following:\r\n\r\n```powershell\r\nFunction Get-HereStringExample {\r\n    param()\r\n\r\n    begin {}\r\n\r\n    process {\r\n        @{\r\n            Current = @'\r\nThe here-strings we have now.\r\n'@\r\n            PossibleOne = @~'\r\n                A here-string we could have\r\n            '~@ # The ~ indicates trimming on either end; \r\n            PossibleTwo = @@'\r\n                A here-string we could have\r\n            '@@ # When there's more than one @, trim indent\r\n        }\r\n    }\r\n\r\n    end {}\r\n}\r\n```\r\n\r\nI slightly favor a trim character directive (no real preference on what character is used / the specific of the syntax, more about the usefulness) over adding `@`s. Consider these scenarios:\r\n\r\n```powershell\r\n    ...\r\n    @~'\r\n        A multi-line string,\r\n        with the leading whitespace trimmed\r\n    '@\r\n```\r\n\r\n```output\r\nA multi-line string,\r\nwith the leading whitespace trimmed\r\n\r\n```\r\n\r\n```powershell\r\n    ...\r\n    @'\r\n        A multi-line string,\r\n        with the trailing whitespace trimmed\r\n    '~@\r\n```\r\n\r\n```output\r\n\r\n        A multi-line string,\r\n        with the trailing whitespace trimmed\r\n```\r\n\r\n```powershell\r\n    ...\r\n    @~'\r\n        A multi-line string,\r\n        with the leading & trailing whitespace trimmed\r\n    '~@\r\n```\r\n\r\n```output\r\nA multi-line string,\r\nwith the leading & trailing whitespace trimmed\r\n```\r\n\r\nThis behavior is similar to the whitespace chomping behavior in some templating languages ([go templates](https://pkg.go.dev/text/template#hdr-Text_and_spaces), [Ruby ERB](https://rubyapi.org/o/erb#class-ERB-label-Recognized+Tags), [jinja](https://jinja.palletsprojects.com/en/3.1.x/templates/?highlight=whitespace#whitespace-control), etc) - in those cases, they're trimming whitespace _around_ the tag, but the same principle can be applied to _inside_ the control tag for a PowerShell here-string without much cognitive load, I think.\r\n\r\n- A trim directive on the opening tag removes all whitespace up to the first non-whitespace character line-by-line, determining the leading indent to trim from remaining lines by calculating the whitespace before the first non-whitespace character on the first line with non-whitespace characters. It trims up to that much whitespace from remaining lines.\r\n- A trim directive on the closing tag trims all whitespace after the last non-whitespace character.",
    "created_at": "2022-05-10T11:42:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2337#issuecomment-1122280244",
    "id": 1122280244,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2337",
    "node_id": "IC_kwDOAvT7bc5C5KM0",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1122280244/reactions"
    },
    "updated_at": "2022-05-10T11:43:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1122280244",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14190564?v=4",
      "events_url": "https://api.github.com/users/michaeltlombardi/events{/privacy}",
      "followers_url": "https://api.github.com/users/michaeltlombardi/followers",
      "following_url": "https://api.github.com/users/michaeltlombardi/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaeltlombardi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/michaeltlombardi",
      "id": 14190564,
      "login": "michaeltlombardi",
      "node_id": "MDQ6VXNlcjE0MTkwNTY0",
      "organizations_url": "https://api.github.com/users/michaeltlombardi/orgs",
      "received_events_url": "https://api.github.com/users/michaeltlombardi/received_events",
      "repos_url": "https://api.github.com/users/michaeltlombardi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/michaeltlombardi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaeltlombardi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/michaeltlombardi"
    }
  }
]
