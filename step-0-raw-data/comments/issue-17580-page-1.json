[
  {
    "author_association": "COLLABORATOR",
    "body": "I’ve yet to look at the full code but you are trying to convert the unicode codepoint to a byte and treat that as utf-8 bytes. This isn’t correct as the `\\uxxxx` is a unicode codepoint and you can treat it as a representation of a char. For example instead of\r\n\r\n```powershell\r\n$utf8Bytes = (-split ($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1 ')).ForEach([byte])\r\n[text.encoding]::UTF8.GetString($utf8Bytes)\r\n```\r\n\r\nYou should be doing\r\n\r\n```powershell\r\n[char][int]($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1') \r\n```\r\n\r\nThis should give you the hex representation of the codepoint (`0x00E6`), cast it to an integer, then finally cast that integer to the char. When it gets replaced back into the string it becomes a string.\r\n\r\nThis is untested so the code you need might be slightly different.",
    "created_at": "2022-06-25T01:23:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166164298",
    "id": 1166164298,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FgkFK",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166164298/reactions"
    },
    "updated_at": "2022-06-25T01:23:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166164298",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If we take a short snippet we can test this out\r\n\r\n```powershell\r\n'profile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6' -replace '\\\\u([0-9a-f]{4})', {\r\n    [char][int]($_.Value -replace '\\\\u([0-9a-f]{4})', '0x$1') \r\n}\r\n```\r\n\r\nThis outputs\r\n\r\n```\r\nprofile.header.profile=æªæ\r\n```\r\n\r\nIt's not your expectation but it matches the `\\u` escape values you have.\r\n\r\n* [\\u00e6](https://www.fileformat.info/info/unicode/char/00e6/index.htm) - `æ`\r\n* [\\u00aa](https://www.fileformat.info/info/unicode/char/00aa/index.htm) - `ª`\r\n* [\\u0094](https://www.fileformat.info/info/unicode/char/0094/index.htm) - `”` (seems to be a control character which is why it isn't shown)\r\n* [\\u00e6](https://www.fileformat.info/info/unicode/char/00e6/index.htm) - `æ`\r\n\r\nI have noticed that the expectation is based on each codepoint being a raw byte. So my comments above do not apply.\r\n\r\nWhat is weird is your reproducer does what you want, it is correctly encoding each `\\uxxxx` as a byte and you are correctly encoding those bytes to the proper string character. When I run it in my console I get the expected result back.",
    "created_at": "2022-06-25T01:45:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166167677",
    "id": 1166167677,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5Fgk59",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166167677/reactions"
    },
    "updated_at": "2022-06-25T01:45:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166167677",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "It is utf8 encoded\r\n\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\r\ne6aa94：檔\r\n\\u00e6\\u00a1\\u0088 \r\ne6a188：案\r\n----\r\n`(-split ($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1 ')).ForEach([byte])  `\r\nis:\r\n\\u00e6 to 0x00e6 to 230 byte(hex to dec)   \r\n\r\nNo problem with the code\r\n  \r\n![image](https://user-images.githubusercontent.com/26913892/175755988-06d020a9-fb45-44f8-b45b-4f358cd82fec.png)\r\n\r\nYou should note that it works during debugging，When it is saved as a PS1 file, it works properly  \r\nIt always uses **iso-8859-1** no matter how you tweak it",
    "created_at": "2022-06-25T03:10:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166179333",
    "id": 1166179333,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FgnwF",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166179333/reactions"
    },
    "updated_at": "2022-06-25T03:29:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166179333",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "NONE",
    "body": "> When it is saved as a PS1 file, it works properly It always uses iso-8859-1 no matter how you tweak it\r\n\r\ntry:\r\nsave ps1 file add BOM head,encoding any\r\nps1 内若含有中日韩等编码，必须保存成bom头，编码任意。\r\n即bom+utf8可以，bom+utf16le也行。\r\nbom头，bom头，有头无乱码。还支持中文变量名，韩文变量名，参数名，参数值，等。\r\n\r\n注意：你的代码，只要加上bom头保存。在powershell 5.1，powershell 7.3 preview中运行毫无问题，已经测试。\r\n\r\n\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7  ----这些东西在我眼中视为幺蛾子。你用任意编码的字符串，转成base64，继而传递，即可避免幺蛾子。避免编码转换，避免编码不识别。\r\n\r\n\r\n ",
    "created_at": "2022-06-25T13:58:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166293071",
    "id": 1166293071,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhDhP",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166293071/reactions"
    },
    "updated_at": "2022-06-25T14:12:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166293071",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > When it is saved as a PS1 file, it works properly It always uses iso-8859-1 no matter how you tweak it\r\n> \r\n> try: save ps1 file add BOM head,encoding any ps1 内若含有中日韩等编码，必须保存成bom头，编码任意。 即bom+utf8可以，bom+utf16le也行。 bom头，bom头，有头无乱码。还支持中文变量名，韩文变量名，参数名，参数值，等。\r\n> \r\n> 注意：你的代码，只要加上bom头保存。在powershell 5.1，powershell 7.3 preview中运行毫无问题，已经测试。\r\n> \r\n> \\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7 ----这些东西在我眼中视为幺蛾子。你用任意编码的字符串，转成base64，继而传递，即可避免幺蛾子。避免编码转换，避免编码不识别。\r\n\r\n求求你，不会，不懂不要乱说。",
    "created_at": "2022-06-25T17:32:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166330751",
    "id": 1166330751,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhMt_",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166330751/reactions"
    },
    "updated_at": "2022-06-25T17:32:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166330751",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "NONE",
    "body": "Could not reproduce the problem . Fake issue, just change the machine\r\n\r\nwarn:\r\nThis guy always provides, can't reproduce the problem.\r\nThis person does not respect the person answering the question.\r\nFor a long time, the person does not respond to the question follow-up. Don't close the issue either.\r\n\r\nsee:   #16983 ",
    "created_at": "2022-06-25T18:56:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166343924",
    "id": 1166343924,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhP70",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166343924/reactions"
    },
    "updated_at": "2022-06-25T19:09:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166343924",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "Omg, he wants to sell me software!  \r\nHis answer is off topic and makes no sense",
    "created_at": "2022-06-25T19:52:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166351866",
    "id": 1166351866,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhR36",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166351866/reactions"
    },
    "updated_at": "2022-06-25T19:52:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166351866",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "NONE",
    "body": "![image](https://user-images.githubusercontent.com/26913892/175788942-a8874351-5814-4870-895c-eb0e9f0bed10.png)\r\n@kasini3000 还需要看什么版本我帮你测试哈。",
    "created_at": "2022-06-25T20:03:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166353321",
    "id": 1166353321,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhSOp",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166353321/reactions"
    },
    "updated_at": "2022-06-25T20:03:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166353321",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "When running on Linux I get your expectations (when running your code).\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175799111-c8956290-3f29-4d50-967b-f511fd7ff24e.png)\r\n\r\nI notice you are running on Windows whereas I am running on Linux. So this is mostly some problems dealing with the different environments. Looking at your code I see a few things that could be the problem.\r\n\r\n### Splitting your String with -split [System.Environment]::NewLine\r\n\r\nTechnically Windows newlines are both the carriage return and newline `\\r\\n` but in your example you've input a string using a here string. In PowerShell (both WinPS and PowerShell) this results in it being just a newline\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175799505-c397c3fa-90b7-4dfa-9a7c-a6901664ca0a.png)\r\n\r\nThis means `-split [System.Environment]::NewLine` won't work as you expect on Windows because the output will contain the full text rather than an array of each line\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175799559-a3d207c6-f738-41a0-bb8e-f833226687a1.png)\r\n\r\nIf you compare that on a non-Windows host where `[System.Environment]::NewLine` is just the `\\n` we see the value is safely split into each line\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175799600-8ad6254b-28da-43e1-9261-c9ae550e5482.png)\r\n\r\nWhy this is important is explained in the final point.\r\n\r\n### The `\\u2019` example doesn't work with your encoding scheme\r\n\r\nThis goes into my original point where you are treating unicode codepoints as raw bytes that are UTF-8 encoded. This is not what you should be doing with raw unicode codepoints. We can notice this being a problem with the `\\u2019` example in the last example. The `\\u2019` is meant to represent [U+2019](https://www.fileformat.info/info/unicode/char/2019/index.htm) which is a smart right quote `’`. The 2019 is the raw unicode codepoint and you can easily get this value by just casting the hex value to a `[char]` like so\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175799674-977a342f-2c4f-44c6-98ca-1c9f83542401.png)\r\n\r\nThis goes against your previous encoding scheme where the source text has encoded raw bytes as a `\\uxxxx` format. The code you currently have will convert `2019` to `0x2019` and try to encode that to a byte which fails because it is too large. Even if you had the code to try and convert to the `[byte[]]@(0x20, 0x19)` and then try and decode that using UTF-8 you will get 2 characters; [U+0020 Space](https://www.fileformat.info/info/unicode/char/0020/index.htm) and [U+0019 End of Medium](https://www.fileformat.info/info/unicode/char/0019/index.htm). If you control the code that is generating your text you really need to fix it up so it encodes your characters correctly. For example if you want the first line to be `profile.header.profile=檔案名稱` the escaped string should be\r\n\r\n```\r\nprofile.header.profile=\\u6a94\\u6848\\u540d\\u7a31\r\n```\r\n\r\nEach of the characters you have are represented by their Unicode codepoint values, rather than trying to smuggle in the UTF-8 byte representation. The code then simply becomes\r\n\r\n```powershell\r\n# This is whatever you want to unescape\r\n$content = 'profile.header.profile=\\u6a94\\u6848\\u540d\\u7a31'\r\n\r\n$content -replace '\\\\u([0-9a-f]{4})', {\r\n    [char][int]\"0x$($_.Groups[1])\"\r\n}\r\n```\r\n\r\nIgnoring that fact, the presence of this line causes the regex replace to fail because it's unable to cast the entry `\\u2019`\r\n\r\n> Cannot convert argument \"item\", with value: \"0x2019\", for \"Add\" to type \"System.Byte\": \"Cannot convert value \"0x2019\" to type \"System.Byte\". Error: \"Value was either too large or too small for an unsigned byte.\r\n\r\nThis brings me to my final point\r\n\r\n### A failure on the regex replacement has a fallback\r\n\r\nThe function has a fallback if `[Regex]::Replace` fails by calling `[Regex]::Unescape($inputString)`. Because on Windows you are processing the entire content rather than per line it's always going to fail because it's trying to process `\\u2019`. This means the entire content will be unescaped rather than the line entry.\r\n\r\nLet's see the behaviour of\r\n\r\n```powershell\r\n[Regex]::Unescape(\"profile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\")\r\n```\r\n\r\nOn both Linux this becomes `profile.header.profile=æªæ¡åç¨±` (what you are getting) due to Regex unescaping the raw unicode codepoints as actual unicode codepoints rather than UTF-8 bytes being smuggled into the codepoints. This is directly related to my 2nd point where your input string isn't really done properly.\r\n\r\n### Summary\r\n\r\nAll in all you should fix up whatever is generating this text to properly encode the Unicode characters rather than have it encode it as Unicode codepoints that represent the UTF-8 bytes of the character. For example:\r\n\r\n```powershell\r\n# The string should be this\r\n'profile.header.profile=\\u6a94\\u6848\\u540d\\u7a31'\r\n\r\n# But not this\r\n'profile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1'\r\n```\r\n\r\nIf you cannot change this then you need to fix up the `-spit [System.Environment]::NewLine` to properly split by newlines on Windows. A very nice way to split by newline and not care whether it's `\\r\\n` or `\\n` you can do `-split \"\\r?\\n\"`, so\r\n\r\n```powershell\r\nfunction UnescapeNonIsoChar($inputString) {\r\n    Try {\r\n        [regex]::replace($inputString, '(?:\\\\u[0-9a-f]{4})+', { \r\n            param($m) \r\n            $utf8Bytes = (-split ($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1 ')).ForEach([byte])\r\n            [text.encoding]::UTF8.GetString($utf8Bytes)\r\n            \r\n        })\r\n    } Catch {\r\n        [regex]::Unescape($inputString)\r\n    }\r\n}\r\n\r\n@'\r\nprofile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\r\nprofile.header.customer=\\u00e5\\u00ae\\u00a2\\u00e6\\u0088\\u00b6\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\r\nprofile.header.account=\\u00e5\\u00b8\\u00b3\\u00e8\\u0099\\u009f/\\u00e6\\u00a2\\u009d\\u00e4\\u00bb\\u00b6\\u00e4\\u00bb\\u00a3\\u00e7\\u00a2\\u00bc\r\nprofile.header.description=\\u00e6\\u008f\\u008f\\u00e8\\u00bf\\u00b0\r\nlayout.msg.updatePrimaryUsersLayout=Kindly save it as a New Layout as Primary user\\u2019s layout cannot be updated.\r\n'@ -split \"\\r?\\n\" | ForEach-Object { UnescapeNonIsoChar -inputString $_ }\r\n```\r\n\r\nI still want to stress you should fix up whatever is generating the strings to generate them properly rather than using this hack but the `-split \"\\r?\\n\"` is a workaround to ensure you process this line by line and any lines that cause a failure in the replacement code won't affect each other.",
    "created_at": "2022-06-26T05:41:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166422676",
    "id": 1166422676,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhjKU",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166422676/reactions"
    },
    "updated_at": "2022-06-26T05:41:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166422676",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I still want to stress you should fix up whatever is generating the strings to generate them properly rather than using this hack but the -split \"\\r?\\n\" is a workaround to ensure you process this line by line and any lines that cause a failure in the replacement code won't affect each other.   \r\n\r\n\r\nI'm feeding back bugs. Please note that it is a utf8 encoded character, not Unicode (utf16)\r\n\r\nhttps://www.youtube.com/watch?v=hNNeldPcTfs\r\n\r\nI don't need to replace methods, it's something they need to fix\r\n\r\n<blockquote><img src=\"https://i.ytimg.com/vi/hNNeldPcTfs/maxresdefault.jpg\" width=\"48\" align=\"right\"><div><img src=\"https://www.youtube.com/s/desktop/f9ccd8c6/img/favicon_144x144.png\" height=\"14\"> YouTube</div><div><strong><a href=\"https://www.youtube.com/watch?v=hNNeldPcTfs\">1</a></strong></div></blockquote>",
    "created_at": "2022-06-26T06:10:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166425934",
    "id": 1166425934,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5Fhj9O",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166425934/reactions"
    },
    "updated_at": "2022-06-26T06:14:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166425934",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  Please note that it is a utf8 encoded character\r\n\r\nI'm sorry but this is just incorrect, text has no explicit encoding until you make it bytes. In this case the `\\uxxxx` represents the Unicode codepoint. This is not UTF-8, UTF-16-, UTF-32, or some other Unicode encoding scheme but where the character fits on the unicode character table. For example the character `檔` https://www.compart.com/en/unicode/U+6A94 is denoted by the Unicode codepoint `U+6A94` and when escaped in a string becomes `\\u6a94`. Notice how the codepoint `U+xxxx` directly corresponds to the `\\uxxxx` value. We can see that yes when represented as UTF-8 the bytes are `0xE6, 0xAA, 0x94` but that does not mean the `\\u` escape sequence for that character is `\\u00e6\\u00aa\\u0094`, it is truly `\\u6a94`. You can even see that by using builtin methods with .NET to escape that\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175802080-df48559c-3506-43b8-a9d7-1589692692e5.png)\r\n\r\nYou've even done this correctly with your last line\r\n\r\n```\r\nlayout.msg.updatePrimaryUsersLayout=Kindly save it as a New Layout as Primary user\\u2019s layout cannot be updated.\r\n```\r\n\r\nThis contains the `\\u2019` entry which related to https://www.fileformat.info/info/unicode/char/2019/index.htm. If going by your logic where `\\u` should be the UTF-8 bytes then why is it not `\\u00e2\\u0080\\u0099`? If `\\uxxxx` is meant to represent bytes why does it have 4 characters after the `u`, a byte is limited to a max of 255 (`0xFF`) so anything beyond `\\u00ff` can never be represented by just a byte.\r\n\r\nIf you want to continue using the incorrect interpretation that `\\uxxxx` is a way to interpret the UTF-8 encoded form of the codepoint then you need to fix up the `-split` logic so that a failure in 1 line doesn't affect the others. Put simply your code is mixing 2 different ways of doing things and your attempts at working around an error is causing the failure. Nothing PowerShell needs to do here as it's working correctly. I've even given you code that will work on both platforms.\r\n\r\n<blockquote><img src=\"/en/unicode/images/icon/icon-compart.svg\" width=\"48\" align=\"right\"><div>https://www.compart.com/en/unicode/U+6A94</div><div><strong><a href=\"https://www.compart.com/en/unicode/U+6A94\">Unicode</a></strong></div><div>U+6A94 is the unicode hex value of the character CJK Unified Ideograph-6A94. Char U+6A94, Encodings, HTML Entitys:&#27284;,&#x6A94;, UTF-8 (hex), UTF-16 (hex), UTF-32 (hex)</div></blockquote>",
    "created_at": "2022-06-26T06:17:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166427216",
    "id": 1166427216,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhkRQ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166427216/reactions"
    },
    "updated_at": "2022-06-26T06:24:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166427216",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": ">我帮你测试\r\n\r\nwhat ? you help me ?   \r\ni will gone and say ：“goog bye”\r\n\r\n----\r\n\r\nthis issue use new install vm test ,It's easy to spot and can't reproduce the problem.\r\nis support ，not bug！\r\n\r\n----\r\n\r\nI see that your two issues are related to business. It looks like a Hong Kong banking institution.\r\n I don't recommend finding the ps community team for specific technical support. It is recommended to go to the forum to find FREE business technical support.\r\n\r\n----\r\n\r\nIn general, the ps community team does not provide support outside of powershell.\r\nFor Hong Kong business organizations, slqite libraries and scripts are provided. Is 15$ a lot?\r\n",
    "created_at": "2022-06-26T06:20:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166427816",
    "id": 1166427816,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5Fhkao",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166427816/reactions"
    },
    "updated_at": "2022-06-26T06:27:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166427816",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n\r\n\r\n> If you want to continue using the incorrect interpretation that is a way to interpret the UTF-8 encoded form of the codepoint then you need to fix up the logic so that a failure in 1 line doesn't affect the others. Put simply your code is mixing 2 different ways of doing things and your attempts at working around an error is causing the failure. Nothing PowerShell needs to do here as it's working correctly. I've even given you code that will work on both platforms.`\\uxxxx``-split`\r\n\r\n![image](https://user-images.githubusercontent.com/26913892/175802531-d2ba8d5c-39aa-4ccb-8125-1f56ede937a2.png)\r\n\r\n\r\nIt was explained clearly in my first reply, actually this is just an example, this kind of thing happens quite often during transcoding\r\n\r\n\r\n",
    "created_at": "2022-06-26T06:44:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166431483",
    "id": 1166431483,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FhlT7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166431483/reactions"
    },
    "updated_at": "2022-06-26T06:44:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166431483",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I'm sorry but this is just incorrect, text has no explicit encoding until you make it bytes. In this case the represents the Unicode codepoint. This is not UTF-8, UTF-16-, UTF-32, or some other Unicode encoding scheme but where the character fits on the unicode character table. For example the character https://www.compart.com/en/unicode/U+6A94 is denoted by the Unicode codepoint and when escaped in a string becomes . Notice how the codepoint directly corresponds to the value. We can see that yes when represented as UTF-8 the bytes are but that does not mean the escape sequence for that character is , it is truly . You can even see that by using builtin methods with .NET to escape that\\uxxxx檔U+6A94\\u6a94U+xxxx\\uxxxx0xE6, 0xAA, 0x94\\u\\u00e6\\u00aa\\u0094\\u6a94\r\n\r\nIt can be any form: \r\n\r\n\\uxxxx,    \r\n0x0000,    \r\n0x00,     \r\n000000    \r\nor ababababab, it doesn't matter what form it is. \\uxxxx, 0x0000, 0x00 will eventually become continuous characters like '000000', just convert it into a byte array. Here it is utf8 encoding.\r\nYou can make a valid judgment here by decoding the entire string, instead of decoding a single unicode character using something like '[char]', in this example you fall into a trap, and you end up with a messy string\r\n\r\n**I noticed you wanted to tell me that [Regex]::Unescape() only supports unicode, thanks**\r\n@jborean93 \r\nThere seems to be some truth to what I said, and I was almost convinced.\r\nBut, has the problem gone away? No, there is no such problem when running ps1 files, also when you run in linux console everything works fine. You see no problem with the windows powershell console not interpreting the text correctly\r\n",
    "created_at": "2022-06-26T17:47:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166599382",
    "id": 1166599382,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FiOTW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166599382/reactions"
    },
    "updated_at": "2022-06-26T20:00:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166599382",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This is my last try, if you don't understand what is wrong after this you are on your own.\r\n\r\nYes it can be any form but mostly languages go for the `\\uxxxx` format where `xxxx` is the Unicode codepoint value. Using `檔` as an example again we can find the Unicode information at https://www.compart.com/en/unicode/U+6A94. It has the following properties\r\n\r\n* The Unicode codepoint is `U+6a94`\r\n* The UTF-8 byte representation is `0xE6, 0xAA, 0x94`\r\n* The UTF-16-LE byte representation is `0x6A, 0x94`\r\n* The UTF-32-LE byte representation is `0x00, 0x00, 0x6A, 0x94`\r\n\r\nA few extra things I want to stress\r\n\r\n* Unicode != UTF-16-LE\r\n  * Microsoft products sometimes lumps them into the same thing but\r\n  * Unicode is the standard\r\n  * UTF-16 is an encoding scheme of how Unicode characters are encoded to bytes\r\n* The Unicode codepoint `U+6a94` is pretty much the UTF-16-le byte representation but that's just a coincidence\r\n  * Due to how UTF-16 was originally written, any Unicode characters in the `0x7FFF` range are encoded as their codepoint which is why they match\r\n  * You don't really need to know this fact, just that when I talk about `\\uxxxx` I am talking about the Unicode codepoint and not the UTF-16-LE byte representation\r\n\r\nWhat you are doing is you are taking the UTF-8 byte representation and trying to smuggle it in using escaped Unicode codepoint sequences so it becomes `\\u00e6\\u00aa\\u0094`. This is not strictly correct as this character when represented by the proper unicode codepoint is `\\u6a94` (because it's `U+6a94`, the code you have technically works because you are interpreting `\\uxxxx` as the UTF-8 bytes. Ignoring PowerShell and dotnet you can see that other language prove me correct in this statement, to display `檔` I need to use `\\u6a94` and not `\\u00e6\\u00aa\\u0094`\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175833454-ce13526e-c998-4371-88e9-6485213bed32.png)\r\n\r\nOne thing I do need to mention, `U+6a94` is pretty much the equivalent of both of the UTF-16-LE bytes. This is just how UTF-16 works. Ignore that coincidence for now as UTF-16 was originally designed to map the Unicode codepoint values until they found out the space wasn't large enough. Just know that the value of the Unicode codepoint (what starts with `U+xxxx`) is what we are talking about.\r\n\r\nNotice that I am running in Python which is completely unrelated to PowerShell and their documentation mentioned the `\\uxxxx` https://docs.python.org/3/howto/unicode.html format\r\n\r\nPowerShell even has it's own standard by using the backtick u escape sequence and the value hex value of the Unicode codepoint (not necessarily the UTF-16-LE byte representation).\r\n\r\n```powershell\r\n`u{xxxx}`\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175833561-e065451c-2b12-49c4-8126-e67507b02175.png)\r\n\r\nNotice how yet again only the Unicode codepoint `U+6a94` works in the scenario. Trying to use the UTF-8 bytes as the value for each codepoint results in that erroneous string you mentioned.\r\n\r\nHopefully this convinces you why I am saying doing `\\u00e6\\u00aa\\u0094` to represent the character `檔` is incorrect. In saying that the code you've written does correctly escape the `\\uxxxx` codepoints as UTF-8 bytes as I you can see by just running it against your first line\r\n\r\n```powershell\r\nfunction UnescapeNonIsoChar($inputString) {\r\n    Try {\r\n        [regex]::replace($inputString, '(?:\\\\u[0-9a-f]{4})+', { \r\n            param($m) \r\n            $utf8Bytes = (-split ($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1 ')).ForEach([byte])\r\n            [text.encoding]::UTF8.GetString($utf8Bytes)\r\n            \r\n        })\r\n    } Catch {\r\n        [regex]::Unescape($inputString)\r\n    }\r\n}\r\n\r\nUnescapeNonIsoChar -inputString 'profile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1'\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175833375-fc0e7c61-29f0-4999-83d9-b29368adbd35.png)\r\n\r\nNotice how this is the exact same code as what you have and the output is correct. This is even running on Windows to replicate the platform you are on.\r\n\r\nNotice what happens when you try and do the first and last line\r\n\r\n```powershell\r\nfunction UnescapeNonIsoChar($inputString) {\r\n    Try {\r\n        [regex]::replace($inputString, '(?:\\\\u[0-9a-f]{4})+', { \r\n            param($m) \r\n            $utf8Bytes = (-split ($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1 ')).ForEach([byte])\r\n            [text.encoding]::UTF8.GetString($utf8Bytes)\r\n            \r\n        })\r\n    } Catch {\r\n        [regex]::Unescape($inputString)\r\n    }\r\n}\r\n\r\nUnescapeNonIsoChar -inputString @'\r\nprofile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\r\nlayout.msg.updatePrimaryUsersLayout=Kindly save it as a New Layout as Primary user\\u2019s layout cannot be updated.\r\n'@\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175833855-95da6ff2-0fcc-4c0b-8351-557e40f3613f.png)\r\n\r\nThe text that worked before is now failing. This is because of the entry `\\u2019` in the last line causing the `[Regex]::Replace` call to fail and the input string falling back to `[Regex]::Unespace($inputString)` to be called. The reason why this is failing because `\\u2019` cannot be converted to a single byte\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175833933-7e8be393-6713-46c8-83d5-c63b0e66b54e.png)\r\n\r\nIn fact what `\\u2019` presents is the [Right Single Quotation Mark](https://www.compart.com/en/unicode/U+2019). Notice how this codepoint is `u+2019` and it matches the same value as `\\u2019` in the text. The presence of this value in the string causes the entire regex replacement to fail, moving it to the `[regex]::Unescape($inputString)` call in your catch block. This `Unespace` method is unescaping `\\uxxxx` as per the rules I've talked about above which is why you get the different strings.\r\n\r\nThis is critical to understand, a failure in the `[Regex]::Replace` method causes it to go through `[Regex]::Unescape` which is why you get the wrong output back. When you combine this with the fact that the `-split [System.Environment]::NewLine` isn't actually splitting your here string you can notice that the whole function is being called on the full string rather than line by line. The full string contains the `\\u2019` entry causing the failure with your logic which causes the `\\uxxxx` entries in the previous lines to be escaped by their Unicode codepoint value.\r\n\r\nTo prove that the split doesn't work look at the result of this\r\n\r\n```powershell\r\nFunction Test-PerLine {\r\n    [CmdletBinding()]\r\n    param (\r\n        [Parameter(ValueFromPipeline)]\r\n        [string]\r\n        $InputObject\r\n    )\r\n    \r\n    begin { $i = 0 }\r\n    process {\r\n        $i++\r\n        \"Line: $InputObject\"\r\n    }\r\n    end {\r\n        \"Lines processed; $i\"\r\n    }\r\n}\r\n\r\n@'\r\nline 1\r\nline 2\r\n'@ -split [System.Environment]::NewLine | Test-PerLine\r\n\r\n@'\r\nline 1\r\nline 2\r\n'@ -split \"\\r?\\n\" | Test-PerLine\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175834145-3bf25ed1-3e27-48fc-aaf2-a93e526dd501.png)\r\n\r\nNotice how when `-split [System.Environment]::NewLine` was used the function was only called once (`Lines process: 1`) whereas when `-split \"\\r?\\n\"` was used it was passed in line by line. If you were to adjust your code so it did `-split \"\\r?\\n` you will notice it works\r\n\r\n```powershell\r\nfunction UnescapeNonIsoChar($inputString) {\r\n    Try {\r\n        [regex]::replace($inputString, '(?:\\\\u[0-9a-f]{4})+', { \r\n            param($m) \r\n            $utf8Bytes = (-split ($m.Value -replace '\\\\u([0-9a-f]{4})', '0x$1 ')).ForEach([byte])\r\n            [text.encoding]::UTF8.GetString($utf8Bytes)\r\n            \r\n        })\r\n    } Catch {\r\n        [regex]::Unescape($inputString)\r\n    }\r\n}\r\n\r\n@'\r\nprofile.header.profile=\\u00e6\\u00aa\\u0094\\u00e6\\u00a1\\u0088\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\r\nprofile.header.customer=\\u00e5\\u00ae\\u00a2\\u00e6\\u0088\\u00b6\\u00e5\\u0090\\u008d\\u00e7\\u00a8\\u00b1\r\nprofile.header.account=\\u00e5\\u00b8\\u00b3\\u00e8\\u0099\\u009f/\\u00e6\\u00a2\\u009d\\u00e4\\u00bb\\u00b6\\u00e4\\u00bb\\u00a3\\u00e7\\u00a2\\u00bc\r\nprofile.header.description=\\u00e6\\u008f\\u008f\\u00e8\\u00bf\\u00b0\r\nlayout.msg.updatePrimaryUsersLayout=Kindly save it as a New Layout as Primary user\\u2019s layout cannot be updated.\r\n'@ -split \"\\r?\\n\" |\r\n    ForEach-Object {\r\n        UnescapeNonIsoChar -inputString $_\r\n    }\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/175834254-403ecd0a-1462-469e-b33c-0ed7230c1c84.png)\r\n\r\nThe reason why goes into all my points above. Each line is now being processed one by one (`UnescapeNonIsoChar` is called per line rather than the whole thing). Each line is being converted using your regex replace logic of treating `\\uxxxx` as UTF-8 bytes. Even the last line where `\\u2019` is failing to be replaced with your logic is falling back to the `[Regex]::Unescape` which will convert `\\u2019` using the Unicode codepoint logic. This gives you exactly what you want. The only caveat will be if you have a line that contains both the logic where `\\uxxxx` is a UTF-8 byte representation and the Unicode codepoint. This is why I am recommending that you fix up whatever is generating the text to do it properly.\r\n\r\nIf you don't believe me after this I'm not sure what else I can do to convince you. PowerShell is acting sane here. There is no bug here as other languages treat `\\uxxxx` in the same manner as `[Regex]::Unescape` and what I am telling you. Good luck with your work.\n\n<blockquote><img src=\"/en/unicode/images/icon/icon-compart.svg\" width=\"48\" align=\"right\"><div>https://www.compart.com/en/unicode/U+6A94</div><div><strong><a href=\"https://www.compart.com/en/unicode/U+6A94\">Unicode</a></strong></div><div>U+6A94 is the unicode hex value of the character CJK Unified Ideograph-6A94. Char U+6A94, Encodings, HTML Entitys:&#27284;,&#x6A94;, UTF-8 (hex), UTF-16 (hex), UTF-32 (hex)</div></blockquote>\n<blockquote><img src=\"../_static/py.svg\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.python.org/3/howto/unicode.html\">Unicode HOWTO — Python 3.10.5 documentation</a></strong></div></blockquote>",
    "created_at": "2022-06-26T21:25:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1166649801",
    "id": 1166649801,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5FianJ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166649801/reactions"
    },
    "updated_at": "2022-06-26T21:25:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1166649801",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@jborean93 Thanks for your replies, I surely learnt something in this discussion 👍 ",
    "created_at": "2022-06-28T18:54:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1169104438",
    "id": 1169104438,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5Frx42",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1169104438/reactions"
    },
    "updated_at": "2022-06-28T18:54:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1169104438",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "thanks @jborean93 ,\r\nbtw: my name is Usain2.Bolt, would you like to learn to gone faster with me?  ;)",
    "created_at": "2022-06-29T14:34:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1170062368",
    "id": 1170062368,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5Fvbwg",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1170062368/reactions"
    },
    "updated_at": "2022-06-29T14:35:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1170062368",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2022-07-01T00:01:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1171782261",
    "id": 1171782261,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5F1_p1",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1171782261/reactions"
    },
    "updated_at": "2022-07-01T00:01:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1171782261",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jborean93 Thanks for your popular science,I don't want to know if it gives an error, what I want to express is that it outputs garbled characters\r\n\r\n@daxian-dbw 我说乱码了他给我解释一通如何编码。不知道编码我会这么写么。出错会导致输出编码改变（我的理解）。但运行ps1没这问题，\r\n说乱码了，有人过来跟我说你有一个错别字。不说是否因为有一个错别字导致其他所有正确的字符变成错别字的问题",
    "created_at": "2022-07-01T05:44:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17580#issuecomment-1171959222",
    "id": 1171959222,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17580",
    "node_id": "IC_kwDOAvT7bc5F2q22",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1171959222/reactions"
    },
    "updated_at": "2022-07-01T06:14:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1171959222",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26913892?v=4",
      "events_url": "https://api.github.com/users/he852100/events{/privacy}",
      "followers_url": "https://api.github.com/users/he852100/followers",
      "following_url": "https://api.github.com/users/he852100/following{/other_user}",
      "gists_url": "https://api.github.com/users/he852100/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/he852100",
      "id": 26913892,
      "login": "he852100",
      "node_id": "MDQ6VXNlcjI2OTEzODky",
      "organizations_url": "https://api.github.com/users/he852100/orgs",
      "received_events_url": "https://api.github.com/users/he852100/received_events",
      "repos_url": "https://api.github.com/users/he852100/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/he852100/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/he852100/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/he852100"
    }
  }
]
