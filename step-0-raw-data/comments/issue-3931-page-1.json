[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just to state it explicitly: globs shouldn't be expanded inside `\"...\"` (double-quoted strings) either, which currently happens too:\r\n\r\n    printf '%s\\n' '*'    # should print literal *\r\n    printf '%s\\n' \"*\"    # ditto\r\n\r\nOnly _unquoted_ tokens should ever be subject to globbing, as in POSIX-like shells.\r\n",
    "created_at": "2017-06-05T20:32:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-306296873",
    "id": 306296873,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjI5Njg3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306296873/reactions"
    },
    "updated_at": "2017-06-05T20:32:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306296873",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just noticed this after moving to Beta on OSX. Maybe a recent regression?\r\n\r\nIt makes using `curl` impossible if you have URL query parameters.\r\n\r\n```\r\n> curl 'https://google.com'                                                                                                                                                                                                                                         \r\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\r\n<TITLE>301 Moved</TITLE></HEAD><BODY>\r\n<H1>301 Moved</H1>\r\nThe document has moved\r\n<A HREF=\"https://www.google.com/\">here</A>.\r\n</BODY></HTML>\r\n```\r\n\r\n```\r\n> curl 'https://google.com?foo=bar'                                                                                                                                                                                                                                 \r\nCannot find drive. A drive with the name 'https' does not exist.\r\nAt line:1 char:1\r\n+ curl 'https://google.com?foo=bar'\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (https:String) [], DriveNotFoundException\r\n    + FullyQualifiedErrorId : DriveNotFound\r\n```",
    "created_at": "2017-06-05T23:17:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-306337113",
    "id": 306337113,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjMzNzExMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306337113/reactions"
    },
    "updated_at": "2017-06-05T23:17:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306337113",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5943573?v=4",
      "events_url": "https://api.github.com/users/latkin/events{/privacy}",
      "followers_url": "https://api.github.com/users/latkin/followers",
      "following_url": "https://api.github.com/users/latkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/latkin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/latkin",
      "id": 5943573,
      "login": "latkin",
      "node_id": "MDQ6VXNlcjU5NDM1NzM=",
      "organizations_url": "https://api.github.com/users/latkin/orgs",
      "received_events_url": "https://api.github.com/users/latkin/received_events",
      "repos_url": "https://api.github.com/users/latkin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/latkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/latkin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/latkin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Just noticed this after moving to Beta on OSX. Maybe a recent regression?\r\n\r\nYes, not really a regression, it a new feature in beta-1\r\nhttps://github.com/PowerShell/PowerShell/pull/3643",
    "created_at": "2017-06-05T23:44:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-306341283",
    "id": 306341283,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjM0MTI4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306341283/reactions"
    },
    "updated_at": "2017-06-05T23:44:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306341283",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/816680?v=4",
      "events_url": "https://api.github.com/users/vors/events{/privacy}",
      "followers_url": "https://api.github.com/users/vors/followers",
      "following_url": "https://api.github.com/users/vors/following{/other_user}",
      "gists_url": "https://api.github.com/users/vors/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vors",
      "id": 816680,
      "login": "vors",
      "node_id": "MDQ6VXNlcjgxNjY4MA==",
      "organizations_url": "https://api.github.com/users/vors/orgs",
      "received_events_url": "https://api.github.com/users/vors/received_events",
      "repos_url": "https://api.github.com/users/vors/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vors/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vors"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Is there a way to disable globbing entirely and opt back in to the Windows-style behavior? Even when it works by design, I kind of hate it.\r\n\r\ne.g. `git add *` used to just work, but with globbing I'd need to do `git add '*'`",
    "created_at": "2017-06-06T18:14:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-306572147",
    "id": 306572147,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjU3MjE0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306572147/reactions"
    },
    "updated_at": "2017-06-06T18:15:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/306572147",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5943573?v=4",
      "events_url": "https://api.github.com/users/latkin/events{/privacy}",
      "followers_url": "https://api.github.com/users/latkin/followers",
      "following_url": "https://api.github.com/users/latkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/latkin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/latkin",
      "id": 5943573,
      "login": "latkin",
      "node_id": "MDQ6VXNlcjU5NDM1NzM=",
      "organizations_url": "https://api.github.com/users/latkin/orgs",
      "received_events_url": "https://api.github.com/users/latkin/received_events",
      "repos_url": "https://api.github.com/users/latkin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/latkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/latkin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/latkin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "For this specific case `git add .` may work",
    "created_at": "2017-06-10T06:19:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-307545926",
    "id": 307545926,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzU0NTkyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307545926/reactions"
    },
    "updated_at": "2017-06-10T06:19:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/307545926",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/816680?v=4",
      "events_url": "https://api.github.com/users/vors/events{/privacy}",
      "followers_url": "https://api.github.com/users/vors/followers",
      "following_url": "https://api.github.com/users/vors/following{/other_user}",
      "gists_url": "https://api.github.com/users/vors/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vors",
      "id": 816680,
      "login": "vors",
      "node_id": "MDQ6VXNlcjgxNjY4MA==",
      "organizations_url": "https://api.github.com/users/vors/orgs",
      "received_events_url": "https://api.github.com/users/vors/received_events",
      "repos_url": "https://api.github.com/users/vors/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vors/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vors"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Bump. Any update? This is preventing me from moving to beta on non-Windows.",
    "created_at": "2017-07-12T23:17:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-314924529",
    "id": 314924529,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDkyNDUyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/314924529/reactions"
    },
    "updated_at": "2017-07-12T23:17:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/314924529",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5943573?v=4",
      "events_url": "https://api.github.com/users/latkin/events{/privacy}",
      "followers_url": "https://api.github.com/users/latkin/followers",
      "following_url": "https://api.github.com/users/latkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/latkin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/latkin",
      "id": 5943573,
      "login": "latkin",
      "node_id": "MDQ6VXNlcjU5NDM1NzM=",
      "organizations_url": "https://api.github.com/users/latkin/orgs",
      "received_events_url": "https://api.github.com/users/latkin/received_events",
      "repos_url": "https://api.github.com/users/latkin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/latkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/latkin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/latkin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Polite ping @BrucePay ",
    "created_at": "2017-07-12T23:24:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-314925642",
    "id": 314925642,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDkyNTY0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/314925642/reactions"
    },
    "updated_at": "2017-07-12T23:24:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/314925642",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/816680?v=4",
      "events_url": "https://api.github.com/users/vors/events{/privacy}",
      "followers_url": "https://api.github.com/users/vors/followers",
      "following_url": "https://api.github.com/users/vors/following{/other_user}",
      "gists_url": "https://api.github.com/users/vors/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vors",
      "id": 816680,
      "login": "vors",
      "node_id": "MDQ6VXNlcjgxNjY4MA==",
      "organizations_url": "https://api.github.com/users/vors/orgs",
      "received_events_url": "https://api.github.com/users/vors/received_events",
      "repos_url": "https://api.github.com/users/vors/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vors/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vors"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Another example of native utility that became unusable is `youtube-dl` (or anything that takes url for that matter)\r\n\r\n```\r\nyoutube-dl https://www.youtube.com/watch?v=QQ0Yn1fqugg\r\nCannot find drive. A drive with the name 'https' does not exist.\r\nAt line:1 char:1\r\n+ youtube-dl 'https://www.youtube.com/watch?v=QQ0Yn1fqugg'\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (https:String) [], DriveNotFound \r\n   Exception\r\n    + FullyQualifiedErrorId : DriveNotFound\r\n```",
    "created_at": "2017-07-27T01:57:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-318236109",
    "id": 318236109,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIzNjEwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/318236109/reactions"
    },
    "updated_at": "2017-07-27T01:57:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/318236109",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/816680?v=4",
      "events_url": "https://api.github.com/users/vors/events{/privacy}",
      "followers_url": "https://api.github.com/users/vors/followers",
      "following_url": "https://api.github.com/users/vors/following{/other_user}",
      "gists_url": "https://api.github.com/users/vors/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vors",
      "id": 816680,
      "login": "vors",
      "node_id": "MDQ6VXNlcjgxNjY4MA==",
      "organizations_url": "https://api.github.com/users/vors/orgs",
      "received_events_url": "https://api.github.com/users/vors/received_events",
      "repos_url": "https://api.github.com/users/vors/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vors/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vors"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "And yet another example of globbbing messing up invocation of a native executable:\r\n```\r\nconan info --only \"None\" --package_filter PkgName/* --cwd ../..\r\n```\r\nBTW the suggested workaround of escaping the `*` doesn't work because ```   `* ``` is passed to the executable.",
    "created_at": "2017-10-11T17:11:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-335880919",
    "id": 335880919,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTg4MDkxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335880919/reactions"
    },
    "updated_at": "2017-10-11T17:36:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335880919",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "So I was trying out my home grown echoargs in my WSL/Bash shell and noticed that given this command (in Bash):\r\n```bash\r\nhillr@HILLR1:~$ echoargs g* --package_filter FOO/*\r\n```\r\nYou get this output:\r\n```\r\nCommand line: \"/home/hillr/dotnet/echoargs/bin/Debug/netcoreapp2.0/ubuntu.16.04-x64/echoargs.dll getcwd getcwd.c get-pip.py git --package_filter FOO/*\"\r\n```\r\nRE globbing, how does Bash know to glob the first argument `g*` but not the second one `FOO/*`?",
    "created_at": "2017-10-11T22:18:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-335965321",
    "id": 335965321,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk2NTMyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335965321/reactions"
    },
    "updated_at": "2017-10-11T22:18:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335965321",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Bash (per POSIX):\r\n\r\n* only ever applies globbing to _unquoted_ tokens; `*` is subject to globbing, `'*'` and `\"*\"` are not (or a singly escaped `*`, `\\*`).\r\n   * Side note: strictly speaking, what matters is whether the _individual globbing metacharacters/expressions_ are quoted or not; POSIX-like shells allow you to form a single argument composed of both quoted and unquoted parts; e.g., `\"foo\"*` would still match all files whose names start with `foo`, because the `*` is unquoted.\r\n\r\n* passes unquoted tokens that do not match any filesystem objects through as-is (in Bash, you can opt into different behavior, but that is not part of the POSIX standard); in your example, `FOO/*` presumably didn't match anything and was therefore left untouched.\r\n   * Note that it is irrelevant whether or not an unquoted token with globbing metacharacters partially happens to refer to existing filesystem items or is even a syntactically valid path - the original argument is passed through as-is in all cases.\r\n   * Arguably, this is not the most sensible default behavior, but it's POSIX-mandated and has a long history.\r\n\r\nMy assumption has been that the idea behind PowerShell's native globbing  is to emulate POSIX-shell rules (is that not true?), so in your earlier `conan` example, if you wanted to pass `PkgName/*` through, you'd have to _quote_ it to exempt it from globbing:\r\n\r\n```sh\r\nconan info --only \"None\" --package_filter 'PkgName/*' --cwd ../..\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-10-11T22:30:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-335967411",
    "id": 335967411,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk2NzQxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335967411/reactions"
    },
    "updated_at": "2017-10-11T23:00:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335967411",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Quoting doesn't work in PowerShell (does work from Bash).  That is part or the problem with PowerShell's aggressive globbing:\r\n```\r\n1> echoargs info --only \"None\" --package_filter 'PkgName/*' --cwd ../..\r\nCannot find path '/home/hillr/PkgName' because it does not exist.\r\n```\r\nThat `cannot find path` error is coming from the globbing code - not echoargs.\r\n\r\nBTW you're right about Bash not finding anything that matched `PkgName/*`.  If a add folder with that name and some files in it, it globs that as well.  So I guess one difference (bug?) with PowerShell's globbing is that if it doesn't find a path it shouldn't error, it should pass the value straight through to the native exe.\r\n",
    "created_at": "2017-10-11T22:33:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-335968122",
    "id": 335968122,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk2ODEyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335968122/reactions"
    },
    "updated_at": "2017-10-11T22:36:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335968122",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "<sup>Sorry for the reposts - I didn't want to clutter this thread with piecemeal insights.</sup>\r\n\r\nIndeed: that it currently doesn't work as I described and instead unexpectedly works as you demonstrate is the reason this issue was created. \r\n\r\nWhat you're seeing is a variation of what @vors experienced, and demonstrates both current problems (deviations from POSIX-shell behavior as of beta 8):\r\n\r\n* Globbing is applied blindly, instead of leaving quoted tokens alone.\r\n\r\n* A glob that matches nothing _due to nonexistent path components_ results in an _error_ rather than in the original token getting passed through (e.g., `/bin/echo /nosuch/*`); by contrast, a glob without a path component or one whose non-globbing components exist _is_ passed through as-is, in line with POSIX (e.g., `/bin/echo nosuch*`).\r\n\r\n   * In other words: PowerShell currently _in part_ matches the POSIX behavior in this respect.  Given that the passing-through-as-is-if-no-match arguably _never_ really makes sense, perhaps PowerShell could decide to deviate from POSIX behavior here:  \r\nArguably, the sensible behavior is to complain about non-existent path components (as PowerShell already does) _and_ to otherwise pass globs that happen to match nothing as distinct _empty-string_ arguments? (This is _not_ the same as setting `shopt -s nullglob` in Bash, where non-matching globs are _eliminated_ as arguments altogether). Not sure what the right answer is.",
    "created_at": "2017-10-11T23:44:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-335979555",
    "id": 335979555,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk3OTU1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335979555/reactions"
    },
    "updated_at": "2017-10-11T23:44:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/335979555",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for sharing the POSIX design. I readily acknowledge that there is a lot of value in offering this well-established behavior to PowerShell users, even as a default on unix systems. This makes PowerShell easier to pick up for folks coming from that ecosystem. By no means am I opposed to PowerShell having this capability.\r\n\r\nBut dang, that's totally idiotic. I really really hope there can be an option to disable this and use Windows-style (e.g. no) globbing, even on Unix. I have to switch back and forth between Windows and Mac pretty frequently, and it's been fantastic being able to use PowerShell on both. But the introduction of globbing on Mac was a complete show-stopper. I've had to stick with the alpha builds due to this. Even if the overly-aggressive stuff is fixed and behavior matches POSIX as described above, it still sounds terrible to me. `| fl *` is muscle memory, now I need to type `| fl '*'`? Wildcards are all over the place in PowerShell, I will need to defensively quote each and every one from now on, just in case my CWD has a particular structure?\r\n",
    "created_at": "2017-10-12T17:30:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336209330",
    "id": 336209330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjIwOTMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336209330/reactions"
    },
    "updated_at": "2017-10-12T17:30:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336209330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5943573?v=4",
      "events_url": "https://api.github.com/users/latkin/events{/privacy}",
      "followers_url": "https://api.github.com/users/latkin/followers",
      "following_url": "https://api.github.com/users/latkin/following{/other_user}",
      "gists_url": "https://api.github.com/users/latkin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/latkin",
      "id": 5943573,
      "login": "latkin",
      "node_id": "MDQ6VXNlcjU5NDM1NzM=",
      "organizations_url": "https://api.github.com/users/latkin/orgs",
      "received_events_url": "https://api.github.com/users/latkin/received_events",
      "repos_url": "https://api.github.com/users/latkin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/latkin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/latkin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/latkin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  the introduction of globbing on Mac was a complete show-stopper.\r\n\r\nSame here for us on Ubuntu.\r\n\r\n> really hope there can be an option to disable this \r\n\r\nAgreed.  You can disable pathname expansion globbing in Bash with `set -f noglob`. There needs to be a way in PowerShell to do the same.",
    "created_at": "2017-10-13T01:46:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336327460",
    "id": 336327460,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMyNzQ2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336327460/reactions"
    },
    "updated_at": "2017-10-13T01:46:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336327460",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "BTW a question for the Bash savvy.  We expect that some folks will continue to live in Bash but we want them to be able to use PowerShell scripts in our repo. So we've shebang'd them and committed them with chmod=+x.  \r\n\r\nThe problem comes when they want use Bash globbing with a PowerShell command.  Bash globbing space separates the files and that messes up our PowerShell command.  Internally, it can do the wildcard resolution but it is kind of sucky to have to tell Bash users they have to put wildcards in quotes when calling PowerShell scripts.  Is there an option in Bash, to get it to generate glob lists that are comma separated?",
    "created_at": "2017-10-13T01:53:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336328464",
    "id": 336328464,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMyODQ2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336328464/reactions"
    },
    "updated_at": "2017-10-13T01:53:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336328464",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@latkin:\r\n\r\n> | fl * is muscle memory, now I need to type | fl '*'? \r\n\r\nNo: the globbing is only applied when calling _external utilities_, on _Unix_, so nothing changes for calls to cmdlets / functions / *.ps1 PS scripts - or at all on _Windows_.\r\n\r\nNote: Globbing _is_ applied when passing arguments to an executable PowerShell script _with a shebang line_, as it technically is an external utility too.\r\n",
    "created_at": "2017-10-13T02:43:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336334809",
    "id": 336334809,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMzNDgwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336334809/reactions"
    },
    "updated_at": "2017-10-14T12:25:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336334809",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rkeithhill: \r\n\r\nI don't think there is such an option - arguments are strictly space-separated in the Unix world, and there is no concept of an array-valued argument in the shell.\r\n\r\nYou could use a `ValueFromRemainingArguments` parameter in your PowerShell scripts, but that limits you to 1 wildcard expression and notably precludes use of the parameter name in the invocation.\r\n\r\nAs an aside: even a comma-separated list wouldn't help you, because PowerShell doesn't recognize arrays in arguments passed to it from the outside; e.g., `1,2` would be interpreted as scalar string `1,2`, and `1, 2` would be interpreted as 2 arguments: `1,` and `2`.\r\n\r\n\r\n",
    "created_at": "2017-10-13T03:44:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336342432",
    "id": 336342432,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjM0MjQzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336342432/reactions"
    },
    "updated_at": "2017-10-13T03:49:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336342432",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "So Bash users need to know to quote wildcard arguments.  Guess that's just the way it'll have to be.\r\n\r\n> PowerShell doesn't recognize arrays in arguments passed to it from the outside\r\n\r\nWell that appears to be a new bug.  Has that been filed yet?  So how do I direct my script users to pass array args to my PowerShell script from Bash? Sigh...",
    "created_at": "2017-10-13T15:52:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336492486",
    "id": 336492486,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjQ5MjQ4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336492486/reactions"
    },
    "updated_at": "2017-10-13T15:52:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336492486",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rkeithhill:\r\n\r\n> Well that appears to be a new bug.\r\n\r\nI agree that passing arrays from the outside would be nice, but has that really ever worked?\r\n\r\nI discovered the issue a while ago and assumed it was a by-design limitation of the CLI's argument parsing, similar to how all arguments are interpreted as literal strings.",
    "created_at": "2017-10-13T22:30:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336582480",
    "id": 336582480,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjU4MjQ4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336582480/reactions"
    },
    "updated_at": "2017-10-13T22:30:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336582480",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> has that really ever worked\r\n\r\nWell, it is something that `PowerShell` users are use to e.g.:\r\n```posh\r\nRemove-Item foo.txt, bar.txt, baz.txt\r\n```\r\n\r\nThe question is what do Bash users expect?  Presumably us PowerShell users will be using PowerShell.  However, we will tell our Bash buddies how to run our PowerShell scripts and we're going to have to know that the array literal syntax we're used to in PowerShell isn't going to work in Bash.",
    "created_at": "2017-10-13T23:10:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336587946",
    "id": 336587946,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjU4Nzk0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336587946/reactions"
    },
    "updated_at": "2017-10-16T16:28:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336587946",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> The question is what do Bash users expect?\r\n\r\nThey expect to pass a list (array) - whose semantics are known to the target utility only - as either a single whitespace-less argument - e.g., to pass column names `pid` and `comm` to utility `ps` via its `-o` option:\r\n`ps -o pid,comm`\r\nor as a quoted argument, if the value contains whitespace or other shell metacharacters - e.g.,\r\n `ps -o 'pid, comm'`\r\n\r\nTo Bash it is just a single argument in either case.\r\n\r\n---\r\n\r\nSo, at least with how the PowerShell CLI currently works, the answer is again:\r\n\r\n* _quoting_ when passing - even when calling from _within_ PowerShell (see below)\r\n* combined with splitting the single string into the embedded elements inside the PowerShell script\r\n\r\n---\r\n\r\nFrom within PowerShell, if you call an external utility - including a shebang-line PS script - with an array argument:\r\n\r\n* if what would normally be an array in PS has _no embedded whitespace_ (e.g., `1,2` or `'a','b'`), it is NOT treated as an array and passed as a _single_ argument.\r\n\r\n* If the array elements are space-separated, they turn into _individual arguments_, by virtue of converting the array to a space-separated list of its elements (e.g., `1, 2` turns into `1 2`, seen by the target utility as separate arguments `1` and `2`.\r\n",
    "created_at": "2017-10-14T14:09:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-336637198",
    "id": 336637198,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjYzNzE5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336637198/reactions"
    },
    "updated_at": "2017-10-14T14:09:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/336637198",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Oh, at last I found this issue. \r\nThere is same problem (at least as I see it) with invoking native commands with variables containing special symbols in options/arguments.\r\n\r\nThere is a real-life example when globbing interfere when it shouldn't - SELinux file context management through semanage (of course I leared this hard way, in the middle of writing deployment script).\r\nI wrote this 'mini-test' to demonstrate it.\r\nI have this behavior on PS 6.0.0-beta.9 on CentOS 7 1611\r\n```\r\n\"make sure you have semanage, if not - run 'yum --assumeyes install policycoreutils-python'\" \r\n\"recreating test directory\" \r\nif (test-path /testdata -ea 0) { Remove-Item /testdata -Force -Recurse }; New-Item /testdata/testdir1 -ItemType Directory\r\n\"show current selinux context\" \r\nls -lZ /testdata \r\n\r\n\"Expected behavior:\"\r\n\"testing context changing using 'stop-parsing --%' symbol\" \r\nsemanage --% fcontext --add -t httpd_sys_rw_content_t \"/testdata/testdir1(/.*)?\"\r\nrestorecon --% -R /testdata/testdir1\r\n\"we should see context changed to httpd_sys_rw_content_t\" \r\nls -lZ /testdata \r\n\"restoring default context\" \r\nsemanage --% fcontext --delete \"/testdata/testdir1(/.*)?\"\r\nrestorecon --% -R /testdata/testdir1\r\nls -lZ /testdata \r\n\r\n\"Actual behavior:\"\r\n\"And now we try to execute same command using PS variables\" \r\n$contextpath = '/testdata/testdir1(/.*)?'\r\nsemanage fcontext -a -t httpd_sys_rw_content_t $contextpath\r\n\"And what if we try to enclose path in double-quotes?\" \r\n$contextpath = '\"/testdata/testdir1(/.*)?\"'\r\nsemanage fcontext -a -t httpd_sys_rw_content_t $contextpath\r\n\"What about escaping?\" \r\n$contextpath = \"/testdata/testdir1`(`/`.`*`)`?\"\r\nsemanage fcontext -a -t httpd_sys_rw_content_t $contextpath\r\n\r\n\"Workaround:\"\r\n\"1) write resulting invoke to script file, chmod +x, invoke bash file\"\r\n\"2) Use Start-process, which doesn't capture command output, which brings another PITA to solve:\"\r\n$contextpath = '/testdata/testdir1(/.*)?'\r\n$semanageArgs = @(\r\n'fcontext'\r\n'-a' \r\n'-t'\r\n'httpd_sys_rw_content_t'\r\n$contextpath\r\n)\r\nStart-Process -FilePath semanage -ArgumentList $semanageArgs -Wait \r\nrestorecon --% -R /testdata/testdir1\r\nls -lZ /testdata\r\n```\r\n \r\n",
    "created_at": "2017-10-31T11:28:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-340734668",
    "id": 340734668,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDczNDY2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340734668/reactions"
    },
    "updated_at": "2017-10-31T11:28:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340734668",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/33247544?v=4",
      "events_url": "https://api.github.com/users/al-ign/events{/privacy}",
      "followers_url": "https://api.github.com/users/al-ign/followers",
      "following_url": "https://api.github.com/users/al-ign/following{/other_user}",
      "gists_url": "https://api.github.com/users/al-ign/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/al-ign",
      "id": 33247544,
      "login": "al-ign",
      "node_id": "MDQ6VXNlcjMzMjQ3NTQ0",
      "organizations_url": "https://api.github.com/users/al-ign/orgs",
      "received_events_url": "https://api.github.com/users/al-ign/received_events",
      "repos_url": "https://api.github.com/users/al-ign/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/al-ign/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/al-ign/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/al-ign"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I think at this point there is agreement that \"Unix-native\" globbing in PowerShell is broken, but we don't know yet _how_ it will be fixed.\r\n\r\nIt's been laid out here how POSIX-like shells handle globbing, which decide whether to apply globbing based on the distinction between _quoted_ and _unquoted_ tokens - and anyone with Unix shell-scripting experience is aware of that.\r\nFurthermore, even unquoted _variable references_ are subject to globbing (e.g., in Bash: \r\n`var='*.txt'; echo $var # globbing happens, because $var is unquoted`)\r\n\r\nBoth concepts are  alien to PowerShell, where \r\n\r\n* `*.txt` and `'*.txt'` are treated the _same_.\r\n* the distinction between `$var` and `\"$var\"` exists, but is entirely unrelated to globbing (and the need to pass a value with embedded whitespace as a _single_ argument); it merely forces stringification.\r\n\r\nTwo worlds collide here, and something's gotta give.\r\n\r\nAdopting the quoted-vs.-unquoted distinction at least for _literal_ unquoted tokens for calls to external utilities seems like a reasonable compromise to me, ~but perhaps there's a different solution - we have yet to hear from the powers that be.~ (_[a fix](https://github.com/PowerShell/PowerShell/pull/5188) is underway_)\r\n\r\n\r\nAs an aside re `--%`:\r\n\r\n`--%` is not the answer not only because you then cannot use PS variables, but because it was designed for _Windows_ and still behaves exclusively that way:\r\n\r\n* Because it doesn't know It treats single quotes as syntactic elements, they become part of the argument to pass: `/bin/echo --% 'foo, bar'` results in 2 arguments, `'foo,` and `bar'` - note the embedded single quotes.\r\n\r\n* It will expand cmd-style environment variable references even on Unix (e.g., `%HOME%`), yet doesn't recognize Bash-style ones (e.g., `$HOME`).\r\n\r\nA decision was made _not_ to adapt `--%` to Unix (whether as `--%` or with a distinct name) -\r\n see https://github.com/PowerShell/PowerShell/issues/3733#issuecomment-327641533\r\n\r\n",
    "created_at": "2017-10-31T12:31:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-340747932",
    "id": 340747932,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDc0NzkzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340747932/reactions"
    },
    "updated_at": "2017-10-31T12:46:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340747932",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Could you please review ##5188 ?",
    "created_at": "2017-10-31T12:38:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-340749508",
    "id": 340749508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDc0OTUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340749508/reactions"
    },
    "updated_at": "2017-10-31T12:38:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340749508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov Oops! Sorry I missed that a fix is already underway - will take a look.",
    "created_at": "2017-10-31T12:41:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3931#issuecomment-340750119",
    "id": 340750119,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3931",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDc1MDExOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340750119/reactions"
    },
    "updated_at": "2017-10-31T12:41:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/340750119",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
