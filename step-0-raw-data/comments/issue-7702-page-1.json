[
  {
    "author_association": "COLLABORATOR",
    "body": "/cc @mklement0 ",
    "created_at": "2018-09-04T15:08:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418404091",
    "id": 418404091,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODQwNDA5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418404091/reactions"
    },
    "updated_at": "2018-09-04T15:08:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418404091",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I discovered that\r\n```powershell\r\nGet-Culture \"abc\"\r\n```\r\nreturn CultureInfo object - there is no exception internally. Seems it is \"by design\" and based on OS behavior. See https://github.com/dotnet/corefx/issues/1669. Perhaps we should add this in documentation.\r\n\r\n",
    "created_at": "2018-09-05T05:21:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418602888",
    "id": 418602888,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYwMjg4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418602888/reactions"
    },
    "updated_at": "2018-09-05T05:21:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418602888",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: That is unfortunate; ~~the problem has since been fixed on _Windows_, but macOS and Linux are still affected.~~ - see below.",
    "created_at": "2018-09-05T05:40:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418605773",
    "id": 418605773,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYwNTc3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418605773/reactions"
    },
    "updated_at": "2018-09-06T01:22:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418605773",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I see. I'll skip the test on Linux and MacOs. Should I add a comment that it is a bug in .Net Core? Is there a tracking issue?",
    "created_at": "2018-09-05T06:08:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418610346",
    "id": 418610346,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYxMDM0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418610346/reactions"
    },
    "updated_at": "2018-09-05T06:08:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418610346",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I would personally consider it a bug, but I've only read the CoreFx issue that you linked to; from there I came across https://github.com/dotnet/corefx/issues/6374#issuecomment-245706306, which promises a fix on Linux, but hat seemingly never happened.\r\n\r\nMay be worth opening a new issue.",
    "created_at": "2018-09-05T06:21:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418612757",
    "id": 418612757,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYxMjc1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418612757/reactions"
    },
    "updated_at": "2018-09-05T06:21:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418612757",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks! I added a comment there.",
    "created_at": "2018-09-05T06:41:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418616836",
    "id": 418616836,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODYxNjgzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418616836/reactions"
    },
    "updated_at": "2018-09-05T06:41:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418616836",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this and continue to be consistent in our thinking that for literals, a non-terminating error should be returned, and for filtering/wildcards, it should return nothing if not found.  Should also consider adding a Test-Culture cmdlet.",
    "created_at": "2018-09-05T22:17:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418899613",
    "id": 418899613,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODg5OTYxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418899613/reactions"
    },
    "updated_at": "2018-09-05T22:17:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418899613",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Sorry - my earlier statement was incorrect:\r\n\r\nThe - questionable - logic of the `CultureInfo.GetCultureInfo()` method is the same across all platforms _in the abstract_:\r\n\r\n* A culture name that is _formally_ correct returns a culture-info object, _even if there is no such predefined culture_ - I'm unclear on when and why that is useful.\r\n\r\n* A _formally incorrect_ culture name triggers a `System.Globalization.CultureNotFoundException`, which makes sense.\r\n\r\nWhat constitutes a formally correct culture name is platform-specific, however:\r\n  * Windows: a well-formed BCP-47 tag, such as `fr`, `ru-RU`, or `zz-AA-oooooooo`\r\n  * Unix (macOS and Linux): _a name composed of up to 11 characters, whatever they are_, and seemingly even more if there's a `.` present (I'm unclear on the exact rules); e.g., `01;2.45\"78&$` (sic); according to the linked CoreFx issue, the \"ICU library\" is used behind the scenes on these platforms.",
    "created_at": "2018-09-06T01:21:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418932551",
    "id": 418932551,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODkzMjU1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418932551/reactions"
    },
    "updated_at": "2018-09-06T01:24:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418932551",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I guess we can work around this by validating names against `CultureInfo.GetCultures(CultureTypes.AllCultures)` while we're waiting for a CoreFX fix - which may or may not come.\r\n\r\n@SteveL-MSFT: Currently, the PR has no wildcard support for `-Name` - should we add it? Might be handy, but adds implementation complexity.\r\n\r\n\r\n",
    "created_at": "2018-09-06T01:42:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418936092",
    "id": 418936092,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODkzNjA5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418936092/reactions"
    },
    "updated_at": "2018-09-06T01:42:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418936092",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT \r\n> Should also consider adding a Test-Culture cmdlet.\r\n\r\nWe have #7562. I suggest to explicitly track all approved Test-* cmdlets there.",
    "created_at": "2018-09-06T04:01:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418957263",
    "id": 418957263,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODk1NzI2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418957263/reactions"
    },
    "updated_at": "2018-09-06T04:01:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418957263",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I guess we can work around this \r\n\r\n@mklement0 I think it is ok to follow .Net Core behavior \"as is\" - if they really think it's right, then we can hardly do better.",
    "created_at": "2018-09-06T04:07:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-418958215",
    "id": 418958215,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODk1ODIxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418958215/reactions"
    },
    "updated_at": "2018-09-06T04:07:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418958215",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Since we're not just _providing access_ to the underlying CoreFx functionality, but packaging it in a PowerShell-appropriate way, I don't think we're obligated to surface the functionality as-is.\r\n\r\nI have yet to hear a _good_ reason for the CoreFx behavior (there may be one, but I haven't heard it), and users who really want to implicitly create cultures such as `zz-AA` and `01;2.45\"78&$` can use the CoreFx types directly.\r\n",
    "created_at": "2018-09-06T12:40:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419078185",
    "id": 419078185,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTA3ODE4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419078185/reactions"
    },
    "updated_at": "2018-09-06T12:40:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419078185",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 With `-ListAvailable` we get good UX. We could add a filter for `-Name` (based on a completer) but it can be expensive and it seems we do not fully understand the behavior of .Net Core in order to overlap it. I think we shouldn't delay the PR, we can postpone this and fix later if needed.",
    "created_at": "2018-09-06T15:20:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419134736",
    "id": 419134736,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEzNDczNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419134736/reactions"
    },
    "updated_at": "2018-09-06T15:20:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419134736",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Postponing wildcard support sounds good to me, but I do think we should get clarity on whether we truly want to support calls such as `Get-Culture '01;2.45\"78&$'`, because if we do so now, we have a breaking change on our hands if we want to change it later.\r\n\r\nI see only down-sides to surfacing the baffling CoreFx functionality as-is.\r\n\r\nConversely, if we restrict allowed names to the ones reported by `-ListAvailable` now, it is less problematic to loosen that restriction later, _if_ it turns out that that is really necessary.\r\n\r\n",
    "created_at": "2018-09-06T15:53:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419146522",
    "id": 419146522,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE0NjUyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419146522/reactions"
    },
    "updated_at": "2018-09-06T21:50:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419146522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> whether we truly want to support calls such as Get-Culture '01;2.45\"78&$', because if we do so now, we have a breaking change on our hands if we want to change it later.\r\n\r\nI don't know whether we truly want. The breaking change will be in grace arae - I'd expect users will use right culture names. On the other hand, it is not clear what the filter should be. from the CoreFX discussion we know that there may be some special logic. There can be a situation similar we see with encodings - we get a short list but really supported encodings there is more.\r\nI suggest document the feature and wait feedback.",
    "created_at": "2018-09-07T11:36:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419412844",
    "id": 419412844,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQxMjg0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419412844/reactions"
    },
    "updated_at": "2018-09-07T12:11:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419412844",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> from the CoreFX discussion we know that there may be some special logic.\r\n> we get a short list but really supported encodings there is more.\r\n\r\nThere is an official list of all predefined cultures: `CultureInfo.GetCultures(CultureTypes.AllCultures)`, which we surface via `-ListAvailable`.\r\n\r\nThe special logic is that you can _create_ cultures on demand, which on Windows allows you to combine any (possibly made-up) language with any (possibly made-up) region.\r\n\r\nSurfacing this functionality is not part of the mandate of `Get-Culture` the way I understand it.\r\n\r\nAs shown in the linked CoreFx discussion, it's not hard to validate given names; in the simplest form (though performance considerations may require a more sophisticated approach):\r\n\r\n```powershell\r\n# Returns the requested culture or $null, if not predefined.\r\n[Array]::Find([cultureinfo]::GetCultures('AllCultures'), [Predicate[cultureinfo]] { param($ci) $ci.Name -eq $Name })\r\n```\r\n",
    "created_at": "2018-09-07T12:37:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419426136",
    "id": 419426136,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQyNjEzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419426136/reactions"
    },
    "updated_at": "2018-09-07T12:41:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419426136",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Another thing to consider: \r\n\r\n`AllCultures` doesn't mean _all_ cultures; from https://docs.microsoft.com/en-us/dotnet/api/system.globalization.culturetypes?view=netcore-2.1:\r\n\r\n> `AllCultures` is a composite field that includes the `NeutralCultures`, `SpecificCultures`, and `InstalledWin32Cultures` values.\r\n\r\n~~Notably, it excludes custom (user-defined) cultures: `UserCustomCulture`, a subset of which appears to be `ReplacementCultures` (custom cultures that override predefined ones - see below).~~\r\n\r\n~~(On a side note: accidental \"creation\" of a bogus culture with e.g., `[cultureinfo] 'zz-AA'` is _not_ reflected in the `UserCustomCulture` category).~~\r\n\r\n~~Sounds like we should include `UserCustomCulture`, right?\r\nOr provide an additional parameter to allow selection of the desired categories explicitly?~~\r\n\r\nAdditionally, predefined cultures can be _overridden_ (tweaked on a given system); \r\nthe `.GetCultureInfo()` _method_ seemingly never returns such tweaked cultures,\r\nwhereas the `CultureInfo` _constructor_ does by default, and also offers a Boolean parameter to control that.\r\nSeemingly, however, a tweaked version is only returned for the _current_ culture - I couldn't really make sense of the [docs](https://docs.microsoft.com/en-us/dotnet/api/system.globalization.cultureinfo.-ctor?view=netcore-2.1), which still only reflect the Windows perspective.\r\n\r\nDo we need to worry about this?\r\n",
    "created_at": "2018-09-07T13:58:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419447961",
    "id": 419447961,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ0Nzk2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419447961/reactions"
    },
    "updated_at": "2018-09-10T19:52:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419447961",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Full definition\r\n```c#\r\n    //\r\n    // Summary:\r\n    //     Defines the types of culture lists that can be retrieved using the System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)\r\n    //     method.\r\n    [Flags]\r\n    public enum CultureTypes\r\n    {\r\n        //\r\n        // Summary:\r\n        //     Cultures that are associated with a language but are not specific to a country/region.\r\n        //     The names of .NET Framework cultures consist of the lowercase two-letter code\r\n        //     derived from ISO 639-1. For example: &quot;en&quot; (English) is a neutral culture.\r\n        NeutralCultures = 1,\r\n        //\r\n        // Summary:\r\n        //     Cultures that are specific to a country/region. The names of these cultures follow\r\n        //     RFC 4646 (Windows Vista and later). The format is &quot;&lt;languagecode2&gt;-&lt;country/regioncode2&gt;&quot;,\r\n        //     where &lt;languagecode2&gt; is a lowercase two-letter code derived from ISO 639-1\r\n        //     and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from\r\n        //     ISO 3166. For example, &quot;en-US&quot; for English (United States) is a specific\r\n        //     culture.\r\n        SpecificCultures = 2,\r\n        //\r\n        // Summary:\r\n        //     All cultures that are installed in the Windows operating system. Note that not\r\n        //     all cultures supported by the .NET Framework are installed in the operating system.\r\n        InstalledWin32Cultures = 4,\r\n        //\r\n        // Summary:\r\n        //     All cultures that ship with the .NET Framework, including neutral and specific\r\n        //     cultures, cultures installed in the Windows operating system, and custom cultures\r\n        //     created by the user. System.Globalization.CultureTypes.AllCultures is a composite\r\n        //     field that includes the System.Globalization.CultureTypes.NeutralCultures, System.Globalization.CultureTypes.SpecificCultures,\r\n        //     and System.Globalization.CultureTypes.InstalledWin32Cultures values.\r\n        AllCultures = 7,\r\n        //\r\n        // Summary:\r\n        //     Custom cultures created by the user.\r\n        UserCustomCulture = 8,\r\n        //\r\n        // Summary:\r\n        //     Custom cultures created by the user that replace cultures shipped with the .NET\r\n        //     Framework.\r\n        ReplacementCultures = 16\r\n```\r\n",
    "created_at": "2018-09-07T14:04:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419449708",
    "id": 419449708,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ0OTcwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419449708/reactions"
    },
    "updated_at": "2018-09-07T14:04:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419449708",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There is another side. Maybe we will implement Set-Culture. Then the limitations in Get-Culture can limit us. So UserCustomCulture and ReplacementCultures is worth adding.\r\n",
    "created_at": "2018-09-07T14:08:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419450953",
    "id": 419450953,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ1MDk1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419450953/reactions"
    },
    "updated_at": "2018-09-07T14:08:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419450953",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the source-code snippet, @iSazonov: ~~Curiously, part of the comment text contradicts the actual value by suggesting that custom cultures are included in `AllCultures`, whereas value `7` implies that they're not (`1 + 2 + 4`).~~\r\n\r\nYou also have to wonder what `InstalledWin32Cultures` means on other platforms - does it generically refer to _predefined_ cultures? The docs often talk about _cached_ cultures, without clarifying what that means (_update_: it means that all culture definitions are read _once_, on startup, so changes made externally during the session are not reflected); `.GetCultureInfo()` uses cached cultures (_update_: though the cache can be cleared to force reading anew with `.ClearCachedData()`), whereas the `CultureInfo` constructors do not.",
    "created_at": "2018-09-07T14:09:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419451425",
    "id": 419451425,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ1MTQyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419451425/reactions"
    },
    "updated_at": "2018-09-11T15:47:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419451425",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, though I'm unclear on what happens if `ReplacementCultures` is also specified: is it the tweaked versions of predefined cultures that are then returned (_update_: yes)? In the abstract, `ReplacementCultures` is by definition a _subset_ of the cultures returned by `AllCultures`.\r\n\r\nIf so, and we include it, we shouldn't do so _unconditionally_, because users then have no way to access the _original_ definition (at least not via `Get-Culture`). (_update_: CoreFx offers no way to get the original culture definitions of cultures shadowed by replacement cultures).\r\n\r\n~~Perhaps only add `UserCustomCulture` by default and offer a `-UseOverride` switch that:~~\r\n\r\n* ~~adds `ReplacementCultures` on demand with `-ListAvailable`,~~\r\n* ~~and, for `-Name`, use `CultureInfo()` constructor with `useUserOverride` set to `true`~~\r\n\r\n(_Update_: The above conflated replacement custom cultures with user overrides, which are unrelated.)\r\n\r\nAgain, based on the docs I'm unclear on whether the request to use the override is only honored for the _current_ culture or for any predefined culture requested. (update: yes, an override can only ever exist for the current culture).",
    "created_at": "2018-09-07T14:26:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419456397",
    "id": 419456397,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ1NjM5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419456397/reactions"
    },
    "updated_at": "2018-09-11T15:50:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419456397",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "For reference https://github.com/dotnet/coreclr/blob/030a3ea9b8dbeae89c90d34441d4d9a1cf4a7de6/src/System.Private.CoreLib/src/System/Globalization/CultureInfo.cs#L542\r\n\r\nWe can expose new parameter for CultureTypes and default AllCultures. (This will allow us to delegate this question to users.)",
    "created_at": "2018-09-07T14:59:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-419466980",
    "id": 419466980,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTQ2Njk4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419466980/reactions"
    },
    "updated_at": "2018-09-07T15:01:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419466980",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\n> We can expose new parameter for CultureTypes and default AllCultures. \r\n\r\nGood idea; should probably be `-CultureType` (singular).\r\n\r\nI had a misconception earlier: `AllCultures` _does_ comprise all cultures, after all, because any custom culture invariably _also_ falls into either the `NeutralCultures` or `SpecificCultures` category.\r\n\r\nAlso, `.GetCultures()` always returns _replacement_ custom cultures, if any are defined, without the ability to retrieve the _original_ definition.\r\n\r\nSimilarly, it also returns user-overridden settings for the _current culture_, if defined. User overrides - a mechanism that is unrelated to custom cultures - at least on Windows indeed only apply to the _current_ culture (where they can be applied via Control Panel and are stored in the registry at `HKEY_CURRENT_USER\\Control Panel\\International` and are discarded when a different culture is switched to).\r\n\r\nFor user overrides, however, it _is_ possible to get the original definition, either by using `.GetCultureInfo()` or by using the `new CultureInfo(<name>, false)` constructor overload.\r\n\r\nOverrides, if present, are in effect by default in .NET Core and therefore also in PowerShell (`[cultureinfo]::CurrentCulture` and `Get-Culture` reflect them).\r\n\r\nTherefore:\r\n\r\n* To be consistent with `-ListAvailable`, `-Name` too should report user overrides if the name of the current culture is given, which requires use of `new CultureInfo()` rather than `.GetCultureInfo()`, at least for the current culture.\r\n\r\n* If we do want to give users the option to access the _original_ current-culture definition, without overrides, we need a `-NoOverride` switch for the `DefaultParameterSet ` and `NameParameterSet` parameter sets.\r\n",
    "created_at": "2018-09-10T20:24:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420048195",
    "id": 420048195,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDA0ODE5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420048195/reactions"
    },
    "updated_at": "2018-09-10T20:24:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420048195",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As an aside, the existing CoreFx behavior is buggy, from what I can tell - see https://github.com/dotnet/corefx/issues/32207\r\n\r\nThis is not for us to fix, but it may affect tests.",
    "created_at": "2018-09-10T22:23:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420081388",
    "id": 420081388,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDA4MTM4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420081388/reactions"
    },
    "updated_at": "2018-09-10T22:24:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420081388",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks for the deep investigation!\r\n\r\nI think currnet culture API logic looks very tricky. I'd prefer keep the PR and cmdlet as simple as possible and keep a way to enhance the cmdlet later without a breaking change.\r\nSo I guess we should rename `ListAvailable` to `ListSystem`. Later we could consider Set-Culture and in the time add `ListAvailable` to return user overrides, filter like `CultureType` and so on.",
    "created_at": "2018-09-11T05:48:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420154463",
    "id": 420154463,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDE1NDQ2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420154463/reactions"
    },
    "updated_at": "2018-09-11T05:49:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420154463",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I think current culture API logic looks very tricky.\r\n\r\nYes, indeed. Some improvement will hopefully come from https://github.com/dotnet/corefx/issues/32201 allowing limiting cultures returned by `new CultureInfo()` and `GetCultureInfo()` to _predefined_ ones.\r\n\r\nThe tricky part is this new CoreFx behavior will - regrettably - be _opt-in_, because the  default behavior cannot be adjusted due to backward-compatibility concerns.\r\n\r\nIn other words: CoreFx has missed the boat with respect to _sensible default behavior_, but _we still have the chance to get it right_, which means:\r\n\r\n* We should explicitly validate `-Name` arguments against the list returned by `CultureInfo.GetCultures(CultureTypes.AllCultures)`. \r\n\r\n   * Once the CoreFx API has been extended, we can change the implementation to use it instead.\r\n\r\n* The help text should tell users to use `[cultureinfo]::new()` directly if they truly want to _create_ cultures _on demand_.\r\n\r\n---\r\n\r\n> So I guess we should rename `ListAvailable` to `ListSystem`. Later we could consider `Set-Culture` and in the time add `ListAvailable` to return user overrides, filter like `CultureType` and so on.\r\n\r\n* `-CultureType` as a  complement  to `-ListAvailable` to support culture-type filtering can definitely wait.\r\n\r\n* `-ListAvailable` _is_ the right name, however, because it _invariably_ returns a user override, if one is defined for the current culture.\r\n\r\n  * And that is why `-Name`, when given the name of the current culture, should _also_ report the override, for consistency - if we didn't to this, `Get-Culture` and `Get-Culture en-US` would return different information, if `en-US` is the current culture and an override is in effect.\r\n\r\n  * You only get the override with `new CultureInfo()`, not with `.GetCultureInfo()`, hence my suggestion above.\r\n\r\n\r\n \r\n\r\n\r\n\r\n",
    "created_at": "2018-09-11T17:25:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420353456",
    "id": 420353456,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM1MzQ1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420353456/reactions"
    },
    "updated_at": "2018-09-11T17:25:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420353456",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Also, .GetCultures() always returns replacement custom cultures, if any are defined, without the ability to retrieve the original definition.\r\n\r\nSeems not always. See https://source.dot.net/#System.Private.CoreLib/src/System/Globalization/CultureInfo.cs,542\r\n\r\n> To be consistent with -ListAvailable, -Name too should report user overrides \r\n\r\nLet's consider useful scenarios.\r\n1. User want to get current culture and either revise the setting or use in script:\r\n```powershell\r\n$currentCulture = Get-Culture\r\n```\r\n2. User have currupted culture and want reset:\r\n```powershell\r\nGet-Culture -Name en-Us | Set-Culture\r\n```\r\n3. User want look in depth:\r\n```powershell\r\nGet-Culture -List   # Default is -List AllCultures\r\nGet-Culture -List InstalledWin32Cultures\r\nGet-Culture -List ReplacementCultures\r\nGet-Culture -List SpecificCultures+NeutralCultures\r\n```\r\n\r\n\r\n",
    "created_at": "2018-09-12T04:53:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420511495",
    "id": 420511495,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUxMTQ5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420511495/reactions"
    },
    "updated_at": "2018-09-12T04:53:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420511495",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": ">Seems not always. See https://source.dot.net/#System.Private.CoreLib/src/System/Globalization/CultureInfo.cs,542\r\n\r\nWhat I meant was: _If_ replacement cultures are selected for retrieval - and `AllCultures` includes them - then you get them, without being able to retrieve the original definition of the culture that they replace - that's a CoreFx limitation (though one that may never matter).\r\n\r\n(Remember that replacement cultures have nothing to do with user overrides.)\r\n\r\n---\r\n\r\n> Let's consider useful scenarios.\r\n\r\n1. is fine: `Get-Culture` returns a `CultureInfo` object for the current culture that includes user overrides, if present.\r\n\r\n2. You're correct: I hadn't considered the reset-to-original scenario:\r\n\r\nTo enable it, `Get-Culture -Name <culture>` would have to return the culture _without overrides_, unlike what I proposed earlier.\r\n\r\n(As an aside, it's unclear to me if the concept of overrides, which are registry-based on Windows, even applies to Unix-like platforms.)\r\n\r\nThat means: \r\n\r\n* consistently using `.GetCultureInfo()` for `-Name` - as you already do - is correct.\r\n\r\n* we need to document clearly that, with, say, `en-US` in effect, `Get-Culture` by itself and `Get-Culture en-US` may return _different_ objects (with overrides in the first case, without in the second), and explain _why_.\r\n\r\n3.  Your proposed `-List` syntax:\r\n\r\nThat won't work, because PowerShell doesn't supports switches with optional arguments: `-List` would either have to _always_ require an argument (i.e., be a (non-switch) parameter) or _never support one_ (i.e., be a switch; except for tacking on `:$False` or `:$True`)\r\n\r\nAlso, according to https://github.com/dotnet/corefx/issues/32207#issuecomment-420372687, `InstalledWin32Cultures` is deprecated, and the only supported flags in Core are `SpecificCultures`, `NeutralCultures`, as well as their combination, `AllCultures`.\r\n\r\nSo we need to stick with a _switch_ such as `-ListAvailable`, and - if we want to support it (right away) - a _separate_ `-CultureType` parameter that accepts one of `AllCultures`, `SpecificCultures`, `NeutralCultures`.\r\nBecause _we_ get to control the accepted values, we can simply hide the deprecated values present in the underlying enumeration (`CultureTypes`).\r\n\r\nNote that the current CoreFx documentation is outdated and not of much help, but [an update is coming](https://github.com/dotnet/docs/issues/7635).\r\n",
    "created_at": "2018-09-12T14:09:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420662153",
    "id": 420662153,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDY2MjE1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420662153/reactions"
    },
    "updated_at": "2018-09-12T14:13:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420662153",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Please take another look.",
    "created_at": "2018-09-13T04:14:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-420877813",
    "id": 420877813,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDg3NzgxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420877813/reactions"
    },
    "updated_at": "2018-09-13T04:14:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420877813",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Two already discussed questions we are ready to send to PowerShell Committee. /cc @SteveL-MSFT \r\n\r\n1. Filtering input culture names in `-Name` parameter\r\nI think we can pass all formats because we haven't official strong specifications (\"delegate to OS\") and CoreFX accept them. Currently the cmdlet works with _right_ names and we can not worry about \"wrong\" names, especially since we do not know exactly what it is and they can differ by platforms (CoreFX returns an exception from OS). Also Test-Culture was mentioned above.\r\n\r\n2. `-List` parameter vs `-ListAvailable` switch\r\nI think `-List` parameter with CultureTypes type is better compromise.\r\n`-ListAvailable` switch can confuse users - is there (what is) \"no available\" cultures? We also use `-ListAvailable` in `Get-Module` and I do not see anything in common between these parameters  although it should have been.\r\n`-ListAvailable`  assume second parameter `-CultureType` for filtering. But we can get the same with one parameter. Also we can add an attribute to filter acceptable values of the enum if we need.\r\n",
    "created_at": "2018-09-14T11:39:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421332529",
    "id": 421332529,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTMzMjUyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421332529/reactions"
    },
    "updated_at": "2018-09-14T11:49:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421332529",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Re 1.:\r\n\r\n> Currently the cmdlet works with right names and we can not worry about \"wrong\" names, especially since we do not know exactly what it is and they can differ by platforms (CoreFX returns an exception from OS)\r\n\r\n(a) We know what the right ones are: the predefined ones returned by `CultureInfo.GetCultures(CultureTypes.AllCultures)`; \r\n(b) we know in the abstract what wrong ones are (_formally_ invalid names, which do differ by platform), but that doesn't matter, if we restrict names to predefined ones.\r\n\r\nRe 2:\r\n\r\nIt stands to reason that the `-ListAvailable` _switch_ return _all available_, i.e. predefined cultures _by default_. \r\nYour `-List` _parameter_  _prevents providing a default_.\r\n\r\nRe name of `-ListAvailable`: its use is not exactly the same as in `Get-Module`, but it's similar in the abstract - by contrast, `-List` is used by `Select-String`, where its semantics are more different.\r\n\r\nIdeally, we wouldn't need a switch at all, if `Get-Culture` behaved like `Get-Process` and `Get-ChildItem` and _defaulted_ to _listing existing_ entities (which would conversely require a switch to ask for the current culture), but that ship has sailed.\r\n\r\n\r\n\r\n",
    "created_at": "2018-09-14T12:21:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421341758",
    "id": 421341758,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM0MTc1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421341758/reactions"
    },
    "updated_at": "2018-09-14T12:21:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421341758",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Not sure on your last point there. `Get-Module` lists only *currently loaded* modules by default, so I think it makes some sense for `Get-Culture` to behave the same way?\n\nBut I agree; following that pattern means that -ListAvailable *should* be a switch parameter.",
    "created_at": "2018-09-14T13:08:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421352860",
    "id": 421352860,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM1Mjg2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421352860/reactions"
    },
    "updated_at": "2018-09-14T13:08:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421352860",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Re 1.: @mklement0 Please clarify why we should disable `Get-Culture ru-US` if Windows allow this?\r\n\r\nRe2: \r\n>It stands to reason that the -ListAvailable switch return all available, i.e. predefined cultures by default.\r\n\r\nThen it should be `-ListPredefined` but we know there can be a replacement.\r\n\r\nAgain, we must consider more practical scenarios. In theory, the `-ListAvailable ` switch would look very good, but when you try to write a script, you most likely want to get something more specific. I would say that getting something like \"ru-*\" or NeutralCultures is a more likely scenarios than get a list of more than 800 cultures.",
    "created_at": "2018-09-14T13:21:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421356368",
    "id": 421356368,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM1NjM2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421356368/reactions"
    },
    "updated_at": "2018-09-14T13:21:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421356368",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I don't think it's an either/or here. \n\n`Get-Culture` should list the currently 'loaded' culture.\n\n`Get-Culture -ListAvailable` should list everything.\n\n`Get-Culture -Name en*` should look among available cultures to find ones that match.\n\n(In my opinion.)",
    "created_at": "2018-09-14T13:24:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421357358",
    "id": 421357358,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM1NzM1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421357358/reactions"
    },
    "updated_at": "2018-09-14T13:24:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421357358",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Get-Culture should list the currently 'loaded' culture.\r\n\r\nIt is a breaking change. This is completely unacceptable.",
    "created_at": "2018-09-14T13:47:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421363654",
    "id": 421363654,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM2MzY1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421363654/reactions"
    },
    "updated_at": "2018-09-14T13:47:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421363654",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov \r\n\r\n> Please clarify why we should disable Get-Culture ru-US if Windows allow this?\r\n\r\nBecause it is not a _predefined_ culture and you're _getting_ something, you're not saying _create this for me if it doesn't exist_.\r\n\r\nIn 99% of the cases (obviously, a speculation), you'll want to obtain a _predefined_ culture, and in doing so you'll want to know if you've fat-fingered `ru-RU` to `ru_RU` for instance; you don't want to get a fictitious culture in that case, just because the underlying APIs allow you to _create_ them on demand.\r\n\r\n_Creating_ a culture, ad hoc, should be a _deliberate act_.\r\nAs an advanced use case, we can just leave that to CoreFx for users who truly need it.\r\nIf we do want to expose it in PowerShell, a simple `-CreateOnDemand` switch will do.\r\n\r\n> when you try to write a script, you most likely want to get something more specific.\r\n\r\nYes, in a script. Interactively, as you're exploring, both listing _all_ predefined cultures _and_ being able to match by, say, `ru*` is helpful  (as also mentioned by @vexx32) - but I thought you wanted to leave implementing the latter for later.\r\n\r\nUltimately, I don't feel strongly about how listing is implemented, however, and `-List <type>` is fine too.\r\n\r\n\r\n",
    "created_at": "2018-09-14T14:05:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421369016",
    "id": 421369016,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM2OTAxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421369016/reactions"
    },
    "updated_at": "2018-09-14T14:05:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421369016",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: I think all that @vexx32  meant to say was that you can conceive of the _current_ culture that argument-less `Get-Culture` returns as  the \"loaded\" one, which makes it analogous to an argument-less `Get-Module` call.\r\n\r\n@vexx32: I see your point about _loaded_ vs. _available_; my focus was on the _available_ aspect, and that the name `Get-Culture` makes no reference to _current_. But it's clear that this mustn't change, so it is a moot point.",
    "created_at": "2018-09-14T14:18:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421373119",
    "id": 421373119,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM3MzExOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421373119/reactions"
    },
    "updated_at": "2018-09-14T14:18:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421373119",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> In 99% of the cases (obviously, a speculation), you'll want to obtain a predefined culture\r\n\r\nThis scenario has never even been considered never in CoreFX until you have created a issue. Although it is clear that this is useful for reset culture scenario.\r\n\r\nNow I played with different culture filters. The results look very strange. Now I do not understand why they would be useful to me. This key (-List/-ListAvailable) should be considered as returning \"a information list\". I am convinced that no one will delve into the depths of our discussion and will simply receive \"an information list\" to write correctly \"zh-MO\" not \"zh-MK\". This is another argument to do nothing in addition to what the OS returns.",
    "created_at": "2018-09-14T14:46:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421381768",
    "id": 421381768,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM4MTc2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421381768/reactions"
    },
    "updated_at": "2018-09-14T14:46:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421381768",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> This scenario has never even been considered never in CoreFX until you have created a issue.\r\n\r\nWhat I am suggesting as the sensible behavior _was  the default behavior before Windows 10_. Basically, the implicit ad-hoc creation of cultures crept into the .NET API - to its detriment - based on changes in the underlying Windows API.\r\n\r\nThis is what happens on Windows 7:\r\n\r\n```powershell\r\nPSonWin7> [cultureinfo] 'zz-YY'\r\nCannot convert value \"zz-YY\" to type \"System.Globalization.CultureInfo\". Error: \"Culture is not supported.\r\n```\r\n",
    "created_at": "2018-09-14T14:51:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421383404",
    "id": 421383404,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM4MzQwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421383404/reactions"
    },
    "updated_at": "2018-09-14T15:01:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421383404",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> no one will delve into the depths of our discussion and will simply receive \"an information list\" to write correctly \"zh-MO\" not \"zh-MK\".\r\n\r\nI don't understand what you're saying.",
    "created_at": "2018-09-14T14:55:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-421384907",
    "id": 421384907,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM4NDkwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421384907/reactions"
    },
    "updated_at": "2018-09-14T14:55:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/421384907",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To summarize what I think is a sensible resolution:\r\n\r\n```powershell\r\n# Given a culture name (only), find it only among the predefined cultures\r\n# (as reported by [cultureinfo]::GetCultures('allcultures')).\r\n# Report a non-terminating error otherwise.\r\nGet-Culture ru-RU \r\n\r\n# Asking for ad-hoc culture definitions requires a new switch, -CreateOnDemand,\r\n# which signals that you indeed want to create a culture name 'fu-ba_r' on demand\r\n# (whatever that results in).\r\n# Note that this will fail on Windows 8.1-, because the on-demand creation wasn't\r\n# introduced to the WinAPI until Windows 10.\r\nGet-Culture fu-ba_r -CreateOnDemand\r\n```\r\n\r\nThat way, we do not hide any capabilities of the underlying API, we simply surface them differently - in a manner that makes more sense to me.\r\n\r\n",
    "created_at": "2018-10-04T20:13:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427153877",
    "id": 427153877,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE1Mzg3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427153877/reactions"
    },
    "updated_at": "2018-10-04T20:13:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427153877",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">Get-Culture fu-ba_r -CreateOnDemand\r\n\r\n\"Create\" in \"Get\" cmdlet is very surprising. This once again demonstrates that this API is unique and we cannot (and should not try) do it better than CoreFX team.\r\n\r\nMy main motivation was:\r\n1. to get information about traditional culture (ex.: datetime format) by `Get-Culture ru_Ru`\r\n2. to get informational list of traditional cultures by `Get-Culture -List`\r\n\r\nI don't think that anyone will need more complex scenarios and that anyone will understand the tricks of this API more deeply.\r\n\r\nCurrent design covers this scenarios and doesn't block further possible improvements. I would prefer to stop at this and then continue on after receiving feedback to address specific scenarios.",
    "created_at": "2018-10-05T10:29:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427318427",
    "id": 427318427,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzMxODQyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427318427/reactions"
    },
    "updated_at": "2018-10-05T10:29:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427318427",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I almost think it'd be better to instead relegate that functionality to an auxiliary cmdlet e.g `New-Culture` or something.\n\nI agree that the Get cmdlet probably shouldn't be able to do that. This way the problematic issue where the functionality isn't available pre-windows 8 can be dealt with by simply erroring out on that cmdlet begin step.",
    "created_at": "2018-10-05T10:58:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427325436",
    "id": 427325436,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzMyNTQzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427325436/reactions"
    },
    "updated_at": "2018-10-05T11:00:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427325436",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov \r\n\r\n> \"Create\" in \"Get\" cmdlet is very surprising.\r\n\r\nI wholeheartedly agree, yet you're proposing that the creation aspect be _implicit_ and that a user cannot select between \"give me an existing\" and \"create this for me on demand\", which is even worse.\r\n\r\n> This once again demonstrates that this API is unique and we cannot (and should not try) do it better than CoreFX team.\r\n\r\n> and we cannot (and should not try) do it better than CoreFX team.\r\n\r\nRe cannot: Yes, we can, by requiring an explicit switch to signal the intent to create on demand.\r\n\r\nRe should not: Yes, we should, namely whenever the underlying API is suboptimal and cannot be changed due to backward compatibility (as is the case here) or if it cannot surfaced in a PowerShell-idiomatic way.\r\n\r\nRe your main motivation:\r\n\r\nIf you think that is sufficient, then you're agreeing with my proposal above, _except_ you don't want to `-CreateOnDemand` switch - and I'm fine with omitting it, as I think this will rarely be used; the `New-Cmdlet`  solution that @vexx32 mentions sounds like a viable alternative (although that cmdlet would have to return predefined cultures too).\r\n\r\nYou current design does _not_ fit your main motivation, in that it'll happily return fictitious culture `fu-bar_n`, for instance.",
    "created_at": "2018-10-05T13:54:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427374066",
    "id": 427374066,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzM3NDA2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427374066/reactions"
    },
    "updated_at": "2018-10-05T13:55:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427374066",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> You current design does not fit your main motivation, in that it'll happily return fictitious culture fu-bar_n, for instance.\r\n\r\nI believe we can ignore this on current stage. Our goal is Set-Culture. But when I think about it, I can not even imagine what difficulties we will encounter. Therefore, I would not do any too \"clever\" things until the whole chain (Get-Culture, modify, Set-Culture) works. After that we could add useful things even if they fell under \"gray breaking changes\" that we see is not rare in our dev process here.\r\n",
    "created_at": "2018-10-05T15:31:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427405859",
    "id": 427405859,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzQwNTg1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427405859/reactions"
    },
    "updated_at": "2018-10-05T15:31:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427405859",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "My recommendation is to focus on the 80% case.  Advanced users can always call the .NET API directly.  I would simplify this to:\r\n\r\n1. keep current `Get-Culture` to return current culture\r\n2. `-ListAvailable` does `[cultureinfo]::GetCultures([System.Globalization.CultureTypes]::AllCultures)`\r\n3. defer adding `-CultureType` to the future based on customer demand for it\r\n4. error on cultures that don't match AllCultures (a `New-Culture` may make sense in the future, but it's not clear to me how many people would use it)\r\n",
    "created_at": "2018-10-05T16:48:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427429090",
    "id": 427429090,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzQyOTA5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427429090/reactions"
    },
    "updated_at": "2018-10-05T16:48:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427429090",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT I replaced `-ListAvailable` switch with `-List` typed parameter because it is not at all clear what is \"Available\" - different user communities may have different expectations. Even if we indicate in the documentation that this is `AllCultures`, this will not clarify anything to users and the length of this discussion clearly shows that. \r\nIf CultureType enum will get new flags (seeing what kind of transformation undergoes Windows 10 we can expect it) we get them automatically with `-List` typed parameter.\r\nWe also did not explore the features of Linux and MacOs in this discussion. There may be its own habits and the only way not to stumble over them is to follow the .Net Core API.\r\nSo I'd defer `ListAvailable` switch to the future too in favor to `-List`.",
    "created_at": "2018-10-06T17:03:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427589981",
    "id": 427589981,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU4OTk4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427589981/reactions"
    },
    "updated_at": "2018-10-06T17:03:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427589981",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "-ListAvailable is consistent with existing things like Get-Module\n\nIt seems that Steve is recommending we keep with this pattern.\n\nParallels:\n\n1. (No Params)\nBoth Get-Module and Get-Culture - return 'currently loaded / in use items'\n2. -ListAvailable\nGet-Module enumerates modules that are installed but not currently loaded - and *can* be loaded if needed.\nGet-Culture would enumerate AllCultures, retrieving items that are installed but not currently loaded, and which can be utilised if needed.",
    "created_at": "2018-10-06T17:09:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427590426",
    "id": 427590426,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU5MDQyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427590426/reactions"
    },
    "updated_at": "2018-10-06T17:10:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427590426",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> -ListAvailable is consistent with existing things like Get-Module\r\n\r\n@vexx32 These are not comparable things. You will need a lot of time to review the documentation and .Net Core code associated with the cultures. After that, you will no doubt agree that these are incomparable things. :-)",
    "created_at": "2018-10-06T17:29:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427592127",
    "id": 427592127,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU5MjEyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427592127/reactions"
    },
    "updated_at": "2018-10-06T17:29:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427592127",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Certainly, they aren't comparable in .NET, but I think the idea is much more for internal consistency in PS's methods of *exposing* such things, regardless of whether they are inherently comparable in their raw form. 😄 ",
    "created_at": "2018-10-06T17:41:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427593008",
    "id": 427593008,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU5MzAwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427593008/reactions"
    },
    "updated_at": "2018-10-06T17:41:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427593008",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\nI'm with @vexx32 and @SteveL-MSFT.\r\n\r\n> You will need a lot of time to review the documentation and .Net Core code associated with the cultures.\r\n\r\nNo, you don't, if you define _available_ as _predefined_, i.e., as `CultureInfo.GetCultures(CultureTypes.AllCultures)`, which sounds perfectly sensible to me.\r\n\r\nNo platform-specific knowledge required - let CoreFx tell us what the predefined cultures are, on all supported platforms.\r\n\r\n\r\n\r\n",
    "created_at": "2018-10-07T02:02:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427619508",
    "id": 427619508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzYxOTUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427619508/reactions"
    },
    "updated_at": "2018-10-07T02:02:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427619508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> which sounds perfectly sensible to me\r\n\r\nAre you sure? :-) When I reread your posts above, I see that your way was long and not very straight. My fear is that some users might not get what they want with `ListAvailable` whereas using proposed `List` gives them more flexibility. ( We can expect further changes in Windows 10 and especially in different Unix systems there may be different culture models.)",
    "created_at": "2018-10-07T08:44:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427636297",
    "id": 427636297,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzYzNjI5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427636297/reactions"
    },
    "updated_at": "2018-10-07T08:44:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427636297",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If you're worried about future-proofing, I would think that it's more useful to separate out the culture the specification to a separate parameter, rather than trying to bundle it into a combination -List parameter.\n\nI'd think it makes more sense to have -ListAvailable and then a separate -Type parameter.",
    "created_at": "2018-10-07T12:00:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427647834",
    "id": 427647834,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzY0NzgzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427647834/reactions"
    },
    "updated_at": "2018-10-07T12:00:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427647834",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32: Agreed: `-ListAvailable` should mean _all_ predefined by default, with the option of filtering down those results with `-Type`, if ever needed.\r\n\r\n@iSazonov \r\n\r\n> Are you sure? :-) When I reread your posts above, I see that your way was long and not very straight. \r\n\r\nYes, _now_ I'm sure. Do you see any problem with the _current_ reasoning?\r\n\r\nIt's unfortunate that arriving at the current conclusion took a while and that there was _intermediate_ confusion, not least due to the lack of documentation around what changed between the full framework and CoreFx and the counter-intuitive behavior of CoreFx (see discussion in https://github.com/dotnet/corefx/issues/32207#issuecomment-420372687 and my API-enhancement proposal in https://github.com/dotnet/corefx/issues/32201, which will make validating a culture name against the list of predefined cultures simple and fast), but that doesn't mean we don't have a good conclusion now.\r\n\r\n\r\n",
    "created_at": "2018-10-07T13:25:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-427653393",
    "id": 427653393,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzY1MzM5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427653393/reactions"
    },
    "updated_at": "2018-10-07T13:25:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/427653393",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this and agree on:\r\n\r\n  - keep current Get-Culture to return current culture\r\n  - -ListAvailable does [cultureinfo]::GetCultures([System.Globalization.CultureTypes]::AllCultures)\r\n  - defer adding -CultureType to the future based on customer demand for it\r\n  - error on cultures that don't match AllCultures (a New-Culture may make sense in the future, but it's not clear to me how many people would use it)",
    "created_at": "2018-10-10T22:40:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-428757649",
    "id": 428757649,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc1NzY0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428757649/reactions"
    },
    "updated_at": "2018-10-10T22:40:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428757649",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT @mklement0 The PR is ready for final review.",
    "created_at": "2018-10-12T09:14:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-429260572",
    "id": 429260572,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTI2MDU3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429260572/reactions"
    },
    "updated_at": "2018-10-12T09:14:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429260572",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT Please point me comments if I missed something.",
    "created_at": "2018-10-16T03:58:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-430092505",
    "id": 430092505,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA5MjUwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430092505/reactions"
    },
    "updated_at": "2018-10-16T03:58:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430092505",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Please update your review.",
    "created_at": "2018-10-18T04:47:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-430873939",
    "id": 430873939,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg3MzkzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430873939/reactions"
    },
    "updated_at": "2018-10-18T04:47:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430873939",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Reopen to restart all CIs.",
    "created_at": "2018-10-18T04:47:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-430874005",
    "id": 430874005,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDg3NDAwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430874005/reactions"
    },
    "updated_at": "2018-10-18T04:47:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430874005",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Many thanks for great help!",
    "created_at": "2018-10-18T12:35:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-430991580",
    "id": 430991580,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDk5MTU4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430991580/reactions"
    },
    "updated_at": "2018-10-18T12:35:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430991580",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "My pleasure, @iSazonov, thanks for implementing it all.",
    "created_at": "2018-10-18T12:44:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/7702#issuecomment-430994252",
    "id": 430994252,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7702",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDk5NDI1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430994252/reactions"
    },
    "updated_at": "2018-10-18T12:44:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/430994252",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
