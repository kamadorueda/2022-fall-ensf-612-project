[
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 What's happening is that the second example is using parameter binder logic. For parameters that are constrained to boolean we have special logic that restricts the allowed values that can be assigned to boolean to be `true`, `false`, 0 and 1. For example, you'll get the same error if you try to assign a string to the constrained variable. Historically, this behaviour was implemented as a result of usability feedback from the Exchange team. People kept trying to type `\"true\"` and `\"false\"` and getting an unexpected result. Anyway, given that the behaviour is consistent between parameter variables and non-parameter variables I don't really think there's an issue here.",
    "created_at": "2019-08-27T20:31:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426#issuecomment-525470609",
    "id": 525470609,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ3MDYwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525470609/reactions"
    },
    "updated_at": "2019-08-27T20:31:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525470609",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay: Thanks for explaining the background, but I do think there is a _usability_ issue here:\r\n\r\nUsers shouldn't have to think about _parameters_ in this context, and shouldn't have to worry about constraints that come with that, given that they're operating in _expression_ mode and thinking about _variables_, especially since in all other cases `[<type>] $foo = ...` and `$foo = [<type>] ...` result in the same value value getting assigned to `$foo`.\r\n(And if there are other cases where this equivalence doesn't hold, they should be addressed too.)\r\n\r\nThat something is amiss is indicated by the fact that the error message mentions a _parameter_: `Boolean parameters accept only`, which is obviously confusing in the context of assigning a _variable_.\r\n\r\nFrom a user's perspective, this coupling is an _implementation detail_, and the _internal_ consistency is not helpful. \r\n\r\nNote that the coupling is _not_ documented in the only place that I'm aware of that (far too lightly) touches on casts, [`about_Variables`](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_variables?view=powershell-6#types-of-variables).\r\n\r\nAs an aside: There's also no mention there of the little-known fact that - as a _useful_ case of sharing functionality with parameters - you can not only _type_-, but also _validation_-constrain your variables:\r\n\r\n```powershell\r\n[ValidateNotNullorEmpty()] [string] $foo = ''  # fails\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-08-27T21:18:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426#issuecomment-525487078",
    "id": 525487078,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ4NzA3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525487078/reactions"
    },
    "updated_at": "2019-08-27T21:18:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525487078",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Given that this also doesn't happen with any other type, I think it makes sense to remove this special case. See #13651 for a related issue that arises because of this special casing.\r\n\r\n/cc @SteveL-MSFT @rjmholt can we get y'all's thoughts on this one?",
    "created_at": "2020-09-17T23:32:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426#issuecomment-694555048",
    "id": 694555048,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDU1NTA0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694555048/reactions"
    },
    "updated_at": "2020-09-17T23:32:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/694555048",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think the big considerations for me are:\r\n\r\n- Can we make this change in attributed assignment without making it in parameter binding? (where I think the failure is valid UX, and more importantly is established behaviour)\r\n- If so, does that make PowerShell more complicated by once again introducing a slight variation of concepts or logic?\r\n\r\nI suspect that most users don't think of constrained assignment as a form of parameter binding, so muddying the concept might not have dire consequences. But even if so, I suspect decoupling the two pieces of logic while still getting things like validation attributes to work properly will be a large task.",
    "created_at": "2020-09-28T13:37:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426#issuecomment-700011708",
    "id": 700011708,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDAxMTcwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/700011708/reactions"
    },
    "updated_at": "2020-09-28T13:37:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/700011708",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Seems to me the logic would be better placed in the binder logic itself, rather than in variable assignment. Might be a bit of work to do, but IMO typical variable assignments should not be half mixed up in what should be binder-specific logic. The binder does a fair bit of extra logic as it is already, it's kind of weird that this (and seemingly this alone) got thrown into the standard variable assignment logic.",
    "created_at": "2020-09-28T13:54:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426#issuecomment-700022398",
    "id": 700022398,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDAyMjM5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/700022398/reactions"
    },
    "updated_at": "2020-09-28T13:54:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/700022398",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rjmholt:\r\n\r\nAgreed on point 1.\r\n\r\n> muddying the concept might not have dire consequences\r\n\r\nIn the spirit of @vexx32's comment: It is the _current_ behavior that amounts to muddying: the inappropriate application of argument-mode parsing to expression-mode assignments.\r\n\r\n(Most users are probably not even aware that you can use validation attributes in constrained assignments too, and I'm not sure it has any real-world uses. Similarly, that a nonsensical constrained assignment such as\r\n`[alias('hi')] [Parameter(Mandatory)] [string] $there = 'foo'` is quietly accepted is worrisome, though that may be a manifestation of a larger problem of randomly placed attributes getting quietly ignored - see #10614)\r\n\r\n",
    "created_at": "2020-09-28T14:04:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10426#issuecomment-700028839",
    "id": 700028839,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10426",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDAyODgzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/700028839/reactions"
    },
    "updated_at": "2020-09-28T14:04:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/700028839",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
