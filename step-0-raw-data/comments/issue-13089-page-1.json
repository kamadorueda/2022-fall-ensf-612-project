[
  {
    "author_association": "COLLABORATOR",
    "body": "@Artoria2e5 Current plan is 7.2 will be next LTS version (not 8.0).",
    "created_at": "2020-07-03T09:18:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653445209",
    "id": 653445209,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ0NTIwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653445209/reactions"
    },
    "updated_at": "2020-07-03T11:47:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653445209",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Since this will be a public interface change, some protocol version bump will needed. I dont really get how the whole versioning thing works, but if we can keep the 7 while bumping the protocol version that will be great too.\r\n\r\nAh shit, there's a dedicated repo for RFCs and I didnt see that. Ooooops. Call this a pre-RFC then. ",
    "created_at": "2020-07-03T10:03:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653464446",
    "id": 653464446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ2NDQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653464446/reactions"
    },
    "updated_at": "2020-07-03T11:03:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653464446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6459309?v=4",
      "events_url": "https://api.github.com/users/Artoria2e5/events{/privacy}",
      "followers_url": "https://api.github.com/users/Artoria2e5/followers",
      "following_url": "https://api.github.com/users/Artoria2e5/following{/other_user}",
      "gists_url": "https://api.github.com/users/Artoria2e5/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Artoria2e5",
      "id": 6459309,
      "login": "Artoria2e5",
      "node_id": "MDQ6VXNlcjY0NTkzMDk=",
      "organizations_url": "https://api.github.com/users/Artoria2e5/orgs",
      "received_events_url": "https://api.github.com/users/Artoria2e5/received_events",
      "repos_url": "https://api.github.com/users/Artoria2e5/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Artoria2e5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Artoria2e5/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Artoria2e5"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Ah shit, there's a dedicated repo for RFCs and I didnt see that. Ooooops. Call this a pre-RFC then.\r\n\r\n@Artoria2e5 No you are doing the right thing. Open an issue for discussion is the first step before moving to draft an RFC.\r\nI suggest you to include more examples to demonstrate your proposal.",
    "created_at": "2020-07-05T05:45:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653845531",
    "id": 653845531,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg0NTUzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653845531/reactions"
    },
    "updated_at": "2020-07-05T05:45:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653845531",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": ">duplicate the PasteArguments class from CoreFX\r\n\r\nJust duplicating would probably not be enough. For some edgecases you could probably read my old RFC and the corresponding discussion starting at https://github.com/PowerShell/PowerShell-RFC/pull/90#issuecomment-511427663",
    "created_at": "2020-07-05T07:43:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653853897",
    "id": 653853897,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg1Mzg5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653853897/reactions"
    },
    "updated_at": "2020-07-05T07:43:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653853897",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/20812332?v=4",
      "events_url": "https://api.github.com/users/TSlivede/events{/privacy}",
      "followers_url": "https://api.github.com/users/TSlivede/followers",
      "following_url": "https://api.github.com/users/TSlivede/following{/other_user}",
      "gists_url": "https://api.github.com/users/TSlivede/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TSlivede",
      "id": 20812332,
      "login": "TSlivede",
      "node_id": "MDQ6VXNlcjIwODEyMzMy",
      "organizations_url": "https://api.github.com/users/TSlivede/orgs",
      "received_events_url": "https://api.github.com/users/TSlivede/received_events",
      "repos_url": "https://api.github.com/users/TSlivede/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TSlivede/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TSlivede/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TSlivede"
    }
  },
  {
    "author_association": "NONE",
    "body": "Specifically regarding the behavior of `Start-Process` there is also https://github.com/PowerShell/PowerShell/issues/5576 posted by @mklement0 \r\n\r\nAnd while I do like the Idea of using `Start-Process` instead of a new operator (suggested here: https://github.com/PowerShell/PowerShell/issues/13068#issuecomment-653526374) it would require to make some other features available to `Start-Process`: AFAIK `Start-Process` can currently not redirect the out streams of the executable to the next command in the pipeline. And there are probably more differences between `Start-Process` and the call operator `&`... ",
    "created_at": "2020-07-05T08:11:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653856305",
    "id": 653856305,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg1NjMwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653856305/reactions"
    },
    "updated_at": "2020-07-05T08:11:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653856305",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/20812332?v=4",
      "events_url": "https://api.github.com/users/TSlivede/events{/privacy}",
      "followers_url": "https://api.github.com/users/TSlivede/followers",
      "following_url": "https://api.github.com/users/TSlivede/following{/other_user}",
      "gists_url": "https://api.github.com/users/TSlivede/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TSlivede",
      "id": 20812332,
      "login": "TSlivede",
      "node_id": "MDQ6VXNlcjIwODEyMzMy",
      "organizations_url": "https://api.github.com/users/TSlivede/orgs",
      "received_events_url": "https://api.github.com/users/TSlivede/received_events",
      "repos_url": "https://api.github.com/users/TSlivede/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TSlivede/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TSlivede/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TSlivede"
    }
  },
  {
    "author_association": "NONE",
    "body": "Wait, there's a three-year-old RFC for this? \r\n\r\n> Just duplicating would probably not be enough. For some edgecases you could probably read my old RFC and the corresponding discussion starting at [PowerShell/PowerShell-RFC#90 (comment)](https://github.com/PowerShell/PowerShell-RFC/pull/90#issuecomment-511427663)\r\n\r\nI want to keep stuff... minimal. My plan is that rogue programs will eventually only be served by `--%`, for which people will write modules around. It should get documented after all. There *is* the problem of being unable to pass a literal `%`, but people should be able to make up their own env var for it. `--=` is nice and shouldn't be too hard to add.\r\n\r\nI cannot think of a good interface for reusable escaping. Doing `cmd` would take either a very complicated version of the normal rules that keeps tracks of cmd's view of quoting or a non-standard one with the undocumeted `\"\"`. And top it with the usual `/c /k /s \"verbatim cmdline here\"` stuff.\r\n\r\nI kind of like the idea of preserving quoting structure, but then a bareword with trailing backslashes will always throw it off. Issue 13098 can however use some inspection if I can figure out what the AST looks like with `'a 'b` vs `a' b'`...",
    "created_at": "2020-07-05T08:12:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653856425",
    "id": 653856425,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg1NjQyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653856425/reactions"
    },
    "updated_at": "2020-07-05T08:17:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653856425",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6459309?v=4",
      "events_url": "https://api.github.com/users/Artoria2e5/events{/privacy}",
      "followers_url": "https://api.github.com/users/Artoria2e5/followers",
      "following_url": "https://api.github.com/users/Artoria2e5/following{/other_user}",
      "gists_url": "https://api.github.com/users/Artoria2e5/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Artoria2e5",
      "id": 6459309,
      "login": "Artoria2e5",
      "node_id": "MDQ6VXNlcjY0NTkzMDk=",
      "organizations_url": "https://api.github.com/users/Artoria2e5/orgs",
      "received_events_url": "https://api.github.com/users/Artoria2e5/received_events",
      "repos_url": "https://api.github.com/users/Artoria2e5/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Artoria2e5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Artoria2e5/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Artoria2e5"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@TSlivede \r\n\r\n> And while I do like the Idea of using `Start-Process` instead of a new operator\r\n\r\nThis is not an either-or scenario: _both_ direct/`&`-based invocation and `Start-Process` must be fixed - they serve distinct purposes.\r\n\r\nIf I understand @Artoria2e5's proposal correctly, the aim with respect to direct/`&`-based invocation is to _fix_ them in a _breaking manner_.\r\n\r\nHowever, my understanding is that **there is still a fundamental unwillingness to ever take such a big breaking change**.\r\nCorrect, @SteveL-MSFT?\r\n\r\nWith this in mind:\r\n\r\n* The proposal in #5576 is to add a _new parameter_ to `Start-Process`, `-IndividualArguments`, which could use [`System.Diagnostics.ProcessStartInfo.ArgumentList`](https://docs.microsoft.com/en-US/dotnet/api/System.Diagnostics.ProcessStartInfo.ArgumentList) behind the scenes (that on the PowerShell side it is `-ArgumentList` that is the _broken_ parameter is unfortunate, but cannot be helped).\r\n\r\n* Since direct/`&`-based invocation cannot be fixed, https://github.com/PowerShell/PowerShell/issues/13068#issuecomment-653526374 proposes that the fix be implemented _as a new operator_.\r\n\r\n   * This would mean implementing @TSlivede's RFC (https://github.com/PowerShell/PowerShell-RFC/pull/90#issuecomment-511427663), the fundamentals of which I think are agreed upon, but a few details have yet to be worked out.\r\n\r\n   * While it is, of course, unfortunate, that direct/`&`-based invocation will continue to be broken, introducing something like `&!` is (a) concise) and (b) at least easy to communicate: \r\n        * Going forward, only ever use `&!` instead of `&` (for PowerShell commands it will act like `&` already does, for external programs, it will pass arguments properly. \r\n        * When calling external programs, always use `&!`, don't use direct invocation.\r\n\r\nFixing the original features is undoubtedly preferable in an ideal world, but with the commitment to backward compatibility that isn't an option.\r\n\r\n",
    "created_at": "2020-07-05T14:58:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653899113",
    "id": 653899113,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzg5OTExMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653899113/reactions"
    },
    "updated_at": "2020-07-05T18:12:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653899113",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "The RFC has an idea about a feature switch variable for controlling the behavior. It should be a good option for maintaining backward compatibility too if we make it scopable.",
    "created_at": "2020-07-06T01:16:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653968748",
    "id": 653968748,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk2ODc0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653968748/reactions"
    },
    "updated_at": "2020-07-06T01:30:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653968748",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6459309?v=4",
      "events_url": "https://api.github.com/users/Artoria2e5/events{/privacy}",
      "followers_url": "https://api.github.com/users/Artoria2e5/followers",
      "following_url": "https://api.github.com/users/Artoria2e5/following{/other_user}",
      "gists_url": "https://api.github.com/users/Artoria2e5/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Artoria2e5",
      "id": 6459309,
      "login": "Artoria2e5",
      "node_id": "MDQ6VXNlcjY0NTkzMDk=",
      "organizations_url": "https://api.github.com/users/Artoria2e5/orgs",
      "received_events_url": "https://api.github.com/users/Artoria2e5/received_events",
      "repos_url": "https://api.github.com/users/Artoria2e5/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Artoria2e5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Artoria2e5/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Artoria2e5"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@Artoria2e5 \r\n\r\nThe RFC proposes a _preference variable_ as an opt-_out_  mechanism - to opt out of the _new_, correct behavior, in order to get the _old_, broken behavior.\r\n\r\n* This logic contradicts the commitment to backward compatibility.\r\n\r\n* Even if we were to _reverse_ that logic - asking for an opt-_in_ to the new, correct behavior, PowerShell's _dynamic_ scoping of (preference) variables makes this solution problematic - see https://github.com/PowerShell/PowerShell/issues/1995#issuecomment-650262164\r\n\r\nA new operator, as awkward as that is, avoids these problems.\r\n\r\n",
    "created_at": "2020-07-06T02:00:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-653977162",
    "id": 653977162,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzk3NzE2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653977162/reactions"
    },
    "updated_at": "2020-07-06T02:00:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/653977162",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "For anyone looking for an essentially bulletproof workaround to this issue (that adjusts itself depending on the powershell version.\r\n### Comparison\r\n```powershell\r\n#\r\n# system echo (linux)\r\n#\r\n\r\n# broken version\r\n& '/bin/echo' 'hello \"world\"' 'I am free \"finally don''t need to worry about escaping\"'       \r\n# >>> hello world I am free finally don't need to worry about escaping\r\n\r\n# fixed version\r\nexecute '/bin/echo' 'hello \"world\"' 'I am free \"finally don''t need to worry about escaping\"' \r\n# >>> hello \"world\" I am free \"finally don't need to worry about escaping\"\r\n\r\n\r\n#\r\n# powershell's echo\r\n#\r\n\r\n# default behavior\r\n& 'echo' 'hello \"world\"' 'I am free \"finally don''t need to worry about escaping\"' \r\n# >>> hello \"world\"\r\n# >>> I am free \"finally don't need to worry about escaping\"\r\n\r\n# backwards compatible behavior (doesn't double-escape)\r\nexecute 'echo' 'hello \"world\"' 'I am free \"finally don''t need to worry about escaping\"' \r\n# >>> hello \"world\"\r\n# >>> I am free \"finally don't need to worry about escaping\"\r\n```\r\n\r\n### Code\r\n```powershell\r\n# example: execute 'echo' 'hello \"world\"' 'I am free \"finally don''t need to worry about escaping\"' \r\n# fixes: https://github.com/PowerShell/PowerShell/issues/3049\r\nfunction execute {\r\n    # \r\n    # argument processing\r\n    # \r\n    $all_args = $PsBoundParameters.Values + $args\r\n    \r\n    # \r\n    # escape all of them\r\n    # \r\n    $escaped_arg_string = \"&\"\r\n    $partly_escaped_arg = \"&\"\r\n    $is_first_arg = $true\r\n    ForEach ($item in $args) {\r\n        # single quotes escape everything... everything except \r\n        $escaped_item = $item\r\n        $escaped_item = ($escaped_item -replace \"'\", \"''\")\r\n        $escaped_twice_item = ($escaped_item -replace '\"', '\"\"')\r\n        \r\n        # the command name/path is handled different\r\n        if ($is_first_arg) {\r\n            $is_first_arg = $false\r\n            # powershell doens't escape the double quotes of the command name\r\n            # so we dont double escape them this one time\r\n            $escaped_twice_item = $escaped_item\r\n        }\r\n        $escaped_arg_string = $escaped_arg_string + \" '\" + $escaped_twice_item + \"'\"\r\n        # post-7.1\r\n        $partly_escaped_arg = $partly_escaped_arg + \" '\" + $escaped_item + \"'\"\r\n    }\r\n    \r\n    # all this because sometimes its an array, sometimes its not\r\n    $results = (Get-Command -CommandType \"All\" -Name $args[0] -ErrorAction SilentlyContinue).Source\r\n    if ($results -is [array]) {\r\n        $results = $results[0]\r\n    }\r\n    $main_item_source = $results\r\n    \r\n    # all this because sometimes its an array, sometimes its not\r\n    $results = (Get-Command -CommandType \"Application\" -Name $args[0] -ErrorAction SilentlyContinue).Source\r\n    if ($results -is [array]) {\r\n        $results = $results[0]\r\n    }\r\n    $main_application_source = $results\r\n    \r\n    # if on older version, note: https://github.com/PowerShell/PowerShell/issues/13089\r\n    # and if it is calling an Application (not a script/function)\r\n    if (($PSVersionTable.PSVersion) -lt ([version]\"7.2.0\") -and ($main_item_source -eq $main_application_source)) {\r\n        # use the fix\r\n        return (Invoke-Expression $escaped_arg_string)\r\n    # if on newer version or not calling an Application\r\n    } else {\r\n        return (Invoke-Expression $partly_escaped_arg)\r\n    }\r\n}\r\n```\r\n\r\nThis should always escape the arguments correctly, even when taking into account the planned 7.2 change [here](https://github.com/PowerShell/PowerShell/issues/13089).",
    "created_at": "2021-05-09T00:27:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-835591824",
    "id": 835591824,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTU5MTgyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835591824/reactions"
    },
    "updated_at": "2021-05-09T00:28:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835591824",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17692058?v=4",
      "events_url": "https://api.github.com/users/jeff-hykin/events{/privacy}",
      "followers_url": "https://api.github.com/users/jeff-hykin/followers",
      "following_url": "https://api.github.com/users/jeff-hykin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeff-hykin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jeff-hykin",
      "id": 17692058,
      "login": "jeff-hykin",
      "node_id": "MDQ6VXNlcjE3NjkyMDU4",
      "organizations_url": "https://api.github.com/users/jeff-hykin/orgs",
      "received_events_url": "https://api.github.com/users/jeff-hykin/received_events",
      "repos_url": "https://api.github.com/users/jeff-hykin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jeff-hykin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeff-hykin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jeff-hykin"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jeff-hykin, if you're looking for something prepackaged that works robustly and also incorporates the important accommodations on _Windows_ proposed in #15143 that the new-in-PowerShell Core 7.2.0-preview.5 experimental `PSNativeCommandArgumentPassing` feature does not and [seemingly will never include](https://github.com/PowerShell/PowerShell/issues/15143#issuecomment-833090452) (though it does work robustly on _Unix_), consider the `ie` function from the [`Native`](https://github.com/mklement0/Native) module (authored by me).\r\n\r\n",
    "created_at": "2021-05-09T01:50:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-835623238",
    "id": 835623238,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTYyMzIzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835623238/reactions"
    },
    "updated_at": "2021-05-09T01:50:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835623238",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 Thanks for the info, that looks like a much better long term solution. ",
    "created_at": "2021-05-09T02:39:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-835640837",
    "id": 835640837,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTY0MDgzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835640837/reactions"
    },
    "updated_at": "2021-05-09T02:39:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835640837",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17692058?v=4",
      "events_url": "https://api.github.com/users/jeff-hykin/events{/privacy}",
      "followers_url": "https://api.github.com/users/jeff-hykin/followers",
      "following_url": "https://api.github.com/users/jeff-hykin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeff-hykin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jeff-hykin",
      "id": 17692058,
      "login": "jeff-hykin",
      "node_id": "MDQ6VXNlcjE3NjkyMDU4",
      "organizations_url": "https://api.github.com/users/jeff-hykin/orgs",
      "received_events_url": "https://api.github.com/users/jeff-hykin/received_events",
      "repos_url": "https://api.github.com/users/jeff-hykin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jeff-hykin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeff-hykin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jeff-hykin"
    }
  },
  {
    "author_association": "NONE",
    "body": "Can we at least include @mklement0’s msiexec mitigation?  If I understand it correctly, it is 100% compatible and ~~requires no special-casing whatsoever~~ still needs special-casing for certain commands :disappointed:.",
    "created_at": "2021-05-12T12:04:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-839716089",
    "id": 839716089,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTcxNjA4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/839716089/reactions"
    },
    "updated_at": "2021-05-12T12:52:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/839716089",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6395399?v=4",
      "events_url": "https://api.github.com/users/DemiMarie/events{/privacy}",
      "followers_url": "https://api.github.com/users/DemiMarie/followers",
      "following_url": "https://api.github.com/users/DemiMarie/following{/other_user}",
      "gists_url": "https://api.github.com/users/DemiMarie/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/DemiMarie",
      "id": 6395399,
      "login": "DemiMarie",
      "node_id": "MDQ6VXNlcjYzOTUzOTk=",
      "organizations_url": "https://api.github.com/users/DemiMarie/orgs",
      "received_events_url": "https://api.github.com/users/DemiMarie/received_events",
      "repos_url": "https://api.github.com/users/DemiMarie/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/DemiMarie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DemiMarie/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/DemiMarie"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@DemiMarie, I suggest  posting your comment in issue  #15143, as that is where the official decision not to include such accommodations was announced.",
    "created_at": "2021-05-12T12:12:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13089#issuecomment-839720896",
    "id": 839720896,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13089",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzOTcyMDg5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/839720896/reactions"
    },
    "updated_at": "2021-05-12T12:12:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/839720896",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
