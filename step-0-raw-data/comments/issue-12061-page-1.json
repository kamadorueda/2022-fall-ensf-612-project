[
  {
    "author_association": "COLLABORATOR",
    "body": "@superbonaci can you please clarify what you mean with your feature request?\r\n\r\nCommand history has not changed a great deal since the Windows PowerShell days. You can access command history from `Get-History` or by using the PSReadLine features which scroll though history when using up/down arrow keys (unless you've reconfigured these options).",
    "created_at": "2020-03-07T00:38:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596021228",
    "id": 596021228,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjAyMTIyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596021228/reactions"
    },
    "updated_at": "2020-03-07T00:38:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596021228",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Up-arrow and down-arrow do a great job with history. And you can view it with Get-History.",
    "created_at": "2020-03-07T12:05:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596081344",
    "id": 596081344,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjA4MTM0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596081344/reactions"
    },
    "updated_at": "2020-03-07T12:05:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596081344",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3630329?v=4",
      "events_url": "https://api.github.com/users/doctordns/events{/privacy}",
      "followers_url": "https://api.github.com/users/doctordns/followers",
      "following_url": "https://api.github.com/users/doctordns/following{/other_user}",
      "gists_url": "https://api.github.com/users/doctordns/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/doctordns",
      "id": 3630329,
      "login": "doctordns",
      "node_id": "MDQ6VXNlcjM2MzAzMjk=",
      "organizations_url": "https://api.github.com/users/doctordns/orgs",
      "received_events_url": "https://api.github.com/users/doctordns/received_events",
      "repos_url": "https://api.github.com/users/doctordns/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/doctordns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doctordns/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/doctordns"
    }
  },
  {
    "author_association": "NONE",
    "body": "@doctordns I've checked and Up/Down arrow works, which is what I wanted. However Get-History is clean after rebooting computer. @vexx32 I want all history (without any day or count timeout) to be preserved by Get-History and Up/Down arrows even after a reboot. Is that clear?",
    "created_at": "2020-03-07T16:16:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596104262",
    "id": 596104262,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjEwNDI2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596104262/reactions"
    },
    "updated_at": "2020-03-07T16:16:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596104262",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339596?v=4",
      "events_url": "https://api.github.com/users/superbonaci/events{/privacy}",
      "followers_url": "https://api.github.com/users/superbonaci/followers",
      "following_url": "https://api.github.com/users/superbonaci/following{/other_user}",
      "gists_url": "https://api.github.com/users/superbonaci/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/superbonaci",
      "id": 8339596,
      "login": "superbonaci",
      "node_id": "MDQ6VXNlcjgzMzk1OTY=",
      "organizations_url": "https://api.github.com/users/superbonaci/orgs",
      "received_events_url": "https://api.github.com/users/superbonaci/received_events",
      "repos_url": "https://api.github.com/users/superbonaci/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/superbonaci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superbonaci/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/superbonaci"
    }
  },
  {
    "author_association": "NONE",
    "body": "Persisting history is indeed needed, just like `pwd\\.bash_history`",
    "created_at": "2020-03-08T10:44:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596191110",
    "id": 596191110,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjE5MTExMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 9,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 9,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596191110/reactions"
    },
    "updated_at": "2020-03-08T10:44:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596191110",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6244148?v=4",
      "events_url": "https://api.github.com/users/ToMakeSense/events{/privacy}",
      "followers_url": "https://api.github.com/users/ToMakeSense/followers",
      "following_url": "https://api.github.com/users/ToMakeSense/following{/other_user}",
      "gists_url": "https://api.github.com/users/ToMakeSense/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ToMakeSense",
      "id": 6244148,
      "login": "ToMakeSense",
      "node_id": "MDQ6VXNlcjYyNDQxNDg=",
      "organizations_url": "https://api.github.com/users/ToMakeSense/orgs",
      "received_events_url": "https://api.github.com/users/ToMakeSense/received_events",
      "repos_url": "https://api.github.com/users/ToMakeSense/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ToMakeSense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ToMakeSense/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ToMakeSense"
    }
  },
  {
    "author_association": "NONE",
    "body": "Actually I'm not sure it command history on GNU/Linux depends on Bash itselt, what I know is that it remembers all commands even after a reboot. But no idea if that's up to GNU Bash or the terminal emulator itself.",
    "created_at": "2020-03-08T21:38:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596255865",
    "id": 596255865,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjI1NTg2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596255865/reactions"
    },
    "updated_at": "2020-03-08T21:38:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596255865",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339596?v=4",
      "events_url": "https://api.github.com/users/superbonaci/events{/privacy}",
      "followers_url": "https://api.github.com/users/superbonaci/followers",
      "following_url": "https://api.github.com/users/superbonaci/following{/other_user}",
      "gists_url": "https://api.github.com/users/superbonaci/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/superbonaci",
      "id": 8339596,
      "login": "superbonaci",
      "node_id": "MDQ6VXNlcjgzMzk1OTY=",
      "organizations_url": "https://api.github.com/users/superbonaci/orgs",
      "received_events_url": "https://api.github.com/users/superbonaci/received_events",
      "repos_url": "https://api.github.com/users/superbonaci/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/superbonaci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superbonaci/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/superbonaci"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "PowerShell's command history already is persistent, via the included `PSReadLine` module, which stores the persisted history in file `(Get-PSReadLineOption).HistorySavePath`.\r\n\r\nIf that isn't working for you, your setup must be broken, or perhaps you've deactivated `PSReadLine` intentionally?\r\n\r\nAlso note that this repo is for _PowerShell [Core]_, not _Windows PowerShell_ (though the above applies to both editions).",
    "created_at": "2020-03-09T03:51:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596319116",
    "id": 596319116,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjMxOTExNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596319116/reactions"
    },
    "updated_at": "2020-03-09T03:56:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596319116",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 The persisted history `(Get-PSReadLineOption).HistorySavePath` does work for both Poweshell[Core] and Windows Powershell console. new skill get!\r\n\r\nBut, I think, the thing is, the actual path below is too much deep and the designed cmdlet `(Get-PSReadLineOption).HistorySavePath` hide itself too much deep. It's not as obvious and easy to use as `bash`.\r\n> C:\\Users\\UserName\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\r\n\r\nAs you saying `Also note that this repo is for PowerShell [Core], not Windows PowerShell (though the above applies to both editions).` , BTW, I tested Window Poweshell ISE, the path blow is not working. \r\n> C:\\Users\\UserName\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\Windows PowerShell ISE Host_history.txt",
    "created_at": "2020-03-09T06:59:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596360616",
    "id": 596360616,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjM2MDYxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596360616/reactions"
    },
    "updated_at": "2020-03-09T06:59:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596360616",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6244148?v=4",
      "events_url": "https://api.github.com/users/ToMakeSense/events{/privacy}",
      "followers_url": "https://api.github.com/users/ToMakeSense/followers",
      "following_url": "https://api.github.com/users/ToMakeSense/following{/other_user}",
      "gists_url": "https://api.github.com/users/ToMakeSense/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ToMakeSense",
      "id": 6244148,
      "login": "ToMakeSense",
      "node_id": "MDQ6VXNlcjYyNDQxNDg=",
      "organizations_url": "https://api.github.com/users/ToMakeSense/orgs",
      "received_events_url": "https://api.github.com/users/ToMakeSense/received_events",
      "repos_url": "https://api.github.com/users/ToMakeSense/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ToMakeSense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ToMakeSense/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ToMakeSense"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@ToMakeSense, the Windows PowerShell ISE does not support `PSReadLine` - see https://github.com/PowerShell/PSReadLine/issues/401; it doesn't come with persistent history (the linked issue offers a workaround).\r\n\r\nGenerally, given that [the ISE is no longer being actively developed](https://docs.microsoft.com/en-us/powershell/scripting/components/ise/introducing-the-windows-powershell-ise#support) and doesn't support PowerShell [Core] at all (only Windows PowerShell), consider moving to [Visual Studio Code](https://code.visualstudio.com/), combined with its [PowerShell extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell), which supports `PSReadLine` in its integrated console.\r\n\r\n> the actual path below is too much deep and the designed cmdlet (Get-PSReadLineOption).HistorySavePath hide itself too much deep.\r\n\r\nJust like in Bash, you needn't know where the file that records the persistent history is located - PSReadLine manages that for you.\r\nIf you do feel you need to use a custom location, you can do so with `Set-PSReadLineOption -HistorySavePath`.\r\n\r\nIf you want to examine the history programmatically / interactively, \r\n* use `Get-History` to examine _the current session_'s history, and \r\n* `Get-Content (Get-PSReadLineOption).HistorySavePath` to examine the current session's _plus_ the persisted one.\r\n\r\nTrue, direct access to the history file is not as simple as targeting a path such as `~/.bash_history.txt`, but once you know about `Get-PSReadLineOption`, tab completion will assist you in finding the right property name.\r\n\r\nRemember that PowerShell has very different roots than POSIX-like shells such as Bash, and PSReadLine was written long before PowerShell became cross-platform, and additionally wasn't even an integral part of PowerShell at first.\r\nChanging the file's location now would be a breaking change, and it is generally challenging to find locations that work consistently across all platforms; the Unix `~/.*` convention for initialization / history files, while technically possible, isn't a great fit for Windows, and PowerShell doesn't use it.\r\n\r\nQuick tangent: `[Environment]::GetFolderPath()` provides a limited set of platform-abstracted paths, e.g. `[Environment]::GetFolderPath('ApplicationData')`,  but such calls are cumbersome; #6966 proposes surfacing them in a simpler, more PowerShell-like way.\r\n\r\n\r\n\r\n",
    "created_at": "2020-03-09T13:12:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-596515475",
    "id": 596515475,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjUxNTQ3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 7,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596515475/reactions"
    },
    "updated_at": "2020-03-09T13:12:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/596515475",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "> PowerShell's command history already is persistent, via the included `PSReadLine` module, which stores the persisted history in file `(Get-PSReadLineOption).HistorySavePath`.\r\n> \r\n> If that isn't working for you, your setup must be broken, or perhaps you've deactivated `PSReadLine` intentionally?\r\n> \r\n> Also note that this repo is for _PowerShell [Core]_, not _Windows PowerShell_ (though the above applies to both editions).\r\n\r\nThis works thank you, is displays where the text file is located, which contains lots of previous commands in a text file:\r\n\r\n```\r\nPS C:\\Temp> (Get-PSReadLineOption).HistorySavePath\r\nC:\\Users\\Myuser\\AppData\\Roaming\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt\r\n```\r\n```\r\nGet-Content (Get-PSReadLineOption).HistorySavePath\r\n[...cats the text file...]\r\n```\r\n\r\nIf you add `Get-Content` before the command just cats the entire txt file. What I like about Bash is that you can recall any command by its number, for example `!25` which you can't do with Powershell. It just throws everything at once.",
    "created_at": "2020-03-11T16:08:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-597722781",
    "id": 597722781,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzcyMjc4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597722781/reactions"
    },
    "updated_at": "2020-03-11T16:12:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597722781",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339596?v=4",
      "events_url": "https://api.github.com/users/superbonaci/events{/privacy}",
      "followers_url": "https://api.github.com/users/superbonaci/followers",
      "following_url": "https://api.github.com/users/superbonaci/following{/other_user}",
      "gists_url": "https://api.github.com/users/superbonaci/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/superbonaci",
      "id": 8339596,
      "login": "superbonaci",
      "node_id": "MDQ6VXNlcjgzMzk1OTY=",
      "organizations_url": "https://api.github.com/users/superbonaci/orgs",
      "received_events_url": "https://api.github.com/users/superbonaci/received_events",
      "repos_url": "https://api.github.com/users/superbonaci/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/superbonaci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superbonaci/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/superbonaci"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Note: The following applies to the _current-session_ history only.\r\nI do agree that seamlessly integrating the persisted history would be helpful.\r\n\r\nThe current-session part of the history can be shown in a more targeted fashion with `Get-History`, whose built-in alias is `h`, and - similar to Bash's history feature - you can use the `Invoke-History` cmdlet to target a command from the history by id; the built-in alias for `Invoke-History` is `r`, so the equivalent of `!25` is:\r\n\r\n```powershell\r\n# Re-invoke the command recorded as history entry 25 (a shown by h / Get-History\r\nr 25\r\n```\r\nYou can also do the following with tab completion: type a `#` followed by a _substring_ of a previous command line of interest, and pressing <kbd>Tab</kbd> will cycle through and expand all matching history entries _without submitting them yet_, giving you a chance to modify the command line.\r\n\r\nFor instance, the following would cycle through all commands in the history that contain the substring `date`:\r\n\r\n```powershell\r\nPS> #date<tab>\r\n```\r\n\r\n----\r\n\r\n\r\nOnly the following technique appears to be integrated with the persisted history already: \r\n\r\nUse the keyboard shortcut for the `ReverseSearchHistory` `PSReadLine` function, which by default is bound to <kbd>Ctrl-r</kbd>:\r\n\r\n* Press it, and start typing a substring of interest.\r\n* To jump backward to the next earlier history entry containing the same substring, press the shortcut again.\r\n* Once you find the entry of interest:\r\n  * Either press <kbd>Enter</kbd> to submit it instantly.\r\n  * Or press <kbd>Tab</kbd> to leave search mode, allowing you to modify the command before submitting it.\r\n\r\nRun [`Get-PSReadLineKeyHandler`](https://docs.microsoft.com/en-us/powershell/module/psreadline/get-psreadlinekeyhandler) and inspect the \"History functions\" section for the available functions and their current key binding.\r\n\r\n\r\n",
    "created_at": "2020-03-11T19:57:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-597837516",
    "id": 597837516,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzgzNzUxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597837516/reactions"
    },
    "updated_at": "2020-03-11T20:01:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597837516",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "`Invoke-History` for me just re-runs the last command.\r\nOk got it, `Invoke-History` or `r` without arguments re-run last command. It's like hitting the up arrow and enter.",
    "created_at": "2020-03-11T20:58:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-597875347",
    "id": 597875347,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzg3NTM0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597875347/reactions"
    },
    "updated_at": "2020-03-11T21:04:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597875347",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339596?v=4",
      "events_url": "https://api.github.com/users/superbonaci/events{/privacy}",
      "followers_url": "https://api.github.com/users/superbonaci/followers",
      "following_url": "https://api.github.com/users/superbonaci/following{/other_user}",
      "gists_url": "https://api.github.com/users/superbonaci/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/superbonaci",
      "id": 8339596,
      "login": "superbonaci",
      "node_id": "MDQ6VXNlcjgzMzk1OTY=",
      "organizations_url": "https://api.github.com/users/superbonaci/orgs",
      "received_events_url": "https://api.github.com/users/superbonaci/received_events",
      "repos_url": "https://api.github.com/users/superbonaci/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/superbonaci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/superbonaci/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/superbonaci"
    }
  },
  {
    "author_association": "NONE",
    "body": "Cmon...ksh, the code for \"set -o vi\" and \"set -o emacs\" has been built INTO ksh since forever. The GNU stuff has it out their for free. A bajillion of us have nerves welded in for one or the other. Just get on board, please. Bash, ksh, mksh, tcsh, zsh, dash, and whatever other shells some nitwit is spinning up for the *nix world has great history functionality. Did I mention the code is ALREADY OUT THERE FOR FREE!!!\r\nCygwin makes Windows bearable.\r\nThat there is a cross platform powershell is cool. But every time I see the baroque command lines one executes to do things I ask who can remember (or comfortable type) THAT! Esc-k then hjkl for me, thank you.",
    "created_at": "2020-07-07T19:26:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-655074919",
    "id": 655074919,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTA3NDkxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/655074919/reactions"
    },
    "updated_at": "2020-07-07T19:26:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/655074919",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/67663648?v=4",
      "events_url": "https://api.github.com/users/steppnav/events{/privacy}",
      "followers_url": "https://api.github.com/users/steppnav/followers",
      "following_url": "https://api.github.com/users/steppnav/following{/other_user}",
      "gists_url": "https://api.github.com/users/steppnav/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/steppnav",
      "id": 67663648,
      "login": "steppnav",
      "node_id": "MDQ6VXNlcjY3NjYzNjQ4",
      "organizations_url": "https://api.github.com/users/steppnav/orgs",
      "received_events_url": "https://api.github.com/users/steppnav/received_events",
      "repos_url": "https://api.github.com/users/steppnav/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/steppnav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steppnav/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/steppnav"
    }
  },
  {
    "author_association": "NONE",
    "body": "> `Invoke-History` for me just re-runs the last command.\r\n> Ok got it, `Invoke-History` or `r` without arguments re-run last command. It's like hitting the up arrow and enter.\r\n\r\nVery kshish. Good. I did the \"h\", which numbers the history lines. Then \"r 1\" and it ran that line of the displayed history. Good.",
    "created_at": "2020-07-07T19:31:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-655077744",
    "id": 655077744,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTA3Nzc0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/655077744/reactions"
    },
    "updated_at": "2020-07-07T19:31:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/655077744",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/67663648?v=4",
      "events_url": "https://api.github.com/users/steppnav/events{/privacy}",
      "followers_url": "https://api.github.com/users/steppnav/followers",
      "following_url": "https://api.github.com/users/steppnav/following{/other_user}",
      "gists_url": "https://api.github.com/users/steppnav/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/steppnav",
      "id": 67663648,
      "login": "steppnav",
      "node_id": "MDQ6VXNlcjY3NjYzNjQ4",
      "organizations_url": "https://api.github.com/users/steppnav/orgs",
      "received_events_url": "https://api.github.com/users/steppnav/received_events",
      "repos_url": "https://api.github.com/users/steppnav/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/steppnav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steppnav/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/steppnav"
    }
  },
  {
    "author_association": "NONE",
    "body": "How can I create a persistent alias to the `gc (Get-PSReadLineOption).HistorySavePath` command?\r\n\r\nI'm new to PS.",
    "created_at": "2020-07-28T08:02:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-664844232",
    "id": 664844232,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDg0NDIzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664844232/reactions"
    },
    "updated_at": "2020-07-28T08:02:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664844232",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1055391?v=4",
      "events_url": "https://api.github.com/users/turowicz/events{/privacy}",
      "followers_url": "https://api.github.com/users/turowicz/followers",
      "following_url": "https://api.github.com/users/turowicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/turowicz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/turowicz",
      "id": 1055391,
      "login": "turowicz",
      "node_id": "MDQ6VXNlcjEwNTUzOTE=",
      "organizations_url": "https://api.github.com/users/turowicz/orgs",
      "received_events_url": "https://api.github.com/users/turowicz/received_events",
      "repos_url": "https://api.github.com/users/turowicz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/turowicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/turowicz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/turowicz"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You can define a function for that, but you'll need to put it in your $profile for it to be persisted to new sessions. You can do that by doing something like the following:\r\n\r\n```ps1\r\n@\"\r\nfunction Get-PSReadLineHistory {\r\n    [CmdletBinding()]\r\n    [Alias('gph')]\r\n    param()\r\n    Get-Content -Path (Get-PSReadLineOption).HistorySavePath\r\n}\r\n\"@ | Add-Content -Path $profile\r\n```\r\n\r\nAfter doing that it will be present in any new PS sessions you create for your current user. To immediately load it into the current session you'll need to use `. $profile` to reload your profile into the current session.",
    "created_at": "2020-07-28T08:26:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-664855982",
    "id": 664855982,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDg1NTk4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664855982/reactions"
    },
    "updated_at": "2020-07-28T08:26:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664855982",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "In PowerShell, an alias is only a short cut (accelerator as it were) to a command name. There has been some discussion of changing this, but so far, to achieve what you want requires you to build a function. You can, as @vexx32 suggests, just add the function in ti your Profile. ",
    "created_at": "2020-07-28T11:17:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-664981634",
    "id": 664981634,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDk4MTYzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664981634/reactions"
    },
    "updated_at": "2020-07-28T11:17:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664981634",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3630329?v=4",
      "events_url": "https://api.github.com/users/doctordns/events{/privacy}",
      "followers_url": "https://api.github.com/users/doctordns/followers",
      "following_url": "https://api.github.com/users/doctordns/following{/other_user}",
      "gists_url": "https://api.github.com/users/doctordns/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/doctordns",
      "id": 3630329,
      "login": "doctordns",
      "node_id": "MDQ6VXNlcjM2MzAzMjk=",
      "organizations_url": "https://api.github.com/users/doctordns/orgs",
      "received_events_url": "https://api.github.com/users/doctordns/received_events",
      "repos_url": "https://api.github.com/users/doctordns/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/doctordns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doctordns/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/doctordns"
    }
  },
  {
    "author_association": "NONE",
    "body": "@doctordns thank you for your reply.\r\n\r\nWhen executing your command, I get the followin error on a brand new installation of PS 7.x:\r\n\r\n```\r\nPowerShell 7.0.3\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\n\r\nhttps://aka.ms/powershell\r\nType 'help' to get help.\r\n\r\nPS C:\\Users\\Me> @\"\r\n>> function Get-PSReadLineHistory {\r\n>>     [CmdletBinding()]\r\n>>     [Alias('gph')]\r\n>>     param()\r\n>>     Get-Content -Path (Get-PSReadLineOption).HistorySavePath\r\n>> }\r\n>> \"@ | Add-Content -Path $profile\r\nAdd-Content:\r\nLine |\r\n   8 |  \"@ | Add-Content -Path $profile\r\n     |       ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Could not find a part of the path 'C:\\Users\\Me\\Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1'.\r\n```\r\n\r\nSeems like it should also create the profile file if one doesn't exist?",
    "created_at": "2020-07-28T11:39:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-664990242",
    "id": 664990242,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDk5MDI0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664990242/reactions"
    },
    "updated_at": "2020-07-28T11:39:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664990242",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1055391?v=4",
      "events_url": "https://api.github.com/users/turowicz/events{/privacy}",
      "followers_url": "https://api.github.com/users/turowicz/followers",
      "following_url": "https://api.github.com/users/turowicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/turowicz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/turowicz",
      "id": 1055391,
      "login": "turowicz",
      "node_id": "MDQ6VXNlcjEwNTUzOTE=",
      "organizations_url": "https://api.github.com/users/turowicz/orgs",
      "received_events_url": "https://api.github.com/users/turowicz/received_events",
      "repos_url": "https://api.github.com/users/turowicz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/turowicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/turowicz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/turowicz"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Usually it won't complain (and quietly create the file if it doesn't exist), but that error indicates the folder path it would usually be placed in doesn't exist either. Run this before that command to create the folder:\r\n\r\n```ps1\r\n$profile | Split-Path -Parent | New-Item -ItemType Directory\r\n```",
    "created_at": "2020-07-28T11:42:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-664991694",
    "id": 664991694,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NDk5MTY5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664991694/reactions"
    },
    "updated_at": "2020-07-28T11:43:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/664991694",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "thanks @vexx32 \r\n\r\nI get an error like this though\r\n\r\n```\r\nPS C:\\Users\\Me> $profile | Split-Path -Parent | New-Item -ItemType Directory\r\nNew-Item: The input object cannot be bound because it did not contain the information required to bind all mandatory parameters:  Path\r\n```",
    "created_at": "2020-07-28T12:42:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-665016271",
    "id": 665016271,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTAxNjI3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665016271/reactions"
    },
    "updated_at": "2020-07-28T12:42:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665016271",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1055391?v=4",
      "events_url": "https://api.github.com/users/turowicz/events{/privacy}",
      "followers_url": "https://api.github.com/users/turowicz/followers",
      "following_url": "https://api.github.com/users/turowicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/turowicz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/turowicz",
      "id": 1055391,
      "login": "turowicz",
      "node_id": "MDQ6VXNlcjEwNTUzOTE=",
      "organizations_url": "https://api.github.com/users/turowicz/orgs",
      "received_events_url": "https://api.github.com/users/turowicz/received_events",
      "repos_url": "https://api.github.com/users/turowicz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/turowicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/turowicz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/turowicz"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That's what I get for trying to be clever off-the-cuff 😁 . This'll work:\r\n\r\n```ps1\r\n$profile | Split-Path -Parent | New-Item -Path { $_ } -ItemType Directory\r\n```",
    "created_at": "2020-07-28T12:49:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-665019656",
    "id": 665019656,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTAxOTY1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665019656/reactions"
    },
    "updated_at": "2020-07-28T12:50:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665019656",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks @vexx32 and @doctordns! It all works!",
    "created_at": "2020-07-28T13:07:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-665028625",
    "id": 665028625,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTAyODYyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665028625/reactions"
    },
    "updated_at": "2020-07-28T13:07:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/665028625",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1055391?v=4",
      "events_url": "https://api.github.com/users/turowicz/events{/privacy}",
      "followers_url": "https://api.github.com/users/turowicz/followers",
      "following_url": "https://api.github.com/users/turowicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/turowicz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/turowicz",
      "id": 1055391,
      "login": "turowicz",
      "node_id": "MDQ6VXNlcjEwNTUzOTE=",
      "organizations_url": "https://api.github.com/users/turowicz/orgs",
      "received_events_url": "https://api.github.com/users/turowicz/received_events",
      "repos_url": "https://api.github.com/users/turowicz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/turowicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/turowicz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/turowicz"
    }
  },
  {
    "author_association": "NONE",
    "body": "So basically it seems only deprecated PowerShell ISE does not offer persistent command line history.\r\nBasic PowerShell does have persistent command line history now.\r\nUse PowerShell through Visual Studio Code PowerShell extension and you get persistent command line history with multiple tab support much like in ISE.",
    "created_at": "2020-09-11T10:45:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-691022267",
    "id": 691022267,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTAyMjI2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/691022267/reactions"
    },
    "updated_at": "2020-09-11T10:52:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/691022267",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6508892?v=4",
      "events_url": "https://api.github.com/users/Slion/events{/privacy}",
      "followers_url": "https://api.github.com/users/Slion/followers",
      "following_url": "https://api.github.com/users/Slion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Slion/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Slion",
      "id": 6508892,
      "login": "Slion",
      "node_id": "MDQ6VXNlcjY1MDg4OTI=",
      "organizations_url": "https://api.github.com/users/Slion/orgs",
      "received_events_url": "https://api.github.com/users/Slion/received_events",
      "repos_url": "https://api.github.com/users/Slion/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Slion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Slion/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Slion"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You also get this persistent command line history via the console too. This is a nice feature of PSReadline.\r\n\r\nIt looks like the history for VS Code is separate to that for the PowerShell 7 Console.",
    "created_at": "2020-09-11T10:49:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-691023601",
    "id": 691023601,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTAyMzYwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/691023601/reactions"
    },
    "updated_at": "2020-09-11T10:49:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/691023601",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3630329?v=4",
      "events_url": "https://api.github.com/users/doctordns/events{/privacy}",
      "followers_url": "https://api.github.com/users/doctordns/followers",
      "following_url": "https://api.github.com/users/doctordns/following{/other_user}",
      "gists_url": "https://api.github.com/users/doctordns/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/doctordns",
      "id": 3630329,
      "login": "doctordns",
      "node_id": "MDQ6VXNlcjM2MzAzMjk=",
      "organizations_url": "https://api.github.com/users/doctordns/orgs",
      "received_events_url": "https://api.github.com/users/doctordns/received_events",
      "repos_url": "https://api.github.com/users/doctordns/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/doctordns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doctordns/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/doctordns"
    }
  },
  {
    "author_association": "NONE",
    "body": "> You also get this persistent command line history via the console too.\r\n\r\nIndeed, edited my post above.",
    "created_at": "2020-09-11T10:53:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-691025051",
    "id": 691025051,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTAyNTA1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/691025051/reactions"
    },
    "updated_at": "2020-09-11T10:53:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/691025051",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6508892?v=4",
      "events_url": "https://api.github.com/users/Slion/events{/privacy}",
      "followers_url": "https://api.github.com/users/Slion/followers",
      "following_url": "https://api.github.com/users/Slion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Slion/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Slion",
      "id": 6508892,
      "login": "Slion",
      "node_id": "MDQ6VXNlcjY1MDg4OTI=",
      "organizations_url": "https://api.github.com/users/Slion/orgs",
      "received_events_url": "https://api.github.com/users/Slion/received_events",
      "repos_url": "https://api.github.com/users/Slion/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Slion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Slion/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Slion"
    }
  },
  {
    "author_association": "NONE",
    "body": "I am sure there is a better way to do this but for me it works fine. It is also not 100% perfect since I don't have a lot of time I can spend on this. For example, I can't get Format-Table to output multiple lines per column (Out-GridView does a better job). I am just sharing in it hopes that it helps out whomever stumbles across this thread next.\r\n\r\n```\r\nfunction Format-PSReadLineHistory {\r\n    $historyList = [System.Collections.ArrayList]::new()\r\n    $history = $(Get-Content (Get-PSReadLineOption).HistorySavePath)\r\n    $i = 0\r\n    while( $i -lt $($history.Length - 1) ){\r\n        # If it ends in a backtic then the command continues onto the next line\r\n        if( $history[$i] -match \"``$\" ){\r\n            $commands = [System.Collections.ArrayList]::new()\r\n            $commands.Add($history[$i].Replace('`','')) | Out-Null\r\n            $i++\r\n            while($history[$i] -match \"``$\"){\r\n                $commands.Add($history[$i].Replace('`','')) | Out-Null \r\n                $i++       \r\n            }\r\n            $commands.Add($history[$i].Replace('`','')) | Out-Null\r\n            $i++\r\n            # Now we join it all together with newline characters\r\n            $command = $commands -join \"`n\"\r\n            $historyList.Add([pscustomobject]@{\r\n\t\t        Number = $i + 1\r\n                Command = $command\r\n\t        }) | Out-Null\r\n        } else {\r\n            $historyList.Add([pscustomobject]@{\r\n\t\t        Number = $i + 1\r\n                Command = $history[$i]\r\n\t        }) | Out-Null\r\n            $i++  \r\n        }                           \r\n    }\r\n    return $historyList\r\n} \r\n\r\nfunction Get-PSReadLineHistory {\r\n    [CmdletBinding()]\r\n    [Alias('gph')]\r\n    param()\r\n    Format-PSReadLineHistory | Format-Table -HideTableHeaders -AutoSize\r\n}\r\n\r\nfunction Find-PSReadLineHistory {\r\n    [CmdletBinding()]\r\n    [Alias('fph')]\r\n    param([parameter(Position=0)]$keyword)\r\n    Format-PSReadLineHistory | Where-Object { $($_.Command.Replace('`n','; ')) -match $keyword } | Format-Table -HideTableHeaders -AutoSize \r\n}\r\n```\r\n\r\nThis will format `(Get-PSReadLineOption).HistorySavePath` so that the multiline commands (like when you paste in a function) appear as a single function. It will then allow you to search across your history. You can do something like `Select -Expand Command` once you find what you are looking for and itll display the whole command.",
    "created_at": "2020-12-14T14:36:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-744482386",
    "id": 744482386,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQ4MjM4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744482386/reactions"
    },
    "updated_at": "2020-12-14T14:36:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744482386",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/42121635?v=4",
      "events_url": "https://api.github.com/users/JustOneMoreDog/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustOneMoreDog/followers",
      "following_url": "https://api.github.com/users/JustOneMoreDog/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustOneMoreDog/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustOneMoreDog",
      "id": 42121635,
      "login": "JustOneMoreDog",
      "node_id": "MDQ6VXNlcjQyMTIxNjM1",
      "organizations_url": "https://api.github.com/users/JustOneMoreDog/orgs",
      "received_events_url": "https://api.github.com/users/JustOneMoreDog/received_events",
      "repos_url": "https://api.github.com/users/JustOneMoreDog/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustOneMoreDog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustOneMoreDog/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustOneMoreDog"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I am sure there is a better way to do this\r\n\r\nThe better way is not to use deprecated ISE. Command history is persisted by default in the latest PowerShell.",
    "created_at": "2020-12-14T17:21:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-744587964",
    "id": 744587964,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDU4Nzk2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744587964/reactions"
    },
    "updated_at": "2020-12-14T17:21:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744587964",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6508892?v=4",
      "events_url": "https://api.github.com/users/Slion/events{/privacy}",
      "followers_url": "https://api.github.com/users/Slion/followers",
      "following_url": "https://api.github.com/users/Slion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Slion/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Slion",
      "id": 6508892,
      "login": "Slion",
      "node_id": "MDQ6VXNlcjY1MDg4OTI=",
      "organizations_url": "https://api.github.com/users/Slion/orgs",
      "received_events_url": "https://api.github.com/users/Slion/received_events",
      "repos_url": "https://api.github.com/users/Slion/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Slion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Slion/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Slion"
    }
  },
  {
    "author_association": "NONE",
    "body": "I am not doing it in ISE. I switched to VSCode awhile ago. Still getting use to it but its nice.\r\n```\r\nWindows PowerShell\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nTry the new cross-platform PowerShell https://aka.ms/pscore6\r\n\r\nPS C:\\Windows\\system32> $PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      5.1.18362.1110\r\nPSEdition                      Desktop\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nBuildVersion                   10.0.18362.1110\r\nCLRVersion                     4.0.30319.42000\r\nWSManStackVersion              3.0\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\n\r\n\r\nPS C:\\Windows\\system32> history\r\n\r\n  Id CommandLine\r\n  -- -----------\r\n   1 $PSVersionTable\r\n```\r\nI was doing it straight from the powershell console. While the up arrow works just fine, when you type in history into the powershell console you will only see the history for the current session. What I wrote above was a way to change that so that it instead shows all of your history\r\n\r\n```\r\nPS C:\\Windows\\system32> gph\r\n\r\n     1 Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('http...\r\n# Cut for brevity \r\n   397 $PSVersionTable\r\n   398 history\r\n   431 function Format-PSReadLineHistory {...\r\n   437 function Get-PSReadLineHistory {...\r\n   443 function Find-PSReadLineHistory {...\r\n```",
    "created_at": "2020-12-16T18:29:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-746783226",
    "id": 746783226,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Njc4MzIyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/746783226/reactions"
    },
    "updated_at": "2020-12-16T18:31:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/746783226",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/42121635?v=4",
      "events_url": "https://api.github.com/users/JustOneMoreDog/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustOneMoreDog/followers",
      "following_url": "https://api.github.com/users/JustOneMoreDog/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustOneMoreDog/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustOneMoreDog",
      "id": 42121635,
      "login": "JustOneMoreDog",
      "node_id": "MDQ6VXNlcjQyMTIxNjM1",
      "organizations_url": "https://api.github.com/users/JustOneMoreDog/orgs",
      "received_events_url": "https://api.github.com/users/JustOneMoreDog/received_events",
      "repos_url": "https://api.github.com/users/JustOneMoreDog/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustOneMoreDog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustOneMoreDog/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustOneMoreDog"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As discussed in this issue, PowerShell does include persistent history with PSReadLine.  Thank you for the feature request.",
    "created_at": "2022-05-23T17:27:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12061#issuecomment-1134947785",
    "id": 1134947785,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12061",
    "node_id": "IC_kwDOAvT7bc5Dpe3J",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1134947785/reactions"
    },
    "updated_at": "2022-05-23T17:27:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1134947785",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12662278?v=4",
      "events_url": "https://api.github.com/users/theJasonHelmick/events{/privacy}",
      "followers_url": "https://api.github.com/users/theJasonHelmick/followers",
      "following_url": "https://api.github.com/users/theJasonHelmick/following{/other_user}",
      "gists_url": "https://api.github.com/users/theJasonHelmick/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/theJasonHelmick",
      "id": 12662278,
      "login": "theJasonHelmick",
      "node_id": "MDQ6VXNlcjEyNjYyMjc4",
      "organizations_url": "https://api.github.com/users/theJasonHelmick/orgs",
      "received_events_url": "https://api.github.com/users/theJasonHelmick/received_events",
      "repos_url": "https://api.github.com/users/theJasonHelmick/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/theJasonHelmick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theJasonHelmick/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/theJasonHelmick"
    }
  }
]
