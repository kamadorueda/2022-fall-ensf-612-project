[
  {
    "author_association": "NONE",
    "body": "> (As such - because the formatted output isn't meant for _programmatic_ processing - it isn't part of PowerShell's breaking-changes contract.)\r\n\r\nAlthough this might be true, I am afraid that the purpose will be more confusing than an advantage in human readability especially for a novice programmer.\r\n\r\nIf I do this: `@{ num = 1000 } | Out-File .\\Output.txt`\r\nWill it have thousands separators in the output file or not?\r\nI presume they shouldn't show up in the output, as I am not doing e.g. `@{ num = 1000 } | Format-Table | Out-File .\\Output.txt`\r\nwhich is wrong although a lot a lot of PowerShell users do this or have already done this (there are several examples of this on StackOverflow). For this group, their process (relying on a 'Format-Table' output) might break. _... Sorry, you should have read the small print in the contact_ 😒\r\nSo, if this assumption is correct, a novice programmer will likely get confused by the difference outputted on the screen and what is actually in the file.\r\n\r\n\r\n",
    "created_at": "2020-09-07T07:03:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688084077",
    "id": 688084077,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODA4NDA3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688084077/reactions"
    },
    "updated_at": "2020-09-07T07:05:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688084077",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There is a UX problem - if copy-paste from console it is very annoying because it is culture sensitive.",
    "created_at": "2020-09-07T07:21:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688096132",
    "id": 688096132,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODA5NjEzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688096132/reactions"
    },
    "updated_at": "2020-09-07T07:21:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688096132",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "You might also consider to do this on a specific type...\r\nThe type that intended for large numbers and can hold all the other types (which is actually not in your prototype list): **`[BigInt]`**.\r\nIf you just do this just for `[BigInt]`, you would be able to quiet easily format a large number with thousands separators, like:\r\n\r\n```PowerShell\r\nPS C:\\> [BigInt]1000\r\n1,000\r\nPS C:\\> @{ num = [BigInt]1000 }\r\n\r\nName                           Value\r\n----                           -----\r\nnum                            1,000\r\n```",
    "created_at": "2020-09-07T08:55:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688176028",
    "id": 688176028,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODE3NjAyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688176028/reactions"
    },
    "updated_at": "2020-09-07T11:36:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688176028",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think that's more likely to just be needlessly confusing, having one numeric type that behaves differently to the rest.\r\n\r\n**If** this is going to change, all number types should behave similarly.",
    "created_at": "2020-09-07T14:08:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688349792",
    "id": 688349792,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODM0OTc5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688349792/reactions"
    },
    "updated_at": "2020-09-07T14:08:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688349792",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To get the current behavior there should be a switch parameter on the format commands and a preference variable to enable/disable globally. ",
    "created_at": "2020-09-07T14:16:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688354542",
    "id": 688354542,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODM1NDU0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688354542/reactions"
    },
    "updated_at": "2020-09-07T14:16:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688354542",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/38873752?v=4",
      "events_url": "https://api.github.com/users/ThomasNieto/events{/privacy}",
      "followers_url": "https://api.github.com/users/ThomasNieto/followers",
      "following_url": "https://api.github.com/users/ThomasNieto/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThomasNieto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ThomasNieto",
      "id": 38873752,
      "login": "ThomasNieto",
      "node_id": "MDQ6VXNlcjM4ODczNzUy",
      "organizations_url": "https://api.github.com/users/ThomasNieto/orgs",
      "received_events_url": "https://api.github.com/users/ThomasNieto/received_events",
      "repos_url": "https://api.github.com/users/ThomasNieto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ThomasNieto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThomasNieto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ThomasNieto"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov, the culture-specific output not being reusable in source code already applies to numbers _with decimal places_ (and also to dates, for instance):\r\n\r\n```powershell\r\nPS> $o = [cultureinfo]::CurrentCulture; [cultureinfo]::CurrentCulture = 'fr-FR'; 1.23; [cultureinfo]::CurrentCulture = $o\r\n1,23  # Decimal mark is \",\"\r\n```\r\n\r\nTrue, with the thousands grouping it would occur more often, which is why @ThomasNieto's  suggestion (preference variable and switch) is a good one (I've added the suggestion, fleshed out, to the OP).\r\n\r\n@iRon7, nothing would change for `Out-File` / `>`: you'll get the same representation in the file as you would get on the screen; because `Out-File` also uses the formatting system, files created this way shouldn't be relied on for further programmatic processing. Also, something like `@{ num = 1000 } | Format-Table | Out-File out.txt` is legitimate, because it allows you to pick the \"shape\" of the output explicitly instead of relying on the default.\r\n",
    "created_at": "2020-09-07T21:03:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688510285",
    "id": 688510285,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODUxMDI4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688510285/reactions"
    },
    "updated_at": "2020-09-07T21:18:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688510285",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'd definitely like to see an option for this.  I think making this default would lead to a lot of confusion on both ends of the experience spectrum though.\r\n\r\n* Veteran users have already been trained that if they see digit separators then they're dealing with a string.  If they want to treat it like a number, they need to prep the string for parsing\r\n* Newer users will have difficulty troubleshooting why their number only has digit separators *sometimes*. (e.g. `Write-Host 1000` would output `1000` but `1000` would output `1,000`)",
    "created_at": "2020-09-08T12:40:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688839300",
    "id": 688839300,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODgzOTMwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688839300/reactions"
    },
    "updated_at": "2020-09-08T12:40:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688839300",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "It needed to sinking in a little, but I guess I actually like the basic idea.\r\n_Provided there is an option to disable it_ because (if I understand it right) here lays in essence the pitfall:\r\n\r\n```PowerShell\r\n(1000 | Out-String) -eq ('1000' | Out-String)\r\n```\r\nThis is **`$True`** in **CMO** and will be **`$False`** in **FMO**.\r\n\r\nThe same discrepancy (between CMO and FMO) will happen when I do this:\r\n\r\n```PowerShell\r\n1000 | Out-File .\\Thousand.txt\r\n$Thousand = Get-Content .\\Thousand.txt\r\n$Thousand -eq 1000\r\n```\r\n\r\nOr is this due to the fact that it concerns a prototype?",
    "created_at": "2020-09-08T14:30:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688916067",
    "id": 688916067,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODkxNjA2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688916067/reactions"
    },
    "updated_at": "2020-09-08T14:42:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688916067",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience:\r\n \r\nAt the end of the day I'd personally be happy with either solution (grouping by default ON vs. OFF), though I think that in the long run having it on by default is more beneficial:\r\n\r\n* Readability is then enhanced _by default_. While that comes at the expense of copying and pasting output as number literals usable in source code, I think the readability aspect trumps that, given that presenting output readably to the human observer is the very purpose of the formatting system.\r\n\r\n* Conversely, if OFF were the default, it wouldn't be easy for beginners to discover how to opt in.\r\n\r\n* I don't think we need to worry about `Write-Host`, which already presents enough puzzles to the uninitiated - e.g.,\r\n`Write-Host @{ a =1; b = 2}` printing `System.Collections.DictionaryEntry System.Collections.DictionaryEntry`. However, unlike with the preference variable / new switch we're discussing here, information about  `Write-Host` is easy to discover and conceptualize - even though the help topic is currently lacking: see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6599.\r\nThe short of it: `Write-Host` uses .NET  `.ToString()` stringification on its arguments, which is unrelated to PowerShell's formatting system.\r\n\r\n",
    "created_at": "2020-09-08T15:21:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688950825",
    "id": 688950825,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODk1MDgyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688950825/reactions"
    },
    "updated_at": "2020-09-08T15:21:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688950825",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iRon7:\r\n\r\nYes, these behaviors would change, but I do not consider that problematic:\r\n\r\n> `(1000 | Out-String) -eq ('1000' | Out-String)`\r\n\r\n* `1000` is unequivocally a number literal, '1000' is unequivocally a string.\r\n* You need to know that `Out-String` applies default formatting to its inputs, and that the results will _only_ be the same if the input is a _strings_ (leaving aside that `Out-String` currently appends an extra newline).\r\n\r\nThe same applies to `Out-File`; if you _do_ want `.ToString()` stringification, use `Set-Content` instead.\r\n\r\n```powershell\r\n1000 | Set-Content .\\Thousand.txt\r\n$Thousand = Get-Content .\\Thousand.txt\r\n$Thousand -eq 1000\r\n```\r\n\r\nBut note that even that _already_ falls apart if you have a number _with decimal places_ with a culture that uses `,` as the decimal mark, because argument-less `.ToString()` calls use the current culture.",
    "created_at": "2020-09-08T15:28:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688954844",
    "id": 688954844,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODk1NDg0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688954844/reactions"
    },
    "updated_at": "2020-09-08T15:31:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688954844",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> * Readability is then enhanced _by default_. While that comes at the expense of copying and pasting output as number literals usable in source code, I think the readability aspect trumps that, given that presenting output readably to the human observer is the very purpose of the formatting system.\r\n> * Conversely, if OFF were the default, it wouldn't be easy for beginners to discover how to opt in.\r\n\r\nYeah I agree for sure.  I just expect a lot of confusion around it if it gets implemented.  Similar to how some format definitions include columns that aren't real properties, I see folks having issues with that at least once a week.  Also when you get an object that returns an actual formatted string that's going to be hard to pin down the difference.\r\n\r\n> * I don't think we need to worry about `Write-Host`, which already presents enough puzzles to the uninitiated - e.g., (...)\r\n\r\nTrue, but I think it's much harder to reason about with a primitive.  A complex object is expected to be formatted differently, where a primitive you usually expect the stringification of it. ",
    "created_at": "2020-09-08T15:56:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-688973097",
    "id": 688973097,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODk3MzA5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688973097/reactions"
    },
    "updated_at": "2020-09-08T15:56:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/688973097",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> much harder to reason about with a primitive\r\n\r\nI think that all users need to know is: (a) `Write-Host` works differently, and (b) given that it uses `.ToString()` on its input objects - whether primitive or not - you can easily test the behavior with, say, `$var = 1.23;  $var.ToString()` - although there is indeed an _existing_ pitfall there: `Write-Host 1.23` is _not_ culture-sensitive, because a _literal_ argument is used; by contrast, `$num = 1.23; Write-Host $num` _is_ culture-sensitive; I've updated the [docs issue](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/6599) with details.\r\n\r\nGenerally, I think users from cultures that use `,` as the decimal mark are already ware that _neither_ `Write-Host` nor `Out-*` cmdlets / implicit formatting necessarily preserve the original representation of a number.\r\n\r\n---\r\n\r\nI hear you on the potential for confusion, but I think this confusion will go away over time, and won't apply to new users.\r\nNot being able to readily distinguish between the output from `1000` and `'1,000'` is somewhat inconvenient, but I think the  inconvenience of having to call `.GetType()` / `Get-Member` to disambiguate is outweighed by the benefits of readability.\r\n\r\nI think we now understand the issues involved and just happen to disagree on what the default should be.\r\nLet's see what others have to say.\r\n",
    "created_at": "2020-09-08T17:26:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-689025651",
    "id": 689025651,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTAyNTY1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/689025651/reactions"
    },
    "updated_at": "2020-09-08T17:26:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/689025651",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think that all users need to know is: (a) `Write-Host` works differently, and (b) given that it uses `.ToString()` on its input objects\r\n\r\n`Write-Host` was an example, the `ToString` difference is what I'm talking about.  And yes, once they understand what it happening they will understand what it is happening, but it's still introducing a new newbie pitfall.\r\n\r\n> (...) and won't apply to new users.\r\n\r\nI disagree, I think it's most likely to confuse new or very casual users who are more likely to try to fit the stringification of a primitive into a report or something.\r\n\r\n> I think we now understand the issues involved and just happen to disagree on what the default should be.\r\n> Let's see what others have to say.\r\n\r\n👍 ",
    "created_at": "2020-09-08T18:17:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13590#issuecomment-689051793",
    "id": 689051793,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13590",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTA1MTc5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/689051793/reactions"
    },
    "updated_at": "2020-09-08T18:18:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/689051793",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
