[
  {
    "author_association": "COLLABORATOR",
    "body": "Not currently, although it's not impossible to implement, it would just need changes to the help documentation to go looking for additional attributes or attribute properties for help content.\r\n\r\nCurrently the most \"straightforward\" way I've found to go about it is with the PlatyPS module; it can generate a Markdown file with your cmdlet name and parameters that you can fill out with help information, and then it will generate a MAML file to put in the module from the Markdown. There are still a handful of odd edge cases and it's a bit weird to get used to working with, but on the whole it's a ton easier than hand-crafting MAML.",
    "created_at": "2020-06-24T17:50:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-648971145",
    "id": 648971145,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk3MTE0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648971145/reactions"
    },
    "updated_at": "2020-06-24T17:50:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648971145",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Can this be taken up as a new feature request if native help documentation support for this does not exist?",
    "created_at": "2020-06-24T18:40:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-648996974",
    "id": 648996974,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk5Njk3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648996974/reactions"
    },
    "updated_at": "2020-06-24T18:40:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648996974",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7284100?v=4",
      "events_url": "https://api.github.com/users/viralmodi/events{/privacy}",
      "followers_url": "https://api.github.com/users/viralmodi/followers",
      "following_url": "https://api.github.com/users/viralmodi/following{/other_user}",
      "gists_url": "https://api.github.com/users/viralmodi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/viralmodi",
      "id": 7284100,
      "login": "viralmodi",
      "node_id": "MDQ6VXNlcjcyODQxMDA=",
      "organizations_url": "https://api.github.com/users/viralmodi/orgs",
      "received_events_url": "https://api.github.com/users/viralmodi/received_events",
      "repos_url": "https://api.github.com/users/viralmodi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/viralmodi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/viralmodi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/viralmodi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "What about localization? I do not think this is the right way.\r\n",
    "created_at": "2020-06-26T03:54:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-649944906",
    "id": 649944906,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTk0NDkwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/649944906/reactions"
    },
    "updated_at": "2020-06-26T03:54:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/649944906",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The suggestion is interesting for sure and I agree that it could be helpful. Localization is the primary reason to have downloadable help in MAML. \r\n\r\nLook at the following example of help for `Get-Process`. As you can see the description and related link blocks can get very long. It would just make the C# code look messy. Though adding a attribute property for Synopsis could be fine. Still MAML / PlatyPS is the right way to go as it also allows you to specify examples, which I believe are most useful.\r\n\r\n```PowerShell\r\nNAME\r\n    Get-Process\r\n\r\nSYNOPSIS\r\n    Gets the processes that are running on the local computer.\r\n\r\n\r\nSYNTAX\r\n    Get-Process [[-Name] <String[]>] [-FileVersionInfo] [-Module] [<CommonParameters>]\r\n\r\n    Get-Process [-FileVersionInfo] -Id <Int32[]> [-Module] [<CommonParameters>]\r\n\r\n    Get-Process [-FileVersionInfo] -InputObject <Process[]> [-Module] [<CommonParameters>]\r\n\r\n    Get-Process -Id <Int32[]> -IncludeUserName [<CommonParameters>]\r\n\r\n    Get-Process [[-Name] <String[]>] -IncludeUserName [<CommonParameters>]\r\n\r\n    Get-Process -IncludeUserName -InputObject <Process[]> [<CommonParameters>]\r\n\r\n\r\nDESCRIPTION\r\n    The `Get-Process` cmdlet gets the processes on a local computer.\r\n\r\n    Without parameters, this cmdlet gets all of the processes on the local computer. You can also specify a particular\r\n    process by process name or process ID (PID) or pass a process object through the pipeline to this cmdlet.\r\n\r\n    By default, this cmdlet returns a process object that has detailed information about the process and supports\r\n    methods that let you start and stop the process. You can also use the parameters of the `Get-Process` cmdlet to\r\n    get file version information for the program that runs in the process and to get the modules that the process\r\n    loaded.\r\n\r\n\r\nRELATED LINKS\r\n    Online Version: https://docs.microsoft.com/powershell/module/microsoft.powershell.management/get-process?view=power\r\n    shell-7&WT.mc_id=ps-gethelp\r\n    Debug-Process\r\n    Get-Process\r\n    Start-Process\r\n    Stop-Process\r\n    Wait-Process\r\n```\r\n\r\n",
    "created_at": "2020-06-26T17:45:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-650310840",
    "id": 650310840,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDMxMDg0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650310840/reactions"
    },
    "updated_at": "2020-06-26T17:45:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650310840",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    }
  },
  {
    "author_association": "NONE",
    "body": "@adityapatwardhan PlatyPS is good if you want many changes. We are happy with the default PowerShell Help except we need one or 2 additional sections. We generate code for our cmdlets so it wouldn't be a big deal for us to include these as attributes in our code irrespective of how unwieldy those attributes look.\r\nWhile using PlatyPS, we are having to go through multiple steps - Generate MD files from PlatyPS; those MD files have sections which are not complete. Generate some intermediate XML files with the info that we need to populate the MD files empty sections generated by PlatyPS. Use these MD files to finally patch the MAML files that we need for help text. The MAML files are missing the Synopsis section (probably due to a bug in PlatyPS that we have filed with them).\r\nIf the above feature that we are asking for was supported, we had much simpler process for help text generation.",
    "created_at": "2020-06-26T19:00:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-650344927",
    "id": 650344927,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDM0NDkyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650344927/reactions"
    },
    "updated_at": "2020-06-27T07:41:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650344927",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7284100?v=4",
      "events_url": "https://api.github.com/users/viralmodi/events{/privacy}",
      "followers_url": "https://api.github.com/users/viralmodi/followers",
      "following_url": "https://api.github.com/users/viralmodi/following{/other_user}",
      "gists_url": "https://api.github.com/users/viralmodi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/viralmodi",
      "id": 7284100,
      "login": "viralmodi",
      "node_id": "MDQ6VXNlcjcyODQxMDA=",
      "organizations_url": "https://api.github.com/users/viralmodi/orgs",
      "received_events_url": "https://api.github.com/users/viralmodi/received_events",
      "repos_url": "https://api.github.com/users/viralmodi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/viralmodi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/viralmodi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/viralmodi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> If the above feature that we are asking for was supporting, we had much simpler process for help text generation.\r\n\r\nCurrent HelpSystem was designed many years ago. Since then, much has changed. We have already discussed that this system should be modernized. Unfortunately, MSFT team has not yet published a public roadmap.\r\nThere was an idea to exclude MAML altogether.\r\nNow I think we could use ideas from new PowerShellGet 3.0 for HelpSystem too.\r\nThis would dramatically simplify the help creation and support.\r\n\r\n\r\n\r\n",
    "created_at": "2020-06-27T06:07:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-650502569",
    "id": 650502569,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDUwMjU2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650502569/reactions"
    },
    "updated_at": "2020-06-27T06:07:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650502569",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Just to tack on to this, C# doc comments [allow any XML within them](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/documentation-comments). This can then be parsed out at build time, so you could also document something like this:\r\n\r\n```csharp\r\n/// <powershell-help>\r\n///   <description>\r\n///    The `Get-Process` cmdlet gets the processes on a local computer.\r\n///\r\n///    Without parameters, this cmdlet gets all of the processes on the local computer. You can also specify a particular\r\n///    process by process name or process ID (PID) or pass a process object through the pipeline to this cmdlet.\r\n///\r\n///    By default, this cmdlet returns a process object that has detailed information about the process and supports\r\n///    methods that let you start and stop the process. You can also use the parameters of the `Get-Process` cmdlet to\r\n///    get file version information for the program that runs in the process and to get the modules that the process\r\n///    loaded.\r\n///   </description>\r\n/// </powershell-help>\r\n[Cmdlet(VerbsCommon.Get, \"Process\")]\r\npublic class GetProcessCommand : PSCmdlet\r\n{\r\n...\r\n}\r\n```\r\n\r\nPros:\r\n\r\n- Aligns with existing C# help\r\n- Easy to structure, declare and read\r\n- Documentation lives next to code\r\n\r\nCons:\r\n\r\n- Not easily localisable (then again, .NET will have needed to solve this already)\r\n- Not available at runtime, so requires an extra build step and asset\r\n\r\nThe essential issue for attributes is that it's hard to structure strings provided as arguments to them. One solution to that is to use a resource file. For example, something I'm working on for PSScriptAnalyzer:\r\n\r\n```csharp\r\n    [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)]\r\n    public sealed class RuleAttribute : ScriptAnalyzerAttribute\r\n    {\r\n        private readonly Lazy<string> _descriptionLazy;\r\n\r\n        public RuleAttribute(string name, string description)\r\n        {\r\n            Name = name;\r\n            _descriptionLazy = new Lazy<string>(() => description);\r\n        }\r\n\r\n\r\n        public RuleAttribute(string name, Type descriptionResourceProvider, string descriptionResourceKey)\r\n        {\r\n            Name = name;\r\n            _descriptionLazy = new Lazy<string>(() => GetStringFromResourceProvider(descriptionResourceProvider, descriptionResourceKey));\r\n        }\r\n\r\n        public string Name { get; }\r\n\r\n        public DiagnosticSeverity Severity { get; set; } = DiagnosticSeverity.Warning;\r\n\r\n        public string Namespace { get; set; }\r\n\r\n        public string Description => _descriptionLazy.Value;\r\n\r\n        private static string GetStringFromResourceProvider(Type resourceProvider, string resourceKey)\r\n        {\r\n            PropertyInfo resourceProperty = resourceProvider.GetProperty(resourceKey, BindingFlags.Static | BindingFlags.NonPublic);\r\n            return (string)resourceProperty.GetValue(null);\r\n        }\r\n    }\r\n```",
    "created_at": "2020-06-27T16:46:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-650584701",
    "id": 650584701,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDU4NDcwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650584701/reactions"
    },
    "updated_at": "2020-06-27T16:46:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650584701",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> One solution to that is to use a resource file.\r\n\r\nAnd we fall to an design with an external file. In the case it is better to think about an universal format which can be used for both script and binary cmdlets. And I'd expect that the universal format is Markdown :-) This dramatically simplify HelpSystem. ",
    "created_at": "2020-06-27T19:04:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-650605020",
    "id": 650605020,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDYwNTAyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650605020/reactions"
    },
    "updated_at": "2020-06-27T19:04:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650605020",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> And we fall to an design with an external file\r\n\r\nYeah I think anything with localisation support is going to need to separate implementation from documentation, and markdown is a better way to go on that",
    "created_at": "2020-06-27T19:07:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13029#issuecomment-650605774",
    "id": 650605774,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13029",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDYwNTc3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650605774/reactions"
    },
    "updated_at": "2020-06-27T19:07:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/650605774",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  }
]
