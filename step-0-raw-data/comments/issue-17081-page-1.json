[
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah the compiler does not create a sequence point for a return statement if there's no argument. Code in question below, we should consider adding an `else` clause that adds a sequence point.\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/93a0f9b8dc4149fb8ac65a3e6fa47faff099091e/src/System.Management.Automation/engine/parser/Compiler.cs#L5569-L5621",
    "created_at": "2022-03-29T22:09:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1082419175",
    "id": 1082419175,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5AhGfn",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1082419175/reactions"
    },
    "updated_at": "2022-03-29T22:09:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1082419175",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": ">Breakpoint won't be hit. If you put return \"\" breakpoint will work properly.\r\n\r\nI think this is expected. There may be differences of opinion and controversy. Do we need to submit a Review - Committee?",
    "created_at": "2022-03-30T16:10:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1083337344",
    "id": 1083337344,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5AkmqA",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1083337344/reactions"
    },
    "updated_at": "2022-03-30T16:10:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1083337344",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think this is expected. There may be differences of opinion and controversy.\r\n\r\nCould you elaborate on why you would not want a breakpoint on `return` to trigger?\r\n\r\n> Do we need to submit a Review - Committee?\r\n\r\nIt's currently open to both the engine and language working groups. Could go to either but it's mostly the same folks and engine meets more frequently so it'll likely be discussed there.",
    "created_at": "2022-03-30T16:33:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1083365640",
    "id": 1083365640,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5AktkI",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1083365640/reactions"
    },
    "updated_at": "2022-03-30T16:33:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1083365640",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "1 A single return, without any variables after it, represents the end of the function and has no other meaning.\r\n\r\n2 Set a breakpoint on the return line, set a breakpoint on the line returned by the return line, or set a breakpoint on the line returned by the next line, the effect is the same.\r\n\r\n3 The breakpoint should be set on a separate return line on the previous line, and the breakpoint on the next line, not on the return line.\r\n\r\n4 Set a breakpoint on the return line, which looks unprofessional,likes beginer.\r\n\r\n5 is just my personal opinion, others may think differently.",
    "created_at": "2022-03-31T07:44:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1084215675",
    "id": 1084215675,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5An9F7",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084215675/reactions"
    },
    "updated_at": "2022-03-31T07:47:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084215675",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "Well, you're basically denying me the ability to debug this because you expect me to add another line before return just to be able to find out whether the condition matched. \r\n\r\n```powershell\r\n$MyVar = $true\r\nif ($MyVar -eq $true) {\r\n    return\r\n} else {\r\n    return $false;\r\n}\r\n```",
    "created_at": "2022-03-31T07:50:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1084220892",
    "id": 1084220892,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5An-Xc",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084220892/reactions"
    },
    "updated_at": "2022-03-31T07:50:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084220892",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15063294?v=4",
      "events_url": "https://api.github.com/users/PrzemyslawKlys/events{/privacy}",
      "followers_url": "https://api.github.com/users/PrzemyslawKlys/followers",
      "following_url": "https://api.github.com/users/PrzemyslawKlys/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemyslawKlys/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PrzemyslawKlys",
      "id": 15063294,
      "login": "PrzemyslawKlys",
      "node_id": "MDQ6VXNlcjE1MDYzMjk0",
      "organizations_url": "https://api.github.com/users/PrzemyslawKlys/orgs",
      "received_events_url": "https://api.github.com/users/PrzemyslawKlys/received_events",
      "repos_url": "https://api.github.com/users/PrzemyslawKlys/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PrzemyslawKlys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemyslawKlys/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PrzemyslawKlys"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> 1 A single return, without any variables after it, represents the end of the function and has no other meaning.\r\n>\r\n> 2 Set a breakpoint on the return line, set a breakpoint on the line returned by the return line, or set a breakpoint on the line returned by the next line, the effect is the same.\r\n> \r\n> 3 The breakpoint should be set on a separate return line on the previous line, and the breakpoint on the next line, not on the return line.\r\n\r\nWe already create a sequence point for `exit` which is the closest parallel. We also add an extra sequence point at the end of a function pointing to nothing really.\r\n\r\n> 4 Set a breakpoint on the return line, which looks unprofessional,likes beginer.\r\n\r\nIt's pretty useful to place to break to inspect the state before exiting the block. I do it all the time in C#.\r\n\r\nMore to the point though, are you saying that if a sequence point were added that it would hurt your workflow? If you can think of a way it would negatively impact folks who choose not to set a breakpoint on `return`, that would be helpful in illustrating your objection.\r\n\r\n",
    "created_at": "2022-03-31T14:33:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1084669594",
    "id": 1084669594,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5Apr6a",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084669594/reactions"
    },
    "updated_at": "2022-03-31T14:33:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084669594",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "you can add breakpoints at 【return $false】 or  function，script back \r\n\r\n```\r\n$foo = function1 #breakpoints\r\n```\r\n\r\nI don't want to talk too much about the little things. \r\nIn my experience, this issue is low priority. Even if this issue will change according to your two ideas,\r\n\r\nThere are more areas in powershell waiting for us to invest.\r\n1. Rewrite binary programs such as kubectl and robocopy into powershell.\r\n\r\n2 cross-platform tui interface text editor, ps1 script.\r\n\r\n3. The rise of the golang command line tool, which does not require an installation environment. just like golang, hope to promote the development of powershell AOT,\r\nAre you interested in these?",
    "created_at": "2022-03-31T17:30:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1084902691",
    "id": 1084902691,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5Aqk0j",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084902691/reactions"
    },
    "updated_at": "2022-03-31T17:32:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084902691",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/65390418?v=4",
      "events_url": "https://api.github.com/users/kasini3000/events{/privacy}",
      "followers_url": "https://api.github.com/users/kasini3000/followers",
      "following_url": "https://api.github.com/users/kasini3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/kasini3000/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kasini3000",
      "id": 65390418,
      "login": "kasini3000",
      "node_id": "MDQ6VXNlcjY1MzkwNDE4",
      "organizations_url": "https://api.github.com/users/kasini3000/orgs",
      "received_events_url": "https://api.github.com/users/kasini3000/received_events",
      "repos_url": "https://api.github.com/users/kasini3000/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kasini3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kasini3000/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kasini3000"
    }
  },
  {
    "author_association": "NONE",
    "body": "What I'm interested in is consistent behavior. If I set a breakpoint on line X and the script doesn't stop - it means it doesn't work. I have a function that's like 100 lines of code, and in the middle of the code I set a breakpoint on return and it doesn't work. I don't know what happened, was the return never reached? \r\n\r\nI would say fixing bugs has usually more priority than new features - but that's just me - and not something I have the power to manage. Your priorities and plans are not up to me.",
    "created_at": "2022-03-31T18:30:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1084958926",
    "id": 1084958926,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5AqyjO",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084958926/reactions"
    },
    "updated_at": "2022-03-31T18:30:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1084958926",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15063294?v=4",
      "events_url": "https://api.github.com/users/PrzemyslawKlys/events{/privacy}",
      "followers_url": "https://api.github.com/users/PrzemyslawKlys/followers",
      "following_url": "https://api.github.com/users/PrzemyslawKlys/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemyslawKlys/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PrzemyslawKlys",
      "id": 15063294,
      "login": "PrzemyslawKlys",
      "node_id": "MDQ6VXNlcjE1MDYzMjk0",
      "organizations_url": "https://api.github.com/users/PrzemyslawKlys/orgs",
      "received_events_url": "https://api.github.com/users/PrzemyslawKlys/received_events",
      "repos_url": "https://api.github.com/users/PrzemyslawKlys/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PrzemyslawKlys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemyslawKlys/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PrzemyslawKlys"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Having used debuggers for various other languages, I would have expected this to work in PS.  Too bad it doesn't. I agree that setting a breakpoint on a naked return statement is useful. ",
    "created_at": "2022-03-31T21:50:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1085159666",
    "id": 1085159666,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5Arjjy",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1085159666/reactions"
    },
    "updated_at": "2022-03-31T21:50:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1085159666",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The Engine WG discussed this today and agree that it would be ideal if `return` statements had a sequence point.\r\n\r\nMarking up for grabs. Note: this will likely not be an easy solve. Anyone looking to take this on should be very familiar with LINQ expression trees.",
    "created_at": "2022-03-31T23:18:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1085222913",
    "id": 1085222913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5ArzAB",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1085222913/reactions"
    },
    "updated_at": "2022-03-31T23:18:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1085222913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Note: this will likely not be an easy solve. Anyone looking to take this on should be very familiar with LINQ expression trees.\r\n\r\nNvm we were already tracking return label so it turned out to be about as easy as it gets.",
    "created_at": "2022-04-22T20:50:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1106849820",
    "id": 1106849820,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5B-TAc",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 2,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1106849820/reactions"
    },
    "updated_at": "2022-04-22T20:50:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1106849820",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": ":tada:This issue was addressed in #17179, which has now been successfully released as `v7.3.0-preview.4`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.3.0-preview.4)\n",
    "created_at": "2022-05-23T16:22:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17081#issuecomment-1134882281",
    "id": 1134882281,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17081",
    "node_id": "IC_kwDOAvT7bc5DpO3p",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1134882281/reactions"
    },
    "updated_at": "2022-05-23T16:22:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1134882281",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
