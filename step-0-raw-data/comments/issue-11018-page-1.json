[
  {
    "author_association": "COLLABORATOR",
    "body": ":thinking: yep, this should definitely preserve the input data type (as long as it is one of the integer data types; not sure what it would do if the data type is double, float, or decimal, though).\r\n\r\nAlso not sure if we should have provision for `[bigint]` here? A `-bnot` on bigint would be rather inherently unpredictable due to its arbitrary size.",
    "created_at": "2019-11-08T01:55:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551348788",
    "id": 551348788,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM0ODc4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551348788/reactions"
    },
    "updated_at": "2019-11-08T01:56:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551348788",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It's worth noting that C# behaves the same way ([SharpLab example](https://sharplab.io/#v2:C4LgTgrgdgPgAgJgIwFgBQcDMACR2DC2A3utmbkgGy4As2AsgIYCWUAFAJTGnm9xIBONvU4cA3DzIBfSdllYK1APYAjAFYBTAMbAGnbml68AQgE9gG7CuwBebAAYAHgDNnEw0bJwA7NgB+Ku68MmhSQA)).\r\n\r\nThis behavior is defined by the EMCA spec, the `not` CIL opcode is defined to work with only operands valid in \"Integer Operations\" which only accepts `int`, `long` and `IntPtr` ([EMCA III.1.5 Table III.5](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-335.pdf#page=329&zoom=100,0,742)).\r\n\r\nNote: I'm not arguing for or against any proposed changes, just providing context.",
    "created_at": "2019-11-08T13:23:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551785540",
    "id": 551785540,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTc4NTU0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551785540/reactions"
    },
    "updated_at": "2019-11-08T13:23:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551785540",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That seems kinda strange to me, especially since I would think one of the primary use cases for a binary NOT operator would be the lower integer types like byte and short.",
    "created_at": "2019-11-08T13:27:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551791477",
    "id": 551791477,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTc5MTQ3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551791477/reactions"
    },
    "updated_at": "2019-11-08T13:27:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551791477",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I can't find a source for this specific instance but typically the reason you see instructions defined for 32 bit integers but not smaller is due to processors being much better optimized to handle them.  So behind the scenes C# would probably have to promote the `byte` to 32bits anyway, this way it's obvious that that's being done.\r\n\r\nThe bigger problem is that there's no real way to do an unchecked explicit conversion between `int` and `byte` in PowerShell the same way you can in C#.  PowerShell uses the `IConvertible` interface methods, C# uses the `conv.u1` CIL instruction.  The latter more or less reinterprets the same bits as said type, instead of trying to convert/validate it.  So `(byte)(~(byte)0xff)` returns `0` where `[byte](-bnot ([byte]0xff))` throws because the *value* `-256` isn't valid for a `byte`.",
    "created_at": "2019-11-08T13:44:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551815557",
    "id": 551815557,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTgxNTU1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551815557/reactions"
    },
    "updated_at": "2019-11-08T13:44:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551815557",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "So a possible fix would be to check the input type and do an explicit cast in the `-bnot` operator itself back to the input type, I suppose? 🤔 ",
    "created_at": "2019-11-08T13:53:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551828885",
    "id": 551828885,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTgyODg4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551828885/reactions"
    },
    "updated_at": "2019-11-08T13:53:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551828885",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If it's determined to be something that has to change, yeah.  It'd be a bit of a pain to do that arbitrarily for all possible input types, but not impossible.  It would be a breaking change though, and would not exactly be expected behavior for C# folks (who would be the folks most likely to use one's complement).\r\n\r\nPersonally I'd rather see an easy way to do an unchecked explicit conversion.",
    "created_at": "2019-11-08T14:07:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551840790",
    "id": 551840790,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg0MDc5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551840790/reactions"
    },
    "updated_at": "2019-11-08T14:07:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551840790",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "`$value -to [byte]` perhaps? A more \"forceful\" version of `-as`? 😁 ",
    "created_at": "2019-11-08T14:57:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-551859537",
    "id": 551859537,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTg1OTUzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551859537/reactions"
    },
    "updated_at": "2019-11-08T14:57:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/551859537",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "To clarify my use case, I am only working with [byte] and [uint16].  The behavior to me is strange because this method which uses -bnot works as expected:\r\n```\r\n[void]clearBit([byte]$position)  { $this.value = $this.value -band -bnot (0x01 -shl $position) }\r\n```\r\nas this is my current workaround for -bnot (these are class method snippets)\r\n```\r\n[void]not(){ \r\n        for ([byte]$i=0;$i -lt 8; $i++) { $this.toggleBit($i)}\r\n    }\r\n[void]toggleBit([byte]$position) { $this.value = ($this.value -bxor (0x01 -shl $position))    }\r\n```",
    "created_at": "2019-11-08T23:40:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11018#issuecomment-552033005",
    "id": 552033005,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11018",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjAzMzAwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552033005/reactions"
    },
    "updated_at": "2019-11-08T23:40:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/552033005",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/33496959?v=4",
      "events_url": "https://api.github.com/users/BronsonMagnan/events{/privacy}",
      "followers_url": "https://api.github.com/users/BronsonMagnan/followers",
      "following_url": "https://api.github.com/users/BronsonMagnan/following{/other_user}",
      "gists_url": "https://api.github.com/users/BronsonMagnan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BronsonMagnan",
      "id": 33496959,
      "login": "BronsonMagnan",
      "node_id": "MDQ6VXNlcjMzNDk2OTU5",
      "organizations_url": "https://api.github.com/users/BronsonMagnan/orgs",
      "received_events_url": "https://api.github.com/users/BronsonMagnan/received_events",
      "repos_url": "https://api.github.com/users/BronsonMagnan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BronsonMagnan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BronsonMagnan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BronsonMagnan"
    }
  }
]
