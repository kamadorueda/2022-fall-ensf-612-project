[
  {
    "author_association": "CONTRIBUTOR",
    "body": "In case you don't strictly need an actual _.NET_ type, here's a simple all-PowerShell alternative using PowerShell's ETS (extended type system):\r\n\r\n* Define a function `New-DbaCredential` that creates `[PSCredential]` instances that are ad-hoc-decorated with the additional members you needed and assign them custom _PS_ type name `DbaCredential`.\r\n\r\n* The resulting instances will still behave like `[PSCredential]` in the context of cmdlet calls, yet you can access the extra members as needed; `Get-Member` will report the made-up type name `DbaCredential`.\r\n\r\n```powershell\r\n\r\nfunction New-DbaCredential {\r\n\r\n  param([string] $UserName = (whoami), $Foo, $Bar)\r\n\r\n  # Construct a [PSCredential] instance...\r\n  # Note: This will prompt for a password.\r\n  $cred = Get-Credential -UserName $UserName -Message 'Enter password:'\r\n\r\n  # Now shamelessy lie about the output object's type...\r\n  $cred.pstypenames.Insert(0, 'DbaCredential')\r\n\r\n  # ... and decorate it with your custom properties and output the result.\r\n  Add-Member -InputObject $cred  -PassThru -NotePropertyMembers @{ Foo = $Foo; Bar = $Bar }\r\n\r\n}\r\n```\r\n\r\nNow you can construct instances of your custom \"type\":\r\n\r\n```powershell\r\n> $custCred = New-DbaCredential -UserName jdoe -Foo f -Bar b; $custCred\r\n\r\nFoo Bar UserName                     Password\r\n--- --- --------                     --------\r\nf   b   jdoe     System.Security.SecureString\r\n```\r\n\r\n```powershell\r\n> $custCred.pstypenames\r\nDbaCredential\r\nSystem.Management.Automation.PSCredential\r\nSystem.Object\r\n```\r\n\r\n```powershell\r\n> $custCred -is [PSCredential]\r\nTrue\r\n```\r\n\r\n\r\n",
    "created_at": "2017-08-10T20:35:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-321665802",
    "id": 321665802,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTY2NTgwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321665802/reactions"
    },
    "updated_at": "2017-08-10T21:06:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321665802",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Heya, thanks for the input.\r\nIndeed, that would do for adding some new members on a limited scale.\r\n\r\nDesign goal:\r\n\r\n - Add input validation that gets inherited through\r\n - Avoid any changes in handling internally\r\n - Eliminate credential prompts on older PowerShell versions, without an eternal chain of if/else\r\n - Flexibly convert input of specified types without blanket-accepting everything\r\n\r\nSo basically, all we want to tell our contributors is `Instead of a [PSCredential], make it a [DbaCredential] parameter` and the rest will take care of itself.\r\n\r\nHowever - sorry - it really is beside the point for the purpose of this question. Because for me it really is about what is happening here on parameter binding. Maybe it is a bug. Maybe I am missing something. I want to know, in order to further my understanding of how parameter binding works.",
    "created_at": "2017-08-11T02:04:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-321717733",
    "id": 321717733,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcxNzczMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321717733/reactions"
    },
    "updated_at": "2017-08-11T02:04:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321717733",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/23364253?v=4",
      "events_url": "https://api.github.com/users/FriedrichWeinmann/events{/privacy}",
      "followers_url": "https://api.github.com/users/FriedrichWeinmann/followers",
      "following_url": "https://api.github.com/users/FriedrichWeinmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/FriedrichWeinmann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FriedrichWeinmann",
      "id": 23364253,
      "login": "FriedrichWeinmann",
      "node_id": "MDQ6VXNlcjIzMzY0MjUz",
      "organizations_url": "https://api.github.com/users/FriedrichWeinmann/orgs",
      "received_events_url": "https://api.github.com/users/FriedrichWeinmann/received_events",
      "repos_url": "https://api.github.com/users/FriedrichWeinmann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FriedrichWeinmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FriedrichWeinmann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FriedrichWeinmann"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Without debugging, I'm guessing the problem is [here](https://github.com/PowerShell/PowerShell/blob/0bfee35525c04761dad542c7b52403f0643de716/src/System.Management.Automation/security/CredentialParameter.cs#L59) - `LanguagePrimitives.FromObjectAs` is essentially the C# `as` operator, but this method also unwraps a `PSObject`.\r\n\r\nThis means your implicit conversion operator will not help, the transformation is converting your value to `null`.  The fix might be as simple as using `LanguagePrimitives.TryConvertTo<PSCredential>` instead.",
    "created_at": "2017-08-11T05:48:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-321736147",
    "id": 321736147,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTczNjE0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321736147/reactions"
    },
    "updated_at": "2017-08-11T05:48:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321736147",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@FriedrichWeinmann: Got it, thanks for the feedback (on my somewhat self-indulgent workaround). \r\n\r\nKudos for a sophisticated approach. \r\n\r\nThe link to your source doesn't seem to work, but [this one does](https://github.com/sqlcollaborative/dbatools/blob/master/bin/projects/dbatools/dbatools/Parameter/DbaCredentialParameter.cs).",
    "created_at": "2017-08-11T08:53:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-321761534",
    "id": 321761534,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTc2MTUzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321761534/reactions"
    },
    "updated_at": "2017-08-11T08:53:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/321761534",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Heya @lzybkr ,\r\nthanks for the pointer, though it's more [this](https://github.com/PowerShell/PowerShell/blob/0bfee35525c04761dad542c7b52403f0643de716/src/System.Management.Automation/security/CredentialParameter.cs#L53) position that had me confounded. That string wouldn't work was kinda expected, but in the call from line 53 it tries to coerce it into a PSCredential object by casting it - which bloody darned well should be working, as far as I can see.\r\n\r\nJust did a short code extraction of it though, in order to test things out:\r\n```PowerShell\r\nAdd-Type @\"\r\n using System;\r\n using System.Management.Automation;\r\n\r\n public static class test\r\n {\r\n     public static PSCredential FromObjectAs(Object castObject)\r\n         {\r\n             PSCredential returnType = default(PSCredential);\r\n\r\n             // First, see if we can cast the direct type\r\n             PSObject wrapperObject = castObject as PSObject;\r\n             if (wrapperObject == null)\r\n             {\r\n                 returnType = (PSCredential)castObject;\r\n             }\r\n             // Then, see if it is an PSObject wrapping the object\r\n             else\r\n             {\r\n                 returnType = (PSCredential)wrapperObject.BaseObject;\r\n             }\r\n\r\n             return returnType;\r\n         }\r\n }\r\n \"@\r\n[test]::FromObjectAs($cred)\r\n```\r\nAnd it definitely is throwing an invalid cast exception.\r\nI just don't see why ...",
    "created_at": "2017-08-15T06:14:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-322385707",
    "id": 322385707,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjM4NTcwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322385707/reactions"
    },
    "updated_at": "2017-08-15T06:14:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322385707",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/23364253?v=4",
      "events_url": "https://api.github.com/users/FriedrichWeinmann/events{/privacy}",
      "followers_url": "https://api.github.com/users/FriedrichWeinmann/followers",
      "following_url": "https://api.github.com/users/FriedrichWeinmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/FriedrichWeinmann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FriedrichWeinmann",
      "id": 23364253,
      "login": "FriedrichWeinmann",
      "node_id": "MDQ6VXNlcjIzMzY0MjUz",
      "organizations_url": "https://api.github.com/users/FriedrichWeinmann/orgs",
      "received_events_url": "https://api.github.com/users/FriedrichWeinmann/received_events",
      "repos_url": "https://api.github.com/users/FriedrichWeinmann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FriedrichWeinmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FriedrichWeinmann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FriedrichWeinmann"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@FriedrichWeinmann - in your example, your implicit operator is not called because the **static** type of the parameter is `object`. Something like this should work:\r\n\r\n```C#\r\n   returnType = (PSCredential)(castObject as DbaCredentialParameter)\r\n```\r\n\r\nOf course this can't work in PowerShell because PowerShell won't statically know your type.\r\n\r\n",
    "created_at": "2017-08-15T17:38:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-322535735",
    "id": 322535735,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjUzNTczNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322535735/reactions"
    },
    "updated_at": "2017-08-15T17:38:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322535735",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "argh. Alright and good to know, thanks for the info.\r\nSo basically, in order for it to work, I'd have to add that operator to `Object` itself? Somehow I doubt the system makes that possible ... :(\r\nBut thank you very much for explaining that. Doesn't look like there's much I can do then (Still gonna poke around a bit when I've got the time).",
    "created_at": "2017-08-16T06:09:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-322675472",
    "id": 322675472,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjY3NTQ3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322675472/reactions"
    },
    "updated_at": "2017-08-16T06:09:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322675472",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/23364253?v=4",
      "events_url": "https://api.github.com/users/FriedrichWeinmann/events{/privacy}",
      "followers_url": "https://api.github.com/users/FriedrichWeinmann/followers",
      "following_url": "https://api.github.com/users/FriedrichWeinmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/FriedrichWeinmann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FriedrichWeinmann",
      "id": 23364253,
      "login": "FriedrichWeinmann",
      "node_id": "MDQ6VXNlcjIzMzY0MjUz",
      "organizations_url": "https://api.github.com/users/FriedrichWeinmann/orgs",
      "received_events_url": "https://api.github.com/users/FriedrichWeinmann/received_events",
      "repos_url": "https://api.github.com/users/FriedrichWeinmann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FriedrichWeinmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FriedrichWeinmann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FriedrichWeinmann"
    }
  },
  {
    "author_association": "NONE",
    "body": "Alright, did some poking around:\r\n\r\n - Cannot extend class to add operators when it's not in my own library\r\n - Cannot extend PSCredential, as it is sealed (whyever. I'm sure that made sense to some people, can't for the heck of me see it though)\r\n - Cannot undo the credential attribute\r\n\r\nErgo: Mission impossible.\r\n\r\nWhile I'm somewhat disgruntled over the entire parameter binding/type coercion system being ignored for pscredentials, just to force credential prompt (which can be implemented in a different way btw - at least our prompt works just fine as well and we don't mess with parameter attributes), there is little I can do about it. Given that ... well, time to call it a day and spend my time on something with a better effort/success ratio ;)\r\n\r\nCheers,\r\nFred",
    "created_at": "2017-08-17T00:01:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-322931935",
    "id": 322931935,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkzMTkzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322931935/reactions"
    },
    "updated_at": "2017-08-17T00:01:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322931935",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/23364253?v=4",
      "events_url": "https://api.github.com/users/FriedrichWeinmann/events{/privacy}",
      "followers_url": "https://api.github.com/users/FriedrichWeinmann/followers",
      "following_url": "https://api.github.com/users/FriedrichWeinmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/FriedrichWeinmann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FriedrichWeinmann",
      "id": 23364253,
      "login": "FriedrichWeinmann",
      "node_id": "MDQ6VXNlcjIzMzY0MjUz",
      "organizations_url": "https://api.github.com/users/FriedrichWeinmann/orgs",
      "received_events_url": "https://api.github.com/users/FriedrichWeinmann/received_events",
      "repos_url": "https://api.github.com/users/FriedrichWeinmann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FriedrichWeinmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FriedrichWeinmann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FriedrichWeinmann"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Your questioned is answered - but there are changes we can make to the engine to enable your scenario - it won't help with Windows PowerShell, but going forward it might be helpful, right?",
    "created_at": "2017-08-17T00:16:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-322934023",
    "id": 322934023,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkzNDAyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322934023/reactions"
    },
    "updated_at": "2017-08-17T00:16:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322934023",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "NONE",
    "body": "Indeed you could and in the long term it would be helpful.\r\nBasically, supporting consistency in the type coercion process would help. It's extremely flexible and powerful, so hardcoding for a specific input type is not helpful as far as I can see it, so yes, I'd appreciate it. I don't really know how much impact 'fixing' this would have compared to the effort to do it - I use parameter classes heavily, but I don't know anybody else who does so - but even then it would make powershell behavior more uniform and consistent.\r\n\r\nBtw, I solved the prompt-for-credential issue with a constructor that accepts string. So when you just pass a name, it'll prompt as part of the default coercion process while binding the parameter (and I added a \"remember\" checkbox, so it'll remember the credential matched to the name for the duration of the process).\r\n\r\nThe link above is dead, but that's because the branch was merged into [development](https://github.com/sqlcollaborative/dbatools/tree/development). So if you want to check out our implementation, just download it and run `[DbaCredential]\"foo\"` (or build a dummy function to actually have it operate as parameter type).",
    "created_at": "2017-08-17T00:33:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-322936308",
    "id": 322936308,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjkzNjMwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322936308/reactions"
    },
    "updated_at": "2017-08-17T00:33:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/322936308",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/23364253?v=4",
      "events_url": "https://api.github.com/users/FriedrichWeinmann/events{/privacy}",
      "followers_url": "https://api.github.com/users/FriedrichWeinmann/followers",
      "following_url": "https://api.github.com/users/FriedrichWeinmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/FriedrichWeinmann/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FriedrichWeinmann",
      "id": 23364253,
      "login": "FriedrichWeinmann",
      "node_id": "MDQ6VXNlcjIzMzY0MjUz",
      "organizations_url": "https://api.github.com/users/FriedrichWeinmann/orgs",
      "received_events_url": "https://api.github.com/users/FriedrichWeinmann/received_events",
      "repos_url": "https://api.github.com/users/FriedrichWeinmann/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FriedrichWeinmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FriedrichWeinmann/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FriedrichWeinmann"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I believe we could enhance binding to support IConvertible/PSTypeConverter ",
    "created_at": "2021-01-15T04:59:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4519#issuecomment-760646176",
    "id": 760646176,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4519",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDY0NjE3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/760646176/reactions"
    },
    "updated_at": "2021-01-15T04:59:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/760646176",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
