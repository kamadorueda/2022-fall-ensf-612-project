[
  {
    "author_association": "COLLABORATOR",
    "body": "It is not type conversion. The multipliers is realy \"multiplier\" in parse time. Type conversion is done in run-time. So $($var)Kb doesn't work too. ",
    "created_at": "2018-09-06T09:44:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419032747",
    "id": 419032747,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTAzMjc0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419032747/reactions"
    },
    "updated_at": "2018-09-06T09:44:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419032747",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Parse-time resolution applies to _unquoted number literals_ such as `1gb`.\r\n\r\nBy contrast, my expression example uses a _quoted string_, where type conversion is clearly performed _at runtime_:\r\n\r\n```powershell\r\nPS> $v=\"1gb\"; $v / 1\r\n1073741824\r\n```\r\n\r\n/cc @PetSerAl \r\n",
    "created_at": "2018-09-06T14:04:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419105675",
    "id": 419105675,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEwNTY3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419105675/reactions"
    },
    "updated_at": "2018-09-06T14:05:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419105675",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'm not really sure this *should* be a thing. How is PS supposed to distinguish cleanly between when you want something to cast as an integer (especially in implicit cases) and when you might want it to throw instead? \r\n\r\nI can see that it probably *ought* to happen for strongly-typed parameters and would make sense there, but in most cases you'll call a parameter like that... just as a number: `Do-Thing -Number 1gb` rather than as a string `Do-Thing -Number '1gb'` -- and I think that distinction is probably pretty sensible.\r\n\r\nThe only real time I can see this being particularly useful is in creating meta-code, but in those cases you can just convert the code string to a script block and the PS tokenizer will handle the multiplication correctly in those cases.",
    "created_at": "2018-09-06T14:11:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419108214",
    "id": 419108214,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEwODIxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419108214/reactions"
    },
    "updated_at": "2018-09-06T14:12:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419108214",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32:\r\n\r\nWell, it already _is_ a thing, but only _partially_ (only in expressions), and that inconsistency prompted me to raise this issue.\r\n\r\n> How is PS supposed to distinguish cleanly \r\n\r\nJust like with any \"number strings\": if the context explicitly requires a _number_, try to convert the string to one.\r\n\r\nYes, passing a string to something that expects a number is not the typical case, but it works with all other \"number strings\" - namely those that _.NET_ recognizes.\r\n\r\nNote that the inconsistency is not limited to the binary-multiplier suffix, it also applies to the data-type suffixes:\r\n\r\n```powershell\r\n'1d' / 1  # OK -> 1, of type [decimal]\r\n\r\n[int] '1d' # FAILS -> Cannot convert value \"1d\" to type \"System.Int32\". Error: \"Input string was not in a correct format.\"\r\n```",
    "created_at": "2018-09-06T14:28:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419114320",
    "id": 419114320,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTExNDMyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419114320/reactions"
    },
    "updated_at": "2018-09-06T14:28:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419114320",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 I mean that '1Gb' and '1d' is strings and PowerShell have to parse the strings to convert to numerics. In runtime 'Gb' and 'd' would have to be operators.\r\n",
    "created_at": "2018-09-06T15:02:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419127609",
    "id": 419127609,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEyNzYwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419127609/reactions"
    },
    "updated_at": "2018-09-06T15:02:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419127609",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nYes, they are strings, and PowerShell converts them to numbers in _expressions_; by contrast, it doesn't do so when converting _implicitly_ during parameter binding - that is the inconsistency being discussed here.\r\n\r\nI understand that _.NET_ (CoreCLR) doesn't know about _PowerShell's_ number-literal suffixes, but the question is whether _PowerShell_ should handle the conversion part consistently.\r\n\r\nAs I said, with explicit _casts_ the picture is not as clear, but there already is a precedent for PowerShell doing additional behind-the-scenes work, such as casts sometimes being translated in to `::Parse()` calls with the invariant culture.",
    "created_at": "2018-09-06T15:13:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419132070",
    "id": 419132070,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEzMjA3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419132070/reactions"
    },
    "updated_at": "2018-09-06T15:13:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419132070",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 I see your point.\r\nWhat about \r\n```powershell\r\n$var = '1gb'\r\n& { param([int] $foo) } $var\r\n```\r\n\r\nSeems we'll have to do extra steps to process this.\r\nAnd then what about:\r\n```powershell\r\n$var = '1gb'\r\n$var + 1\r\n```\r\nis this string operation or numeric?\r\n",
    "created_at": "2018-09-06T15:29:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419138190",
    "id": 419138190,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEzODE5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419138190/reactions"
    },
    "updated_at": "2018-09-06T15:30:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419138190",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nYour 1st example is already in the OP, as an example of where the conversion _doesn't_ work (_implicit_  conversion in the context of _parameter binding_).\r\n\r\nAs for the 2nd example:\r\n\r\n`+` - unlike `/` - does _not_ perform to-number conversion, so nothing would change there:\r\n\r\n```powershell\r\n'1' + 0 # -> '10'\r\n'1gb' + 0 # -> '1gb0'\r\n```\r\n\r\nTo summarize: The only potential change being discussed here is:\r\n\r\nShould _all contexts where PowerShell currently already performs to-number conversion_ recognize [string representations of] PowerShell-only number-literal formats _too_?\r\n\r\n",
    "created_at": "2018-09-06T15:41:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419142440",
    "id": 419142440,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE0MjQ0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419142440/reactions"
    },
    "updated_at": "2018-09-06T15:42:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419142440",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It is a question for PowerShell Committee.",
    "created_at": "2018-09-07T06:11:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-419333801",
    "id": 419333801,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTMzMzgwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419333801/reactions"
    },
    "updated_at": "2018-09-07T06:11:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419333801",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  This is a breaking change where it used to fail and now works.  We agree that the desired behavior is acceptable.  However, this is likely a complex change that need to also work with recently introduced suffixes like `l` for LONG.  ",
    "created_at": "2018-12-05T23:34:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-444692446",
    "id": 444692446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDY5MjQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444692446/reactions"
    },
    "updated_at": "2018-12-05T23:34:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444692446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT Would simply passing the string to one of the parser or tokenizer functions be an appropriate way to determine if it's a parseable number and the resultant type? If this occurs after some 'is it a number' check has already been made, one might simply be able to directly call TryGetNumberValue or one of the related tokenizer functions on it directly?\r\n\r\nSide note: `L` is an old suffix, but there are several newer ones that do indeed need to be considered also :wink: ",
    "created_at": "2018-12-06T01:04:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-444709990",
    "id": 444709990,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDcwOTk5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444709990/reactions"
    },
    "updated_at": "2018-12-06T01:07:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/444709990",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "cc @daxian-dbw @BrucePay ",
    "created_at": "2019-01-12T04:11:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-453717862",
    "id": 453717862,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzcxNzg2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/453717862/reactions"
    },
    "updated_at": "2019-01-12T04:11:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/453717862",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks, Steve! I checked in with @TylerLeonhardt who passed it along to @rjmholt, and after some brief suggestions I traced the cached conversion methods that get called from string->integral types to here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/e399b06cd23a8d9a7df9be5ed329471ba5b8eb82/src/System.Management.Automation/engine/LanguagePrimitives.cs#L2888-L2907\r\n\r\nMy initial thought so far is to add some kind of check in there to determine if the last two characters in this (possibly trimmed?) value are a multiplier or the last character is a type suffix, something kind of like...\r\n\r\n```csharp\r\nScriptBlockAst result;\r\nchar lastChar = strToConvert[strToConvert.Length - 1];\r\nif (!lastChar.IsTypeSuffix() ||\r\n    lastChar == 'b' && strToConvert[strToConvert.Length - 2].IsMultiplierStart())\r\n{\r\n    result = Parser.ParseInput(strToConvert, out Token[] tokens, out ParseError[] errors);\r\n}\r\n```\r\n\r\nAnd then I think I can grab `tokens[0].Value` to determine the numeric value and use that. _However_, I don't know that invoking `ParseInput()` here is the **best** available option. It also sort of bypasses the _need_ for the latter half of this conversion expression, because the token's `.Value` property seems to hold the appropriate data type coming out of it, at least where any type suffix may be concerned.\r\n\r\nWould definitely appreciate some input from y'all on this, it's a fun little rabbit trail, but I don't want to get too far off track and in a direction that isn't useful to y'all. 😄 \r\n\r\nEDIT: Spoke a little with @SeeminglyScience this morning, and he and I think it might be better if we can somehow decouple portions of `ScanNumberHelper` and `TryGetNumberValue` from the tokenizer stepping logic and reuse that, so that we're guaranteed self-consistent results without having to create an entire parser and tokenizer during this conversion, which is almost certainly an expensive operation. How doable that is, I don't know yet. Interesting thought though. 😄 ",
    "created_at": "2019-01-12T05:18:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-453720855",
    "id": 453720855,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzcyMDg1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/453720855/reactions"
    },
    "updated_at": "2019-01-12T16:21:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/453720855",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> EDIT: Spoke a little with @SeeminglyScience this morning, and he and I think it might be better if we can somehow decouple portions of ScanNumberHelper and TryGetNumberValue from the tokenizer stepping logic and reuse that, so that we're guaranteed self-consistent results without having to create an entire parser and tokenizer during this conversion, which is almost certainly an expensive operation. How doable that is, I don't know yet. Interesting thought though.\r\n\r\nMy personal feeling is as you say; casting numbers from strings here should work in exactly the same way as they would in the tokenizer (the easiest way being to share the function). If that requires no state, or can be decoupled from the tokenizer state, then the method may as well be shared and used in both places.\r\n\r\nI don't know how expensive it is to create a new tokenizer (or if it's possible to do outside of the parser with current type access) but to my mind, casting is often associated with some overhead, so it's not the end of the world if the first implementation is not as efficient as it could be.\r\n\r\nI would favour doing it consistently over making it fast, since once it's released we can improve the latter but improving the former would be a breaking change.",
    "created_at": "2019-01-17T19:17:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455296422",
    "id": 455296422,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTI5NjQyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455296422/reactions"
    },
    "updated_at": "2019-01-17T19:17:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455296422",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt I think I can agree with all your points there.\r\n\r\nCurrently you cannot instantiate the tokenizer without the parser (that I can see, anyway), and the main method I know to parse the input would be the static `Parser.ParseInput()` method mentioned above. \r\n\r\nI've been looking at attempting to decouple the methods in the tokenizer, and while I believe it may be eventually worthwhile it may not be especially valuable at this point in time. It's not a small work item by any means; a _lot_ of the underlying logic is coupled tightly to the step-through methods. I can decouple portions of the methods, but I've yet to find any relatively clean ways to thoroughly decouple the methods without causing every possible number to be double-scanned anyway. It may well be simpler to just... invoke the parser on the suspected number and go from there.\r\n\r\nIf that sounds OK, I can tidy the code in that method and submit a PR?",
    "created_at": "2019-01-17T19:36:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455303299",
    "id": 455303299,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTMwMzI5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455303299/reactions"
    },
    "updated_at": "2019-01-17T19:36:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455303299",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Currently you cannot instantiate the tokenizer without the parser (that I can see, anyway), and the main method I know to parse the input would be the static Parser.ParseInput() method mentioned above.\r\n\r\nMmm, I thought that was the case. Bugger.\r\n\r\n> I've been looking at attempting to decouple the methods in the tokenizer, and while I believe it may be eventually worthwhile it may not be especially valuable at this point in time. It's not a small work item by any means; a lot of the underlying logic is coupled tightly to the step-through methods.\r\n\r\nI've wanted parser and tokenizer as nice, standalone objects for a while as well, but I think the likelihood of breakage to a critical (and currently very fault-tolerant) part of PowerShell means we need a large and compelling reason for the work.",
    "created_at": "2019-01-17T19:41:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455305411",
    "id": 455305411,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTMwNTQxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455305411/reactions"
    },
    "updated_at": "2019-01-17T19:41:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455305411",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Completely agree there. I think it's certainly _possible_ to handle this, but as you say... not really worth it until there's a real **need** for it.\r\n\r\nI'll corral the code here and get it working properly, then submit the PR. 😄 ",
    "created_at": "2019-01-17T19:51:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455308936",
    "id": 455308936,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTMwODkzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455308936/reactions"
    },
    "updated_at": "2019-01-17T19:51:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455308936",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I think you're looking for this [code](https://github.com/PowerShell/PowerShell/blob/f1218bd3d9ba97ea13cc7e37a0c5a82ed9fa9556/src/System.Management.Automation/engine/parser/Parser.cs#L228). Note that it creates a parser which is not expensive.",
    "created_at": "2019-01-18T00:38:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455384654",
    "id": 455384654,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTM4NDY1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455384654/reactions"
    },
    "updated_at": "2019-01-18T00:38:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455384654",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@lzybkr Thank you! That saves me rewriting that code... _fantastic_. This'll be pretty straightforward. 😄 \r\n\r\nCreating a parser _isn't_ expensive? That's... actually very surprising, looking at the size of those files. Good to know, though!",
    "created_at": "2019-01-18T00:43:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455385508",
    "id": 455385508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTM4NTUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455385508/reactions"
    },
    "updated_at": "2019-01-18T00:43:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455385508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "If you look at just the [constructor](https://github.com/PowerShell/PowerShell/blob/f1218bd3d9ba97ea13cc7e37a0c5a82ed9fa9556/src/System.Management.Automation/engine/parser/Parser.cs#L52) you can see it does very little.\r\n\r\nThat said, because C# lets you initialize properties outside the constructor, there could be expensive work hiding elsewhere, but by design creating a parser was meant to be inexpensive and if that is not the case, it's something that should be fixed.",
    "created_at": "2019-01-18T01:12:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455391293",
    "id": 455391293,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTM5MTI5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455391293/reactions"
    },
    "updated_at": "2019-01-18T01:12:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455391293",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@lzybkr Got it halfway there with that; see the referenced WIP PR.\r\n\r\nAs long as the value in the string is valid when it's parsed, we get the right value and type back (e.g., if you do `[int]\"100y\"` you _do_ get back 100 as an int, because 100 is a valid byte value, can be parsed, and then it gets converted.\r\n\r\nBut it just completely crashes PS with a `StackOverflowException` when the value in the string is an invalid number (e.g., `200y`, which would usually throw a parsing exception if you attempt to use it normally, just crashes PowerShell ).",
    "created_at": "2019-01-18T04:20:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455422841",
    "id": 455422841,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQyMjg0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455422841/reactions"
    },
    "updated_at": "2019-01-18T04:20:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455422841",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Can we reuse the parser and don't allocate it in every ScanNumber() call?",
    "created_at": "2019-01-18T05:02:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455428521",
    "id": 455428521,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQyODUyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455428521/reactions"
    },
    "updated_at": "2019-01-18T05:02:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455428521",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "🤔 Potentially? I'm not sure how much gain there is in doing so, though, or how complicated it would end up being. I'll look into it tomorrow. 😄 ",
    "created_at": "2019-01-18T05:05:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455428994",
    "id": 455428994,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQyODk5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455428994/reactions"
    },
    "updated_at": "2019-01-18T05:05:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455428994",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It is _engine_. If we can avoid an allocation we should do I believe.",
    "created_at": "2019-01-18T05:16:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455430433",
    "id": 455430433,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTQzMDQzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455430433/reactions"
    },
    "updated_at": "2019-01-18T05:16:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455430433",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov I attempted to add a `static Parser` field to `LanguagePrimitives` but immediately this resulted in an `AMSI uninitialization error` as soon as the project was built and run; it could not even reach the console prompt.\r\n\r\n```\r\nThe shell cannot be started. A failure occurred during initialization:\r\nThe type initializer for 'System.Management.Automation.Language.Compiler' threw an exception.\r\nAssertion Failed\r\nAMSI should have been uninitialized.\r\n```\r\n\r\nI'm not sure why this occurs, but I'm sure there's probably some reason for it.",
    "created_at": "2019-01-19T23:47:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455824761",
    "id": 455824761,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgyNDc2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455824761/reactions"
    },
    "updated_at": "2019-01-19T23:47:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455824761",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It come from `VerifyAmsiUninitializeCalled()`. I guess it is side effect. You could remove the assert temporary to find root cause.",
    "created_at": "2019-01-21T03:58:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455941526",
    "id": 455941526,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTk0MTUyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455941526/reactions"
    },
    "updated_at": "2019-01-21T03:58:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455941526",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Not a bad idea... What would I be looking for after it's disabled? I'm not at all familiar with that code.",
    "created_at": "2019-01-21T04:15:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455943375",
    "id": 455943375,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTk0MzM3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455943375/reactions"
    },
    "updated_at": "2019-01-21T04:15:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455943375",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I expect that after you disable the assert you will see that process terminated and will need to research why.",
    "created_at": "2019-01-21T04:19:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455943939",
    "id": 455943939,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTk0MzkzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455943939/reactions"
    },
    "updated_at": "2019-01-21T04:19:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455943939",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Ah, my favourite kind! 😄 \r\n\r\nI'll see if I can find some time to take a close look at it tomorrow. 🙂 ",
    "created_at": "2019-01-21T05:35:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-455953539",
    "id": 455953539,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTk1MzUzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455953539/reactions"
    },
    "updated_at": "2019-01-21T05:35:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/455953539",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov Gave this a look, but it's not actually crashing.\r\n\r\nIt does however completely disable the error stream. $Error is never populated, errors never display. \r\n\r\nVery odd! Debugging time!\r\n\r\nUpdate:\r\n\r\nSo I still have no idea. The exceptions are thrown and then travel up the stack (which is _really_ tricky to follow at the best of times) and then just seem to get caught somewhere that isn't really obvious and then... nothing. $error never gets populated, and no error output reaches the console.\r\n\r\nI moved the static parser declaration to the Parser class itself, and this actually seems to resolve it. PowerShell builds and runs OK with only that change, AMSI doesn't fail anywhere that is immediately obvious, and the error stream is working. However, doing this is potentially a thread-safety concern as I note here: https://github.com/PowerShell/PowerShell/pull/8681#issuecomment-456441592\r\n\r\nI think at present it's probably best not to keep a static Parser instance around; it may be worth pursuing in future, but thread-safety is something I do not think I have enough experience with to do a proper job of it here, and the overhead of ensuring thread-safety may well outweigh the costs of instantiating a Parser each time.",
    "created_at": "2019-01-22T13:52:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-456406250",
    "id": 456406250,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQwNjI1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456406250/reactions"
    },
    "updated_at": "2019-01-22T16:32:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456406250",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "My 2¢ - it's probably not worth the trouble to reuse the parser, but if you did, it would look something like [this](https://github.com/dotnet/corefx/blob/a10890f4ffe0fadf090c922578ba0e606ebdd16c/src/Common/src/CoreLib/System/Text/StringBuilderCache.cs).",
    "created_at": "2019-01-22T17:37:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-456491154",
    "id": 456491154,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQ5MTE1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456491154/reactions"
    },
    "updated_at": "2019-01-22T17:37:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456491154",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I may well have a crack at it and see if I can follow that example, but that will probably be in a followup PR. 😄 \r\n\r\nThank you! ❤️ ",
    "created_at": "2019-01-22T17:44:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-456493631",
    "id": 456493631,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQ5MzYzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456493631/reactions"
    },
    "updated_at": "2019-01-22T17:44:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456493631",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 the AMSI assert is https://github.com/PowerShell/PowerShell/issues/6862",
    "created_at": "2019-01-22T17:47:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-456494631",
    "id": 456494631,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQ5NDYzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456494631/reactions"
    },
    "updated_at": "2019-01-22T17:47:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456494631",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT That may be the same thing I ran into, or it may be something else. That one's under specific circumstances, but the probably naive implementation of a static parser I made caused it to happen _immediately_ on startup, rending pwsh completely unusable. 😄 \r\n\r\nNot totally sure why, but if I go after that route, I'll definitely take @lzybkr's suggestion... and hope it doesn't break the same way! 🙂 ",
    "created_at": "2019-01-22T18:26:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-456509033",
    "id": 456509033,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjUwOTAzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456509033/reactions"
    },
    "updated_at": "2019-01-22T18:26:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456509033",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32 Please see [GetStringBuilder()](https://github.com/PowerShell/PowerShell/blob/0c2a8911d632069b63ec780afbbe527459cf4660/src/System.Management.Automation/engine/parser/tokenizer.cs#L1601) that is for reusing StringBuilder-s. ",
    "created_at": "2019-01-23T04:27:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-456666010",
    "id": 456666010,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjY2NjAxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456666010/reactions"
    },
    "updated_at": "2019-01-23T04:27:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/456666010",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT @lzybkr @iSazonov So I got curious and decided to see if I could put this together; this is what I came up with.\r\n\r\n```csharp\r\ninternal static class ParserCache\r\n{\r\n    [ThreadStatic]\r\n    private static Parser t_cachedInstance;\r\n\r\n    internal static Parser Acquire()\r\n    {\r\n        Parser p = t_cachedInstance;\r\n        if (p != null)\r\n        {\r\n            t_cachedInstance = null;\r\n            return p;\r\n        }\r\n\r\n        return new Parser();\r\n    }\r\n\r\n    internal static void Release(Parser p)\r\n    {\r\n        if (p.ErrorList.Count > 0)\r\n        {\r\n            p.ErrorList.Clear();\r\n        }\r\n\r\n        p._fileName = null;\r\n        p._ungotToken = null;\r\n        t_cachedInstance = p;\r\n    }\r\n}\r\n```\r\n\r\nI ran a build with it, and it seems to work just fine. There are a handful of callsites in `Parser.cs` where `new Parser()` is called that I replaced with the methods here, and it seems to work just fine. Whether there's any performance benefit I'm not clear on.\r\n\r\nThink it's worth including in #8681?",
    "created_at": "2019-01-28T21:36:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458311019",
    "id": 458311019,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMxMTAxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458311019/reactions"
    },
    "updated_at": "2019-01-28T21:45:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458311019",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 - the Parser class should be responsible for resetting it's state for reuse. You can see the code that does that [here](https://github.com/PowerShell/PowerShell/blob/b779b88c79d9fe30e5ef8061ec3eabd35beffbf4/src/System.Management.Automation/engine/parser/Parser.cs#L181).\r\n\r\nI think there is significant risk in reusing parser instances. A specific instance may be left in a state not suitable for another parsing task, and tracking down **how** the parser got into that state might be very difficult.  These bugs might not be hard to fix once understood, but I would expect issues to be hard to reproduce, possibly even non-deterministic.\r\n\r\nMaybe with some care you could a test that uses reflection to verify a `Parser.Reset` method resets every field in `Parser` **and** for instances that are reused - check that recursively - so `Tokenizer` is reset appropriately as well.  Without such a test, I'd be worried some new code gets added introducing a bug that could take a long time to surface.",
    "created_at": "2019-01-28T22:17:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458324317",
    "id": 458324317,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODMyNDMxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458324317/reactions"
    },
    "updated_at": "2019-01-28T22:17:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458324317",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "All very valid concerns, indeed! I appreciate the tips, thank you! 🙂 \r\n\r\nI'm not familiar with much of reflection, but such a test doesn't seem overly complicated to do... just need to make sure to be thorough. 😄 \r\n\r\nMy thought is that pulling a parser from the cache should get you a parser in the exact same state as a newly-created parser. Doing a comparison between the two should be the best indicator, as well as being fairly future-proof in terms of ensuring it still properly covers the case that someone adds new members to the Parser class down the road. I think. 😄 \r\n\r\nWould that test be best performed from Pester, do you think, or is xUnit preferable here?",
    "created_at": "2019-01-29T13:14:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458535028",
    "id": 458535028,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODUzNTAyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458535028/reactions"
    },
    "updated_at": "2019-01-29T13:16:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458535028",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Why we need new Parser in ScanNumber?",
    "created_at": "2019-01-29T13:16:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458535449",
    "id": 458535449,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODUzNTQ0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458535449/reactions"
    },
    "updated_at": "2019-01-29T13:16:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458535449",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov all of the `static Scan*()` methods in the parser currently instantiate a new Parser object in order to perform their function. As to _why_ specifically, I'm not familiar with everything about the code (I'm sure Jason could speak to that far better than I, of course) but the tokenizer and parser are tied together; you literally _can't_ instantiate one without the other.\r\n\r\nThe only available constructor for the tokenizer class requires a Parser object as input, and instantiating a Parser _also_ instantiates a tokenizer. Certainly, perhaps this could be changed, but I don't know whether or not that is... wise. 🙂 ",
    "created_at": "2019-01-29T13:18:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458536204",
    "id": 458536204,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODUzNjIwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458536204/reactions"
    },
    "updated_at": "2019-01-29T13:19:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458536204",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "My thoughts is about possibility of using current Tokenizer and Parser. Perhaps they could be improved to support this and perhaps it is more simple.",
    "created_at": "2019-01-29T13:41:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458543411",
    "id": 458543411,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODU0MzQxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458543411/reactions"
    },
    "updated_at": "2019-01-29T13:41:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458543411",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The tokenizer uses the parser for error reporting. There may be other important ties that I forget, but that's the big one.\r\n\r\nUnless you have concrete data showing a performance problem, I'll suggest the risk isn't worth it.\r\n\r\nI've suggested ways to mitigate the risk (and testing that a `Reset` parser is in the same state as a new Parser is also a good idea - not sure how that will look in code though), but in the end - I'd like data to justify the extra complexity and maintenance risks.",
    "created_at": "2019-01-29T18:46:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458658886",
    "id": 458658886,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODY1ODg4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458658886/reactions"
    },
    "updated_at": "2019-01-29T18:46:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458658886",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@lzybkr Thanks! \r\n\r\nInitial request was to reduce garbage pressing. The parser state resetting is not resolve this. So I agree that the change is not worth it.",
    "created_at": "2019-01-30T04:44:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7710#issuecomment-458810178",
    "id": 458810178,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7710",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODgxMDE3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458810178/reactions"
    },
    "updated_at": "2019-01-30T04:44:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/458810178",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
