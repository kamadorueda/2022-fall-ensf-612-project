[
  {
    "author_association": "CONTRIBUTOR",
    "body": "I disagree. `-Path` can be accepted via the pipeline and this creates the ability to accept multiple Paths instead of just 1.  In a scenario where you where you needed to so something like this\r\n\r\n```powershell\r\n'c:\\temp', 'c:\\' | Push-Location -PassThru | Invoke-SomeCommand \r\n```\r\n\r\nOne would not want a terminating error from ` Push-Location` to break the pipeline. \r\n\r\nIn this case, I think perhaps changing `-Path` and `-LiteralPath`  to accept an arrays might be a better approach to make the parameters consistent between named parameter and pipeline modes.",
    "created_at": "2017-08-22T12:00:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4636#issuecomment-324004874",
    "id": 324004874,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAwNDg3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324004874/reactions"
    },
    "updated_at": "2017-08-22T12:00:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324004874",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@markekraus:\r\n\r\nThanks - you are correct; I hadn't considered this use of `Push-Location`. I'm closing this (should be labeled as as-designed).\r\n\r\n> In this case, I think perhaps changing -Path and -LiteralPath to accept an arrays might be a better approach to make the parameters consistent between named parameter and pipeline modes.\r\n\r\nActually, this one of those rare cases where a _scalar_ pipeline-binding parameter does make sense, given that something like `Push-Location -LiteralPath 'c:\\temp', 'c:\\'` wouldn't make sense.\r\n\r\nGenerally, though, we unfortunately have many cmdlets where the pipeline-binding `-InputObject` parameter indeed should be an array, but currently isn't (e.g., `Export-Csv`) - see #4242.\r\n",
    "created_at": "2017-08-22T13:06:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4636#issuecomment-324020020",
    "id": 324020020,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAyMDAyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324020020/reactions"
    },
    "updated_at": "2017-08-22T13:06:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324020020",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S.:  A pitfall regarding your sample command that I wasn't initially aware of:\r\n\r\nSince the current location is a session-global setting, whatever path `Push-Location `ends up changing to last in the pipeline remains as the session's current location after the pipeline has run.",
    "created_at": "2017-08-22T13:30:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4636#issuecomment-324026584",
    "id": 324026584,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAyNjU4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324026584/reactions"
    },
    "updated_at": "2017-08-22T13:30:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324026584",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Correct. In cases like that you may be building a stack against candidate paths, performing an action and then reversing the stack. might also use a named stack `-StackName`\r\n\r\n```powershell\r\n'c:\\temp', 'c:\\', 'c:\\noloexisto\\' | Push-Location -PassThru -StackName 'Test' | Invoke-SomeCommand\r\n\r\n$Processedpaths = Get-Location -StackName 'Test'\r\n```",
    "created_at": "2017-08-22T13:39:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4636#issuecomment-324029107",
    "id": 324029107,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAyOTEwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324029107/reactions"
    },
    "updated_at": "2017-08-22T13:39:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324029107",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, though note that `$ProcessedPaths` will not contain _all paths sent through the pipeline_, but instead the previous working location plus all paths sent through the pipeline _except the last_.\r\n\r\nAlso note that outputs a `[System.Management.Automation.PathInfoStack]` _scalar_, not an array - which I personally think is unfortunate - see #4642.\r\n\r\nAllow me this little tangent (I wrote it up for my own notes; do tell me if I got something wrong):\r\n\r\nIf you could guarantee that the `Test` stack doesn't exist / is empty before the pipeline runs, you could use `Set-Location (Get-Location -StackName Test).ToArray()[-1]` to return to the previous location after.\r\nEnsuring an empty / non-existent `Test` stack beforehand is quite cumbersome, however, because there's no direct test for whether a stack  with a given name exists, and if it does exist, calling `.Clear()` on the  `[System.Management.Automation.PathInfoStack]` instance returned has no effect (except on the object returned) - see #4643.\r\n\r\nThus, to avoid the pitfall I mentioned, it's probably easiest to save and restore the current location:\r\n\r\n```powershell\r\nPush-Location -StackName temp # Save current location using temp. stack.\r\n\r\n'/', '/tmp' | Push-Location -PassThru | % { \"running in $PWD\" }\r\n\r\nPop-Location -StackName temp # Restore previous location from temp. stack.\r\n```\r\n\r\nOf course, if the locations changed to in the pipeline don't need to be remembered, using `Set-Location` instead enables a simpler solution (assuming that _no_ command in the pipeline calls `Push-Location` or `Pop-Location`):\r\n\r\n```powershell\r\nPush-Location # Save current location using the unnamed (default) stack.\r\n\r\n'/', '/tmp' | Set-Location -PassThru | % { \"running in $PWD\" }\r\n\r\nPop-Location # Restore previous location.\r\n```\r\n\r\nLastly, using a custom variable to save and restore the location is, of course, also an option:\r\n\r\n```powershell\r\n$prevLoc = $PWD\r\n\r\n'/', '/tmp' | Set-Location -PassThru | % { \"running in $PWD\" }\r\n\r\nSet-Location $prevLoc\r\n```\r\n",
    "created_at": "2017-08-22T17:32:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4636#issuecomment-324097511",
    "id": 324097511,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4636",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDA5NzUxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324097511/reactions"
    },
    "updated_at": "2017-08-22T17:33:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/324097511",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
