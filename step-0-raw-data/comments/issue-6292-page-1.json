[
  {
    "author_association": "COLLABORATOR",
    "body": "Hi @mklement0  - this is actually by design. A ':' indicates the end of the parameter name and it doesn't need to be the last character in the string. If it's in the middle of the string, everything after the ':' is treated as the argument to that parameter. Handling parameters this way parallels how a lot of Windows command line tools parse their arguments.",
    "created_at": "2018-03-07T20:17:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6292#issuecomment-371270610",
    "id": 371270610,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6292",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI3MDYxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/371270610/reactions"
    },
    "updated_at": "2018-03-07T20:17:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/371270610",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay: \r\n\r\nUnderstood, but that applies to _named_ binding: if `-Foo:bar` binds to _explicitly declared_ parameter  \r\n`-Foo`, the` -Foo` prefix is solely used for _matching_ and _eliminated_ during binding, so that the parameter variable `$Foo` then only receives `bar`.\r\n\r\nBy contrast, in _anonymous_ binding I would expect a token such as `-Foo:bar` to be _passed through as-is_ (after potential up-front expansions) - no assumptions should be made about what that token represents, even if it _looks_ like a parameter-name/argument pair.\r\n\r\nNote that the problem only arises with PowerShell functions, not with external programs: with the latter, commendably, `-foo:bar` _is_ passed through as-is.\r\n\r\nI don't know enough about PowerShell's parameter binding to assess whether the distinction I'm asking for presents a conceptual / technical challenge.\r\n\r\n",
    "created_at": "2018-03-07T20:53:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6292#issuecomment-371280860",
    "id": 371280860,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6292",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI4MDg2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/371280860/reactions"
    },
    "updated_at": "2018-03-07T20:56:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/371280860",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "At the parser level, the parameter token ends with `:` and the value after that (space or not) is a new token. The `:` is just used by the parameter binder primarily when binding switch parameters where an argument is unexpected.\r\n\r\nSo from that point of view, this is easily explained and consistent.\r\n\r\nThere is of course the issue with native commands - there was some effort to **not** add a space between the arguments when that space did not appear in the original script.\r\n\r\nThere is a small problem with the current approach though - splatting to a native command will unfortunately add a space:\r\n\r\n```powershell\r\nfunction e1 { echoargs.exe @args }\r\nechoargs.exe -a:b\r\ne1 -a:b\r\n```\r\n\r\nThis outputs:\r\n\r\n```\r\narg 0: <-a:b>\r\n\r\nCommandLine: \"EchoArgs.exe\" -a:b\r\n\r\narg 0: <-a:>\r\narg 1: <b>\r\n\r\nCommandLine: \"EchoArgs.exe\" -a: b\r\n```\r\n\r\nI suppose this is actually an independent bug, though changing behavior here would address the splatting issue as well (though it's not necessarily a good idea to change both - fixing splatting could be sufficient.)",
    "created_at": "2018-03-08T01:21:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6292#issuecomment-371344550",
    "id": 371344550,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6292",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTM0NDU1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/371344550/reactions"
    },
    "updated_at": "2018-03-08T01:21:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/371344550",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the background information, @lzybkr.\r\n\r\n> So from that point of view, this is easily explained and consistent.\r\n> [...]\r\n> though it's not necessarily a good idea to change both\r\n\r\nUnderstood, but my point is that, purely from a conceptual perspective, something that isn't a named argument - even though it may _look_ like one - should be passed through as-is - irrespective of whether it is passed to an external program or to a PowerShell cmdlet/function/script.\r\n\r\nThe current behavior is inconsistent in that the token is parsed as a named argument - and altered in the process - yet ultimately passed as an unnamed one or, rather, _two_ unnamed ones - and that's the problem.\r\n\r\nOf course, a simple workaround is to quote the argument: `Out-Argument '-foo:bar'`\r\n\r\nI've created a separate issue for the splatting bug: #6360\r\n",
    "created_at": "2018-03-11T08:03:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6292#issuecomment-372096910",
    "id": 372096910,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6292",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjA5NjkxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372096910/reactions"
    },
    "updated_at": "2018-03-11T08:03:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372096910",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 To be clear, parameters and arguments are only parsed once when the script is compiled. The command to run is not involved in parsing at all. Command resolution and parameter binding are separate steps done each time a command is executed, potentially long after the parse was completed. So, from the language perspective, `-foo:bar` is _always_ parsed as parameter `-foo` and argument `bar`.  For cmdlets (or script/functions with cmdlet binding) if the command doesn't define a foo parameter, specifying -foo is an error. For native commands, which have no parameter metadata, it's always treated as a value. There is currently a limited \"hack\" that allows the native command parameter binder to stitch literal arguments like `-foo:bar` back together by looking at the parameter token. See function `BindParameters() ` in [NativeCommandParameterBinder.cs](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/NativeCommandParameterBinder.cs\r\n)",
    "created_at": "2018-03-12T21:36:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6292#issuecomment-372471005",
    "id": 372471005,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6292",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ3MTAwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372471005/reactions"
    },
    "updated_at": "2018-03-12T21:36:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372471005",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay: Thanks for this succinct peek behind the scenes and the pointer to the source code - much appreciated.\r\n\r\nBased on #6360, as diagnosed by @lzybkr, we now know that the limited \"hack\" needs fixing for `$Args`-based parameter passing to external programs.\r\n\r\nIn the interest of a consistent user experience, my plea is to **take this opportunity to apply the same \"hack\" to (directly or splatted) arguments passed to _cmdlets/ functions_ too**:\r\n\r\n* calling non-advanced functions that have no parameters and use `$Args`\r\n* binding to an advanced function's  `ValueFromRemainingArguments` parameter\r\n\r\nSomething that - even though _later_, for _technical reasons_ - turns out _not_ to be a parameter, can be dealt with consistently only in one of two ways:\r\n\r\n* EITHER reject the ultimate non-parameter as unbindable and report an error; tell users to use _quoting_ in such cases.\r\n\r\n* OR - and that's my plea -  apply the limited \"hack\" _consistently_ to piece the (potentially expanded) token halves back together, irrespective of whether the executable is an external one or a PowerShell cmdlet / function.\r\n\r\n**If you ultimately don't know what a token such as `-foo:bar` means, it makes no sense to pass it as _two_ arguments - that is potentially more harmful than reporting an error.**\r\n\r\nI've updated the initial post to reflect the current state of our discussion.",
    "created_at": "2018-03-18T15:40:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6292#issuecomment-374009123",
    "id": 374009123,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6292",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDAwOTEyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/374009123/reactions"
    },
    "updated_at": "2018-03-18T15:41:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/374009123",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
