[
  {
    "author_association": "CONTRIBUTOR",
    "body": "For full disclosure, such a change would technically be breaking, because:\r\n\r\n```powershell\r\n$x = 'A string'\r\n$bool = 'bool'\r\n$x -is [string] $bool # returns False\r\n```\r\n\r\nToday, PowerShell parses the right-hand side of the -is operator separately. In the case of the example shown above, `$bool` is a string containing the value `'bool'`, which is then typecast to a string, returning the value `'bool'`, which is then typecast to a type by the `-is` operator, resulting in a comparison checking if `$x` is of type `[bool]`.\r\n\r\nI've never seen such code in practice though. I only discovered it by checking to see what would happen if I used code similar to what I'm proposing here. It is unlikely that such code exists in practice, as there is no value in casting something with the `-is` operator.\r\n\r\nAlso, note that the following examples don't work today, so the possibility of actually breaking something is pretty much non-existent:\r\n\r\n```powershell\r\n$x = 'A string'\r\n$string = 'Another string'\r\n$x -is [string] $string # raises an error because 'Another string' is not a type\r\n\r\n$x = $true\r\n$string = 'A string'\r\n$x -is [bool] $string # raises an error because you cannot convert boolean true or false to System.Type\r\n```\r\n\r\nLast, just to call it out, I would implement this syntax extension for `-is`, but I would not do anything for `-isnot`, because there is no use case for that.",
    "created_at": "2019-11-29T00:32:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559624608",
    "id": 559624608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyNDYwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559624608/reactions"
    },
    "updated_at": "2019-11-29T00:32:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559624608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro C#'s pattern matching supports conditionals with negative pattern matching too:\r\n```csharp\r\nif (!(value is Type convertedValue))\r\n{\r\n    // convertedValue does not exist here\r\n}\r\n\r\n// convertedValue exists here\r\n```\r\n\r\nPerhaps something similar could still be useful with `-isnot`?",
    "created_at": "2019-11-29T00:50:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559626412",
    "id": 559626412,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYyNjQxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559626412/reactions"
    },
    "updated_at": "2019-11-29T00:50:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559626412",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I worry that might be more challenging than it's worth. Still, good to know it's there. That's a pattern I haven't used in C# yet.",
    "created_at": "2019-11-29T01:56:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559634311",
    "id": 559634311,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTYzNDMxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559634311/reactions"
    },
    "updated_at": "2019-11-29T01:56:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559634311",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Maybe we can generalize and propose a syntax to store result for any sub-expression?",
    "created_at": "2019-11-29T03:21:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559646720",
    "id": 559646720,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTY0NjcyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559646720/reactions"
    },
    "updated_at": "2019-11-29T03:21:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559646720",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There (sort of) is that already, but as Kirk says it's not the greatest syntax and blurs the intent:\r\n\r\n```powershell\r\nif ($convertedValue = $value -as [type]) {\r\n    # do things with $convertedValue\r\n}\r\n```\r\n\r\nAlso, RE: the possible effort of handling `-isnot` -- I don't think there should be any additional checks necessary, really. If a value is obtainable, store it in the variable and return the appropriate value. Either way, the conditional logic should handle which branch is taken anyway. I don't think any special handling should be necessary, but it's always a possibility.",
    "created_at": "2019-11-29T03:33:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559648486",
    "id": 559648486,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTY0ODQ4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559648486/reactions"
    },
    "updated_at": "2019-11-29T03:35:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559648486",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "My thoughts is about `bool TryChech(out Type result)` pattern.",
    "created_at": "2019-11-29T03:55:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559651425",
    "id": 559651425,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTY1MTQyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559651425/reactions"
    },
    "updated_at": "2019-11-29T03:55:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559651425",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The closest analogue for that in PS is much more akin to `Test-Value $value -Out [ref]$var` which is probably a pattern I think we should avoid.\r\n\r\nIt works well for C#, but if we're doing something like this in PS I think the expression syntax is much more effective here.",
    "created_at": "2019-11-29T04:12:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559653631",
    "id": 559653631,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTY1MzYzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559653631/reactions"
    },
    "updated_at": "2019-11-29T04:12:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559653631",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It is not new for PowerShell to store a side result. In pipeline we have PilpelineVariable parameter. Perhaps we could have something like for expressions.",
    "created_at": "2019-11-29T06:00:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559669340",
    "id": 559669340,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTY2OTM0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559669340/reactions"
    },
    "updated_at": "2019-11-29T06:00:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559669340",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Here are some alternate syntax proposals that may be more in line with \"the PowerShell way\", and that would also be non-breaking:\r\n\r\n```powershell\r\n# Explicitly identifying the variable with an additional operator option\r\nif ($x -is [string] -typecastVariable myString) {$myString.Length}\r\n\r\n# Or, using shorthand (which could be supported in addition to the above):\r\nif ($x -is [string] -tv myString) {$myString.Length}\r\n\r\n# Or, simply using comma (like the -split operator, which has optional additional arguments)\r\nif ($x -is [string],myString) {$myString.Length}\r\n```\r\n\r\nI'm not particularly attached to any one of these more than the others. As long as I can assign a value as part of the `-is` comparison, I'll be happy.\r\n\r\nI'm not sure where or how something like this could be applied generically to all expressions @iSazonov. Do you have suggestions? It seems to me something that should be done on a case-by-case basis, because the thing you want to capture as a side result depends on what you are doing.",
    "created_at": "2019-11-29T17:24:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559850186",
    "id": 559850186,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1MDE4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559850186/reactions"
    },
    "updated_at": "2019-11-29T17:24:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559850186",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think I prefer the syntax from the original proposal. `-PipelineVariable` works the way it does because it's probably the least complicated way to manage it from a cmdlet's perspective. I don't think that approach adds value in the expression syntax over what you originally proposed, Kirk. 🤔 ",
    "created_at": "2019-11-29T17:39:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559852839",
    "id": 559852839,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1MjgzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559852839/reactions"
    },
    "updated_at": "2019-11-29T17:39:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559852839",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I think I do as well. It looks more like you're strongly typing something, which is exactly what is being done in that case. I just wanted to share additional options for consideration.",
    "created_at": "2019-11-29T17:52:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11212#issuecomment-559855012",
    "id": 559855012,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11212",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTg1NTAxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559855012/reactions"
    },
    "updated_at": "2019-11-29T17:52:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559855012",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
