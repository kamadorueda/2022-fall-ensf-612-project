[
  {
    "author_association": "NONE",
    "body": "please also return StartupType and ServicePath\n",
    "created_at": "2016-11-01T19:01:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-257661558",
    "id": 257661558,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzY2MTU1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/257661558/reactions"
    },
    "updated_at": "2016-11-01T19:01:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/257661558",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/13083856?v=4",
      "events_url": "https://api.github.com/users/copdips/events{/privacy}",
      "followers_url": "https://api.github.com/users/copdips/followers",
      "following_url": "https://api.github.com/users/copdips/following{/other_user}",
      "gists_url": "https://api.github.com/users/copdips/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/copdips",
      "id": 13083856,
      "login": "copdips",
      "node_id": "MDQ6VXNlcjEzMDgzODU2",
      "organizations_url": "https://api.github.com/users/copdips/orgs",
      "received_events_url": "https://api.github.com/users/copdips/received_events",
      "repos_url": "https://api.github.com/users/copdips/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/copdips/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/copdips/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/copdips"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@copdips StartType as been included in `Get-Service` output since 5.0:  \n\n``` powershell\nC:\\Users\\jaiello> get-service sshd | fl *\n\n\nName                : sshd\nRequiredServices    : {ssh-agent}\nCanPauseAndContinue : False\nCanShutdown         : False\nCanStop             : False\nDisplayName         : sshd\nDependentServices   : {}\nMachineName         : .\nServiceName         : sshd\nServicesDependedOn  : {ssh-agent}\nServiceHandle       :\nStatus              : Stopped\nServiceType         : Win32OwnProcess\nStartType           : Manual\nSite                :\nContainer           :\n```\n",
    "created_at": "2016-11-04T22:02:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-258558675",
    "id": 258558675,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU1ODY3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258558675/reactions"
    },
    "updated_at": "2016-11-04T22:02:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258558675",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "But yeah, we should probably have `ServicePath` too\n",
    "created_at": "2016-11-04T22:02:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-258558723",
    "id": 258558723,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU1ODcyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258558723/reactions"
    },
    "updated_at": "2016-11-04T22:02:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258558723",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT , @lzybkr  @joeyaiello  : As mentioned, Service Account info as well service path is available from Win32_Service WMI class. Should I get started on this?\n\n![image](https://cloud.githubusercontent.com/assets/18017330/20025565/c509e960-a2ac-11e6-9281-6d5a87da6b38.png)\n",
    "created_at": "2016-11-04T23:36:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-258572907",
    "id": 258572907,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU3MjkwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 2,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258572907/reactions"
    },
    "updated_at": "2016-11-04T23:36:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258572907",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18017330?v=4",
      "events_url": "https://api.github.com/users/charub/events{/privacy}",
      "followers_url": "https://api.github.com/users/charub/followers",
      "following_url": "https://api.github.com/users/charub/following{/other_user}",
      "gists_url": "https://api.github.com/users/charub/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/charub",
      "id": 18017330,
      "login": "charub",
      "node_id": "MDQ6VXNlcjE4MDE3MzMw",
      "organizations_url": "https://api.github.com/users/charub/orgs",
      "received_events_url": "https://api.github.com/users/charub/received_events",
      "repos_url": "https://api.github.com/users/charub/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/charub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charub/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/charub"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@charub you can always take up issues marked as Backlog, although it's preferred if you can prioritize issues you can fix marked for 6.0.0 milestone\n",
    "created_at": "2016-11-04T23:43:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-258573611",
    "id": 258573611,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODU3MzYxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258573611/reactions"
    },
    "updated_at": "2016-11-04T23:43:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/258573611",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Some food for thought: Don't forget the Description property, and consider device drivers as well.\r\n\r\nYears ago when I used to work on PowerGUI (PowerShell v1 days, before StartType was added), we solved this problem like this:\r\n\r\n```PowerShell\r\n$wmiServices = @{}\r\nGet-WmiObject -Namespace root\\cimv2 -Class Win32_Service | ForEach-Object {\r\n\t$wmiServices.Add($_.Name,$_)\r\n}\r\nGet-Service `\r\n\t| ForEach-Object {\r\n\t\t$_ | Add-Member -Name Win32_Service -MemberType NoteProperty -Value $(if ($wmiServices.ContainsKey($_.ServiceName)) {$wmiServices[$_.ServiceName]} else {$null}) -PassThru\r\n\t} `\r\n\t| Add-Member -Name Description -MemberType ScriptProperty -Value {if ($this.Win32_Service) { $this.Win32_Service.Description }} -PassThru `\r\n  \t| Add-Member -Name LogonAs -MemberType ScriptProperty -Value {if ($this.Win32_Service) { $this.Win32_Service.StartName }} -PassThru `\r\n  \t| Add-Member -Name StartupType -MemberType ScriptProperty -Value {if ($this.Win32_Service) { $this.Win32_Service.StartMode }} -PassThru\r\n```\r\n\r\nWhen digging into the details of how Get-Service works way back then, I discovered that you can also get device drivers from Get-Service. Device drivers can be discovered via WMI using the Win32_SystemDriver class. This led to the following proxy function (implemented using pspx) that supports retrieving the additional properties that were missing (although I didn't get the path) and that supports retrieving services, device drivers, or both:\r\n\r\n```PowerShell\r\n# This script creates a proxy function for Get-Service. It adds support for retrieving both\r\n# device drivers (which are services under the covers) and windows services, using wildcards\r\n# or fullnames. It allows you to specify the type of service you are looking for as well with\r\n# the -ServiceType parameter. And lastly, it retrieves the Description, the LogonAs and the\r\n# StartupType properties of the services you enumerate (these properties are not visible with\r\n# the built-in Get-Service cmdlet).\r\n\r\nFix-It Get-Service `\r\n\t-Synopsis 'Gets the Windows services and device driver services on a local or remote computer.' `\r\n\t-Description @'\r\nThe Get-Service command gets objects that represent the services on a local computer or on a remote computer, including running and stopped services.\r\n\r\nYou can direct Get-Service to get only particular services by specifying the service name or display name of the services, or you can pipe service objects to Get-Service.\r\n\r\nServices returned from this command may be Windows services or device driver services. You can direct Get-Service to only return services of a particular type using the ServiceType parameter.\r\n'@ `\r\n\t-Parameter @(\r\n\t\t@{\r\n\t\t\tName = 'ServiceType'\r\n\t\t\tAlias = 'Type'\r\n\t\t\tType = [System.String]\r\n\t\t\tValidateSet = @('Service','DeviceDriver','All')\r\n\t\t\tDescription = @'\r\nGets only services of the specified type. The default is All if you search by name without wildcards, or Service otherwise. \r\n\r\n\tThe valid values for this parameter are: \r\n\r\n\t-- All: Gets all services on a computer.\r\n\t-- Service: Gets standard Windows Services on a computer.\r\n\t-- DeviceDriver: Gets device driver services on a computer.\r\n\r\n'@\r\n\t\t\tDefaultValue = '''All'' if you search by name without wildcards, or ''Service'' otherwise.'\r\n\t\t\tExample = @(\r\n\t\t\t\t@{\r\n\t\t\t\t\tScriptBlock={Get-Service -ServiceType DeviceDriver}\r\n\t\t\t\t\tDescription='This command retrieves all device driver services on the local computer. This example shows that you can enumerate all device driver services.'\r\n\t\t\t\t}\r\n\t\t\t\t@{\r\n\t\t\t\t\tScriptBlock={Get-Service -Name hvboot}\r\n\t\t\t\t\tDescription='This command gets the hvboot device driver service on the local computer. This example shows that you can search for device driver services by name.'\r\n\t\t\t\t}\r\n\t\t\t\t@{\r\n\t\t\t\t\tScriptBlock={Get-Service -ServiceType All}\r\n\t\t\t\t\tDescription='This command gets both standard Windows Services and device driver services on the local computer.'\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t) `\r\n\t-DefaultParameterValue @{\r\n\t\tServiceType = {if ($PSPassThruParameters.ContainsKey('Name') -and ($Name -notmatch '[\\?\\*]')) {'All'} else {'Service'}}\r\n\t} `\r\n\t-Begin {\r\n\t\tfunction ConvertTo-WmiFilter {\r\n\t\t\t[CmdletBinding()]\r\n\t\t\t[OutputType([System.String])]\r\n\t\t\tparam(\r\n\t\t\t\t[Parameter(Mandatory=$true,Position=0)]\r\n\t\t\t\t[ValidateNotNullOrEmpty()]\r\n\t\t\t\t[System.String]\r\n\t\t\t\t$PropertyName,\r\n\r\n\t\t\t\t[Parameter()]\r\n\t\t\t\t[ValidateNotNullOrEmpty()]\r\n\t\t\t\t[System.String[]]\r\n\t\t\t\t$FilterValue,\r\n\r\n\t\t\t\t[Parameter()]\r\n\t\t\t\t[ValidateNotNullOrEmpty()]\r\n\t\t\t\t[System.String[]]\r\n\t\t\t\t$LiteralFilterValue\r\n\t\t\t)\r\n\t\t\t$wmiFilterSet = @()\r\n\t\t\tif ($FilterValue) {\r\n\t\t\t\tforeach ($item in $FilterValue) {\r\n\t\t\t\t\tif ([System.Management.Automation.WildcardPattern]::ContainsWildcardCharacters($item)) {\r\n\t\t\t\t\t\t$wmiEquivalentItem = $item -replace '``','¢' -replace '^\\*','%' -replace '^\\?','_' -replace '([^`]{1}?)\\*','$1%' -replace '([^`]{1}?)\\?','$1_' -replace '`\\*','*' -replace '`\\?','?' -replace '¢','`'\r\n\t\t\t\t\t\t$wmiFilterSet += \"$PropertyName LIKE '$wmiEquivalentItem'\"\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$wmiEquivalentItem = [System.Management.Automation.WildcardPattern]::Unescape($item)\r\n\t\t\t\t\t\t$wmiFilterSet += \"$PropertyName = '$item'\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif ($LiteralFilterValue) {\r\n\t\t\t\tforeach ($item in $LiteralFilterValue) {\r\n\t\t\t\t\t$wmiFilterSet += \"$PropertyName = '$item'\"\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$wmiFilterSet -join ' OR '\r\n\t\t}\r\n\t\t$wmiServices = @{}\r\n\t\t$getWmiObjectParameters = @{\r\n\t\t\tNamespace = 'root\\cimv2'\r\n\t\t\tClass = $(if ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('Name')) {'Win32_BaseService'} else {'Win32_Service'})\r\n\t\t}\r\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('ComputerName')) {\r\n\t\t\t$getWmiObjectParameters['ComputerName'] = $ComputerName\r\n\t\t}\r\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('ServiceType')) {\r\n\t\t\tswitch ($ServiceType) {\r\n\t\t\t\t'DeviceDriver' {\r\n\t\t\t\t\t$getWmiObjectParameters['Class'] = 'Win32_SystemDriver'\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\t'Service' {\r\n\t\t\t\t\t$getWmiObjectParameters['Class'] = 'Win32_Service'\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t\tdefault {\r\n\t\t\t\t\t$getWmiObjectParameters['Class'] = 'Win32_BaseService'\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t$filter = ''\r\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('Name')) {\r\n\t\t\t$filter += '(' + (ConvertTo-WmiFilter -PropertyName Name -FilterValue $Name) + ')'\r\n\t\t\t$filter += ' OR '\r\n\t\t\t$filter += '(' + (ConvertTo-WmiFilter -PropertyName DisplayName -FilterValue $Name) + ')'\r\n\t\t} elseif ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('DisplayName')) {\r\n\t\t\t$filter += '(' + (ConvertTo-WmiFilter -PropertyName DisplayName -FilterValue $DisplayName) + ')'\r\n\t\t}\r\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('Include')) {\r\n\t\t\tif ($filter) {\r\n\t\t\t\t$filter += ' AND '\r\n\t\t\t}\r\n\t\t\t$filter += '(' + (ConvertTo-WmiFilter -PropertyName Name -FilterValue $Include) + ')'\r\n\t\t}\r\n\t\tif ($PSCmdlet.MyInvocation.BoundParameters.ContainsKey('Exclude')) {\r\n\t\t\tif ($filter) {\r\n\t\t\t\t$filter += ' AND NOT '\r\n\t\t\t}\r\n\t\t\t$filter += '(' + (ConvertTo-WmiFilter -PropertyName Name -FilterValue $Exclude) + ')'\r\n\t\t}\r\n\t\tif ($filter) {\r\n\t\t\t$getWmiObjectParameters['Filter'] = $filter\r\n\t\t}\r\n\t\t$serviceNames = @()\r\n\t\tGet-WmiObject @getWmiObjectParameters | ForEach-Object {\r\n\t\t\tif (-not $wmiServices.ContainsKey($_.__SERVER)) {\r\n\t\t\t\t$wmiServices[$_.__SERVER] = @{}\r\n\t\t\t}\r\n\t\t\tif ($serviceNames -notcontains ($_.Name)) {\r\n\t\t\t\t$serviceNames += $_.Name\r\n\t\t\t}\r\n\t\t\t$wmiServices[$_.__SERVER][$_.Name] = $_\r\n\t\t}\r\n\t\tif ($serviceNames) {\r\n\t\t\t$PSPassThruParameters.Remove('Name') | Out-Null\r\n\t\t\t$PSPassThruParameters.Remove('Include') | Out-Null\r\n\t\t\t$PSPassThruParameters.Remove('Exclude') | Out-Null\r\n\t\t\t$PSPassThruParameters['Name'] = $serviceNames | Sort-Object\r\n\t\t}\r\n\t} `\r\n\t-Process {\r\n\t\tForEach-Object {\r\n\t\t\t$serviceComputerName = $_.MachineName\r\n\t\t\tif (@('127.0.0.1','.','localhost',\"${env:COMPUTERNAME}.${env:USERDNSDOMAIN}\") -contains $serviceComputerName) {\r\n\t\t\t\t$serviceComputerName = $env:COMPUTERNAME\r\n\t\t\t}\r\n\t\t\tif ($wmiServices.ContainsKey($serviceComputerName) -and $wmiServices.$serviceComputerName.ContainsKey($_.ServiceName)) {\r\n\t\t\t\t$_ `\r\n\t\t\t\t\t| Add-Member -Name WmiService -MemberType NoteProperty -Value $wmiServices.$serviceComputerName[$_.ServiceName] -PassThru `\r\n\t\t\t\t\t| Add-Member -Name Description -MemberType ScriptProperty -Value {if ($this.WmiService) { $this.WmiService.Description }} -PassThru `\r\n\t\t\t\t  \t| Add-Member -Name LogonAs -MemberType ScriptProperty -Value {if ($this.WmiService) { $this.WmiService.StartName }} -PassThru `\r\n\t\t\t\t  \t| Add-Member -Name StartupType -MemberType ScriptProperty -Value {if ($this.WmiService) { $this.WmiService.StartMode }} -PassThru `\r\n\t\t\t\t\t| Add-Member -Force -Name ToString -MemberType ScriptMethod -Value {$this.Name} -PassThru\r\n\t\t\t}\r\n\t\t}\r\n\t} `\r\n\t-DefineNow\r\n```\r\n\r\nI just wanted to add this here because it made for easier use of Get-Service that gave back more data properties and that could be used to enumerate device drivers as well.",
    "created_at": "2017-05-25T22:00:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-304136427",
    "id": 304136427,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNjQyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304136427/reactions"
    },
    "updated_at": "2017-05-25T22:00:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304136427",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": "Whatever happened to this? It looks like it never made it out for public use.",
    "created_at": "2020-09-22T20:45:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-696970212",
    "id": 696970212,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5Njk3MDIxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/696970212/reactions"
    },
    "updated_at": "2020-09-22T20:45:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/696970212",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21188264?v=4",
      "events_url": "https://api.github.com/users/jcoffi/events{/privacy}",
      "followers_url": "https://api.github.com/users/jcoffi/followers",
      "following_url": "https://api.github.com/users/jcoffi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcoffi/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jcoffi",
      "id": 21188264,
      "login": "jcoffi",
      "node_id": "MDQ6VXNlcjIxMTg4MjY0",
      "organizations_url": "https://api.github.com/users/jcoffi/orgs",
      "received_events_url": "https://api.github.com/users/jcoffi/received_events",
      "repos_url": "https://api.github.com/users/jcoffi/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jcoffi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcoffi/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jcoffi"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Try:\r\n```\r\nGet-Service wuauserv | fl * -Force\r\n```",
    "created_at": "2020-09-23T03:09:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-697106068",
    "id": 697106068,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzEwNjA2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/697106068/reactions"
    },
    "updated_at": "2020-09-23T03:09:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/697106068",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Found that this works:\r\nGet-WmiObject win32_service -Filter \"Name like 'MSSQL%'\" | Format-Table name, startname \r\n",
    "created_at": "2021-08-27T07:18:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-906984140",
    "id": 906984140,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "IC_kwDOAvT7bc42D3rM",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/906984140/reactions"
    },
    "updated_at": "2021-08-27T07:18:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/906984140",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31986653?v=4",
      "events_url": "https://api.github.com/users/AndreDP-Developer/events{/privacy}",
      "followers_url": "https://api.github.com/users/AndreDP-Developer/followers",
      "following_url": "https://api.github.com/users/AndreDP-Developer/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndreDP-Developer/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AndreDP-Developer",
      "id": 31986653,
      "login": "AndreDP-Developer",
      "node_id": "MDQ6VXNlcjMxOTg2NjUz",
      "organizations_url": "https://api.github.com/users/AndreDP-Developer/orgs",
      "received_events_url": "https://api.github.com/users/AndreDP-Developer/received_events",
      "repos_url": "https://api.github.com/users/AndreDP-Developer/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AndreDP-Developer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndreDP-Developer/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AndreDP-Developer"
    }
  },
  {
    "author_association": "NONE",
    "body": "bjr\n\n2021-08-27 9:18 UTC+02:00, André du Plessis ***@***.***>:",
    "created_at": "2021-08-27T08:51:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2579#issuecomment-907040342",
    "id": 907040342,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2579",
    "node_id": "IC_kwDOAvT7bc42EFZW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/907040342/reactions"
    },
    "updated_at": "2021-08-27T18:09:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/907040342",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/86810237?v=4",
      "events_url": "https://api.github.com/users/Prosper-web/events{/privacy}",
      "followers_url": "https://api.github.com/users/Prosper-web/followers",
      "following_url": "https://api.github.com/users/Prosper-web/following{/other_user}",
      "gists_url": "https://api.github.com/users/Prosper-web/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Prosper-web",
      "id": 86810237,
      "login": "Prosper-web",
      "node_id": "MDQ6VXNlcjg2ODEwMjM3",
      "organizations_url": "https://api.github.com/users/Prosper-web/orgs",
      "received_events_url": "https://api.github.com/users/Prosper-web/received_events",
      "repos_url": "https://api.github.com/users/Prosper-web/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Prosper-web/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Prosper-web/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Prosper-web"
    }
  }
]
