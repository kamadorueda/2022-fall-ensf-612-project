[
  {
    "author_association": "NONE",
    "body": "I think I have a clue about this one:\r\n\r\nThe Global Tool Shim is accepting the `args[]` as provided in the main function by .NET.\r\nhttps://github.com/PowerShell/PowerShell/blob/42b599dc664a5f588e833f8591282fc4ed861943/src/Microsoft.PowerShell.GlobalTool.Shim/GlobalToolShim.cs#L33\r\n\r\nHowever, to keep the quotes correctly it should be using either `Environment.CommandLine` \r\nor Win32Api:\r\n        [DllImport(\"kernel32.dll\", CharSet = CharSet.Auto)]\r\n        public static extern System.IntPtr GetCommandLine();\r\n\r\nHope it helps.-",
    "created_at": "2020-02-02T03:01:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11747#issuecomment-581092505",
    "id": 581092505,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11747",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTA5MjUwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581092505/reactions"
    },
    "updated_at": "2020-02-02T03:01:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581092505",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3901474?v=4",
      "events_url": "https://api.github.com/users/gerardog/events{/privacy}",
      "followers_url": "https://api.github.com/users/gerardog/followers",
      "following_url": "https://api.github.com/users/gerardog/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerardog/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gerardog",
      "id": 3901474,
      "login": "gerardog",
      "node_id": "MDQ6VXNlcjM5MDE0NzQ=",
      "organizations_url": "https://api.github.com/users/gerardog/orgs",
      "received_events_url": "https://api.github.com/users/gerardog/received_events",
      "repos_url": "https://api.github.com/users/gerardog/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gerardog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerardog/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gerardog"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Nice sleuthing, @gerardog.\r\n\r\nThe simplest and robust solution is to copy the elements of `args` to a `ProcessStartInfo` instance's [`ArgumentList`](https://docs.microsoft.com/en-US/dotnet/api/System.Diagnostics.ProcessStartInfo.ArgumentList) property (a new, collection-based alternative to the single-string `.Arguments` property), which on Windows performs proper re-quoting and escaping as necessary, and on Unix passes the already-parsed arguments through as an array:\r\n\r\n```csharp\r\n\r\n            // Use ProcessStartInfo.ArgumentList to robustly pass arguments through.\r\n            var psi =  new ProcessStartInfo(\"dotnet\");\r\n            psi.ArgumentList.Add(pwshPath);\r\n            foreach (var arg in args) { psi.ArgumentList.Add(arg); }\r\n\r\n            if (File.Exists(pwshPath))\r\n            {\r\n                var process = System.Diagnostics.Process.Start(psi);\r\n                process.WaitForExit();\r\n                \r\n                return process.ExitCode;\r\n            }\r\n```\r\n",
    "created_at": "2020-02-02T03:32:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11747#issuecomment-581094652",
    "id": 581094652,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11747",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTA5NDY1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581094652/reactions"
    },
    "updated_at": "2020-02-02T03:42:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581094652",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "> which on Windows performs proper re-quoting and escaping as necessary\r\n\r\nDoes it?\r\n\r\nA few edge cases:\r\n- Arguments without spaces wrapped in single or double quotes, will be re-quoted?\r\n- Arguments with spaces wrapped in single quotes, will be re-quoted in double quotes?\r\n\r\nThanks",
    "created_at": "2022-04-22T14:30:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11747#issuecomment-1106574773",
    "id": 1106574773,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11747",
    "node_id": "IC_kwDOAvT7bc5B9P21",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1106574773/reactions"
    },
    "updated_at": "2022-04-22T14:30:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1106574773",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3901474?v=4",
      "events_url": "https://api.github.com/users/gerardog/events{/privacy}",
      "followers_url": "https://api.github.com/users/gerardog/followers",
      "following_url": "https://api.github.com/users/gerardog/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerardog/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gerardog",
      "id": 3901474,
      "login": "gerardog",
      "node_id": "MDQ6VXNlcjM5MDE0NzQ=",
      "organizations_url": "https://api.github.com/users/gerardog/orgs",
      "received_events_url": "https://api.github.com/users/gerardog/received_events",
      "repos_url": "https://api.github.com/users/gerardog/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gerardog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerardog/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gerardog"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Does it?\r\n\r\nYes, assuming the target application uses the command-line parsing rules of C/C++/.NET applications, as described [here](https://stackoverflow.com/a/48491292/45375).\r\nThat's the best that can be done - ultimately, any application is free to make up its own parsing rules.\r\n\r\nAs for the edge cases:\r\n\r\n> Arguments without spaces wrapped in single or double quotes, will be re-quoted?\r\n\r\nNo - if an argument contains no spaces, it is passed _unquoted_, irrespective of whether it was quoted or not on the original command line.\r\n\r\n> Arguments with spaces wrapped in single quotes, will be re-quoted in double quotes?\r\n\r\nYes.\r\n",
    "created_at": "2022-04-22T15:43:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11747#issuecomment-1106638533",
    "id": 1106638533,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11747",
    "node_id": "IC_kwDOAvT7bc5B9fbF",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1106638533/reactions"
    },
    "updated_at": "2022-04-22T15:43:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1106638533",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
