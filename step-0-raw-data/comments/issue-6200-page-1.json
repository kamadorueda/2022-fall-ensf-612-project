[
  {
    "author_association": "COLLABORATOR",
    "body": "@Jaykul Yes - this behaviour that's been around since the very beginning of PowerShell. Basically the pipeline uses `ActionPreferenceStopException` to wrap the exception that has the actual error in it then throws the wrapper. Consequently, if it wasn't automatically unwrapped in try/catch/trap you would never be able to catch the underlying exception since all you'd ever see would be the wrapper. So your example:\r\n```\r\ntry {\r\n   get-content nosuchfile -ErrorAction Stop\r\n} catch [System.Management.Automation.ItemNotFoundException] {\r\n   Write-Host \"It's an ItemNotFoundException, obviously\"\r\n   $_.PSTypeNames, $_.Exception.PSTypeNames, $_.Exception.InnerException.PSTypeNames\r\n} \r\n```\r\nwouldn't work. \r\n\r\nWhy do you want to catch this exception? ",
    "created_at": "2018-03-17T02:18:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-373887380",
    "id": 373887380,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg4NzM4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373887380/reactions"
    },
    "updated_at": "2018-03-17T02:18:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373887380",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Because I want to handle:\r\n\r\n1. The specific exception that I am expecting\r\n2. Some other exception that is caused by the ErrorActionPreference\r\n3. Other exceptions which might be thrown within the try block (i.e. a generic catch handler)\r\n\r\nThis is particularly the case when I'm using `trap` to basically wrap the entire scope of a process / end block, **or** when the ErrorPreference is being set _inside_ the function that I'm calling (possibly in multiple places, but not in all places which might throw exceptions).",
    "created_at": "2019-02-03T18:16:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-460074848",
    "id": 460074848,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDA3NDg0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/460074848/reactions"
    },
    "updated_at": "2019-02-03T18:16:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/460074848",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If you want a generic catch, you just... Don't specify a type. I don't see why you'd need to catch this specific exception type.",
    "created_at": "2019-02-03T18:59:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-460078218",
    "id": 460078218,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDA3ODIxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/460078218/reactions"
    },
    "updated_at": "2019-02-03T18:59:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/460078218",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Isn't it enough to say: **SOMETIMES** I can catch this type, but if I catch some other type, then **SUDDENLY** I cannot catch this type anymore!\r\n\r\nHow is that not a bug? Why I want to catch that type is irrelevant.",
    "created_at": "2019-02-26T17:09:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-467526160",
    "id": 467526160,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUyNjE2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467526160/reactions"
    },
    "updated_at": "2019-02-26T17:09:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467526160",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, that's completely fair. ðŸ˜„ \r\n\r\nWhether or not this \"should\" be catchable, the behaviour should remain consistent.",
    "created_at": "2019-02-26T17:14:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-467528128",
    "id": 467528128,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzUyODEyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467528128/reactions"
    },
    "updated_at": "2019-02-26T17:14:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/467528128",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Whether or not this \"should\" be catchable, the behaviour should remain consistent.\r\n\r\nThat's my thinking on this one: that it shouldn't be catchable, and that maybe PSScriptAnalyzer should flag if/when someone tries to catch a `System.Management.Automation.ActionPreferenceStopException`, because the intent of `-ErrorAction Stop` is to promote a non-terminating exception to terminating, not to generate an exception of a specific type that you would want to catch in a type-specific handler. Unless the fact that `ActionPreferenceStopException` is used as a wrapper to carry the non-terminating exception to the appropriate catch handler is relevant (I personally don't see the value in that though).",
    "created_at": "2019-04-24T21:41:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-486438018",
    "id": 486438018,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjQzODAxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/486438018/reactions"
    },
    "updated_at": "2019-04-24T21:43:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/486438018",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Assuming the desired consistency is for internal wrappers such as `System.Management.Automation.ActionPreferenceStopException` to be used only to promote a non-terminating exception to terminating (as mentioned in my last comment), then the resolution of this issue is simply the addition of a PSScriptAnalyzer rule that identifies the anti-pattern and explains to users why they shouldn't catch `System.Management.Automation.ActionPreferenceStopException`.\r\n\r\n@jaykul If you could comment for or against this as a resolution, since you're the OP, it would be appreciated. Then we can either discuss further or close this issue out and log an issue for the PSSA rule to be created.",
    "created_at": "2019-04-25T14:21:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6200#issuecomment-486693503",
    "id": 486693503,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6200",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjY5MzUwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/486693503/reactions"
    },
    "updated_at": "2019-04-25T14:21:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/486693503",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
