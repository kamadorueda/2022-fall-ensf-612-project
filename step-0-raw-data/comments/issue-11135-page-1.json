[
  {
    "author_association": "COLLABORATOR",
    "body": "Note that this and the other related issues are likely due to exactly how `Out-Default` is utilized by the host.  Whatever `PSHost` is currently in control of the REPL loop typically takes the typed string and creates a merged output `Command` from it.  `Out-Default` is then added to the pipeline.\r\n\r\nHere is more or less how both PowerShellEditorServices and pwsh's `ConsoleHost` handle pipeline creation:\r\n\r\n```powershell\r\nusing namespace System.Management.Automation\r\nusing namespace System.Management.Automation.Runspaces\r\n\r\nfunction Invoke-HostLikePipeline {\r\n    param([string] $InputString)\r\n    end {\r\n        $command = [Command]::new(\r\n            <# command:       #> $InputString,\r\n            <# isScript:      #> $true,\r\n            <# useLocalScope: #> $false)\r\n\r\n        $command.MergeMyResults(\r\n            <# myResult: #> [PipelineResultTypes]::All,\r\n            <# toResult: #> [PipelineResultTypes]::Output)\r\n\r\n        $ps = $null\r\n        try {\r\n            $ps = [powershell]::Create([RunspaceMode]::CurrentRunspace)\r\n            $null = $ps.Commands.\r\n                AddCommand($command).\r\n                AddCommand('Out-Default')\r\n\r\n            $ps.Invoke()\r\n        } finally {\r\n            if ($null -ne $ps) {\r\n                $ps.Dispose()\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI imagine you can also just do a standard redirect, I'm not sure if there would be any behavioral differences:\r\n\r\n```powershell\r\n# \"$null =\" because -Transcript also works similar to PassThru\r\n$null = (Get-Item DoesNotExist) *>&1 | Out-Default -Transcript",
    "created_at": "2019-11-20T18:59:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556249119",
    "id": 556249119,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjI0OTExOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556249119/reactions"
    },
    "updated_at": "2019-11-20T18:59:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556249119",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @SeeminglyScience, that's helpful background information.\r\n\r\nRe:\r\n\r\n```powershell\r\n$null = (Get-Item DoesNotExist) *>&1 | Out-Default -Transcript\r\n```\r\n\r\nUnfortunately, this workaround still doesn't manage to silence the display of _all_ streams, which is the intent here: the error still prints.\r\n\r\nThat `-Transcript` _shouldn't_ pass streams through _to the host_ is the reason for creating this issue.\r\n\r\nIf you _omit_ the `$null = `, `*>&1` then causes all streams other than the success streams to produce _duplicate_ host output.\r\n\r\n```powershell\r\nPS> Write-Verbose -Verbose hi *>&1 | Out-Default -Transcript\r\nVERBOSE: hi\r\nVERBOSE: hi\r\n```\r\n\r\nThe only scenario in which the `*>&1` workaround _is_ effective is for _external programs_ (no `$null = ` needed):\r\n\r\n```powershell\r\nPS> cmd /c 'echo hi & nosuch' *>&1 | Out-Default -Transcript\r\n# No output, as intended (but the output was transcribed)\r\n```\r\n\r\n",
    "created_at": "2019-11-20T19:37:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556294232",
    "id": 556294232,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjI5NDIzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556294232/reactions"
    },
    "updated_at": "2019-11-20T19:38:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556294232",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Tbh I thought that parameter was meant to be used by application hosts, not necessarily for scripts.  Do you know of a place that this use case is documented?\r\n\r\nFWIW: It seems very purposeful that the other streams are not affected:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2c8955eaebfa147e6973e24ef8495afc6d6ef104/src/System.Management.Automation/FormatAndOutput/out-console/ConsoleLineOutput.cs#L310-L338",
    "created_at": "2019-11-20T20:08:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556330131",
    "id": 556330131,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjMzMDEzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556330131/reactions"
    },
    "updated_at": "2019-11-20T20:08:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556330131",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "No, the [`Out-Default` help topic](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/out-default) is woefully terse.\r\n\r\nThanks for the source-code link; yes, it looks like it's intentional, but I think that behavior is problematic:\r\n\r\n* (a) conceptually, for its asymmetry: if _all_ streams are being transcribed, why would you only display-silence _one_ of them?\r\n\r\n* (b) due to the inability to display-silence the other streams even with workarounds.\r\n\r\nDo you know how application hosts use it, and if changing the behavior to display-silence _all_ streams would be more than a hypothetical breaking change?\r\n\r\nOf course, one way to resolve this would be to document the limitation and move on...\r\n\r\n",
    "created_at": "2019-11-20T20:16:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556338389",
    "id": 556338389,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjMzODM4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556338389/reactions"
    },
    "updated_at": "2019-11-20T20:16:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556338389",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S.: It's perfectly possible that `-Transcript` was never designed for the use case I have in mind - again, documentation would help.",
    "created_at": "2019-11-20T20:21:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556344829",
    "id": 556344829,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjM0NDgyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556344829/reactions"
    },
    "updated_at": "2019-11-20T20:21:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556344829",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> No, the [`Out-Default` help topic](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/out-default) is woefully terse.\r\n> \r\n> Thanks for the source-code link; yes, it looks like it's intentional, but I think that behavior is problematic:\r\n> \r\n> * (a) conceptually, for its asymmetry: if _all_ streams are being transcribed, why would you only display-silence _one_ of them?\r\n\r\nI presume it's because they're displaying the output stream in a different way.  Like I said `-Transcript` also works like `-PassThru` does for most cmdlets.\r\n\r\nLets say there is a host application that displays output in a table, sorta like `Out-GridView`.  In order for it to do that it would need the objects returned as they are. Typically, when the host is told to write output lines, it's already been transformed into strings by the format engine.  With this switch, it can write the output to the transcript as if it were a normal console, while still displaying the results how it wants to.\r\n\r\nIn that scenario, the host is very unlikely to actually want a full `ErrorRecord`, it's probably perfectly happy just writing that error message out in a box somewhere in the same format it would be written to the console.\r\n\r\n> * (b) due to the inability to display-silence the other streams even with workarounds.\r\n\r\nWell sorta.  The example I gave would still work if you added `| Where-Object { $_ -isnot [ErrorRecord] }` and etc for the other streams.\r\n \r\n> Do you know how application hosts use it, and if changing the behavior to display-silence _all_ streams would be more than a hypothetical breaking change?\r\n\r\nYeah probably.  I don't think that parameter was meant to be used by anything other than hosts.  In my opinion, it only makes sense for hosts because the intent is that the output is displayed some other way.  A transcript is meant to be a recording of a session, purposefully avoiding that seems counter to the point of it to me.  Are you trying to use transcripts for script logging?\r\n\r\n> Of course, one way to resolve this would be to document the limitation and move on...\r\n\r\nHonestly I'd say throw `DontShowAttribute` on it, assuming that my understanding of it's purpose is correct.  If this parameter doesn't make sense for any consumer other than a host application, maybe it shouldn't show up in tab completion.",
    "created_at": "2019-11-20T22:05:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556461374",
    "id": 556461374,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjQ2MTM3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556461374/reactions"
    },
    "updated_at": "2019-11-20T22:05:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556461374",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, the use case I inferred is definitely unusual, and arguably it's at odds with the idea of a transcript, as you indicate.\r\n\r\n> With this switch, it can write the output to the transcript as if it were a normal console\r\n\r\nNote, however, that _success_ output is _silenced_ - which is what made me infer the silence-all-display-output-and-transcribe-only behavior.\r\n\r\n```powershell\r\nPS> 'hi' | Out-Default -Transcript\r\n# NO output\r\n```\r\n\r\n@SteveL-MSFT, can you or a subject-matter expert shed light on the purpose of `-Transcript`?\r\n\r\nIs excluding it from tab completion and documenting it as not for use by end users the right way to go?\r\n\r\n",
    "created_at": "2019-11-20T23:16:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556536307",
    "id": 556536307,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjUzNjMwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556536307/reactions"
    },
    "updated_at": "2019-11-20T23:16:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556536307",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Yeah, the use case I inferred is definitely unusual, and arguably it's at odds with the idea of a transcript, as you indicate.\r\n> \r\n> > With this switch, it can write the output to the transcript as if it were a normal console\r\n> \r\n> Note, however, that _success_ output is _silenced_ - which is what made me infer the silence-all-display-output-and-transcribe-only behavior.\r\n> \r\n> ```powershell\r\n> PS> 'hi' | Out-Default -Transcript\r\n> # NO output\r\n> ```\r\n> \r\n\r\nYeah because that's the only stream it actually returns:\r\n\r\n```powershell\r\n$a = 'hi' | Out-Default -Transcript\r\n$a\r\n# outputs normally\r\n```\r\n\r\nThat's what makes the example I gave work.  You take responsibility for displaying the output stream, but you still write to the transcript as if it were displayed normally.",
    "created_at": "2019-11-20T23:22:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556542330",
    "id": 556542330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjU0MjMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556542330/reactions"
    },
    "updated_at": "2019-11-20T23:22:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556542330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Just to be *perfectly* clear though, I've never once used it nor have I ever even seen it used.  I'm realizing my wording may have implied differently.  This is all just what I'm inferring based on it's behavior of the switch and the design of transcripts.",
    "created_at": "2019-11-20T23:48:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556553076",
    "id": 556553076,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjU1MzA3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556553076/reactions"
    },
    "updated_at": "2019-11-20T23:48:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556553076",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Some context: when we were designing the console host experience we realized that we had a problem. With split streams, displaying them individually (I.e. separated) meant that you wouldn't get errors in context which was *bad* for a console experience. To solve this we added a feature in the pipeline processor to merge the error output from all of the prior commands into the output stream. Then we created `Out-Default` to take the merged output, demultiplex the records and render them appropriately. This cmdlet was really only intended to be used by the host. I assume (but don't know) since everything went through `Out-Default` this was the natural place to insert  transcription.\r\n\r\n(Note: none of this applied to native commands in the terminal position in a pipeline. In that case, the subprocess received the console host io handles allowing them to write directly to a console. This was necessary so that things like `vim.exe` could work from PowerShell.exe. This also meant that output from native commands in this situation was not captured in the transcript.)",
    "created_at": "2019-11-21T04:22:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-556913754",
    "id": 556913754,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjkxMzc1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556913754/reactions"
    },
    "updated_at": "2019-11-21T04:22:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556913754",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Taking a step back:\r\n\r\n#11134 and this issue are ultimately (also) about asking the following questions:\r\n\r\n* (a) Does it ever make sense to call `Out-Default` directly?\r\n* (b) If so, under what circumstance, with what parameters, specifically?\r\n\r\nAnd to then properly document the findings in the `Out-Default` help topic: see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5131\r\n\r\nIt seems that (b) can be answered for _parameter-less_ use of `Out-Default`: do not use it as an end user - the primary reason it exists as a user-callable cmdlet is so you can _override it_ with a custom implementation.\r\n\r\nAdditionally, we need to establish whether it makes sense for end users to call `Out-Default` with `-Transcript` (its only cmdlet-specific parameter):\r\n\r\n* I had _inferred_  the purpose of `-Transcript` as allowing end users to write to the transcript _only_, without also printing to the host.\r\n   * You _can_ use it that way, but only for the _success_ output stream.\r\n   * Based on my assumption about the purpose, I asked for _all_ streams to be host-silenced, to better embody that purpose.\r\n\r\n* @SeeminglyScience provided an alternative explanation, which sounds more plausible to me: that `-Transcript` is really meant for use by application hosts; to quote him: \"You take responsibility for displaying the output stream, but you still write to the transcript as if it were displayed normally.\"\r\n\r\nTherefore, @SteveL-MSFT  and @BrucePay: Can you confirm that @SeeminglyScience's interpretation is correct or clarify the true purpose of `-Transcript`, so we can guide users properly in the documentation?\r\n\r\nIf we find that direct calls to `Out-Default` _never_ make sense, we can close this issue; unfortunately, #11134 remains an issue either way, because it also affects `Out-Host`, for which there _are_ legitimate uses.\r\n\r\n----\r\n\r\n@BrucePay \r\n\r\n> none of this applied to native commands in the terminal position in a pipeline.\r\n\r\nIt does apply to native commands in the context of _transcribing_, however, as evidenced by stderr output _by default_ properly showing up in transcripts.\r\n\r\nIn other words: while transcribing, the direct-to-host behavior is intentionally _disabled_ so as to be able to capture all output in the transcript.\r\n\r\nAnother way of demonstrating that is to start a transcript and then try to invoke `vim`; what you'll see is the following warning (on macOS), followed by a blank line:\r\n\r\n```none\r\nVim: Warning: Output is not to a terminal\r\n\r\n```\r\n\r\n(Type `:q<Enter>` to exit Vim or buy \r\n![image](https://user-images.githubusercontent.com/588825/69353726-efe48480-0c4c-11ea-9e33-e73d681d3b3c.png)\r\n).\r\n\r\nAs an aside: Note that after exiting Vim in this scenario the PSReadline bindings (arrow keys) don't work until you run `cls`.\r\n\r\n\r\n",
    "created_at": "2019-11-21T15:52:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557146884",
    "id": 557146884,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzE0Njg4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557146884/reactions"
    },
    "updated_at": "2019-11-21T15:52:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557146884",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@mklement0 the PSReadLine issue should be fixed in PSRL 2.0.0-beta6\r\n\r\nFrom the [source code](https://github.com/PowerShell/PowerShell/blob/d58a82ad19fbfad81e85778c8b08cb1b28f58fce/src/System.Management.Automation/FormatAndOutput/out-console/OutConsole.cs#L46-L53):\r\n\r\n```csharp\r\n        /// <summary>\r\n        /// Determines whether objects should be sent to API consumers.\r\n        /// This command is automatically added to the pipeline when PowerShell is transcribing and\r\n        /// invoked via API. This ensures that the objects pass through the formatting and output\r\n        /// system, but can still make it to the API consumer.\r\n        /// </summary>\r\n        [Parameter()]\r\n        public SwitchParameter Transcript { get; set; }\r\n```",
    "created_at": "2019-11-21T21:27:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557279484",
    "id": 557279484,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI3OTQ4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557279484/reactions"
    },
    "updated_at": "2019-11-21T21:27:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557279484",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thank you, @SteveL-MSFT - embarrassingly, it hadn't even occurred to me to look there.\r\n\r\nSo it sounds like @SeeminglyScience was correct.\r\n\r\nRegarding updating the `Out-Default` help topic: Do you agree that we should therefore say:\r\n\r\n* `Out-Default` is used internally and should not be called directly.\r\n\r\n* The only reason it exists as a public cmdlet is so you can override it with a custom implementation.\r\n\r\n",
    "created_at": "2019-11-21T21:37:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557283207",
    "id": 557283207,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI4MzIwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557283207/reactions"
    },
    "updated_at": "2019-11-21T21:37:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557283207",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> * `Out-Default` is used internally and should not be called directly.\r\n\r\nI wouldn't use the term `internally`.  It's intended to be used by host applications. Said host applications do not have to be made internally for it's use to be considered supported.\r\n",
    "created_at": "2019-11-21T21:43:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557285487",
    "id": 557285487,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI4NTQ4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557285487/reactions"
    },
    "updated_at": "2019-11-21T21:43:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557285487",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good point, @SeeminglyScience: How about:\r\n\r\n> `Out-Default` is only meant to be used by applications that implement a PowerShell host, including the hosts that are built into PowerShell itself.\r\n\r\n\r\n",
    "created_at": "2019-11-21T22:08:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557294926",
    "id": 557294926,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzI5NDkyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557294926/reactions"
    },
    "updated_at": "2019-11-21T22:08:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557294926",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah something like that.  Maybe borrow some wording from the remarks section of this:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/8d944fdec28652625d1bb4dadb32d2a581cb8121/src/System.Management.Automation/engine/MshMemberInfo.cs#L1526-L1533",
    "created_at": "2019-11-22T00:00:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557326523",
    "id": 557326523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzMyNjUyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557326523/reactions"
    },
    "updated_at": "2019-11-22T00:00:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557326523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @SeeminglyScience.\r\n\r\nI've updated the suggested wording at https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5131, and I invite y'all to take a look.\r\n\r\nTime to close this issue.",
    "created_at": "2019-11-22T13:19:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11135#issuecomment-557528679",
    "id": 557528679,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11135",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzUyODY3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557528679/reactions"
    },
    "updated_at": "2019-11-22T13:19:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557528679",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
