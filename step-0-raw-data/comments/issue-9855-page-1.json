[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@KirkMunro \r\n\r\nSo you are suggesting that `Import-Module` should catch all exceptions and wrap them in a `PSModuleImportErrorException` ?\r\n\r\nNote: IMHO the module author should be dealing explicitly with errors and providing an appropriate experience for the end user rather than simply relying on the PowerShell runtime to take care of error handling and presentation.\r\n",
    "created_at": "2019-06-10T18:22:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-500531834",
    "id": 500531834,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDUzMTgzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500531834/reactions"
    },
    "updated_at": "2019-06-10T18:22:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500531834",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@bpayette Something like that.\r\n\r\n1. I think module authors should deal with all errors (but they don't necessarily do that because they aren't forced to do so).\r\n1. I think users should not see internals from modules that they likely didn't create if `Import-Module` fails (but they do because of how it handles errors).\r\n1. I think the PowerShell runtime should not silence errors from dynamically loaded modules.\r\n\r\nIn my mind this means two things:\r\n\r\n1. Providing better handling of errors in `Import-Module` so that...\r\n    * ...unexpected errors from module loading clearly identify the source of the error (the loading of the module), allowing end users to decide what action to take (chuck the module because it's crap, contact the author, something else...).\r\n    * ...errors that occur from implicit module loading are made visible to end users.\r\n1. Beyond making the source of errors more visible to end users, get momentum/acceptance and implementation on at least some of [this collection of RFCs that are in a PR right now](https://github.com/PowerShell/PowerShell-RFC/pull/187) -- specifically on the one to do with terminating error handling, so that we can have terminating errors that actually terminate.\r\n\r\nMy goal here isn't to help module authors be lazy. It's to help end users identify where problems actually come from so that they can decide an appropriate course of action if an error occurs during module load.\r\n",
    "created_at": "2019-06-10T18:46:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-500543210",
    "id": 500543210,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDU0MzIxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500543210/reactions"
    },
    "updated_at": "2019-06-11T12:47:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500543210",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Is the issue only for Import-Module, or other module cmdlets too, or module behavior in common?",
    "created_at": "2019-06-11T10:43:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-500787671",
    "id": 500787671,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDc4NzY3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500787671/reactions"
    },
    "updated_at": "2019-06-11T10:43:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500787671",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I haven't stepped through the code while reproducing the error, but as far as I know this is only in `Import-Module`. The errors I have issue with occur while processing a psm1 file, which I don't believe is done anywhere outside of that cmdlet.",
    "created_at": "2019-06-11T12:55:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-500828176",
    "id": 500828176,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDgyODE3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500828176/reactions"
    },
    "updated_at": "2019-06-11T12:55:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500828176",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm agree. A little enhancement around module's error is a good thing !",
    "created_at": "2019-06-11T13:58:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-500853824",
    "id": 500853824,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDg1MzgyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500853824/reactions"
    },
    "updated_at": "2019-06-11T13:58:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/500853824",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Hey @KirkMunro \r\n\r\nFirst - kudos for trying to take on this problem. It's bugged me for years.\r\n\r\n> I think users should not see internals from modules that they likely didn't create if Import-Module fails (but they do because of how it handles errors).\r\n\r\nHmm ... in your \"expected output\" example, you're still showing the line/line number in the module where the error occurred. I assume you intend that it should show the line where `Import-Module` was called (or `using module` or `#requires` for that matter)?\r\n\r\nWRT terminating errors, you can mostly get the behaviour you want simply by putting `trap { break }` at the top level of your module but what you can't do is create a `RuntimeException` and then set the `InvocationInfo` property so it points to where you want. If you trap/catch and then throw a new error it will report the `throw` line, not the original line. Having a way to \"point\" an error message to the appropriate location would make it possible for the script/module author to provide a much better error experience.\r\n\r\nAlso note that overarching problem doesn't just apply to modules. Scripts and functions have exactly the same problem. A user calling a script shouldn't be exposed to the internals of the script (at least not by default)\r\n\r\n> My goal here isn't to help module authors be lazy. \r\n\r\nI totally get that. A big part of the problem is that script/function/module authors _can_ be \"lazy\" about error handling and get an end-user error experience. Not ideal certainly but \"free\". For compiled-cmdlet authors, error handling isn't free so they need to put some thought into it.\r\n ",
    "created_at": "2019-06-12T00:16:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-501071352",
    "id": 501071352,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTA3MTM1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501071352/reactions"
    },
    "updated_at": "2019-06-12T00:16:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501071352",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I assume you intend that it should show the line where Import-Module was called (or using module or #requires for that matter)?\r\n\r\nCorrect. I created that output via a quick copy-paste-modify. It should show the line where the error occurred from the eyes of the end user (explicit import via `Import-Module`, `using module`, or `#requires`, or implicit import via invocation of a command that is in a module that has not been imported yet). I'll update the expected output in my post accordingly.\r\n\r\nInteresting point on how `RuntimeException` instances could be configured with a specific `InvocationInfo`. I'm stepping through some of the code related to this to see how it works, and will keep this idea in mind.\r\n\r\n> Scripts and functions have exactly the same problem. A user calling a script shouldn't be exposed to the internals of the script (at least not by default)\r\n\r\n@bpayette: You mean scripts and functions that have the `CmdletBinding` attribute, not all scripts and functions, right? If so, I agree. :wink:\r\n\r\nMy line in the sand on this is `CmdletBinding`. If a script or function uses `CmdletBinding`, then the intent of that script or function is to be treated like a command, which is different than simple scripts or basic functions that are more often consumed by the author or a team, maybe shared as example code to be modified, but not shared as a finished product for end users to use as a black box. In scripts or functions that use `CmdletBinding`, I believe they should behave as much like a cmdlet as possible, not showing internals to people who invoke them.",
    "created_at": "2019-06-12T14:53:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-501310221",
    "id": 501310221,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTMxMDIyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501310221/reactions"
    },
    "updated_at": "2019-06-12T15:10:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/501310221",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": "If your example module dot sources an external script that otherwise fails to be dot sourced then you will see no error.\r\n\r\n`Import-Module` won't report an error in this case, but if you manually dot source said script the error is shown.\r\n\r\nThat's pretty much **unexpected behavior** which I encountered today so upvoting this.",
    "created_at": "2020-12-13T23:33:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9855#issuecomment-744088194",
    "id": 744088194,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9855",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDA4ODE5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744088194/reactions"
    },
    "updated_at": "2020-12-13T23:33:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/744088194",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/44481081?v=4",
      "events_url": "https://api.github.com/users/metablaster/events{/privacy}",
      "followers_url": "https://api.github.com/users/metablaster/followers",
      "following_url": "https://api.github.com/users/metablaster/following{/other_user}",
      "gists_url": "https://api.github.com/users/metablaster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/metablaster",
      "id": 44481081,
      "login": "metablaster",
      "node_id": "MDQ6VXNlcjQ0NDgxMDgx",
      "organizations_url": "https://api.github.com/users/metablaster/orgs",
      "received_events_url": "https://api.github.com/users/metablaster/received_events",
      "repos_url": "https://api.github.com/users/metablaster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/metablaster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/metablaster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/metablaster"
    }
  }
]
