[
  {
    "author_association": "COLLABORATOR",
    "body": "Oh, it is not user friendly. I guess the API behavior is \"by-design\" (/cc @TravisEz13 ) but perhaps we could write a error message (terminating?) if current account is MSA or gMSA.",
    "created_at": "2019-11-30T13:55:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-559970763",
    "id": 559970763,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk3MDc2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559970763/reactions"
    },
    "updated_at": "2019-11-30T13:56:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559970763",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks iSazonov. Where can I find any documentation as to the reasoning behind why it is designed like this? Just for my curiosity.",
    "created_at": "2019-11-30T15:36:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-559984259",
    "id": 559984259,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk4NDI1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559984259/reactions"
    },
    "updated_at": "2019-11-30T15:36:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/559984259",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21229423?v=4",
      "events_url": "https://api.github.com/users/mazhar10/events{/privacy}",
      "followers_url": "https://api.github.com/users/mazhar10/followers",
      "following_url": "https://api.github.com/users/mazhar10/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazhar10/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mazhar10",
      "id": 21229423,
      "login": "mazhar10",
      "node_id": "MDQ6VXNlcjIxMjI5NDIz",
      "organizations_url": "https://api.github.com/users/mazhar10/orgs",
      "received_events_url": "https://api.github.com/users/mazhar10/received_events",
      "repos_url": "https://api.github.com/users/mazhar10/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mazhar10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazhar10/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mazhar10"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I hope @TravisEz13 or @PaulHigin add more info what the fix could be.",
    "created_at": "2019-12-02T04:35:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-560225507",
    "id": 560225507,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MDIyNTUwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/560225507/reactions"
    },
    "updated_at": "2019-12-02T04:35:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/560225507",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Security Working Group:\r\nThis is by design.  `ConvertTo-SecureString` uses Windows DP API, which does not work with GMSA accounts.  ",
    "created_at": "2021-03-15T21:08:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-799753307",
    "id": 799753307,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTc1MzMwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/799753307/reactions"
    },
    "updated_at": "2021-03-15T21:08:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/799753307",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PaulHigin Can (make sense?) we write an non-terminating error if the account is gMSA/MSA and being more user friendly?",
    "created_at": "2021-03-16T03:26:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-799914885",
    "id": 799914885,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5OTkxNDg4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/799914885/reactions"
    },
    "updated_at": "2021-03-16T03:26:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/799914885",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Does this parameter set work?\r\n```\r\nConvertTo-SecureString\r\n              [-String] <String>\r\n              [[-SecureKey] <SecureString>]\r\n```\r\n\r\n> Can (make sense?) we write an non-terminating error if the account is gMSA/MSA and being more user friendly?\r\n\r\nMaking a failure cause an error makes sense to me.",
    "created_at": "2021-03-16T19:52:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-800558394",
    "id": 800558394,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDU1ODM5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/800558394/reactions"
    },
    "updated_at": "2021-03-16T19:52:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/800558394",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We could use `NetQueryServiceAccount` API. Examples:\r\nhttps://github.com/JamesTryand/pash-1/blob/70225c2e542036819f3f87585ea5e358d798f411/Modules/ActiveDirectory/Microsoft.ActiveDirectory.Management/Microsoft.ActiveDirectory/Management/Commands/TestADServiceAccount.cs#L27-L42\r\nhttps://github.com/beatcracker/Powershell-Misc/blob/d0704cea3d1eb948f9720dc8826a630e86150c08/Use-ServiceAccount.ps1#L293-L294\r\n\r\nPossible place for the fix https://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Security/security/SecureStringCommands.cs#L302\n\n<blockquote><img src=\"https://avatars.githubusercontent.com/u/201054?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/JamesTryand/pash-1\">JamesTryand/pash-1</a></strong></div><div>Mono Version of PowerShell 3.0. Contribute to JamesTryand/pash-1 development by creating an account on GitHub.</div></blockquote>\n<blockquote><img src=\"https://avatars.githubusercontent.com/u/7583050?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/beatcracker/Powershell-Misc\">beatcracker/Powershell-Misc</a></strong></div><div>Miscellaneous PowerShell goodies. Contribute to beatcracker/Powershell-Misc development by creating an account on GitHub.</div></blockquote>\n<blockquote><img src=\"https://repository-images.githubusercontent.com/49609581/aad0ad80-cdec-11ea-8248-a37bc0571bfd\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/PowerShell\">PowerShell/PowerShell</a></strong></div><div>PowerShell for every system! Contribute to PowerShell/PowerShell development by creating an account on GitHub.</div></blockquote>",
    "created_at": "2021-03-17T04:04:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-800777175",
    "id": 800777175,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMDc3NzE3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/800777175/reactions"
    },
    "updated_at": "2021-03-17T04:04:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/800777175",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "For my automation at my work I exclusively use gMSAs to run all my Powershell tasks. Every now and then though you do need the script to call an actual account (for example connecting to VMWare), so in these situations I've always made the gMSA use ConvertTo-SecureString and ConvertFrom-SecureString to then saved the encrypted value in a location like an Azure Key Vault. Works fine and the result hash can only be decrypted by the gMSA that ran it on the server that ran it which leads me to think that's using DPAPI. Quick example of how I make my various gMSAs encrypt and save the password for later use since you can't directly run Powershell using them without a task.\r\n\r\n```\r\n$Command = @'\r\n    $User = $(([Security.Principal.WindowsIdentity]::GetCurrent()).Name.Replace(\"$ENV:USERDOMAIN\\\",'') -replace '\\$')\r\n    #Connect to AZ to add password to Key Vault    \r\n    Connect-AzAccount -Identity\r\n\r\n    $Password = 'PasswordGoesHere'\r\n    #Convert to secure string for ConvertFrom-SecureString to take advantage of DPAPI\r\n    $SecurePassword = ConvertTo-SecureString -String $Password -AsPlainText -Force\r\n    #Conversion\r\n    $EncryptedPassword = ConvertFrom-SecureString -SecureString $SecurePassword\r\n    #Convert hash back to a secure string because Set-AzKeyVaultSecret won't take a regular string\r\n    $EncryptedSecurePassword = ConvertTo-SecureString -String $EncryptedPassword -AsPlainText -Force\r\n    #Add to vault\r\n    Set-AzKeyVaultSecret -VaultName 'Automation' -Name \"Admin-$User\" -SecretValue $EncryptedSecurePassword\r\n'@\r\n\r\n#Make a PS1 with the above script\r\n$Command | Out-File -FilePath C:\\Update.ps1\r\n\r\n#Generate new task action\r\n$Action = New-ScheduledTaskAction -Execute 'Pwsh.exe' -Argument '-File C:\\Update.ps1'\r\n\r\n$GMSAArray = 'PKIGMSA$',     \r\n'WebGMSA$',     \r\n'ADGMSA$',      \r\n'StreemGMSA$',    \r\n'O365GMSA$',    \r\n'ExchangeGMSA$',\r\n'MiscGMSA$',    \r\n'AzureGMSA$',     \r\n'CitrixGMSA$'  \r\n\r\n#For all my gMSAs create the task and run it\r\nGet-ADObject -ldapfilter '(&(name=*GMSA*))' -SearchBase 'OU=OURGMSA,OU=GMSA,DC=contoso,DC=com' -Properties SamAccountName | ForEach-Object -Process {\r\n    If ($_.SamAccountName -in $GMSAArray) {\r\n        $Principal = New-ScheduledTaskPrincipal -UserID Contoso\\$($_.SamAccountName) -LogonType Password\r\n\r\n        $null = Register-ScheduledTask -TaskName 'Update GMSA' -Action $Action -Principal $Principal\r\n        $null = Start-ScheduledTask -TaskName 'Update GMSA' \r\n        While ((Get-ScheduledTask -TaskName 'Update GMSA').State -ne 'Ready') { Start-Sleep -Seconds 1 }\r\n        Unregister-ScheduledTask -TaskName 'Update GMSA' -Confirm:$False\r\n  \r\n        \"Updating $($_.SamAccountName)\"\r\n    }\r\n}\r\n\r\nRemove-Item -Path C:\\Update.ps1 -Force\r\n```\r\n\r\nBeen working fine for me in both Powershell 5.1 and Pwsh 7.1. Does DPAPI work fine with a gMSA but not a MSA?",
    "created_at": "2021-03-17T13:11:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801068873",
    "id": 801068873,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTA2ODg3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801068873/reactions"
    },
    "updated_at": "2021-03-17T17:13:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801068873",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29665481?v=4",
      "events_url": "https://api.github.com/users/JAK1047/events{/privacy}",
      "followers_url": "https://api.github.com/users/JAK1047/followers",
      "following_url": "https://api.github.com/users/JAK1047/following{/other_user}",
      "gists_url": "https://api.github.com/users/JAK1047/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JAK1047",
      "id": 29665481,
      "login": "JAK1047",
      "node_id": "MDQ6VXNlcjI5NjY1NDgx",
      "organizations_url": "https://api.github.com/users/JAK1047/orgs",
      "received_events_url": "https://api.github.com/users/JAK1047/received_events",
      "repos_url": "https://api.github.com/users/JAK1047/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JAK1047/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JAK1047/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JAK1047"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> save the password for later use\r\n\r\nI wonder why do you want to save a password of MSA account.\r\nYou can create a scheduled PowerShell task and run it in scheduler with a gMSA account and you do not need to explicitly assign a password, since the system will do everything for you.",
    "created_at": "2021-03-17T14:44:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801142713",
    "id": 801142713,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTE0MjcxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801142713/reactions"
    },
    "updated_at": "2021-03-18T04:52:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801142713",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "The password is not of the gMSA there's no way to retrieve a gMSA password. The passwords are for the various times I need other accounts where integrated authentication cannot be used such as with VMWare. In this case I encrypt the password for that other account in the manner above unique to the gMSA running the scheduled task then in whatever script itself when I need the password for the VMware account I can retrieve it.\r\n\r\nI digress though the point is with PowerShell running under the context of a gMSA I'm fully able to use ConvertTo-SecureString and ConvertFrom-SecureString. It sounds like though it shouldn't be able to work with DPAPI?",
    "created_at": "2021-03-17T15:27:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801176411",
    "id": 801176411,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTE3NjQxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801176411/reactions"
    },
    "updated_at": "2021-03-17T15:28:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801176411",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29665481?v=4",
      "events_url": "https://api.github.com/users/JAK1047/events{/privacy}",
      "followers_url": "https://api.github.com/users/JAK1047/followers",
      "following_url": "https://api.github.com/users/JAK1047/following{/other_user}",
      "gists_url": "https://api.github.com/users/JAK1047/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JAK1047",
      "id": 29665481,
      "login": "JAK1047",
      "node_id": "MDQ6VXNlcjI5NjY1NDgx",
      "organizations_url": "https://api.github.com/users/JAK1047/orgs",
      "received_events_url": "https://api.github.com/users/JAK1047/received_events",
      "repos_url": "https://api.github.com/users/JAK1047/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JAK1047/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JAK1047/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JAK1047"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "MSA is local only and I guess it has no password at all.\r\nMSA is local only and it makes no sense to store a secret for them in Cloud (you can not use it on another system) - you can use local vault in your scenario. Perhaps you could benefit from https://github.com/PowerShell/SecretManagement for both local and Cloud scenarios.\n\n<blockquote><img src=\"https://avatars.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/SecretManagement\">PowerShell/SecretManagement</a></strong></div><div>PowerShell module to consistent usage of secrets through different extension vaults - PowerShell/SecretManagement</div></blockquote>",
    "created_at": "2021-03-17T16:12:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801213599",
    "id": 801213599,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTIxMzU5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801213599/reactions"
    },
    "updated_at": "2021-03-18T04:53:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801213599",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Whether I store the passwords in a Key Vault, Registry, CyberArk, or even a text file doesn't matter we have no issues with our setup. I was just making a point to the focus of this issue that ConvertTo-SecureString was not working when run under the context of a gMSA, but I have several examples where it runs without any issue. If DPAPI really does not work when run under a gMSA I should be getting an empty string the same as mazhar10, but I cannot recreate that.\r\n\r\nMy goal was to say generating an error when ConvertTo-SecureString is run under a gMSA would be a breaking change for my company at least because it works as intended at the moment.",
    "created_at": "2021-03-17T16:20:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801220410",
    "id": 801220410,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTIyMDQxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801220410/reactions"
    },
    "updated_at": "2021-03-17T16:20:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801220410",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29665481?v=4",
      "events_url": "https://api.github.com/users/JAK1047/events{/privacy}",
      "followers_url": "https://api.github.com/users/JAK1047/followers",
      "following_url": "https://api.github.com/users/JAK1047/following{/other_user}",
      "gists_url": "https://api.github.com/users/JAK1047/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JAK1047",
      "id": 29665481,
      "login": "JAK1047",
      "node_id": "MDQ6VXNlcjI5NjY1NDgx",
      "organizations_url": "https://api.github.com/users/JAK1047/orgs",
      "received_events_url": "https://api.github.com/users/JAK1047/received_events",
      "repos_url": "https://api.github.com/users/JAK1047/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JAK1047/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JAK1047/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JAK1047"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'll repeat the same thing, is there a difference between the functionality when it's an MSA vs GMSA?  I use it regularly with GMSA's also.\r\n\r\nHas anyone tested to verify it doesn't work with an MSA?",
    "created_at": "2021-03-17T17:21:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801265395",
    "id": 801265395,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTI2NTM5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801265395/reactions"
    },
    "updated_at": "2021-03-17T17:21:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801265395",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/73717607?v=4",
      "events_url": "https://api.github.com/users/jaoenrong/events{/privacy}",
      "followers_url": "https://api.github.com/users/jaoenrong/followers",
      "following_url": "https://api.github.com/users/jaoenrong/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaoenrong/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jaoenrong",
      "id": 73717607,
      "login": "jaoenrong",
      "node_id": "MDQ6VXNlcjczNzE3NjA3",
      "organizations_url": "https://api.github.com/users/jaoenrong/orgs",
      "received_events_url": "https://api.github.com/users/jaoenrong/received_events",
      "repos_url": "https://api.github.com/users/jaoenrong/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jaoenrong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaoenrong/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jaoenrong"
    }
  },
  {
    "author_association": "NONE",
    "body": "My testing was all under MSA, and not gMSA.\r\nFrom what I understand, ConvertTo-SecureString uses DPAPI. Here is what I think PS should do:\r\n1) if DPAPI is available, then invoke, return back whatever DPAPI returns, be it success or error etc.\r\n2) if DPAPI is not available, then return back an error message.\r\nThis will take care of JAK's and my use cases, The issue I see if that (by design or not), PS is returning a success with an empty string when DPAPI is NOT available - this, to me, is wrong, as the invoker would not know what happened.",
    "created_at": "2021-03-17T17:38:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801277026",
    "id": 801277026,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTI3NzAyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801277026/reactions"
    },
    "updated_at": "2021-03-17T17:38:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801277026",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/21229423?v=4",
      "events_url": "https://api.github.com/users/mazhar10/events{/privacy}",
      "followers_url": "https://api.github.com/users/mazhar10/followers",
      "following_url": "https://api.github.com/users/mazhar10/following{/other_user}",
      "gists_url": "https://api.github.com/users/mazhar10/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mazhar10",
      "id": 21229423,
      "login": "mazhar10",
      "node_id": "MDQ6VXNlcjIxMjI5NDIz",
      "organizations_url": "https://api.github.com/users/mazhar10/orgs",
      "received_events_url": "https://api.github.com/users/mazhar10/received_events",
      "repos_url": "https://api.github.com/users/mazhar10/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mazhar10/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mazhar10/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mazhar10"
    }
  },
  {
    "author_association": "NONE",
    "body": "Makes sense to me. I'd like to try and get an affirmative if possible on whether DPAPI works for gMSA like we're seeing and fails to work on a MSA like mazhar saw just to rule out any outside factors, but seems the most likely case. I've done some searching and found other references particularly to using DPAPI that were are all for gMSAs.\r\n\r\nSo long as an error isn't forced in a situation where the cmd may work as intended that's all I want to avoid.",
    "created_at": "2021-03-17T21:06:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801442824",
    "id": 801442824,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTQ0MjgyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801442824/reactions"
    },
    "updated_at": "2021-03-17T21:06:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801442824",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29665481?v=4",
      "events_url": "https://api.github.com/users/JAK1047/events{/privacy}",
      "followers_url": "https://api.github.com/users/JAK1047/followers",
      "following_url": "https://api.github.com/users/JAK1047/following{/other_user}",
      "gists_url": "https://api.github.com/users/JAK1047/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JAK1047",
      "id": 29665481,
      "login": "JAK1047",
      "node_id": "MDQ6VXNlcjI5NjY1NDgx",
      "organizations_url": "https://api.github.com/users/JAK1047/orgs",
      "received_events_url": "https://api.github.com/users/JAK1047/received_events",
      "repos_url": "https://api.github.com/users/JAK1047/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JAK1047/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JAK1047/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JAK1047"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I found that DPAPI needs the user profile loaded to work but Task scheduler has a limitation and load user profile only partially. Perhaps the [workaround ](https://docs.microsoft.com/en-us/troubleshoot/windows-server/system-management-components/scheduled-tasks-reference-incorrect-user-profile) helps.\r\n\r\nAlso perhaps the scenario (I see it is very popular) with impersonating to sMSA/gMSA to protect a password could be addressed in https://github.com/PowerShell/SecretManagement\n\n<blockquote><img src=\"https://avatars.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/SecretManagement\">PowerShell/SecretManagement</a></strong></div><div>PowerShell module to consistent usage of secrets through different extension vaults - PowerShell/SecretManagement</div></blockquote>",
    "created_at": "2021-03-18T05:28:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801638607",
    "id": 801638607,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTYzODYwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801638607/reactions"
    },
    "updated_at": "2021-03-18T05:28:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801638607",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "If there's an issue with it working with the task scheduler we haven't seen it because it's exclusively how we use the gMSA to run the scripts and DPAPI works fine. But in my case at least everything works exactly as intended I just didn't want breaking changes added that will force an error returned in working scenarios with gMSAs so you can ignore my setup outside an example of DPAPI working successfully under a gMSA. In Mazhar's case where it didn't work they were using it in an IIS app pool with a MSA instead of a gMSA, so most likely scenario is still a gMSA vs MSA difference or possibly an app pool vs task scheduler difference.\r\n\r\nThe new SecretManagement is a really useful module and might help mazhar as I can't speak for them, but it only assists in the storage of secrets which doesn't seem to be a concern for anyway on this thread as far as I can see at least. The conversion of plain text to a secure encrypted format was the issue so even if they used the SecretManagement module they'd still want to convert it to a SecureString which will still spit out an empty string for them. In my opinion mazhar's last post summarizes things fairly well.",
    "created_at": "2021-03-18T12:19:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801881172",
    "id": 801881172,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTg4MTE3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801881172/reactions"
    },
    "updated_at": "2021-03-18T12:26:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801881172",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29665481?v=4",
      "events_url": "https://api.github.com/users/JAK1047/events{/privacy}",
      "followers_url": "https://api.github.com/users/JAK1047/followers",
      "following_url": "https://api.github.com/users/JAK1047/following{/other_user}",
      "gists_url": "https://api.github.com/users/JAK1047/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JAK1047",
      "id": 29665481,
      "login": "JAK1047",
      "node_id": "MDQ6VXNlcjI5NjY1NDgx",
      "organizations_url": "https://api.github.com/users/JAK1047/orgs",
      "received_events_url": "https://api.github.com/users/JAK1047/received_events",
      "repos_url": "https://api.github.com/users/JAK1047/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JAK1047/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JAK1047/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JAK1047"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@JustinGrote could comment about possible implementation in https://github.com/PowerShell/SecretManagement too.\n\n<blockquote><img src=\"https://avatars.githubusercontent.com/u/11524380?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/PowerShell/SecretManagement\">PowerShell/SecretManagement</a></strong></div><div>PowerShell module to consistent usage of secrets through different extension vaults - PowerShell/SecretManagement</div></blockquote>",
    "created_at": "2021-03-18T14:47:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801989056",
    "id": 801989056,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTk4OTA1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801989056/reactions"
    },
    "updated_at": "2021-03-18T14:47:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801989056",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Haven't seen anything specific to MSA or gMSA, but the issue as described here is ConvertTo-SecureString returning a null ('silently failing') rather than the expected \"encrypted\" string. Nothing about this is secretmanagement specific unless I\"m missing something.\r\n\r\nIn a secretmanagement extension vault you occasionally convert plaintext from the \"vault\" to a securestring, so checks can be added there and throw errors, that will be extension vault specific however, because it's perfectly valid to return a null secret in some circumstances.\r\n\r\n@iSazonov I don't think it's unreasonable to add a check to ConvertTo-SecureString if DPAPI is available, or if content *was* provided to convertto-securestring but it returned a null result for whatever reason, to emit a non-terminating error (or even warning). This might be considered a breaking change however because of implementations that may be \"working\" due to this silently failing that would now \"break\" even though they probably should have broken to begin with.\r\n\r\nThat said, it's also equally reasonable to add the check in your own code @mazhar10 if it's affecting you.\r\n```powershell\r\n$mysecret = 'mytest' | ConvertTo-SecureString -asplaintext -force\r\n\r\nif ($null -eq $mysecret) {throw 'Unable to convert to SecureString. DPAPI may not be available on this platform or under this specific account'}\r\n```",
    "created_at": "2021-03-18T14:56:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-801996059",
    "id": 801996059,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTk5NjA1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801996059/reactions"
    },
    "updated_at": "2021-03-18T14:59:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801996059",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15258962?v=4",
      "events_url": "https://api.github.com/users/JustinGrote/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustinGrote/followers",
      "following_url": "https://api.github.com/users/JustinGrote/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinGrote/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustinGrote",
      "id": 15258962,
      "login": "JustinGrote",
      "node_id": "MDQ6VXNlcjE1MjU4OTYy",
      "organizations_url": "https://api.github.com/users/JustinGrote/orgs",
      "received_events_url": "https://api.github.com/users/JustinGrote/received_events",
      "repos_url": "https://api.github.com/users/JustinGrote/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustinGrote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinGrote/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustinGrote"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@JustinGrote My question is not about the cmdlets and DPAPI limitations. It is about implementation the scenario in SecretManagement module. (1) The scenario is used many users, (2) the users have to use a complex workaround with a script, task scheduler and impersonation to an MSA account. All this could be implemented in an SecretManagement cmdlet. What do you thing?",
    "created_at": "2021-03-18T16:33:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-802088397",
    "id": 802088397,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjA4ODM5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802088397/reactions"
    },
    "updated_at": "2021-03-18T16:33:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802088397",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov I mean within secretmanagement's core there could theoretically be a Set-Secret -AsUser option that would impersonate to the user/gmsa/msa context, but honestly you could just psexec a powershell session and then run set-secret to do the same thing (this is what I typically do when configuring secretmanagement for service accounts)\r\n\r\nSecretmanagement uses a registry manifest in the user profile directly to direct to registered vaults, so if the user/service account doesn't have a profile, secretmanagement won't work.\r\n\r\nI'd defer to @PaulHigin whether it's something he may want to put on the secretmanagement 2.0 roadmap. Agreed it's a very common scenario to want to configure a secret management vault for a service account or other noninteractive \"runas\" account so that it can retrieve required secrets, and currently the process is somewhat arduous at best and impossible at worst.",
    "created_at": "2021-03-18T17:26:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-802145201",
    "id": 802145201,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjE0NTIwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802145201/reactions"
    },
    "updated_at": "2021-03-18T17:27:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802145201",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15258962?v=4",
      "events_url": "https://api.github.com/users/JustinGrote/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustinGrote/followers",
      "following_url": "https://api.github.com/users/JustinGrote/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinGrote/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustinGrote",
      "id": 15258962,
      "login": "JustinGrote",
      "node_id": "MDQ6VXNlcjE1MjU4OTYy",
      "organizations_url": "https://api.github.com/users/JustinGrote/orgs",
      "received_events_url": "https://api.github.com/users/JustinGrote/received_events",
      "repos_url": "https://api.github.com/users/JustinGrote/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustinGrote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinGrote/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustinGrote"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It's also something that could exist as a wrapper to secretmanagement as a separate module if there was a way to virtually specify the manifest, or otherwise supply it to secretmanagement via a specific path, in the scenario of an account without a profile. With a profile it would mostly just be a matter of registering the vault within the context of the user which could be done simply by deploying the manifest file into the users profile without needing to run \"as\" the user.\r\n\r\nAs long as the service account can also authenticate and \"unlock\" the vault in the script using whatever means the vault extension requires. I've typically used Credential Manager to store this unlock credential if it isn't implicit to the login context (either managed service identity in azure, or the domain account credential context)",
    "created_at": "2021-03-18T17:31:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-802148340",
    "id": 802148340,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjE0ODM0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802148340/reactions"
    },
    "updated_at": "2021-03-18T17:31:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802148340",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15258962?v=4",
      "events_url": "https://api.github.com/users/JustinGrote/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustinGrote/followers",
      "following_url": "https://api.github.com/users/JustinGrote/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinGrote/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustinGrote",
      "id": 15258962,
      "login": "JustinGrote",
      "node_id": "MDQ6VXNlcjE1MjU4OTYy",
      "organizations_url": "https://api.github.com/users/JustinGrote/orgs",
      "received_events_url": "https://api.github.com/users/JustinGrote/received_events",
      "repos_url": "https://api.github.com/users/JustinGrote/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustinGrote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinGrote/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustinGrote"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If @PaulHigin agrees then we could close the issue and continue in https://github.com/PowerShell/SecretManagement/issues/118",
    "created_at": "2021-03-18T17:46:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-802158593",
    "id": 802158593,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjE1ODU5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802158593/reactions"
    },
    "updated_at": "2021-03-18T17:46:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802158593",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Main reason does not directly use  SecureString https://github.com/dotnet/designs/pull/147 - .Net team plans to obsolete the API and replace it with new modern API.\r\n\r\nThis absolutely convinces that the solution must be in PowerShell/SecretManagement#118",
    "created_at": "2021-03-19T14:25:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11218#issuecomment-802871686",
    "id": 802871686,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11218",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMjg3MTY4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802871686/reactions"
    },
    "updated_at": "2021-03-19T14:25:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/802871686",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
