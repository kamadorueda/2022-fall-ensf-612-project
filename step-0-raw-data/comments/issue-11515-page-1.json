[
  {
    "author_association": "COLLABORATOR",
    "body": "/cc @alx9r @lzybkr @mklement0 @bergmeister @SteveL-MSFT @daxian-dbw ",
    "created_at": "2020-01-07T18:43:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571717482",
    "id": 571717482,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTcxNzQ4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571717482/reactions"
    },
    "updated_at": "2020-01-07T18:43:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571717482",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This is why PowerShell has `[NullString]::Value`. It should be used if you want to pass `null` to a string type parameter of a method. I admit it's not intuitive, but not sure what it would break to change it.\r\n\r\n",
    "created_at": "2020-01-07T19:14:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571729341",
    "id": 571729341,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTcyOTM0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571729341/reactions"
    },
    "updated_at": "2020-01-07T19:14:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571729341",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> but not sure what it would break to change it.\r\n\r\nYeah, I've definitely run into methods that throw `ArgumentNullException` on `null` but accept empty strings (even a few PowerShell API's iirc).\r\n\r\nFor as long as this has been a thing in PowerShell, it comes up *very* rarely.  Also I can only think of one or two occasions where I've actually had to use `NullString` tbh.",
    "created_at": "2020-01-07T19:23:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571732849",
    "id": 571732849,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTczMjg0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571732849/reactions"
    },
    "updated_at": "2020-01-07T19:23:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571732849",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I very wonder that (@bergmeister's comment from #4616)\r\n> If you simply remove the [string] type then it will work as expected:\r\n we have a workaround for scripts and not for C# methods.\r\n\r\nCould we enhance the Core adapter to pass null-s as-is?\r\n",
    "created_at": "2020-01-07T19:44:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571741355",
    "id": 571741355,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTc0MTM1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571741355/reactions"
    },
    "updated_at": "2020-01-07T19:44:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571741355",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I very wonder that (@bergmeister's comment from #4616)\r\n> \r\n> > If you simply remove the [string] type then it will work as expected:\r\n> > we have a workaround for scripts and not for C# methods.\r\n\r\nRemoving `[string]` just types it as `[object]`, which works only because it's no longer trying to convert to `[string]`.\r\n\r\n> Could we enhance the Core adapter to pass null-s as-is?\r\n\r\nIt's not a bug or limitation though, it's by design (sorry if you already understand that, double checking because of the word choice \"enhance\").\r\n\r\nNot sure if it was the right choice or not, but at this point it'd be a very dangerous change.  Here's an example of the pattern I mentioned in PowerShell itself:\r\n\r\n```powershell\r\n$ExecutionContext.SessionState.Path.CurrentProviderPath($null)\r\n# Path\r\n# ----\r\n# C:\\\r\n\r\n$ExecutionContext.SessionState.Path.CurrentProviderPath([NullString]::Value)\r\n# MethodInvocationException: Exception calling \"CurrentProviderLocation\" with \"1\" argument(s): \"Cannot process argument because the value of argument \"namespaceID\" is null. Change the value of argument \"namespaceID\" to a non-null value.\"\r\n```\r\n\r\nPowerShell users would have no idea that these methods didn't accept `$null` until they start throwing after an upgrade.",
    "created_at": "2020-01-07T20:11:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571751482",
    "id": 571751482,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTc1MTQ4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571751482/reactions"
    },
    "updated_at": "2020-01-07T20:11:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571751482",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience In my previous comment I ask about Core adapter where we bind C# methods.",
    "created_at": "2020-01-07T20:17:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571753393",
    "id": 571753393,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTc1MzM5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571753393/reactions"
    },
    "updated_at": "2020-01-07T20:17:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571753393",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> @SeeminglyScience In my previous comment I ask about Core adapter where we bind C# methods.\r\n\r\nI think we're talking about the same thing.  Did my example show something other than what you're referring to?",
    "created_at": "2020-01-07T20:33:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571759025",
    "id": 571759025,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTc1OTAyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571759025/reactions"
    },
    "updated_at": "2020-01-07T20:33:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571759025",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "> PowerShell users would have no idea that these methods didn't accept `$null` until they start throwing after an upgrade.\r\n\r\nThis is a fair point, but it seems at least as likely that they'll be bitten by silent conversions of null to an empty string at some point.  When that inevitably does happen, it will be much less obvious what is happening or how to avoid it.  Empty string and null are things that virtually everyone knows and hopefully understands.  Reasonably documented libraries typically indicate whether or not null is valid input.  **Very** few people know what NullString is or why they might need to use it.\r\n\r\nPowerShell is pretty rotten with gotchas and POLA violations like this.  In aggregate, they impose a significant mental load on users and make it really hard to write anything robust and reliable.  Given the huge compatibility break with the move to Core anyway, I wish there was a greater appetite for taking breaking changes that made the language behave in a more reasonable way.\r\n\r\nLastly, at least speaking from personal experience, assignment to properties and parameter coercion cause even more NullString problems than method arguments.  Especially properties of objects that are going to be serialized as part of some REST call, where a null would cause the property to be left out completely and an empty string means that the property ends up being explicitly specified as an empty string.\r\n\r\n```\r\nPS C:\\> class foo {[string] $bar}\r\n>> $foo = [foo]::new()\r\n>> $null -eq $foo.bar\r\n>> $foo.bar = $null\r\n>> $null -eq $foo.bar\r\nTrue\r\nFalse\r\nPS C:\\> function foo {param([string]$bar) $null -eq $bar}\r\nPS C:\\> foo $null\r\nFalse\r\n```",
    "created_at": "2020-01-08T05:52:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-571901976",
    "id": 571901976,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MTkwMTk3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571901976/reactions"
    },
    "updated_at": "2020-01-08T05:52:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/571901976",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3004040?v=4",
      "events_url": "https://api.github.com/users/mattpwhite/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattpwhite/followers",
      "following_url": "https://api.github.com/users/mattpwhite/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattpwhite/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattpwhite",
      "id": 3004040,
      "login": "mattpwhite",
      "node_id": "MDQ6VXNlcjMwMDQwNDA=",
      "organizations_url": "https://api.github.com/users/mattpwhite/orgs",
      "received_events_url": "https://api.github.com/users/mattpwhite/received_events",
      "repos_url": "https://api.github.com/users/mattpwhite/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattpwhite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattpwhite/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattpwhite"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> **Very** few people know what NullString is or why they might need to use it.\r\n\r\nMost don't need to really.  Only time I concretely remember running into it personally was a funky p/invoke signature, and the only super impactful scenario I know of is the one you bring up later: serialization edge cases.\r\n\r\nI'm guessing it was initially added to to cut down on the amount of `if ($null -eq $string) { '' } else { $string }` that tends to happen in string-centric code in other languages.  Do I agree with it? **Ehhhh** not really, I wish it wasn't there; but it is and we've all depended on it whether we know it or not.\r\n\r\n> PowerShell is pretty rotten with gotchas and POLA violations like this. In aggregate, they impose a significant mental load on users and make it really hard to write anything robust and reliable.\r\n\r\nNo disagreement there, with an emphasis on robust and reliable.  PowerShell does a *ton* for you that you don't have to think about, and that's great.  With all of those abstractions comes the cost of complexity though.  It's easy to make a thing, but the more sophisticated that thing becomes, and the more resilient it needs to be, the more the difficulty curve starts to tip.  That's why it's fantastic for automation, but kinda funky to try to make a product with.\r\n\r\n> Given the huge compatibility break with the move to Core anyway, I wish there was a greater appetite for taking breaking changes that made the language behave in a more reasonable way.\r\n\r\nEh it wasn't that huge of a break.  I mean initially yeah it was tremendous, but a lot less these days.  That said, if this was changed, fixing the scripts that it breaks would be very difficult.  Especially for those who are completely unaware of this behavior or really any of the automatic conversions.\r\n\r\nSomething as simple as `param([string] $s) $s.Trim()` would now throw if passed `$null`.  Trying to explain to all the folks that this would break: \"yeah you need to check for null now, yes it used to do that for you but sometimes it made serialization inconsistent or was confusing when using certain APIs\" is just not gonna fly.\r\n\r\nThe PS team isn't completely resistant to breaking changes, but this one is a **hard** [Bucket 1](https://github.com/PowerShell/PowerShell/blob/c752694b48f1c5d7bf443eb846143ee4ea7a400c/docs/dev-process/breaking-change-contract.md#bucket-1-public-contract).",
    "created_at": "2020-01-08T13:51:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11515#issuecomment-572064036",
    "id": 572064036,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11515",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MjA2NDAzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 7,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 7,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/572064036/reactions"
    },
    "updated_at": "2020-01-08T18:33:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/572064036",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
