[
  {
    "author_association": "NONE",
    "body": "Another quick follow up, when installing the required modules, you'll notice that I don't specify a version I always just grab the latest. The locally installed version of the required modules does NOT have to match the version specified in the required modules section of the .psd1. \r\n\r\nIf the workflow is going to force you to have the required modules installed locally, it should additionally ensure it's the correct version.",
    "created_at": "2018-09-06T16:42:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-419162193",
    "id": 419162193,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE2MjE5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419162193/reactions"
    },
    "updated_at": "2018-09-06T16:42:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419162193",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14335463?v=4",
      "events_url": "https://api.github.com/users/cholmes1111/events{/privacy}",
      "followers_url": "https://api.github.com/users/cholmes1111/followers",
      "following_url": "https://api.github.com/users/cholmes1111/following{/other_user}",
      "gists_url": "https://api.github.com/users/cholmes1111/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cholmes1111",
      "id": 14335463,
      "login": "cholmes1111",
      "node_id": "MDQ6VXNlcjE0MzM1NDYz",
      "organizations_url": "https://api.github.com/users/cholmes1111/orgs",
      "received_events_url": "https://api.github.com/users/cholmes1111/received_events",
      "repos_url": "https://api.github.com/users/cholmes1111/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cholmes1111/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cholmes1111/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cholmes1111"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@cholmes1111: \r\n\r\nGood point about not enforcing the version; that bug has already been reported: #7495\r\n\r\nThat same report, created by @rjmholt, also suggests the following enhancement, which addresses your main issue:\r\n\r\n> Provide an option to only check the validity of the manifest itself, and not whether it will work in the current session (this last point I think is part of the need to separate \"Module manifests that are not well-formed\" from \"Module manifests that cannot be loaded in the current session\"\r\n\r\nNote that this means that the default behavior would remain as-is (except for the need to fix the version bug), and that performing a test for mere well-formation would be _opt-in_.\r\n\r\n---\r\n\r\nIn the meantime, you can use the stopgap demonstrated in [this SO answer](https://stackoverflow.com/a/52212191/45375).\r\n",
    "created_at": "2018-09-06T21:10:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-419242554",
    "id": 419242554,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI0MjU1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419242554/reactions"
    },
    "updated_at": "2018-09-07T02:45:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419242554",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0 - Thanks for the feedback! I didn't see the previously reported bug [7495](https://github.com/PowerShell/PowerShell/issues/7495) . I agree with @rjmholt on all of his points:\r\n\r\n1. It should constrain on version\r\n2. The error message should be improved\r\n3. Test-ModuleManifest should have an opt-in for checking just the manifest for being well-formed\r\n\r\nIf Test-ModuleManifest is updated to have an opt-in, would Publish-Module be updated to check the manifests with that opt-in? I only encountered this issue when attempting to Publish-Module.\r\n\r\nThanks for the link to the stopgap as well. I'll give it a try and update my process accordingly if I can validate it works.",
    "created_at": "2018-09-06T21:23:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-419245935",
    "id": 419245935,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI0NTkzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419245935/reactions"
    },
    "updated_at": "2018-09-06T21:23:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419245935",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14335463?v=4",
      "events_url": "https://api.github.com/users/cholmes1111/events{/privacy}",
      "followers_url": "https://api.github.com/users/cholmes1111/followers",
      "following_url": "https://api.github.com/users/cholmes1111/following{/other_user}",
      "gists_url": "https://api.github.com/users/cholmes1111/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cholmes1111",
      "id": 14335463,
      "login": "cholmes1111",
      "node_id": "MDQ6VXNlcjE0MzM1NDYz",
      "organizations_url": "https://api.github.com/users/cholmes1111/orgs",
      "received_events_url": "https://api.github.com/users/cholmes1111/received_events",
      "repos_url": "https://api.github.com/users/cholmes1111/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cholmes1111/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cholmes1111/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cholmes1111"
    }
  },
  {
    "author_association": "NONE",
    "body": "If you're like me and you've come across this page while searching for a solution to publishing modules from a container (Bitbucket/Azure DevOps) I have a very simple work around to this issue.  \r\n\r\n# Problem\r\nThe problem is that Publish-Module runs Test-ModuleManifest which expects any requiredModules (which will include Externally Required modules) to be installed on the local file system.  This is especially challenging when your module depends on modules from multiple external repos.\r\n\r\n# Solution\r\nThe thing is that Test-ModuleManifest just looks for the existence of the .psd1 file and doesn't care about the contents.  I was able to work around this by simply identifying the location where modules are installed by default and then creating the module directory and an empty .psd1 file like this:\r\n\r\n```\r\nFunction Build-RequiredModuleFiles {\r\n\r\n  # Get .psd1 data\r\n  $Data = Import-PowerShellDataFile .\\*.psd1\r\n\r\n  # Get the RequiredModules\r\n  [array]$RequiredModules = $data.RequiredModules\r\n\r\n  \r\n  If ($RequiredModules) {\r\n\r\n    Set-Location '/root/.local/share/powershell/Modules'\r\n\r\n    # Create the required module manifests\r\n    ForEach ($module in $requiredModules) {\r\n      $moduleName = $module.ModuleName\r\n      New-Item $moduleName -type Directory\r\n      Write-Output \"Creating empty .psd1 file for module $modulename at $((Get-Location).Path)\\$moduleName\\$moduleName.psd1\"\r\n\r\n      # Create manifest\r\n      New-Item \".\\$moduleName\\$moduleName.psd1\"\r\n    }\r\n  }\r\n}\r\n```",
    "created_at": "2020-02-03T18:01:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-581539728",
    "id": 581539728,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTUzOTcyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581539728/reactions"
    },
    "updated_at": "2020-02-03T18:01:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581539728",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17018403?v=4",
      "events_url": "https://api.github.com/users/ShaunInIdaho/events{/privacy}",
      "followers_url": "https://api.github.com/users/ShaunInIdaho/followers",
      "following_url": "https://api.github.com/users/ShaunInIdaho/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShaunInIdaho/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ShaunInIdaho",
      "id": 17018403,
      "login": "ShaunInIdaho",
      "node_id": "MDQ6VXNlcjE3MDE4NDAz",
      "organizations_url": "https://api.github.com/users/ShaunInIdaho/orgs",
      "received_events_url": "https://api.github.com/users/ShaunInIdaho/received_events",
      "repos_url": "https://api.github.com/users/ShaunInIdaho/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ShaunInIdaho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShaunInIdaho/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ShaunInIdaho"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think it makes no sense to create a module manifest if it can not be used or tested locally. Don't add RequiredModules if you have to ignore it on next step.",
    "created_at": "2020-02-04T03:49:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-581730529",
    "id": 581730529,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTczMDUyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581730529/reactions"
    },
    "updated_at": "2020-02-04T03:50:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/581730529",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov I agree, but unfortunately _some_ hack is necessary due to Microsoft's overly-restrictive coding of `Publish-Module` and the underlying inflexibility of `Test-ModuleManifest`. This is actually a great workaround.",
    "created_at": "2020-12-10T20:01:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-742762997",
    "id": 742762997,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mjc2Mjk5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742762997/reactions"
    },
    "updated_at": "2020-12-10T20:01:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742762997",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/40613229?v=4",
      "events_url": "https://api.github.com/users/nathan-alden-hp/events{/privacy}",
      "followers_url": "https://api.github.com/users/nathan-alden-hp/followers",
      "following_url": "https://api.github.com/users/nathan-alden-hp/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathan-alden-hp/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/nathan-alden-hp",
      "id": 40613229,
      "login": "nathan-alden-hp",
      "node_id": "MDQ6VXNlcjQwNjEzMjI5",
      "organizations_url": "https://api.github.com/users/nathan-alden-hp/orgs",
      "received_events_url": "https://api.github.com/users/nathan-alden-hp/received_events",
      "repos_url": "https://api.github.com/users/nathan-alden-hp/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/nathan-alden-hp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathan-alden-hp/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/nathan-alden-hp"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think it makes no sense to create a module manifest if it can not be used or tested locally. Don't add RequiredModules if you have to ignore it on next step.\r\n\r\nI would actually prefer `Test-ModuleManifest` to allow levels of validation from simple syntax validation, through semantic manifest validation, and up to machine-state validation (like that `RequiredModules` are installed). I think that especially makes sense for development scenarios with staged testing and publication.\r\n\r\nUnfortunately the logic for all of this is currently bound in the largest method in the codebase (the only one that Visual Studio gives a code quality score of 0):\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/a8213b54b3f061e3828b0f32c512814022002b71/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L1461-L3523\r\n\r\nI would like for us to refactor that method to enable a number of scenarios, but the module code is sensitive and services a lot of different cases, so that's currently blocked on improving testing of module scenarios. Also it hasn't been prioritised.",
    "created_at": "2020-12-10T20:08:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-742767342",
    "id": 742767342,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mjc2NzM0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742767342/reactions"
    },
    "updated_at": "2020-12-10T20:09:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742767342",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I would like for us to refactor that method **to enable a number of scenarios**, but the module code is sensitive and services a lot of different cases, so that's currently blocked on improving testing of module scenarios. Also it hasn't been prioritised.\r\n\r\nI think today is good time to re-think and re-design the area.\r\nShort thoughts:\r\n1. Allow new keywords in psd1 files for new features (PrivateData is ugly)\r\n2. Duplicate its in PrivateData section for Windows PowerShell if needed.\r\n2. For Windows PowerShell create a simple servicing fix to pass such manifest check\r\n\r\nThis open ways for future improvements and enhancements.",
    "created_at": "2020-12-11T03:37:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-742945981",
    "id": 742945981,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mjk0NTk4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742945981/reactions"
    },
    "updated_at": "2020-12-11T03:37:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742945981",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Allow new keywords in psd1 files for new features (PrivateData is ugly)\r\n\r\nYeah I'd like to do this too. We can't change old versions, but it would be nice to be tolerant as we move forward.\r\n\r\n> Duplicate its in PrivateData section for Windows PowerShell if needed.\r\n\r\nDon't quite understand you here. Do you mean that we should continue to support the PrivateData field for backward compatibility? If so, I agree.\r\n\r\n> For Windows PowerShell create a simple servicing fix to pass such manifest check\r\n\r\nThis one I'm not sure we can do. To be clear I have no control over that, but I think one of the major issues is that it would mark a significant change in behaviour in what's supposed to be a stable product version. Explaining to people that their module does or doesn't load because of a Windows patch would be a nightmare (we already see things like that and it's certainly hard to debug and often harder to explain).",
    "created_at": "2020-12-11T04:57:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-742968834",
    "id": 742968834,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mjk2ODgzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742968834/reactions"
    },
    "updated_at": "2020-12-11T04:57:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742968834",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Don't quite understand you here. Do you mean that we should continue to support the PrivateData field for backward compatibility? If so, I agree.\r\n\r\nYes, if a module is only for PowerShell Core we have no need to add the section, but if a developer want to make its module compatible with WinPS one should add PrivateData section and WinPS should silently skip new PowerShell Core keywords out of PrivateData section.\r\n\r\n> This one I'm not sure we can do. \r\n\r\nIt would be minor _compatibility_ fix. I hope MSFT team can approve this.",
    "created_at": "2020-12-11T17:07:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-743314619",
    "id": 743314619,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzMxNDYxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743314619/reactions"
    },
    "updated_at": "2020-12-11T17:07:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743314619",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> It would be minor compatibility fix.\r\n\r\nI think it would represent a fairly significant behaviour change",
    "created_at": "2020-12-11T17:33:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-743327665",
    "id": 743327665,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzMyNzY2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743327665/reactions"
    },
    "updated_at": "2020-12-11T17:33:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743327665",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think it would represent a fairly significant behaviour change\r\n\r\nWhy? We need only skip new keyword(s) in psd1, no new behavior will be added.",
    "created_at": "2020-12-11T17:40:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-743330930",
    "id": 743330930,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzMzMDkzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743330930/reactions"
    },
    "updated_at": "2020-12-11T17:40:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743330930",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If you look at the method [here](https://github.com/PowerShell/PowerShell/blob/a8213b54b3f061e3828b0f32c512814022002b71/src/System.Management.Automation/engine/Modules/ModuleCmdletBase.cs#L1461-L3523), it's really not written to make such a change simple or low risk.\r\n\r\n> no new behavior will be added.\r\n\r\nWell (1) allowing the import of previously invalid PSD1s is a new behaviour, and (2) even without that, it's unintentional new behaviours that are the main risk. Making a change to that part of the code today is already a risky proposition, so backporting it and pushing it out as a patch is hard to justify.",
    "created_at": "2020-12-11T18:18:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-743349059",
    "id": 743349059,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MzM0OTA1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743349059/reactions"
    },
    "updated_at": "2020-12-11T18:18:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743349059",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "I like @ShaunInIdaho 's workaround.  But, in my scenario (where all the required modules are defined in the same repo) I simply set the $env:PSModulePath variable to include the relevant path.",
    "created_at": "2021-12-29T18:14:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7722#issuecomment-1002720239",
    "id": 1002720239,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7722",
    "node_id": "IC_kwDOAvT7bc47xEvv",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1002720239/reactions"
    },
    "updated_at": "2021-12-29T18:14:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1002720239",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7293558?v=4",
      "events_url": "https://api.github.com/users/vercellone/events{/privacy}",
      "followers_url": "https://api.github.com/users/vercellone/followers",
      "following_url": "https://api.github.com/users/vercellone/following{/other_user}",
      "gists_url": "https://api.github.com/users/vercellone/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vercellone",
      "id": 7293558,
      "login": "vercellone",
      "node_id": "MDQ6VXNlcjcyOTM1NTg=",
      "organizations_url": "https://api.github.com/users/vercellone/orgs",
      "received_events_url": "https://api.github.com/users/vercellone/received_events",
      "repos_url": "https://api.github.com/users/vercellone/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vercellone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vercellone/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vercellone"
    }
  }
]
