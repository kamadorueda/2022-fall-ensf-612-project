[
  {
    "author_association": "COLLABORATOR",
    "body": "Hi @vexx32 `end` is not intended to be a cleanup block. Cleanups in cmdlets should be handled in the `Dispose()` implementation. For scripts, there currently isn't an equivalent solution.  Issue #6673 was opened to address this.",
    "created_at": "2018-10-03T03:30:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7930#issuecomment-426500655",
    "id": 426500655,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7930",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjUwMDY1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426500655/reactions"
    },
    "updated_at": "2018-10-03T03:30:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426500655",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Certainly, @BrucePay but given that output from `end{}` is valid and an accepted pattern, there exist many cases with `Select-Object -First $n` where that output (which may be perfectly valid regardless of the decision to accept only the first `$n` items from `process {}` may not occur.\r\n\r\nThere may also be logging steps or any number of actions that one would *expect* to be performed in the `end {}` step which is, *silently and without any form of documentation explaining the behaviour*, completely skipped without warning. There is [**one line** in the Select-Object documentation](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-object?view=powershell-6#description) that indicates that it stops prior commands. This is, however, without mention that potentially significant portions of *all previous commands in the entire pipeline sequence preceding* `Select-Object` will be summarily skipped. In a sense, it feels a bit like a breach of the pipeline contract, so to speak, if there was such a thing.\r\n\r\nThe worst part is, because this is implemented in this fashion, there is *absolutely no way* for a module author to combat this. `Select-Object -First $n` is an effective way of completely neutering *any* cmdlet's `end {}` block, whether that is your intention or not. \r\n\r\nAppreciate the linked issue, but I think that given the pipeline standard of executing `begin {}` once, `process {}` for each object, and `end {}` once, it simply doesn't make sense for *a cmdlet from another module* to entirely and without any kind of warning for the user skip entire segments of other cmdlets' or functions' code.",
    "created_at": "2018-10-03T04:00:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7930#issuecomment-426504568",
    "id": 426504568,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7930",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjUwNDU2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426504568/reactions"
    },
    "updated_at": "2018-10-03T04:03:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426504568",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32 \r\n> but given that output from end{} is valid and an accepted pattern, there exist many cases with Select-Object -First $n where that output (which may be perfectly valid regardless of the decision to accept only the first $n items from process {} may not occur\r\n\r\n`-first n` stops after n characters have been written.  _That's the literal definition of `-first`_.  It doesn't matter if those characters come from `process` or `end`, you ask for n characters, you get n characters. Very simple. And there has never been any contract that says all pieces of the pipeline will execute fully. Any cmdlet can throw a pipeline-terminating exception, or just a terminating exception or the user can hit ctrl-c. Things are guaranteed be called in `begin`,`process`,`end` order but not necessarily that they will all be called.",
    "created_at": "2018-10-03T04:32:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7930#issuecomment-426508460",
    "id": 426508460,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7930",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjUwODQ2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426508460/reactions"
    },
    "updated_at": "2018-10-03T04:32:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426508460",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Sure, in cases of error, not everything happens. But Select-Object abusing that means that any sane user who utilises that (awfully handy) functionality remains unaware that code has been skipped -- until something else goes wrong further down the line.\r\n\r\nIn cases of error, this behaviour is relatively obvious. In Select-Object's usage? It's not an error state, it's a deliberately induced state that has unforeseeable consequences unless one is familiar with the underlying code, and shouldn't directly alter other functions' code paths like this.",
    "created_at": "2018-10-03T04:38:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7930#issuecomment-426509226",
    "id": 426509226,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7930",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjUwOTIyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426509226/reactions"
    },
    "updated_at": "2018-10-03T15:07:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426509226",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I agree that from an end user's perspective there's a crucial difference between something `throw`ing in a pipeline - an unexpected _error_ that, if unhandled, _aborts processing_ - and using `Select-Object -First` to only process part of the pipeline input - a regular feature during _normal operation_ that simplify _modifies_ processing.\r\n\r\nIt just so happens that the way `Select-Object -First` stops the upstream cmdlets is also implemented as an exception _behind the scenes_, but that is an implementation detail that shouldn't determine the behavior, for the reasons @vexx32 has already stated.",
    "created_at": "2018-10-03T19:02:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7930#issuecomment-426759171",
    "id": 426759171,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7930",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjc1OTE3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426759171/reactions"
    },
    "updated_at": "2018-10-04T02:47:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/426759171",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This issue would be alleviated somewhat with the introduction of `cleanup{}` in this PR: #9900 ",
    "created_at": "2020-11-06T17:36:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7930#issuecomment-723207829",
    "id": 723207829,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7930",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzIwNzgyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/723207829/reactions"
    },
    "updated_at": "2020-11-06T17:36:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/723207829",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
