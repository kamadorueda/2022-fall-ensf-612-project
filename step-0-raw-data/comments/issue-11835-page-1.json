[
  {
    "author_association": "COLLABORATOR",
    "body": "Distilled repro:\r\n\r\n```powershell\r\n$script = 'Get-Content -Path \"C:\\test\" -'\r\nTabExpansion2 -inputScript $script -cursorColumn $script.Length |\r\n    % { $_.CompletionMatches.CompletionText } |\r\n    Should -Contain '-Raw'\r\n```\r\n\r\nInteresting to note that these pass:\r\n\r\n```powershell\r\n# Bare word argument\r\nGet-Content -Path C:\\test -\r\n\r\n# No drive separator character.  Position in string doesn't matter, always fails if it's present\r\nGet-Content -Path \"C\\test\" -\r\n```",
    "created_at": "2020-02-13T13:19:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-585750190",
    "id": 585750190,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTc1MDE5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585750190/reactions"
    },
    "updated_at": "2020-02-13T13:19:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585750190",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "`-Raw` is a dynamic parameter added by the PS file-system provider, so by design it should only be offered if the `Get-Content` command can be inferred to be targeting a _file-system_ location.\r\n\r\nHere's how it _mostly_ works at the moment - except for the bug:\r\n\r\n* If the path starts with a reference to a _valid_ drive (e.g, `C:`, `env:`), the target provider is inferred from that.\r\n  * Note that it is only the _drive_'s existence that is considered; whether the rest of the path exists is irrelevant.\r\n\r\n* If the path refers to a _non-existent_ drive, _no_ provider's dynamic parameters are being offered.\r\n\r\n* If there is _no path at all_, or the path _doesn't start with a drive spec_ - including if it starts with a _variable reference_  - completion assumes the _provider underlying the current location_ is being targeted (which explains why `Get-Content -Path \"C\\test\" -` works, as long as the current location is a file-system one).\r\n\r\n  * Caveat re Unix-like platforms: native file-system paths do not use drive specs there, so you cannot _formally_ infer from something like `/tmp` that it refers to a file-system location, and the current behavior appears to be to _always_ defer to the _current location's_ provider - even if the path exists as a file-system path. In effect, on Unix-like platforms _any_ path that doesn't start with a drive spec defers to the current location's provider.\r\n\r\nAided by your repro, @SeeminglyScience, I think the bug is specific to the following scenario:\r\n\r\n* If you type _only_ `-`, and a path that does include a valid file-system drive spec _that is also quoted_ (whether singly or doubly) is specified, it is seemingly not recognized as a valid _file-system_ path, causing the file-system-provider-specific `-Raw` switch _not_ to be offered among the completions. Curiously, typing `-r` makes the bug go away, but typing `-ra` makes it reappear.\r\n",
    "created_at": "2020-02-13T14:18:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-585776326",
    "id": 585776326,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTc3NjMyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585776326/reactions"
    },
    "updated_at": "2020-02-14T03:04:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585776326",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "So it seems like it's reversed now. It only shows up if there is no -Path/-LiteralPath used. It also shows if no drive is specified. It disappears as soon as the drive is specified.  The bug is in 5.1,6+,7+",
    "created_at": "2020-02-13T14:23:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-585779052",
    "id": 585779052,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTc3OTA1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585779052/reactions"
    },
    "updated_at": "2020-02-13T14:23:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585779052",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15063294?v=4",
      "events_url": "https://api.github.com/users/PrzemyslawKlys/events{/privacy}",
      "followers_url": "https://api.github.com/users/PrzemyslawKlys/followers",
      "following_url": "https://api.github.com/users/PrzemyslawKlys/following{/other_user}",
      "gists_url": "https://api.github.com/users/PrzemyslawKlys/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PrzemyslawKlys",
      "id": 15063294,
      "login": "PrzemyslawKlys",
      "node_id": "MDQ6VXNlcjE1MDYzMjk0",
      "organizations_url": "https://api.github.com/users/PrzemyslawKlys/orgs",
      "received_events_url": "https://api.github.com/users/PrzemyslawKlys/received_events",
      "repos_url": "https://api.github.com/users/PrzemyslawKlys/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PrzemyslawKlys/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PrzemyslawKlys/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PrzemyslawKlys"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> It also shows if no drive is specified\r\n\r\nOnly if the current location is a _file-system_ location (which, in fairness, is by far the most common scenario). If you do `Set-Location env:` first, you'll see that it disappears - as it should (see explanation above).\r\n\r\n> It disappears as soon as the drive is specified. \r\n\r\nOnly if the path is _quoted_ - that is the bug.\r\n",
    "created_at": "2020-02-13T14:52:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-585794335",
    "id": 585794335,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTc5NDMzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585794335/reactions"
    },
    "updated_at": "2020-02-13T16:31:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585794335",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "My guess is that the problem is here:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/a578347b5a9d4b7c48f2cd303f876dfa6f27cdce/src/System.Management.Automation/engine/CommandCompletion/PseudoParameterBinder.cs#L1237-L1243\r\n\r\nThe argument should be added as `((StringConstantExpression)ast).Value` instead of as `ast.Extent.Text`.",
    "created_at": "2020-02-13T15:41:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-585822156",
    "id": 585822156,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTgyMjE1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585822156/reactions"
    },
    "updated_at": "2020-02-13T15:41:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/585822156",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "That's promising, @SeeminglyScience, but it won't work with `VariableExpressionAst` (e.g, `$var`) and `ExpandableStringExpressionAst` (e.g, `$var\\sub`).\r\n\r\nPerhaps simply trimming the quotes explicitly is the solution?\r\n\r\n```csharp\r\nvar unquotedText = System.Text.RegularExpressions.Regex.Replace(\r\n  expressionArgument.Extent.Text, \r\n  @\"^(['\"\"])(.*)\\1$\", \"$2\"\r\n);\r\nargumentsToGetDynamicParameters?.Add(unquotedText);\r\n```\r\n\r\n(I've had to amend the previous comment yet again: a non-existent drive indeed causes _no_ provider's dynamic parameters to expand (which is sensible) - except for the potentially distinct bug described in #11848, which is where my confusion stemmed from.)\r\n",
    "created_at": "2020-02-14T03:02:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-586075334",
    "id": 586075334,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjA3NTMzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586075334/reactions"
    },
    "updated_at": "2020-02-14T03:02:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586075334",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "imo just get dynamic parameters based on current location if it's an expandable string.\r\n\r\nIf you wanted to go the extra mile you could maybe use the `SafeExprEvaluator` but that might be overkill.  Either way, using `Extent.Text` has more issues than the quotes.  It won't translate <kbd>`</kbd> or special character sequences using them either.  Plus here-strings...etc... trying to evaluate based on extent text gets dicey quick.",
    "created_at": "2020-02-14T03:44:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-586084036",
    "id": 586084036,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjA4NDAzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586084036/reactions"
    },
    "updated_at": "2020-02-14T03:44:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586084036",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> imo just get dynamic parameters based on current location if it's an expandable string.\r\n\r\nThat's certainly one way to resolve it, but it would misbehave in cases such as `OtherProviderDrive:\\sub\\$foo`\r\n\r\nGood point that merely trimming enclosing quotes from `Extent.Text` isn't fully robust, but I feel it would cover more scenarios than simply falling back to the current location's provider in the presence of _any_ expandable string: `` ` ``-escaping  or escape sequences are unlikely to occur in the drive-spec portion of a path, and use of here-strings for path arguments is similarly unlikely.\r\n\r\nEither approach would certainly be an improvement, though.\r\n\r\n(Knowing nothing about `SafeExprEvaluator`, I can't speak to how much more effort a robust solution would require.)",
    "created_at": "2020-02-14T04:17:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11835#issuecomment-586090401",
    "id": 586090401,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11835",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjA5MDQwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586090401/reactions"
    },
    "updated_at": "2020-02-14T04:17:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/586090401",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
