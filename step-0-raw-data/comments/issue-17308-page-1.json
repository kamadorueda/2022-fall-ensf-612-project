[
  {
    "author_association": "COLLABORATOR",
    "body": "My general understanding is that `[ordered]` is one of the standard type accelerators, so it should be resolved almost immediately in terms of type lookup. Also, it's not even a real type, afaik it's just a parser trick to tell PowerShell to build the resulting dictionary completely differently (since if it was built the normal way and _then_ cast, the resulting dictionary would not retain the original order in the script).\r\n\r\nFlagging this for WG-Engine to have a look at.",
    "created_at": "2022-05-11T23:05:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1124369937",
    "id": 1124369937,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DBIYR",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1124369937/reactions"
    },
    "updated_at": "2022-05-11T23:05:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1124369937",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Believe it or not, there's no actual type accelerator associated. I would have thought that the compiler would skip type resolution for it though, since it doesn't actually use the resolution at all.\r\n\r\nAdding a type accelerator to `OrderedDictionary` would likely solve this problem, and also ease a ton of confusion around this pseudo keyword",
    "created_at": "2022-05-12T15:07:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125111171",
    "id": 1125111171,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DD9WD",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125111171/reactions"
    },
    "updated_at": "2022-05-12T15:07:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125111171",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Oh, yeah? Interesting. I would also have expected it to simply skip the type resolution completely, since it's... not intended to be a type in itself. 🤔 \r\n\r\nEven if you define a type called `[ordered]` in the current session, it still doesn't get _used_ for an `[ordered]@{ ... }` expression, so it's very odd to me that type lookup would ever be implicated. For example:\r\n\r\n```ps1\r\nPS> class ordered {ordered([hashtable]$d) { }}\r\nPS> $a = [ordered]@{ a = 1; b = 2 }\r\nPS> $a\r\n\r\nName                           Value\r\n----                           -----\r\na                              1\r\nb                              2\r\n\r\nPS> $a.GetType().FullName\r\nSystem.Collections.Specialized.OrderedDictionary\r\n```\r\n\r\nAlso... a type simply named \"ordered\" is actually _unusable_ because of how the parser handles `[ordered]`:\r\n\r\n```ps1\r\nPS> $b = [ordered]$a\r\nParserError:\r\nLine |\r\n   1 |  $b = [ordered]$a\r\n     |      ~~~~~~~~~~~\r\n     | The ordered attribute can be specified only on a hash literal node.\r\n```\r\n\r\nSo it's... really weird... that `[ordered]` in this position does _any_ type lookups whatsoever.\r\n\r\nSidenote: you _can_ use a type named `[ordered]` with `-as` (`$a -as [ordered]`), but it's entirely unusable for a direct cast.",
    "created_at": "2022-05-12T17:56:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125273899",
    "id": 1125273899,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DElEr",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125273899/reactions"
    },
    "updated_at": "2022-05-12T18:11:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125273899",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I think there are 2 problems worth discussing here:\r\n1. `[ordered]` is treated as a special attribute solely for the syntax `[ordered] + <literal hash table>`. Is that something we want to change?\r\n2. more generally, shall we optimize the parser to not keep attempting to resolve a type name when it cannot be resolved?\r\n\r\nThere could be another repro for this issue: I'm using the type name `[sometypename]` in my script at tons of places, but the type is not available until at run time -- a call to `Add-Type` or `Import-Module` will load the assembly containing that type. Parsing the script will experience the same slowness.",
    "created_at": "2022-05-12T18:22:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125295150",
    "id": 1125295150,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DEqQu",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125295150/reactions"
    },
    "updated_at": "2022-05-12T18:22:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125295150",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think there are 2 problems worth discussing here:\r\n> \r\n> 1. `[ordered]` is treated as a special attribute solely for the syntax `[ordered] + <literal hash table>`. Is that something we want to change?\r\n\r\nI think it would be reasonable to make it an actual type accelerator and have fall back logic like we already do for `[pscustomobject]`. Maybe not fall back as that might lead to confusion that we already face with `[pscustomobject]` outside of compiler recognized scenarios. But we can at least make it resolvable.\r\n\r\n> 2. more generally, shall we optimize the parser to not keep attempting to resolve a type name when it cannot be resolved?\r\n> \r\n> There could be another repro for this issue: I'm using the type name `[sometypename]` in my script at tons of places, but the type is not available until at run time -- a call to `Add-Type` or `Import-Module` will load the assembly containing that type. Parsing the script will experience the same slowness.\r\n\r\nI think the second part answers the first part here 🙁. We can't actually know if a type will *never* be resolvable.\r\n\r\nThat said, I'm not really sure why type resolution isn't done lazily outside of classes. Does the parser really care what the true type is?\r\n\r\n",
    "created_at": "2022-05-12T19:48:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125362551",
    "id": 1125362551,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DE6t3",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125362551/reactions"
    },
    "updated_at": "2022-05-12T19:48:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125362551",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Believe it or not, there's no actual type accelerator associated. I would have thought that the compiler would skip type resolution for it though, since it doesn't actually use the resolution at all.\r\n> \r\n> Adding a type accelerator to `OrderedDictionary` would likely solve this problem, and also ease a ton of confusion around this pseudo keyword\r\n\r\nWould a type accelerator be able to initialize the OrderedDictionary, then add the items of the hashtable?\r\n\r\nJust replacing `[ordered]` with `[System.Collections.Specialized.OrderedDictionary]` works fine with empty hashtable `@{ }`, but if the hashtable contains multiple properties, it will fail to cast the hashtable to OrderedDictionary",
    "created_at": "2022-05-12T19:51:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125364759",
    "id": 1125364759,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DE7QX",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125364759/reactions"
    },
    "updated_at": "2022-05-12T19:51:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125364759",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/435441?v=4",
      "events_url": "https://api.github.com/users/Sjark/events{/privacy}",
      "followers_url": "https://api.github.com/users/Sjark/followers",
      "following_url": "https://api.github.com/users/Sjark/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjark/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Sjark",
      "id": 435441,
      "login": "Sjark",
      "node_id": "MDQ6VXNlcjQzNTQ0MQ==",
      "organizations_url": "https://api.github.com/users/Sjark/orgs",
      "received_events_url": "https://api.github.com/users/Sjark/received_events",
      "repos_url": "https://api.github.com/users/Sjark/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Sjark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjark/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Sjark"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Would a type accelerator be able to initialize the OrderedDictionary, then add the items of the hashtable?\r\n\r\nIt wouldn't change runtime behavior of anything that currently works. It just makes the type resolvable. The compiler specifically checks for the literal text `ordered`, and doesn't actually try to resolve it (unlike the parser apparently).",
    "created_at": "2022-05-12T19:56:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125369102",
    "id": 1125369102,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DE8UO",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125369102/reactions"
    },
    "updated_at": "2022-05-12T19:56:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125369102",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> I think the second part answers the first part here 🙁. We can't actually know if a type will never be resolvable.\r\n\r\nBut can we know if a type will never be resolvable at parsing time only? What would cause new types available at parsing time? PowerShell classes are already taken care of when resolving symbols, and `using module/assembly` can only appear at the beginning of a script.",
    "created_at": "2022-05-12T20:03:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125375449",
    "id": 1125375449,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DE93Z",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125375449/reactions"
    },
    "updated_at": "2022-05-12T20:03:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125375449",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "WG-Engine discussed this one today (5/12/2022).\r\n> 1. `[ordered]` is treated as a special attribute solely for the syntax `[ordered] + <literal hash table>`. Is that something we want to change?\r\n> 2. more generally, shall we optimize the parser to not keep attempting to resolve a type name when it cannot be resolved?\r\n\r\n~To the 1st question, we think it's a good idea to make `[ordered]` a true type accelerator for `[System.Collections.Specialized.OrderedDictionary]` and remove the parser code that restricts `[ordered]` to only be used before a literal Hashtable. We believe this will help making the `[ordered]` type less special and more consistent with `[pscustomobject]`.~ Addressed by https://github.com/PowerShell/PowerShell/pull/17804\r\n\r\nTo the 2nd question, the same performance degradation would happen to another non-resolvable type name in the script, so it would be nice to resolve this perf issue in the root -- not looking up a non-resolvable type name multiple times during parse would provide a significant boost to performance.",
    "created_at": "2022-05-12T22:00:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1125459917",
    "id": 1125459917,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DFSfN",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125459917/reactions"
    },
    "updated_at": "2022-08-03T18:11:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1125459917",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "#17328 was merged to mitigate the perf issue regarding `[ordered]` specifically:\r\n> This alone cuts the wallclock time for parsing `[ordered]@{}` compared to `[nonexisting]@{}` by 45-50%:",
    "created_at": "2022-05-17T16:55:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1129101905",
    "id": 1129101905,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DTLpR",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 3,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1129101905/reactions"
    },
    "updated_at": "2022-05-17T16:55:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1129101905",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks for the quick fix. I guess this will be included in the next version of System.Management.Automation package (7.2.5)? If so, do you have any target date for that release?",
    "created_at": "2022-05-17T21:58:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17308#issuecomment-1129356130",
    "id": 1129356130,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17308",
    "node_id": "IC_kwDOAvT7bc5DUJti",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1129356130/reactions"
    },
    "updated_at": "2022-05-17T21:58:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1129356130",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/435441?v=4",
      "events_url": "https://api.github.com/users/Sjark/events{/privacy}",
      "followers_url": "https://api.github.com/users/Sjark/followers",
      "following_url": "https://api.github.com/users/Sjark/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjark/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Sjark",
      "id": 435441,
      "login": "Sjark",
      "node_id": "MDQ6VXNlcjQzNTQ0MQ==",
      "organizations_url": "https://api.github.com/users/Sjark/orgs",
      "received_events_url": "https://api.github.com/users/Sjark/received_events",
      "repos_url": "https://api.github.com/users/Sjark/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Sjark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjark/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Sjark"
    }
  }
]
