[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for tackling this, @iSazonov.\r\n\r\nNote that `[io.path]::IsPathRooted()` also returns true for paths of any depth, as long as they are rooted; e.g., `[io.path]::IsPathRooted(\"\\Windows\")` returns `$true` too.\r\n\r\nBy contrast, the method's intent is to see if `path` is _just_ a root path, i.e. a path that refers to a drive's root dir.\r\n\r\nSince `[io.path]::GetPathRoot()`  also works with UNC paths, the one existing check should be enough in principle:\r\n\r\n```csharp\r\nbool isDriveOrUncRoot = string.Equals(path, Path.GetPathRoot(path), StringComparison.OrdinalIgnoreCase)\r\n```\r\n\r\nThe only edge case is that while paths such as `C:\\`, `\\`, and `C:` are all returned as-is by `[io.path]::GetPathRoot()` (and therefore make the test return `$true`), `\\\\foo\\bar\\` - note the trailing `\\` - is returned as `\\\\foo\\bar` (no trailing `\\`), so it wouldn't be recognized as a (UNC) root path.\r\n",
    "created_at": "2020-12-25T16:26:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751268774",
    "id": 751268774,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTI2ODc3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751268774/reactions"
    },
    "updated_at": "2020-12-25T16:28:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751268774",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks for help!\r\n\r\n> `\\\\foo\\bar\\` - note the trailing `\\` - is returned as `\\\\foo\\bar`\r\n\r\nWe need this and the fact complicate our check. Also [io.path]::GetPathRoot(\"`\\\\q\\\") returns `\\\\q\\`.\r\nIt seems it is a question for .Net team how can we check if a path is a root.\r\n\r\nUpdate: GetFileSystemItem(string path, ref bool isContainer, bool showHidden) - there is a root check and maybe a bug (no UNC share check)\r\nhttps://github.com/PowerShell/PowerShell/blob/281b437a65360ae869d40f3766a1f2bbba786e5e/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L1426-L1430",
    "created_at": "2020-12-25T17:48:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751275870",
    "id": 751275870,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTI3NTg3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751275870/reactions"
    },
    "updated_at": "2020-12-25T19:25:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751275870",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Interesting, @iSazonov: For me, both in 7.1 and v7.2.0-preview.2 (on Windows), `[io.path]::GetPathRoot(\"\\\\q\")` returns `\\\\q`, not `\\\\q\\` - but `[io.path]::GetPathRoot(\"\\\\q\\\")` does return `\\\\q\\` - did you mean the latter?\r\n\r\nNote that `[io.path]::GetPathRoot()` performs no syntax check on its input path, and `\\\\q` is formally not a valid path - not sure if our `IsPathRoot()` needs to detect or where else such a check may be performed.\r\n\r\nLeaving paths with invalid syntax aside, I think the following would work (assuming only paths with _native_ drive letters are use on Windows):\r\n\r\n```csharp\r\nstring rootPath = Path.GetPathRoot(path);\r\nbool isDriveOrUncRoot = \r\n  ! path.EndsWith(':')\r\n  &&\r\n  string.Equals(path, rootPath, StringComparison.OrdinalIgnoreCase) \r\n  ||\r\n  string.Equals(path.Substring(0, path.Length-1), rootPath, StringComparison.OrdinalIgnoreCase) && \r\n    path.Length == 1 + rootPath.Length && (path.EndsWith('\\\\') || path.EndsWith('/'));\r\n```\r\n\r\nNote that the above handles another edge case: a path such as `c:` is returned as-is by `[io.path]::GetPathRoot()`, but it does _not_ refer to the drive's root directory, but to _whatever the current directory is_ on that drive.\r\n\r\nP.S.: `StringComparison.Ordinal` should be sufficient, from what I can tell, because no case normalization is performed by `Path.GetPathRoot()` - neither in terms of drive letters, nor in UNC paths.\r\n\r\n\r\n\r\n",
    "created_at": "2020-12-25T18:33:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751280159",
    "id": 751280159,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTI4MDE1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751280159/reactions"
    },
    "updated_at": "2020-12-25T18:39:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751280159",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> does return `\\\\q\\` - did you mean the latter?\r\n\r\nYes, GitHub hide the slash.\r\n\r\n>  string.Equals(path, rootPath, StringComparison.OrdinalIgnoreCase) \r\n\r\nWhy should we compare if GetPathRoot() returns a substring? ",
    "created_at": "2020-12-25T19:29:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751284255",
    "id": 751284255,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTI4NDI1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751284255/reactions"
    },
    "updated_at": "2020-12-25T19:29:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751284255",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Why should we compare if GetPathRoot() returns a substring?\r\n\r\nBecause the intent of the PS method, judging by the doc comments and the implementation, is to see if the input path refers to a _root directory_, not to see if the path _starts_ from a root directly (the latter would be a root*ed* path, not a root path).\r\n\r\nThus, the idea is to extract just the root-directory portion of the path and to then see if that is the _entire_ path.\r\n\r\nFor instance, the method should return `true` for `C:\\`, `\\`, `\\\\foo\\bar`, and `\\\\foo\\bar\\`, and `false` for `C:\\foo`, `\\foo`, and `\\\\foo\\bar\\baz`.",
    "created_at": "2020-12-25T19:33:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751284468",
    "id": 751284468,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTI4NDQ2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751284468/reactions"
    },
    "updated_at": "2020-12-26T13:41:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751284468",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I mean it is enough to check lengths of original path and Path.GetPathRoot(path) (have a workaround for UNC share paths - really remove last slash at the first step).",
    "created_at": "2020-12-26T12:09:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751349947",
    "id": 751349947,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTM0OTk0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751349947/reactions"
    },
    "updated_at": "2020-12-26T12:09:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751349947",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good point, @iSazonov - no explicit comparison needed; the following could work:\r\n\r\n```csharp\r\nint rootPathLength;\r\nbool isDriveOrUncRoot = (rootPathLength = Path.GetPathRoot(path)?.Length ?? 0) > 0 && (\r\n  path.Length == rootPathLength && path[^1] != ':'  // rule out, e.g., \"C:\"\r\n  ||\r\n  path.Length == 1 + rootPathLength && (path[^1] == '\\\\' || path[^1] == '/') // ignore trailing sep. in UNC root path\r\n);\r\n```\r\n\r\n",
    "created_at": "2020-12-26T13:41:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751356734",
    "id": 751356734,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTM1NjczNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751356734/reactions"
    },
    "updated_at": "2020-12-26T13:43:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751356734",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks! Have you an interest to pull PR?",
    "created_at": "2020-12-26T16:52:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751374005",
    "id": 751374005,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTM3NDAwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751374005/reactions"
    },
    "updated_at": "2020-12-26T16:52:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751374005",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @iSazonov, but my hope is that someone else will pick this up.",
    "created_at": "2020-12-26T17:12:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14497#issuecomment-751375870",
    "id": 751375870,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14497",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MTM3NTg3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751375870/reactions"
    },
    "updated_at": "2020-12-26T17:12:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/751375870",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
