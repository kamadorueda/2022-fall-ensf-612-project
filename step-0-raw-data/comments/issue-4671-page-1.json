[
  {
    "author_association": "NONE",
    "body": "On Windows, you should use `CreateEnvironmentBlock` function to create a complete block of environment variables for a specified user.\r\n\r\nThere is another issue on `UseNewEnvironment`. When combined with `Credential`, it currently starts the subprocess in the **new user's** context, but with the **current user's** environment variables, which is surely a bad thing to do. If instead, you turn off `UseNewEnvironment` and supply `Credential`, the subprocess will use the default environment block for the specified user, which is likely what the user wants.",
    "created_at": "2018-06-18T16:00:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-398105482",
    "id": 398105482,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODEwNTQ4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/398105482/reactions"
    },
    "updated_at": "2018-06-18T16:03:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/398105482",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To provide some more insight into what, specifically, is wrong (in addition to the _conceptual_ flaw that @GeeLaw mentions with respect to combining `-UseNewEnvironment` with `-Credential`; almost sounds like that combination should be disallowed):\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/5fcab21111be1551d723bbd3cf2701d79e44fa94/src/Microsoft.PowerShell.Commands.Management/commands/management/Process.cs#L1867-L1872\r\n\r\nOn Unix-like platforms, the `LoadEnvironmentVariable()` calls are effective _no-ops_, because `Environment.GetEnvironmentVariables(EnvironmentVariableTarget.Machine)` and `Environment.GetEnvironmentVariables(EnvironmentVariableTarget.User)` quietly(!) return an _empty_ hashtable in Unix, where these targets aren't supported (see https://github.com/dotnet/corefx/issues/32685).\r\n\r\nIn short, `LoadEnvironmentVariable()` shouldn't even be called to begin with on non-Windows platforms.\r\n\r\nAs for _Windows_:\r\n\r\n* The original post mentions that crucial built-in variables are missing from the resulting process, which results from the approach of first _clearing_ all variables with\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/5fcab21111be1551d723bbd3cf2701d79e44fa94/src/Microsoft.PowerShell.Commands.Management/commands/management/Process.cs#L1869\r\n\r\nand then only restoring those variables whose definitions are _registry-based_.  \r\nHowever, there are a number of crucial variables such as `%USERPROFILE%` that are _not_ registry-based, so they end up missing altogether - see below.\r\n\r\n* Also, loading a default `$env:PATH` value is broken in `LoadEnvironmentVariable()`, because key access is _case-sensitive_ and the variable name is mistakenly tested for with all-uppercase name `PATH`:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/5fcab21111be1551d723bbd3cf2701d79e44fa94/src/Microsoft.PowerShell.Commands.Management/commands/management/Process.cs#L2077\r\n\r\n---\r\n\r\nFor the record, here are the built-in, system-defined environment variables that are _not_ registry-based:\r\n\r\n```none\r\nALLUSERSPROFILE\r\nAPPDATA\r\nCommonProgramFiles\r\nCommonProgramFiles(x86)\r\nCommonProgramW6432\r\nCOMPUTERNAME\r\nHOMEDRIVE\r\nHOMEPATH\r\nLOCALAPPDATA\r\nLOGONSERVER\r\nProgramData\r\nProgramFiles\r\nProgramFiles(x86)\r\nProgramW6432\r\nPUBLIC\r\nSESSIONNAME\r\nSystemDrive\r\nSystemRoot\r\nUSERNAME    # !! There is a *machine-level* definition with value 'SYSTEM', but there is no *user-level* definition - that is added by the system to the process.\r\nUSERDOMAIN\r\nUSERDOMAIN_ROAMINGPROFILE\r\nUSERPROFILE\r\n```\r\n\r\nCommand that generated the list above (with the exception of USERNAME)\r\n\r\n```powershell\r\ngci env: | % name | ? { -not [environment]::GetEnvironmentVariable($_, 'Machine') -and -not [environment]::GetEnvironmentVariable($_, 'User')}\r\n```\r\n\r\n\r\n",
    "created_at": "2018-10-12T16:03:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-429376491",
    "id": 429376491,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTM3NjQ5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429376491/reactions"
    },
    "updated_at": "2018-10-12T16:03:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/429376491",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I put the \"possible solution 2\" in #8352. Even if this issue is fixed by implementing solution 1, I believe solution 2 has other use-cases.\r\n\r\nUpdate: that's a dupe of #3316.",
    "created_at": "2018-11-28T21:27:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-442610943",
    "id": 442610943,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjYxMDk0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/442610943/reactions"
    },
    "updated_at": "2018-11-29T14:50:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/442610943",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3153452?v=4",
      "events_url": "https://api.github.com/users/FranklinYu/events{/privacy}",
      "followers_url": "https://api.github.com/users/FranklinYu/followers",
      "following_url": "https://api.github.com/users/FranklinYu/following{/other_user}",
      "gists_url": "https://api.github.com/users/FranklinYu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/FranklinYu",
      "id": 3153452,
      "login": "FranklinYu",
      "node_id": "MDQ6VXNlcjMxNTM0NTI=",
      "organizations_url": "https://api.github.com/users/FranklinYu/orgs",
      "received_events_url": "https://api.github.com/users/FranklinYu/received_events",
      "repos_url": "https://api.github.com/users/FranklinYu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/FranklinYu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FranklinYu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/FranklinYu"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'd deprecate UseNewEnvironment (make alias?) and introduce ClearEnvironment\r\nI like new Environment parameter but can we explicitly say that we _add/change_ variable? Maybe `-SetEnvironmentVariable`?",
    "created_at": "2019-10-03T17:30:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-538045439",
    "id": 538045439,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODA0NTQzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538045439/reactions"
    },
    "updated_at": "2019-10-03T17:30:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538045439",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "On GitHub, there's a [small amount of usage of -UseNewEnvironment](https://github.com/search?l=PowerShell&q=-usenewenvironment&type=Code).  I believe the intent of this switch is you would start a process from PowerShell as though you just started a new PowerShell process (not from the current PowerShell process).  We just have to evaluate if we would break any existing usage (seems unlikely).\r\n\r\nAs for specifying an environment, I think `-Environment @{}` is good.",
    "created_at": "2019-10-04T20:30:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-538549239",
    "id": 538549239,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODU0OTIzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538549239/reactions"
    },
    "updated_at": "2019-10-04T20:30:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538549239",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed re intent, @SteveL-MSFT, so if we wanted to fix this feature (and also make it work on Unix), we could cache a copy of the environment-variable block on PowerShell startup (before reading profiles), and use that.\r\n\r\n@iSazonov: I agree that `-SetEnvironmentVariable` is more descriptive, but it's a bit unwieldy. I think with proper documentation `-Environment` will do, as Steve says.\r\n\r\n`-ClearEnvironment` wouldn't quite capture the intent of the feature, which mustn't _clear all_ variables - that it currently does so on Unix is what prompted this report.\r\n",
    "created_at": "2019-10-04T20:52:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-538555927",
    "id": 538555927,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODU1NTkyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538555927/reactions"
    },
    "updated_at": "2019-10-04T20:52:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538555927",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think really we need three operation:\r\n1. ClearEnvironment [optional hash with new variables to set]\r\n2. RemoveEnvironment <mandatory string array with names to remove>\r\n3. SetEnvironment <mandatory hash with variables to add/update to current environment>\r\n\r\nUseNewEnvironment we could deprecate and hide.",
    "created_at": "2019-10-05T17:48:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-538672767",
    "id": 538672767,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODY3Mjc2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538672767/reactions"
    },
    "updated_at": "2019-10-05T17:48:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538672767",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I don't think there is a need for this complexity:\r\n\r\nRe 1 and 2: \r\n\r\nYou rarely want to start with _no environment variables at all_ - you'll wipe out vital _OS_-defined variables too (which is the current problem on Unix-like platforms).\r\n\r\nIt is far more common to _build on_ an existing environment,  either:\r\n\r\n* the current one\r\n\r\n* \"pristine\" one, without any in-session changes, but with the usual OS-defined ones present - that's what `-UseNewEnvironment` _should do_.\r\n\r\nRe 3:\r\n\r\n**Combining the hashtable  `-Environment` parameter with `-UseNewEnvironment` then covers all use cases:**\r\n\r\nAs a user, I then:\r\n\r\n* decide which environment to start with: the current one (no switch) or a \"pristine\" one (`-UseNewEnvironment`)\r\n\r\n* then use `-Environment` to _modify_ that starting environment, by:\r\n  * adding new variables \r\n  * modifying the values of existing variables\r\n  * removing variables\r\n\r\nThe first 2 modifications are most common, but a single, hashtable-based environment variable also supports _removing_ variables, given that assigning `$null` or the _empty string_ to environment variables _deletes_ them; e.g., `-Environment @{ FOO='bar'; BAR=$null }` would _create or update_ env. var `FOO` and _remove_ (or not define) env. var. `BAR`",
    "created_at": "2019-10-05T18:37:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-538677522",
    "id": 538677522,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODY3NzUyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538677522/reactions"
    },
    "updated_at": "2019-10-05T19:03:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538677522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I don't think there is a need for this complexity:\r\n\r\nHistorically environment variables is manipulated by one \"Set\" operation, even in C# API https://docs.microsoft.com/en-us/dotnet/api/system.environment.setenvironmentvariable?view=netframework-4.8#System_Environment_SetEnvironmentVariable_System_String_System_String_\r\nBut a question is can we get PowerShell magic benefits having explicit operations like *-Variables?\r\n```powershell\r\nCommandType     Name \r\n-----------     ----\r\nCmdlet          Clear-Variable\r\nCmdlet          Get-Variable\r\nCmdlet          New-Variable\r\nCmdlet          Remove-Variable\r\nCmdlet          Set-Variable\r\n```\r\nEarlier we actively discussed Environment provider/drive. We found this very interesting. Obviously the API will has these operations explicitly. Should we keep consistency with the API in the issue too (also taking in account hosting scenario)?\r\n\r\nI do not like changing `UseNewEnvironment` for 4 reasons: unlikely but breaking change, the name confuses me, not clear why we need the rare scenario and implementation will slow down startup that is very bad. I believe this is not worth the effort until there is a real important business scenario. Moreover, PowerShell actually only changes PSModulePath, and this can be solved in #10300.\r\n\r\n\r\n<blockquote><img src=\"https://docs.microsoft.com/en-us/media/logos/logo-ms-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.environment.setenvironmentvariable\">Environment.SetEnvironmentVariable Method (System)</a></strong></div><div>Creates, modifies, or deletes an environment variable. </div></blockquote>",
    "created_at": "2019-10-07T05:35:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-538846430",
    "id": 538846430,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODg0NjQzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538846430/reactions"
    },
    "updated_at": "2019-10-07T05:37:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538846430",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The `*-Variable` cmdlets are narrowly focused on _shell_ variables (PowerShell's own, in-session only variables).\r\n\r\nHowever, extending the `Environment` PS provider to also support managing _persisted_ environment variables, at least on Windows, makes perfect sense to me, and it is what I've proposed [here](https://github.com/PowerShell/PowerShell-RFC/pull/92#issuecomment-429464051).\r\n\r\nI don't see a problem with having that coexist with the `-Environment <hashtable>` parameter proposed here, or even with the syntax discussed in #3316.\r\n\r\n> I do not like changing UseNewEnvironment for 4 reasons: unlikely but breaking change\r\n\r\nNothing _meaningful_ can be broken, given the currently useless behavior.\r\n\r\n> the name confuses me\r\n\r\nI think the name is fine, but we could implement an alias, if there's consensus on a better name.\r\n\r\n> not clear why we need the rare scenario and implementation will slow down startup that is very bad\r\n\r\nThat is a valid concern - I can't speak to the real-world impact.\r\n\r\n>  I believe this is not worth the effort until there is a real important business scenario.\r\n\r\n_Personally_, I won't miss the feature, but I can see how it is desirable in certain situations.\r\n\r\n> Moreover, PowerShell actually only changes PSModulePath\r\n\r\nThat's not the point, though. The point is that _you yourself_ or third-party code may have modified the environment in multiple ways that you don't want external processes to see, lest it interfere with their proper operation.\r\n\r\n",
    "created_at": "2019-10-07T19:15:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539162535",
    "id": 539162535,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTE2MjUzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539162535/reactions"
    },
    "updated_at": "2019-10-07T19:15:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539162535",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> That's not the point, though. The point is that you yourself or third-party code may have modified the environment in multiple ways that you don't want external processes to see, lest it interfere with their proper operation.\r\n\r\nInteresting, has Windows or Unix an API to directly implement the scenario? (I mean this is too unbelievable scenario)",
    "created_at": "2019-10-08T05:27:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539333656",
    "id": 539333656,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTMzMzY1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539333656/reactions"
    },
    "updated_at": "2019-10-08T05:27:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539333656",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Windows has `Start-Process -UseNewEnvironment` :) - though it is partially broken, as I've pointed out. However, I've always understood the _intent_ of that feature to be what I've proposed.\r\n\r\nUnix has the `env` utility with the `-i` option (ignore the inherited environment, and only define the variables passed as the other arguments);\r\n\r\nOn closer examination, however, this appears to be more like a `-ClearEnvironment` switch, and the only reason it results in a usable shell if you call `bash` is that `bash` - unlike PowerShell - apparently sets _default_ values for variables such as `$env:PATH`.\r\n\r\nAs a cross-platform shell, however, we'd be looking for standardized behavior, so IF we keep the switch, implementing the proposed behavior makes the most sense to me.\r\n\r\nAgain, I personally wouldn't miss `-UseNewEnvironment`, and I can see that it is probably rarely needed overall (as at least historically indicated by @SteveL-MSFT's GitHub search).\r\nI think that's all I have to say on this particular aspect of this debate, and I'll let others decide.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-10-08T13:17:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539508635",
    "id": 539508635,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTUwODYzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539508635/reactions"
    },
    "updated_at": "2019-10-08T13:17:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539508635",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It seems `UseNewEnvironment` doesn't work on Unix. 😕 ",
    "created_at": "2019-10-08T14:42:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539547011",
    "id": 539547011,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU0NzAxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539547011/reactions"
    },
    "updated_at": "2019-10-08T14:42:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539547011",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Well, like `env -i`, I think it radically clears the environment, though that is  _accidental_ behavior (the current attempts to read persisted env.-var definitions are quiet no-ops on Unix-like platforms, as explained [above](https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-429376491)).\r\n\r\nHowever, there's more going on, because `env -i bash --norc` results in a functional shell, whereas the seemingly equivalent `Start-Process -UseNewEnvironment bash --norc` exhibits very strange behavior with the default terminal apps on macOS 10.14 and and Ubuntu 18.04.\r\n\r\nOnly with `iTerm` on macOS could I get `Start-Process -UseNewEnvironment bash --norc` to work, and then call `export` to see what env. variables are defined: you'll see that they're only _Bash-defined_ ones (as with `env -i bash --norc`), implying that an _empty_ environment was passed, and Bash seemingly furthermore declares _shell-only_ variables (you can see these among the output from `set`) of the same name as vital OS env. variables such as `PATH` and `TERM` so as to provide at least a minimal level of functioning.\r\n\r\nOn both platforms, trying to launch `pwsh` this way _always_ results in broken behavior, because PowerShell does not anticipate and compensate for the absence of vital environment variables.\r\n",
    "created_at": "2019-10-08T15:12:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539561169",
    "id": 539561169,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU2MTE2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539561169/reactions"
    },
    "updated_at": "2019-10-08T15:14:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539561169",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This code is This code is somewhat confusing (in CoreFX too) 😕 \r\n\r\nThis works in WSL (may be useful for tests):\r\n```powershell\r\nStart-Process -UseNewEnvironment -ArgumentList \"set\" bash\r\n```",
    "created_at": "2019-10-09T04:45:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539826846",
    "id": 539826846,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTgyNjg0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539826846/reactions"
    },
    "updated_at": "2019-10-09T04:45:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539826846",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We need to take in account #6489 Again slow down :-( \r\nIf we look Process.ProcessStartInfo.Environment - it force us to copy Dictionary and it again slow down.\r\n\r\nThis is not so important to start a process but it can be sensitive for startup scenario.\r\n",
    "created_at": "2019-10-09T05:44:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539842467",
    "id": 539842467,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTg0MjQ2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539842467/reactions"
    },
    "updated_at": "2019-10-09T05:44:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539842467",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As for the test command: You're missing `-c`, and it's better to also suppress loading of `.bashrc` with  `--norc`; `set` shows you a _mix_ of shell-only and environment variables, so it's better to use `export`; thus:\r\n\r\n``` powershell\r\nStart-Process  -UseNewEnvironment  -ArgumentList '--norc', '-c', 'export'  bash\r\n```\r\n\r\nIf you're experimenting with passing _multiple_ commands to `-c`, remember the `Start-Process` bug with respect to spaces (#5576), so embedded quoting is needed:\r\n\r\n```powershell\r\nStart-Process  -UseNewEnvironment  -ArgumentList '--norc', '-c', '\"export; set\"'  bash\r\n```",
    "created_at": "2019-10-09T07:36:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539878393",
    "id": 539878393,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTg3ODM5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539878393/reactions"
    },
    "updated_at": "2019-10-09T07:36:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539878393",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also, I don't think we need to worry about #6489 for simply making a copy of the startup environment.\r\n\r\nAs for the dictionary: are you referring to `[environment]::GetEnvironmentVariables()`? `[System.Diagnostics.Process]::GetCurrentProcess().StartInfo` is `$null` in a PowerShell session.\r\n\r\nWhat `[environment]::GetEnvironmentVariables()` returns already _is_ a copy of the environment, returned as a case-sensitive `[hashtable]` (`IDictionary`) whose later manipulation has no effect on the underlying environment variables.\r\n\r\n\r\n\r\n",
    "created_at": "2019-10-09T07:48:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539882325",
    "id": 539882325,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTg4MjMyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539882325/reactions"
    },
    "updated_at": "2019-10-09T07:48:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539882325",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Also, I don't think we need to worry about #6489 for simply making a copy of the startup environment.\r\n\r\nPerhaps we can catch a problem if original set contains duplicate variables: we have to set them one-by-one and last will win. Although we use P/Invoke on Windows and this could allow to get around this.\r\n\r\n> [System.Diagnostics.Process]::GetCurrentProcess().StartInfo is $null in a PowerShell session.\r\n\r\nIt is not property in Process object. So we can use only [environment]::GetEnvironmentVariables().\r\n\r\n> Start-Process  -UseNewEnvironment  -ArgumentList '--norc', '-c', 'export'  bash\r\n\r\nIt does not work for me on WSL. Folow works:\r\n`Start-Process  -UseNewEnvironment  -ArgumentList '--norc', '-c', 'printenv'  bash`\r\n\r\nI hope we can use this on all Unix-s and MacOs.",
    "created_at": "2019-10-09T09:47:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539926616",
    "id": 539926616,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTkyNjYxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539926616/reactions"
    },
    "updated_at": "2019-10-09T09:47:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539926616",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yes, `printenv` is also preinstalled on macOS (it isn't a POSIX-mandated utility, however), so this should work; I'm baffled that `export` wouldn't work, though, given that it is a Bash _builtin_ (an internal command).",
    "created_at": "2019-10-09T13:17:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-539996520",
    "id": 539996520,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTk5NjUyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539996520/reactions"
    },
    "updated_at": "2019-10-09T13:17:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539996520",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I just discovered the `cmd.exe`-internal `start` command's `/I` switch, which was presumably the model for PowerShell's `-UseNewEnvironment` switch (in intent, not in effect, due to the flawed current implementation); from `start /?` (lightly edited):\r\n\r\n> / I    ...       The new environment will be the original environment passed\r\n                to the cmd.exe and not the current environment.",
    "created_at": "2019-10-09T13:59:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-540014122",
    "id": 540014122,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAxNDEyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540014122/reactions"
    },
    "updated_at": "2019-10-09T13:59:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540014122",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks! I pulled PR - please review.",
    "created_at": "2019-10-09T14:20:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-540022886",
    "id": 540022886,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAyMjg4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540022886/reactions"
    },
    "updated_at": "2019-10-09T14:20:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540022886",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Since we had PowerShell Committee conclusion in https://github.com/PowerShell/PowerShell/pull/10745#issuecomment-542923823 we can continue here to discuss a desired behavior.\r\nFrom my understanding the conclusion was to implement on all platforms behavior like @rjmholt made for login shell on Unix - with UseNewEnvironment subprocess gets environment like we get with `sh -l` on Linux and `zsh -l` on macOS. I don't know can we do the same on Windows.\r\n@SteveL-MSFT @mklement0 Thoughts?",
    "created_at": "2019-10-17T03:50:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-542987150",
    "id": 542987150,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mjk4NzE1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/542987150/reactions"
    },
    "updated_at": "2019-10-18T04:21:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/542987150",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @iSazonov; I think you meant to link to https://github.com/PowerShell/PowerShell/pull/10745#issuecomment-542923823 - given that specific points were made there, let me respond there.\r\n\r\n",
    "created_at": "2019-10-17T19:45:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-543332557",
    "id": 543332557,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzMzMjU1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543332557/reactions"
    },
    "updated_at": "2019-10-17T19:45:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543332557",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@iSazonov on Windows, the current code clears the env block, then fills it from the system profile (hence username is system) and then the user profile overwriting any that exist in the system.  Hence Path is incomplete.  It seems the fix here is to merge Path (append user PATH to end of machine PATH).  USERNAME should be special cased to the user.  The test is to start a new cmd.exe from Windows shell, run `set` and have the env vars match if using `-UseNewEnvironment`.",
    "created_at": "2019-10-17T20:23:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-543346250",
    "id": 543346250,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzM0NjI1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543346250/reactions"
    },
    "updated_at": "2019-10-17T20:23:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543346250",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "A slight;y different use case is for -UseNewEnvironment to use the default environment when somehting like the path has changed in another procerss.\r\n\r\nSpecifically I'm using curl to download python and the script to initiate the install and want to start a shell with python on the path.\r\n\r\nMy original script is windows cmd but as there was no way to do this I looked at PowerShell and got excited by -UseNewEnvironment, only to find it is broken as per this bug.\r\n\r\nI guess security might be a consideration though. \r\n\r\nPS I'm another Steve Lee :)",
    "created_at": "2021-12-01T10:48:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4671#issuecomment-983516532",
    "id": 983516532,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4671",
    "node_id": "IC_kwDOAvT7bc46n0V0",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/983516532/reactions"
    },
    "updated_at": "2021-12-01T10:51:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/983516532",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/618922?v=4",
      "events_url": "https://api.github.com/users/SteveALee/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveALee/followers",
      "following_url": "https://api.github.com/users/SteveALee/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveALee/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveALee",
      "id": 618922,
      "login": "SteveALee",
      "node_id": "MDQ6VXNlcjYxODkyMg==",
      "organizations_url": "https://api.github.com/users/SteveALee/orgs",
      "received_events_url": "https://api.github.com/users/SteveALee/received_events",
      "repos_url": "https://api.github.com/users/SteveALee/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveALee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveALee/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveALee"
    }
  }
]
