[
  {
    "author_association": "COLLABORATOR",
    "body": "`Clone` is a method on `object[]` itself which will take priority over members of items contained within it. You'd need to manually enumerate with the pipeline, `foreach` or `$objects.ForEach('Clone')`.",
    "created_at": "2021-05-10T17:49:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15370#issuecomment-837039456",
    "id": 837039456,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15370",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzAzOTQ1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/837039456/reactions"
    },
    "updated_at": "2021-05-10T17:49:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/837039456",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "Or:\r\n```\r\n$objects | Select -expand Clone\r\n```",
    "created_at": "2021-05-10T19:16:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15370#issuecomment-837179653",
    "id": 837179653,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15370",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzE3OTY1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/837179653/reactions"
    },
    "updated_at": "2021-05-10T19:16:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/837179653",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience - I understand _why_ this is happening and how to work around it. But isn't it still a bug from a usage perspective, though?\r\n\r\nIt seems inconsistent that `$myArray.Property1` and `$myArray.Property2` are not necessarily unrolled the same way. Unrolling like this also makes it a potentially breaking change when .NET adds members to the Array class (e.g. if I addressed some data from an API like `$data.values.findfirst` and the FindFirst method is later added into .NET, my code will stop working).\r\n\r\nAdding to the confusion, the default behaviour on a single object would be to hide the original member and expose the one I overwrote it with. Unrolling a collection of those objects then decides that the property from the Array class is more important.\r\n\r\nI think this is unexpected behaviour from the perspective of most users.",
    "created_at": "2021-05-11T09:19:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15370#issuecomment-838137529",
    "id": 838137529,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15370",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODEzNzUyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/838137529/reactions"
    },
    "updated_at": "2021-05-11T09:19:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/838137529",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/40332187?v=4",
      "events_url": "https://api.github.com/users/NotNotWrongUsually/events{/privacy}",
      "followers_url": "https://api.github.com/users/NotNotWrongUsually/followers",
      "following_url": "https://api.github.com/users/NotNotWrongUsually/following{/other_user}",
      "gists_url": "https://api.github.com/users/NotNotWrongUsually/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/NotNotWrongUsually",
      "id": 40332187,
      "login": "NotNotWrongUsually",
      "node_id": "MDQ6VXNlcjQwMzMyMTg3",
      "organizations_url": "https://api.github.com/users/NotNotWrongUsually/orgs",
      "received_events_url": "https://api.github.com/users/NotNotWrongUsually/received_events",
      "repos_url": "https://api.github.com/users/NotNotWrongUsually/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/NotNotWrongUsually/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NotNotWrongUsually/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/NotNotWrongUsually"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "PowerShell can't automatically unroll a property name if a matching method or property name exists on the collection. That's sort of by design, I guess.\r\n\r\nIt can't know ahead of time what you want. If you had a property called `Length` or `Count` on your individual objects, how would it know whether you'd want to look for the property on the collection (to find how many elements are in said collection) or the individual properties on the objects?\r\n\r\nThe situation is ambiguous, and there's not a way to resolve that. PowerShell opts to prioritise the parent object here, and I don't think it's the wrong behaviour. If it didn't, there would be absolutely no way to really find the data on the parent object. As it is, it's sometimes a little confusing (so perhaps there is room for improvement in telling the user how to find the information they _might_ be looking for in some fashion, not sure how that would work) but in the end you can still access both the parent collection's properties/methods as well as the child objects' properties/methods.\r\n\r\nSure, you have to iterate the collection in a case where maybe you weren't expecting to need to, but it doesn't actively prevent you from accessing either. \"Fixing\" this would mean effectively that child objects' properties could actively prevent you from using properties on the parent collection.",
    "created_at": "2021-05-11T11:51:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15370#issuecomment-838336984",
    "id": 838336984,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15370",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODMzNjk4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/838336984/reactions"
    },
    "updated_at": "2021-05-11T11:51:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/838336984",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Good points.\r\n\r\nFor what it is worth, what seems intuitive to me in the context of unrolling would be:\r\n`$myCollection.Count` => give me the Count property from individual members of the collection _if such a property exists_, otherwise the Count of the parent object.\r\n`,$myCollection.Count` => Always gives the Count from the parent object.\r\n\r\nI can see how this could lead to some other confusing scenarios though (and intuitive to me might very well be illogical to someone else).\r\n\r\nWith that, I am closing the task. Maybe someone will come up with a brilliant idea for how to go about this and suggest an enhancement at some point. A bug it isn't.\r\n",
    "created_at": "2021-05-11T14:51:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15370#issuecomment-838616141",
    "id": 838616141,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15370",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzODYxNjE0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/838616141/reactions"
    },
    "updated_at": "2021-05-11T14:51:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/838616141",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/40332187?v=4",
      "events_url": "https://api.github.com/users/NotNotWrongUsually/events{/privacy}",
      "followers_url": "https://api.github.com/users/NotNotWrongUsually/followers",
      "following_url": "https://api.github.com/users/NotNotWrongUsually/following{/other_user}",
      "gists_url": "https://api.github.com/users/NotNotWrongUsually/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/NotNotWrongUsually",
      "id": 40332187,
      "login": "NotNotWrongUsually",
      "node_id": "MDQ6VXNlcjQwMzMyMTg3",
      "organizations_url": "https://api.github.com/users/NotNotWrongUsually/orgs",
      "received_events_url": "https://api.github.com/users/NotNotWrongUsually/received_events",
      "repos_url": "https://api.github.com/users/NotNotWrongUsually/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/NotNotWrongUsually/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NotNotWrongUsually/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/NotNotWrongUsually"
    }
  }
]
