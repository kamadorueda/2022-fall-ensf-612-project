[
  {
    "author_association": "MEMBER",
    "body": "Unfortunately, you can't just do:\r\n\r\n```powershell\r\n$a = @('-module','microsoft.powershell.utility','-name','invoke-restmethod')\r\nget-command @a\r\n```\r\n\r\nas it all becomes positional.",
    "created_at": "2021-04-20T20:59:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823596849",
    "id": 823596849,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzU5Njg0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823596849/reactions"
    },
    "updated_at": "2021-04-20T20:59:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823596849",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You could look though each and follow these rules\r\n\r\n* If it starts with `-` it's a parameter key\r\n* If the next arg also starts with `-` the value from before is `$true` (it's a switch) and this is a new parameter key\r\n* If it doesn't start with `-` it's a value\r\n  * If the previous is a parameter key use this as the value\r\n  * Else it's a positional argument and use `AddArgument`\r\n\r\nDefinitely not simple as you need to look ahead before determining whether something is a switch or a parameter with a value.\r\n\r\nEdit: This won't work due to https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823636792",
    "created_at": "2021-04-20T22:07:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823630579",
    "id": 823630579,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzYzMDU3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823630579/reactions"
    },
    "updated_at": "2021-04-20T22:52:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823630579",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "What is called for is a way to expose what is already implemented as part of the `-File` _CLI_ parameter: a way to take an array of _verbatim_ tokens and apply PowerShell's usual parameter binding to them.\r\n\r\nThat is, the _SDK_ (the [`PowerShell`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.PowerShell) class) needs something like an `.AddParametersFromVerbatimTokens()` method.",
    "created_at": "2021-04-20T22:19:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823636061",
    "id": 823636061,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzYzNjA2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823636061/reactions"
    },
    "updated_at": "2021-04-20T22:19:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823636061",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> You could look though each and follow these rules\r\n\r\nYes I thought about that. But:\r\n\r\n```powershell\r\nGet-ChildItem -Recurse ./dir\r\n```\r\n\r\nWe're forced to know the specifics of the command's parameters, which puts us into full parameter binding territory",
    "created_at": "2021-04-20T22:21:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823636792",
    "id": 823636792,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzYzNjc5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823636792/reactions"
    },
    "updated_at": "2021-04-20T22:21:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823636792",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> We're forced to know the specifics of the command's parameters\r\n\r\nAhh yes I didn't think about that unfortunately, sorry for the extra noise.",
    "created_at": "2021-04-20T22:51:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823649862",
    "id": 823649862,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzY0OTg2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 1,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823649862/reactions"
    },
    "updated_at": "2021-04-20T22:51:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823649862",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> sorry for the extra noise.\r\n\r\nNo not at all -- appreciate the help! I very nearly implemented what you suggested, but then was lucky to hit upon that counterexample.",
    "created_at": "2021-04-20T23:43:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823670611",
    "id": 823670611,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzY3MDYxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823670611/reactions"
    },
    "updated_at": "2021-04-20T23:43:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823670611",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Here is a code for -File scenario\r\nhttps://github.com/PowerShell/PowerShell/blob/2f0cc3b0f82e0e07e693db90daca39adb2caf591/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L1852-L1881\r\n\r\ninitialCommandArgs comes from CommandLineParser\r\nhttps://github.com/PowerShell/PowerShell/blob/2f0cc3b0f82e0e07e693db90daca39adb2caf591/src/Microsoft.PowerShell.ConsoleHost/host/msh/CommandLineParameterParser.cs#L1168-L1210\r\n\r\nThis could work for the json scenario too.",
    "created_at": "2021-04-21T11:33:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-823990710",
    "id": 823990710,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMzk5MDcxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823990710/reactions"
    },
    "updated_at": "2021-04-21T11:33:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/823990710",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rjmholt This *can't* work because editor services is not giving you enough information to correctly invoke the command. For example, you don't *know* if \"-param1\" is a formal parameter or a string argument. You need a richer API with some kind of extra Metadata in the `args` collection for this to be possible.",
    "created_at": "2021-04-21T17:06:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824219108",
    "id": 824219108,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDIxOTEwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824219108/reactions"
    },
    "updated_at": "2021-04-21T17:06:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824219108",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The functionality exists, as part of the CLI's `-File` parameter, and @iSazonov has thankfully pointed to the relevant source-code locations.\r\n\r\nWhat's needed is to bring this functionality to the SDK.\r\n\r\nTo revise and extend my previous suggestion:\r\n\r\n* Add a new `.Add*()`  method for \"baked in\" arguments, to complement the existing [`.AddParameters()`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.PowerShell.AddParameters) method(s):\r\n\r\n```c#\r\n// Accept a list (array) of strings to be interpreted as named arguments, as by the CLI's -File parameter.\r\npublic System.Management.Automation.PowerShell AddRawParameters (\r\n  System.Collections.Generic.IList<string> rawParameters\r\n);\r\n```\r\n\r\nAdd new `.InvokeWith*()` methods that parallel the `.Add*Parameters()` ones, for _repeatable_ calls with _different per-call arguments_, as previously discussed in https://github.com/PowerShell/PowerShell/issues/15004#issuecomment-799653120  (I'm leaving out overloads with the other parameters / generic return values supported by [`.Invoke()`](https://docs.microsoft.com/en-US/dotnet/api/System.Management.Automation.PowerShell.Invoke), the number of which could be reduced with optional parameters):\r\n\r\n```c#\r\n// positional arguments \r\npublic System.Collections.ObjectModel.Collection<System.Management.Automation.PSObject> InvokeWithParameters (\r\n  System.Collections.IList parameters)                        \r\n);\r\n\r\n// named arguments \r\npublic System.Collections.ObjectModel.Collection<System.Management.Automation.PSObject> InvokeWithParameters (\r\n  System.Collections.IDictionary parameters                        \r\n);\r\n\r\n// raw string tokens to be interpreted as named arguments, as by the CLI's -File parameter.\r\npublic System.Collections.ObjectModel.Collection<System.Management.Automation.PSObject> InvokeWithRawParameters (\r\n  System.Collections.Generic.IList<string> rawParameters) \r\n);\r\n```\r\n",
    "created_at": "2021-04-21T18:04:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824254115",
    "id": 824254115,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDI1NDExNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824254115/reactions"
    },
    "updated_at": "2021-04-21T18:05:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824254115",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Conceptually though I have an array of tokens or command elements.\r\n\r\nBetween the parser and the compiler, the parser just decides whether something is a parameter name or not based on whether it begins with `-` (which seems like a reasonable way to go), but doesn't try to associate arguments to parameters:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2f0cc3b0f82e0e07e693db90daca39adb2caf591/src/System.Management.Automation/engine/parser/Parser.cs#L6536-L6576\r\n\r\nInstead, it creates a command element array and gives that to the compiler:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2f0cc3b0f82e0e07e693db90daca39adb2caf591/src/System.Management.Automation/engine/parser/Compiler.cs#L4142-L4172\r\n\r\nAnd then that array is interpreted by PowerShell at runtime:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/2f0cc3b0f82e0e07e693db90daca39adb2caf591/src/System.Management.Automation/engine/runtime/Operations/MiscOps.cs#L164-L188\r\n\r\nI do understand what you're saying @BrucePay, that the tokeniser/parser theoretically does this classification work. I guess I'm saying that I'm happy to provide that step in a dumb way (essentially by providing a `CommandParameterInternal[]` array), so I can go halfway but still reuse PowerShell's logic to associate parameters with arguments.\r\n",
    "created_at": "2021-04-21T18:11:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824258111",
    "id": 824258111,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDI1ODExMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824258111/reactions"
    },
    "updated_at": "2021-04-21T18:11:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824258111",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the deep dive, @rjmholt. Do you see any problems with / do you have suggestions regarding the proposed API surface?",
    "created_at": "2021-04-21T18:23:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824265870",
    "id": 824265870,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDI2NTg3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824265870/reactions"
    },
    "updated_at": "2021-04-21T18:23:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824265870",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "One problem could potentially be how this is exposed for pipelines run in a remote runspace. I don’t think there is any parsing done locally for this case as the command/script is sent to the remote alongside any parameters as a list of name/value pairs (arguments just being values without a name). Adding such an API would have to raise an exception if run on a pipeline attached to a remote runspace.",
    "created_at": "2021-04-21T18:46:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824279543",
    "id": 824279543,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDI3OTU0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824279543/reactions"
    },
    "updated_at": "2021-04-21T18:47:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824279543",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  I don’t think there is any parsing done locally for this case as the command/script is sent to the remote alongside any parameters as a list of name/value pairs (arguments just being values without a name). Adding such an API would have to raise an exception if run on a pipeline attached to a remote runspace.\r\n\r\nI'm guessing that's a problem that `PowerShell.AddParameter()` has already had to solve, since you can attach a remote runspace to such an object.",
    "created_at": "2021-04-21T20:12:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824327980",
    "id": 824327980,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDMyNzk4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824327980/reactions"
    },
    "updated_at": "2021-04-21T20:12:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824327980",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Do you see any problems with / do you have suggestions regarding the proposed API surface?\r\n\r\nI don't want to go too far into things, but it feels like we need to use some kind of object here to say \"this is a parameter name\" and \"this is a value\". That's kind of the point we have to get it to to integrate with existing functionality. Perhaps PowerShell should do that though, I don't know.\r\n\r\nI think we'd need a proof of concept to really explore it further. I mainly opened the issue as a dual question/suggestion, to see if any alternative approaches existed and also if anyone else had this desire.",
    "created_at": "2021-04-21T20:17:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824330327",
    "id": 824330327,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDMzMDMyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824330327/reactions"
    },
    "updated_at": "2021-04-21T20:17:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824330327",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I'm guessing that's a problem that PowerShell.AddParameter() has already had to solve\r\n\r\nNot really, AFAIK these are just sent verbatim. The raw [CLIXML message](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-psrp/2cf8cccb-63ab-404a-82df-caef0c41717a) that contains the pipeline commands/scripts looks somewhat like this\r\n\r\n```xml\r\n<Obj RefId=\"3\">\r\n  <MS>\r\n    <S N=\"Cmd\">script or command to run, IsScript states which of the 2 this is</S>\r\n    <B N=\"IsScript\">true</B>\r\n    <Nil N=\"UseLocalScope\"/>\r\n    <Obj N=\"MergeMyResult\" RefId=\"4\">some values here that don't matter to this issue</Obj>\r\n    <Obj N=\"MergeToResult\" RefId=\"5\" />\r\n    <Obj N=\"MergePreviousResults\" RefId=\"6\" />\r\n    <Obj N=\"MergeError\" RefId=\"7\" />\r\n    <Obj N=\"MergeWarning\" RefId=\"8\" />\r\n    <Obj N=\"MergeVerbose\" RefId=\"9\" />\r\n    <Obj N=\"MergeDebug\" RefId=\"10\" />\r\n    <Obj N=\"Args\" RefId=\"11\">\r\n      <TNRef RefId=\"0\"/>\r\n      <LST>\r\n        <!--This is an argument, i.e. no Name just a value-->\r\n        <Obj RefId=\"7b\">\r\n          <MS>\r\n            <Nil N=\"N\"/>\r\n            <S N=\"V\">argument value</S>\r\n          </MS>\r\n        </Obj>\r\n        <!--This is a parameter, i.e. Name with a value, switches just use a boolean value-->\r\n        <Obj RefId=\"7b\">\r\n          <MS>\r\n            <S N=\"N\">ParameterName</S>\r\n            <S N=\"V\">parameter value</S>\r\n          </MS>\r\n        </Obj>\r\n      </LST>\r\n    </Obj>\r\n  </MS>\r\n</Obj>\r\n```\r\n\r\nSo regardless of whether `.AddArgument()` or `.AddParameter()` is used the raw CLIXML message still needs to know whether it's a positional argument or parameter which as you've said cannot be gleamed without reading the parameter definition and becoming your own binder. This is why the proposed method would require one of the 2 things to happen to support remote invocations\r\n\r\n* An exception saying this only works for local stuff where it can utilise the builtin binder to determine whether it's a positional argument or parameter to build the internal info\r\n* An extension to the CLIXML that allows you to just pass in a raw list of values and the parsing happens on the remote side\r\n\r\nThe 2nd is a lot more useful and works in more situations but it would require further extensions to the remote spec which may not be feasible. It's definitely possible as the `CREATE_PIPELINE` message already has variable properties based on the PowerShell version (`MergeInformation` is v5+).",
    "created_at": "2021-04-21T20:52:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824350603",
    "id": 824350603,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDM1MDYwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824350603/reactions"
    },
    "updated_at": "2021-04-21T20:53:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824350603",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Great stuff, @jborean93.\r\n\r\nOn a quick meta note: As is probably evident, I'm out of my depth with respect to the innards of the SDK, parser, compiler, remoting, but I always welcome the opportunity to learn more, and I'm hoping that my somewhat-unencumbered outsider perspective is at least somewhat helpful on occasion.\r\n\r\nUnderstood re not wanting to go deeper, @rjmholt, but re\r\n\r\n> It it feels like we need to use some kind of object here to say \"this is a parameter name\" and \"this is a value\".\r\n\r\nWasn't _not_ having to preprocess the array of would-be parameters and letting PowerShell do the heavy lifting the motivation for opening this issue?",
    "created_at": "2021-04-22T12:39:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-824804820",
    "id": 824804820,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyNDgwNDgyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824804820/reactions"
    },
    "updated_at": "2021-04-22T12:39:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/824804820",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Something you can technically do in the absence of a proper API is manually create a `CommandAst`.\r\n\r\nEverything that isn't a parameter *does* come through as a literal string though, unless you explicitly change up the ASTs you are creating.\r\n\r\nExample:\r\n\r\n```powershell\r\nusing namespace System.Management.Automation.Language\r\n\r\n$command = 'Get-ChildItem'\r\n$params = @(\r\n    '-Path',\r\n    'Something',\r\n    '-File')\r\n\r\n$ep = [ScriptPosition]::new(\r\n    <# scriptName: #> '',\r\n    <# scriptLineNumber: #> 0,\r\n    <# offsetInLine: #> 0,\r\n    <# line: #> '',\r\n    <# fullScript: #> '')\r\n\r\n$ee = [ScriptExtent]::new($ep, $ep)\r\n\r\n$commandElements = [CommandElementAst[]]::new($params.Length + 1)\r\n\r\n$commandElements[0] = [StringConstantExpressionAst]::new(\r\n    <# extent: #> $ee,\r\n    <# value: #> $command,\r\n    <# stringConstantType: #> [StringConstantType]::BareWord)\r\n\r\nfor ($i = 0; $i -lt $params.Length; $i++) {\r\n    $text = $params[$i]\r\n    if (-not $text.StartsWith('-')) {\r\n        $commandElements[$i + 1] = [StringConstantExpressionAst]::new($ee, $text, [StringConstantType]::BareWord)\r\n        continue\r\n    }\r\n\r\n    $commandElements[$i + 1] = [CommandParameterAst]::new(\r\n        <# extent: #> $ee,\r\n        <# parameterName: #> $text.Substring(1),\r\n        <# argument: #> $null,\r\n        <# errorPosition: #> $ee)\r\n}\r\n\r\n$sbAst = [ScriptBlockAst]::new(\r\n    <# extent: #> $ee,\r\n    <# paramBlock: #> $null,\r\n    <# statements: #> [StatementBlockAst]::new(\r\n        <# extent: #> $ee,\r\n        <# statements: #> [StatementAst[]](\r\n            [PipelineAst]::new(\r\n                <# extent: #> $ee,\r\n                <# pipelineElements: #> [CommandBaseAst[]](\r\n                    [CommandAst]::new(\r\n                        <# extent: #> $ee,\r\n                        <# commandElements: #> $commandElements,\r\n                        <# invocationOperator: #> [TokenKind]::Ampersand,\r\n                        <# redirections: #> $null)))),\r\n        <# traps: #> $null),\r\n    <# isFilter: #> $false)\r\n\r\n& $sbAst.GetScriptBlock()\r\n```",
    "created_at": "2021-08-23T03:17:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15285#issuecomment-903411165",
    "id": 903411165,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15285",
    "node_id": "IC_kwDOAvT7bc412PXd",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/903411165/reactions"
    },
    "updated_at": "2021-08-23T03:17:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/903411165",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
