[
  {
    "author_association": "COLLABORATOR",
    "body": "From @daxian-dbw \r\nI like the idea, very interesting, allowing people to have reusable argument completer attributes. About the implementation, why not have an abstract attribute class that defines an abstract method which returns an `IArgumentCompleter` instance? For example:\r\n\r\n```c#\r\n[AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)]\r\npublic abstract class ReusableArgumentCompletionAttribute : Attribute\r\n{\r\n    protected ReusableArgumentCompletionAttribute() {}\r\n    public abstract IArgumentCompleter NewArgumentCompleter(/* EngineIntrinsics engineIntrinsics ?? */);\r\n}\r\n```\r\n\r\nThis seems more succinct than `: ArgumentCompleterAttribute, IArgumentCompleterFactory`",
    "created_at": "2020-05-18T11:15:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-630114161",
    "id": 630114161,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDExNDE2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630114161/reactions"
    },
    "updated_at": "2020-05-18T11:15:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630114161",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Another thought is IArgumentCompleter\\<T> vs IArgumentCompleterFactory so that users could use ` IArgumentCompleter,  IArgumentCompleter<T>`\r\n",
    "created_at": "2020-05-18T11:21:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-630116702",
    "id": 630116702,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDExNjcwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630116702/reactions"
    },
    "updated_at": "2020-05-18T11:21:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630116702",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "/cc @joeyaiello @SteveL-MSFT @daxian-dbw @JamesWTruher ",
    "created_at": "2020-05-18T11:29:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-630120379",
    "id": 630120379,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDEyMDM3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630120379/reactions"
    },
    "updated_at": "2020-05-18T11:29:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630120379",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The reason I have been leaning towards an interface is that there may turn up other places where we want to support creation of completers.\r\n\r\nThis can be combined  with @daxian-dbw's idea.\r\n\r\n```csharp\r\n    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Property)]\r\n    public abstract class ArgumentCompleterFactoryAttribute : ArgumentCompleterAttribute, IArgumentCompleterFactory\r\n    {\r\n        // implements IArgumentCompleterFactory\r\n        public abstract IArgumentCompleter Create();\r\n    }\r\n```\r\n\r\nUsers can still just derive from `ArgumentCompleterFactoryAttribute` but we maintain the flexibility of an interface.\r\n\r\nOn the other hand, we could probably just add the interface later if we see other useful scenarios.",
    "created_at": "2020-05-18T15:19:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-630253167",
    "id": 630253167,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDI1MzE2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630253167/reactions"
    },
    "updated_at": "2020-05-18T15:19:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630253167",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@powercode thanks for starting this conversation.  Once the community has an agreement, the PS-Committee can review.",
    "created_at": "2020-05-20T16:22:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631580842",
    "id": 631580842,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTU4MDg0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631580842/reactions"
    },
    "updated_at": "2020-05-20T16:22:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631580842",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Maybe I'm just missing the point here, but I don't really see what this implementation offers that makes it easier / more robust than just creating an `IArgumentCompleter` class?\r\n\r\nFrom the examples, it seems kind of like I'd now need to create two classes for every argument completer I want to create instead of just the one, and I feel like that's more hassle than it's worth in many ways. 😕 ",
    "created_at": "2020-05-20T16:49:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631596099",
    "id": 631596099,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTU5NjA5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631596099/reactions"
    },
    "updated_at": "2020-05-20T16:49:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631596099",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The whole point is to be able to create completers with parameters. The current mechanics only allow for a type, that is instantiated with with it's default constructor. You have no way of creating generic completers where the user can control their behavior on a case by case basis.\r\n\r\nThink\r\n```powershell\r\nparam(\r\n[FileCompleter(Extension=\".json\")]\r\n[string]$Path\r\n,\r\n[FileCompleter(Extension=\".txt\", BaseNameFromParameter=\"Path\")]\r\n[string] $OutputPath\r\n)\r\n```\r\n\r\nThis would allow for the creation of libraries of completers, that can be implemented with high quality and used by others.\r\n",
    "created_at": "2020-05-20T19:35:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631682213",
    "id": 631682213,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY4MjIxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631682213/reactions"
    },
    "updated_at": "2020-05-20T19:35:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631682213",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "OK, I think that makes sense. I'm just not sure why we'd build it in such a way that requires a script author to implement two classes for it. Is it not possible to build this into a single class design that implements a given interface? I like that idea, I just think we might be overcomplicating the UX a bit here. 🙂 ",
    "created_at": "2020-05-20T19:47:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631688537",
    "id": 631688537,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY4ODUzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631688537/reactions"
    },
    "updated_at": "2020-05-20T19:48:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631688537",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Personally, I envision the completers shipping in-box, or has libraries written in C#. The UX then would be to *use* the provided attributes, as demonstrated above\r\n",
    "created_at": "2020-05-20T20:22:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631705387",
    "id": 631705387,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTcwNTM4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631705387/reactions"
    },
    "updated_at": "2020-05-20T20:22:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631705387",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That makes sense for some of them, absolutely. I don't see why we wouldn't make them something users can easily build upon as well, though. ",
    "created_at": "2020-05-20T20:27:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631707679",
    "id": 631707679,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTcwNzY3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631707679/reactions"
    },
    "updated_at": "2020-05-20T20:27:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631707679",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I have a concern about two classes too. We cannot completely decouple them.\r\n\r\nAlternative could be `public ArgumentCompleterAttribute(params object[] args)` where first parameter is a custom Completer type and follows are its arguments.",
    "created_at": "2020-05-21T03:32:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-631858359",
    "id": 631858359,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTg1ODM1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631858359/reactions"
    },
    "updated_at": "2020-05-21T03:32:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/631858359",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> The whole point is to be able to create completers with parameters. The current mechanics only allow for a type, that is instantiated with with it's default constructor. You have no way of creating generic completers where the user can control their behavior on a case by case basis.\r\n\r\nIt comes from the slightly strange way that completers are loaded.\r\nFor a validator I can write this \r\n```\r\nclass ValidatePathAttribute :  System.Management.Automation.ValidateArgumentsAttribute {\r\n    [string]$exception = \"\" \r\n    [boolean]$ContainersOnly = $false\r\n    [int]$MaxItems = -1 \r\n    [void] Validate(\r\netc \r\n```\r\nand use \r\n`[ValidatePath(exception=\"^-+$\",ContainersOnly=$true,MaxItems=1)]` \r\nin one place (so ^, - + and $ will be treated as valid and it must resolve to 1 container)\r\nand somewhere else I can use it without setting anything to validate files or folders and as many matches as you like \r\n\r\nBut with a completer because the specification is \r\n`[ArgumentCompleter([PathCompleter])]`\r\n\r\nthere is no option to say \"Create the instance of PathCompleter with these parameters set before you call completeArgument()\" \r\nThere is a work round by writing argumentCompleter({scriptblock}) but it makes for an ugly and hard to read script block, so two similar completers must be duplicate most of their code because they parameterize a choice like \"expand files and directories\" vs \"expand only directories\". \r\n\r\n  \r\n\r\n>  `public ArgumentCompleterAttribute(params object[] args)` where first parameter is a custom Completer type and follows are its arguments.\r\n\r\nwould be the most sensible way to add in the functionality. \r\n",
    "created_at": "2020-05-21T16:16:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632185065",
    "id": 632185065,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjE4NTA2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632185065/reactions"
    },
    "updated_at": "2020-05-21T16:16:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632185065",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I almost think we'd be better off adding a side-by-side implementation of an argument completer interface that works more like the validation attributes would be better. 🤷 \r\n\r\nDunno about that last point on the implementation detail, feels like there's probably a better way to do that. At the _very_ least, `public ArgumentCompleterAttribute(IArgumentCompleter completer, params object[] args)` seems a better bet. 🙂 ",
    "created_at": "2020-05-21T17:48:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632250087",
    "id": 632250087,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjI1MDA4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632250087/reactions"
    },
    "updated_at": "2020-05-21T17:48:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632250087",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I almost think we'd be better off adding a side-by-side implementation of an argument completer interface that works more like the validation attributes would be better. 🤷\r\n> \r\n> Dunno about that last point on the implementation detail, feels like there's probably a better way to do that. At the _very_ least, `public ArgumentCompleterAttribute(IArgumentCompleter completer, params object[] args)` seems a better bet. 🙂\r\n\r\nArgument completer is a special case (AIUI) because there can be as many transformers and validators as required, but there can't be two completers for the same thing trying to send lists back. So we have only one argument completing class with a constructor  which takes either a class (with specific requirements) or a script block (with specific requirements). Changing that would probably have complicated ripple effects. \r\n\r\nBut provided there is a way of writing \r\n`[Here_Be_Completion <<class name>> <<attribute values>> ]` I don't think many people will care very much about the details of the syntax, or what it looks like internally. \r\n\r\n",
    "created_at": "2020-05-22T08:45:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632576519",
    "id": 632576519,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjU3NjUxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632576519/reactions"
    },
    "updated_at": "2020-05-22T08:46:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632576519",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think you are missing an important point here. \r\nUsing properties have a documenting effect when using attributes. Using a params array in construction makes it impossible to use an attribute completer in more that one way, and it gives absolutely no information to the user what arguments to pass.\r\n\r\nI think you have to come to terms with the fact that the attribute and the completer are two different things.\r\n",
    "created_at": "2020-05-22T08:59:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632582062",
    "id": 632582062,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjU4MjA2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632582062/reactions"
    },
    "updated_at": "2020-05-22T08:59:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632582062",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We could create a completer for `ArgumentCompleterAttribute(type_completer, <Tab>` but I think it's not even worth the effort - if the user knows about the existence of this `type_completer` completer, then he knows how to use it or he is already looking at its description in the documentation.\r\n\r\n",
    "created_at": "2020-05-22T09:44:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632601599",
    "id": 632601599,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjYwMTU5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632601599/reactions"
    },
    "updated_at": "2020-05-22T09:44:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632601599",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I really think we should drop the params argument idea.\r\n\r\nThis is what the users would see\r\n```powershell\r\n[ArgumentCompleter([GitCommits], $true, $false, 15, 'release')]\r\n```\r\nWhat does that mean?\r\n\r\nThe properties of the attributes have a documenting effect.\r\n```powershell\r\n[GitCompleter(SkipMerges=$true, IncludeCurrentUser=$false,  OnlyUsersWithMoreCommitsThan=15, Branch='release')]\r\n``` \r\n\r\n",
    "created_at": "2020-05-22T11:54:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632653731",
    "id": 632653731,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjY1MzczMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632653731/reactions"
    },
    "updated_at": "2020-05-22T11:59:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632653731",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "```powershell\r\n[ArgumentCompleter([GitCommits], a=$true, b=$false, c=15, d='release')]$var\r\n```\r\nis parsed well.",
    "created_at": "2020-05-22T12:39:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632670474",
    "id": 632670474,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjY3MDQ3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632670474/reactions"
    },
    "updated_at": "2020-05-22T12:39:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632670474",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It parses, but the named arguments would have to map to properties on `[ArgumentCompleter]` which is why I'd think it's more useful to make `ArgumentCompleter` effectively inheritable or something along those lines so we can have the syntax @powercode is suggesting with more than just the initial set of attributes he proposed using, without complicating the design more than is needed.",
    "created_at": "2020-05-22T12:43:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632671876",
    "id": 632671876,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjY3MTg3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632671876/reactions"
    },
    "updated_at": "2020-05-22T12:43:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632671876",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  but the named arguments would have to map\r\n\r\nCan't PowerShell know such bindings? :-)\r\n",
    "created_at": "2020-05-22T13:05:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-632680583",
    "id": 632680583,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjY4MDU4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632680583/reactions"
    },
    "updated_at": "2020-05-22T13:05:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632680583",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  We agree that the current proposed design is the preferred one as the ability to have named parameters makes the code more understandable.  There was a general concern about introducing a new attribute which means modules require a specific version of an assembly (SMA.dll if these completers are part of PS or a shared assembly from nuget.org, for example), but this is true for any new compiled feature in PS.  Overall, we thought this was a good discussion and brought up many good points.  However, to make it easier to review and understand the user experience better, it would be great to have more example code in the issue.  In this case, the example code was in the PR as part of the test case:\r\n\r\n```csharp\r\nclass NumberCompleter : IArgumentCompleter \r\n{\r\n\r\n    [int] $From\r\n    [int] $To\r\n    [int] $Step\r\n\r\n    NumberCompleter([int] $from, [int] $to, [int] $step) \r\n    {\r\n        if ($from -gt $to) {\r\n            throw [ArgumentOutOfRangeException]::new(\"from\")\r\n        }\r\n        $this.From = $from\r\n        $this.To = $to\r\n        $this.Step = if($step -lt 1) { 1 } else { $step }\r\n    }\r\n\r\n    [IEnumerable[CompletionResult]] CompleteArgument(\r\n        [string] $CommandName,\r\n        [string] $parameterName,\r\n        [string] $wordToComplete,\r\n        [CommandAst] $commandAst,\r\n        [IDictionary] $fakeBoundParameters)\r\n    {\r\n        $resultList = [List[CompletionResult]]::new()\r\n        $local:to = $this.To\r\n        for ($i = $this.From; $i -le $to; $i += $this.Step) {\r\n            if ($i.ToString().StartsWith($wordToComplete, [System.StringComparison]::Ordinal)) {\r\n                $num = $i.ToString()\r\n                $resultList.Add([CompletionResult]::new($num, $num, \"ParameterValue\", $num))\r\n            }\r\n        }\r\n\r\n        return $resultList\r\n    }\r\n}\r\n\r\nclass NumberCompletionAttribute : ArgumentCompleterAttribute, IArgumentCompleterFactory\r\n{\r\n    [int] $From\r\n    [int] $To\r\n    [int] $Step\r\n\r\n    NumberCompletionAttribute([int] $from, [int] $to)\r\n    {\r\n        $this.From = $from\r\n        $this.To = $to\r\n        $this.Step = 1\r\n    }\r\n\r\n    [IArgumentCompleter] Create() { return [NumberCompleter]::new($this.From, $this.To, $this.Step) }\r\n}\r\n```\r\n\r\n```powershell\r\nfunction FactoryCompletionAdd {\r\n    param(\r\n        [NumberCompletion(0, 50, Step = 5)]\r\n        [int] $Number\r\n    )\r\n}\r\n```\r\n",
    "created_at": "2020-06-18T01:32:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-645715122",
    "id": 645715122,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTcxNTEyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645715122/reactions"
    },
    "updated_at": "2020-06-18T01:32:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/645715122",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I will probably become an issue of documentation, since I envision the box product to contain completers, just as it has validation attributes. Generic completers for files/directories, AD, etc will eventually become available and needs to be documented just like the attributes.",
    "created_at": "2020-06-22T14:10:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-647544365",
    "id": 647544365,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU0NDM2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647544365/reactions"
    },
    "updated_at": "2020-06-22T14:10:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647544365",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "NONE",
    "body": ":tada:This issue was addressed in #12605, which has now been successfully released as `v7.2.0-preview.5`.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.2.0-preview.5)\n",
    "created_at": "2021-04-14T23:59:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12708#issuecomment-819924301",
    "id": 819924301,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12708",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTkyNDMwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819924301/reactions"
    },
    "updated_at": "2021-04-14T23:59:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819924301",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
