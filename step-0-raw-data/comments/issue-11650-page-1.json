[
  {
    "author_association": "COLLABORATOR",
    "body": "Hmm. I don't think you need to make any changes in PS itself to accomplish this. You just need to change what you're passing around.\r\n\r\nFunctions are the upper layer here - a FunctionInfo object contains both a name and a scriptblock. So while scriptblocks can contain function _declarations_, they cannot contain functions directly.\r\n\r\nOnce a function is declared, you can retrieve the FunctionInfo object using `Get-Item Function:\\Function-Name` -- it's a standard PSDrive you can retrieve items from kind of like the filesystem.\r\n\r\nIf you pass function objects themselves around, I think you'll be able to mimic the kind of behaviour you're looking for. ðŸ™‚ ",
    "created_at": "2020-01-22T01:16:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11650#issuecomment-576962986",
    "id": 576962986,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11650",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Njk2Mjk4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/576962986/reactions"
    },
    "updated_at": "2020-01-22T01:17:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/576962986",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n\r\n\r\n\r\n> \r\n> \r\n> Hmm. I don't think you need to make any changes in PS itself to accomplish this. You just need to change what you're passing around.\r\n> \r\n> Functions are the upper layer here - a FunctionInfo object contains both a name and a scriptblock. So while scriptblocks can contain function _declarations_, they cannot contain functions directly.\r\n> \r\n> Once a function is declared, you can retrieve the FunctionInfo object using `Get-Item Function:\\Function-Name` -- it's a standard PSDrive you can retrieve items from kind of like the filesystem.\r\n> \r\n> If you pass function objects themselves around, I think you'll be able to mimic the kind of behaviour you're looking for. slightly_smiling_face\r\n\r\nthanks for the information but there are still some problems because i am trying to pass a function as a parameter to another function but my workaround is  scriptblock its not perfect and it will be awesome if there is a magic variable like $func and this variable contains information about the main function for example:\r\n\r\n```\r\nfunction timeExecution {\r\n\t\r\n \r\n\tfunction inner {\r\n\r\n\t\t$begin = [Diagnostics.Stopwatch]::StartNew() \r\n\t\t\r\n\t\t&{$func} \r\n\r\n        $end = $sw.Stop()\r\n  \t\t\"Total time taken in : $($func.functionName ) $($end - $begin)\"\r\n\r\n\t   inner\r\n    }\r\n}\r\n\r\n function mainfunc($n) :timeExecution {\r\n\t sleep $n\r\n\t'in main function'\r\n }\r\n```\r\n\r\n\r\n\r\nand the other problem how to mimic this syntax\r\n\r\n` function mainfunc($n) :timeExecution`\r\n\r\n",
    "created_at": "2020-01-22T02:38:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11650#issuecomment-576981184",
    "id": 576981184,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11650",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Njk4MTE4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/576981184/reactions"
    },
    "updated_at": "2020-01-22T02:38:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/576981184",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  }
]
