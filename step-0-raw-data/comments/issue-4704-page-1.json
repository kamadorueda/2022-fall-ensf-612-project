[
  {
    "author_association": "CONTRIBUTOR",
    "body": "You did hit a bug, but there are two important asides:  \r\n\r\nYou should always use `-LiteralPath` to prevent (potentially unwanted) wildcard matching:\r\n\r\n```powershell\r\nRemove-Item -LiteralPath \"HKCU:\\Software\\Classes\\*\\shell\\\"\r\n```\r\n\r\nPositionally, your argument binds to `-Path`, which performs wildcard matching, which would delete the `shell` subkeys of _all_ subkeys of `HKCU:\\Software\\Classes`.\r\n\r\n~Also, there is no escaping of wildcard expressions; `\"HKCU:\\Software\\Classes\\``*\\shell\\\"` tries to match `` HKCU:\\Software\\Classes\\`*\\shell\\ `` as a pattern, which is not the intent.~\r\n\r\n~The only way to suppress wildcard matching is to use `-LiteralPath`~.\r\n",
    "created_at": "2017-08-30T21:03:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4704#issuecomment-326118637",
    "id": 326118637,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4704",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjExODYzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326118637/reactions"
    },
    "updated_at": "2017-09-01T12:32:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326118637",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "A test case to demonstrate the problem succinctly:\r\n\r\n```powershell\r\n# Note that paths passed to New-Item are *always* interpreted as literals paths.\r\n# (Its -Path parameter is the equivalent of the -LiteralPath parameter in the Get-* and Remove-* cmdlets.)\r\nNew-Item -Force HKCU:\\_tmp\\*\\sub, HKCU:\\_tmp\\foo\\sub\r\n\r\n# -LiteralPath: Should only delete the key with the *literal* \"*\" in its path.\r\nRemove-Item -LiteralPath HKCU:\\_tmp\\*\\sub\\\r\n\r\n# -Path (implied by positional use: should apply wildcard matching and delete\r\n# the \"sub\"  subkeys of ALL \"HKCU:\\_tmp\" subkeys.\r\nRemove-Item HKCU:\\_tmp\\*\\sub\\\r\n\r\nRemove-Item -Recurse HKCU:\\_tmp\r\n```\r\n\r\nCurrently, the first 2 `Remove-Item` calls fail with `Illegal characters in path.`\r\n\r\nNote that the commands fail on Windows PowerShell too, but _quietly_.\r\n",
    "created_at": "2017-08-30T21:16:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4704#issuecomment-326121643",
    "id": 326121643,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4704",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEyMTY0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326121643/reactions"
    },
    "updated_at": "2017-08-30T21:22:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326121643",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thank you very much for quick response and for the tip on -LiteralPath, I was unaware of this option. \r\n\r\nOne other note on where I got `HKCU:\\Software\\Classes\\``*\\shell\\` from: as part of my debugging, I was trying to `cd` into the path with the \"*\" key in it. It seems that `cd` _does_ expand the wildcard. I was able to prevent the expansion of the wildcard and `cd` into the path with no problem when I escaped the backtick. I assumed this was because it might be getting passed to some code downstream that turns the backtick into an actual escape sequence. I have no idea if this is related, but perhaps it gives a little more info on the bug.\r\n\r\nWith unescaped wildcard:\r\n```powershell\r\ncd \"HKCU:\\Software\\Classes\\*\\shell\\\" \r\ncd : Cannot set the location because path 'HKCU:\\Software\\Classes\\*\\shell\\' resolved to multiple containers. You can only the set location to a\r\nsingle container at a time.\r\nAt line:1 char:1\r\n+ cd \"HKCU:\\Software\\Classes\\*\\shell\\\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument: (:) [Set-Location], PSArgumentException\r\n    + FullyQualifiedErrorId : Argument,Microsoft.PowerShell.Commands.SetLocationCommand\r\n```\r\nWith escaped backtick:\r\n```powershell\r\ncd \"HKCU:\\Software\\Classes\\``*\\shell\\\" \r\npwd\r\n\r\nPath\r\n----\r\nHKCU:\\Software\\Classes\\*\\shell\\\r\n```",
    "created_at": "2017-08-30T21:24:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4704#issuecomment-326123538",
    "id": 326123538,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4704",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEyMzUzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326123538/reactions"
    },
    "updated_at": "2017-08-30T21:24:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326123538",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5885?v=4",
      "events_url": "https://api.github.com/users/jared-is-ray/events{/privacy}",
      "followers_url": "https://api.github.com/users/jared-is-ray/followers",
      "following_url": "https://api.github.com/users/jared-is-ray/following{/other_user}",
      "gists_url": "https://api.github.com/users/jared-is-ray/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jared-is-ray",
      "id": 5885,
      "login": "jared-is-ray",
      "node_id": "MDQ6VXNlcjU4ODU=",
      "organizations_url": "https://api.github.com/users/jared-is-ray/orgs",
      "received_events_url": "https://api.github.com/users/jared-is-ray/received_events",
      "repos_url": "https://api.github.com/users/jared-is-ray/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jared-is-ray/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jared-is-ray/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jared-is-ray"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jared-is-ray: \r\n\r\nThe escaping trick is intriguing - ~~I would _not_ expect that to work, and~~, bizarrely, it even works with _two_ backticks (but no more):\r\n\r\n```powershell\r\n# Inexplicably works even with *2* (effective) backticks.\r\ncd \"HKCU:\\Software\\Classes\\````*\\shell\\\" # same as: 'HKCU:\\Software\\Classes\\``*\\shell\\'\r\n```\r\n\r\nAgain, however, `-LiteralPath` is the right solution:\r\n\r\n```powershell\r\ncd -LiteralPath HKCU:\\Software\\Classes\\*\\shell\\\r\n```",
    "created_at": "2017-08-30T21:37:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4704#issuecomment-326126523",
    "id": 326126523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4704",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjEyNjUyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326126523/reactions"
    },
    "updated_at": "2017-09-01T12:17:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326126523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jared-is-ray: \r\n\r\nMy bad: You _can_ escape wildcard patterns, and what you tried should have worked, after all.\r\n\r\n```powershell\r\n> [System.Management.Automation.WildcardPattern]::Escape('HKCU:\\Software\\Classes\\*\\shell\\')\r\nHKCU:\\Software\\Classes\\`*\\shell\\\r\n```\r\n\r\n* I still puzzled by the escaping with _two_ `` ` `` (effective) instances, however, given the following:\r\n\r\n```powershell\r\n[System.Management.Automation.WildcardPattern]::Unescape('``*')\r\n`*   # !! 1 ` retained, as expected.\r\n```\r\n\r\n* Given that it's easy to get the escaping wrong manually and it is cumbersome to apply it programmatically, escaping is best reserved for cases where you have a wildcard expression in which you must escape _parts_ as literals; in other words: if you know that your path is meant to be taken literally, `-LiteralPath` is the simple and robust choice.\r\n\r\n",
    "created_at": "2017-09-01T12:41:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4704#issuecomment-326569986",
    "id": 326569986,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4704",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU2OTk4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326569986/reactions"
    },
    "updated_at": "2017-09-01T12:41:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/326569986",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
