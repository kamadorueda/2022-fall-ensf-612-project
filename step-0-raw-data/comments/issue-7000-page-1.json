[
  {
    "author_association": "COLLABORATOR",
    "body": "@LethiferousMoose Please add working repo steps. We could use them as a test.",
    "created_at": "2018-06-05T16:46:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7000#issuecomment-394780380",
    "id": 394780380,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7000",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDc4MDM4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394780380/reactions"
    },
    "updated_at": "2018-06-05T16:46:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394780380",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I rearranged the cmdlets into the correct order. That should be all that's needed.",
    "created_at": "2018-06-05T22:02:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7000#issuecomment-394874930",
    "id": 394874930,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7000",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg3NDkzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394874930/reactions"
    },
    "updated_at": "2018-06-05T22:02:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394874930",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24547864?v=4",
      "events_url": "https://api.github.com/users/LethiferousMoose/events{/privacy}",
      "followers_url": "https://api.github.com/users/LethiferousMoose/followers",
      "following_url": "https://api.github.com/users/LethiferousMoose/following{/other_user}",
      "gists_url": "https://api.github.com/users/LethiferousMoose/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LethiferousMoose",
      "id": 24547864,
      "login": "LethiferousMoose",
      "node_id": "MDQ6VXNlcjI0NTQ3ODY0",
      "organizations_url": "https://api.github.com/users/LethiferousMoose/orgs",
      "received_events_url": "https://api.github.com/users/LethiferousMoose/received_events",
      "repos_url": "https://api.github.com/users/LethiferousMoose/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LethiferousMoose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LethiferousMoose/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LethiferousMoose"
    }
  },
  {
    "author_association": "NONE",
    "body": "For more context this is what I am doing with ```Register-ObjectEvent``` (note this is a stripped down version):\r\n```powershell\r\nclass BaseConfiguration {\r\n    # Properties\r\n    [bool] $CacheInvalidated;\r\n    \r\n    # Hidden Properties\r\n    hidden [System.IO.FileInfo] $CurrentConfig;\r\n    hidden [System.IO.FileSystemWatcher] $Watcher;\r\n    hidden [System.Management.Automation.PSEventJob] $FileChangedEventJob;\r\n\r\n    hidden [void] AddConfigurationFileChangedListener([string] $configPath) {\r\n        if ($null -eq $this.FileChangedEventJob) {\r\n            $this.Watcher = [System.IO.FileSystemWatcher]::new($configPath, '*.json')\r\n            $this.Watcher.NotifyFilter = [System.IO.NotifyFilters]::FileName, [System.IO.NotifyFilters]::LastWrite\r\n            $this.Watcher.IncludeSubdirectories = $true\r\n            \r\n            $this.FileChangedEventJob = Register-ObjectEvent -InputObject $this.Watcher -MessageData $this `\r\n                                                             -EventName Changed -Action {\r\n                [BaseConfiguration] $config = $event.MessageData\r\n                [string] $fileName = $event.SourceEventArgs.Name\r\n\r\n                if ($null -ne $config.CurrentConfig -and $config.CurrentConfig.Name -eq $fileName) {\r\n                    $event.MessageData.CacheInvalidated = $true\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBased on the documentation for ```Register-EngineEvent``` is sounded like the same behavior I used for ```Register-ObjectEvent``` was possible with ```Register-EngineEvent```.\r\n\r\nFor example:\r\n```powershell\r\nclass BaseConfiguration {\r\n    # Properties\r\n    [bool] $CacheInvalidated;\r\n    \r\n    # Hidden Properties\r\n    hidden [System.Management.Automation.PSEventJob] $ConfigurationChangedEventJob;\r\n\r\n    hidden [void] AddConfigurationChangedListener() {\r\n        if ($null -eq $this.ConfigurationChangedEventJob) {\r\n            $this.ConfigurationChangedEventJob = Register-EngineEvent -SourceIdentifier 'ConfigurationChanged' `\r\n                                                                      -MessageData $this -SupportEvent -Action {\r\n            $event.MessageData.CacheInvalidated = $true\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThen I could call:\r\n```powershell\r\nNew-Event -SourceIdentifier 'ConfigurationChanged'\r\n```\r\n\r\nFrom a different module to update all derived configuration classes.\r\n\r\nAccording to https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/register-engineevent?view=powershell-6#optional-parameters\r\n\r\n```Register-EngineEvent```'s ```MessageData``` property is defined as:\r\n\r\n> Specifies additional data associated with the event. The value of this parameter appears in the MessageData property of the event object.\r\n\r\nAlso confusingly, if we look at ```New-Event```'s documentation we find the same definition:\r\nhttps://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/new-event?view=powershell-6#optional-parameters\r\n\r\nSo if this gets fixed, it is going to have to be determined how the two different ```MessageData``` parameters live together from both ```New-Event``` and ```Register-EngineEvent```.",
    "created_at": "2018-06-06T19:52:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7000#issuecomment-395192608",
    "id": 395192608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7000",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE5MjYwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395192608/reactions"
    },
    "updated_at": "2018-06-06T19:57:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395192608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24547864?v=4",
      "events_url": "https://api.github.com/users/LethiferousMoose/events{/privacy}",
      "followers_url": "https://api.github.com/users/LethiferousMoose/followers",
      "following_url": "https://api.github.com/users/LethiferousMoose/following{/other_user}",
      "gists_url": "https://api.github.com/users/LethiferousMoose/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LethiferousMoose",
      "id": 24547864,
      "login": "LethiferousMoose",
      "node_id": "MDQ6VXNlcjI0NTQ3ODY0",
      "organizations_url": "https://api.github.com/users/LethiferousMoose/orgs",
      "received_events_url": "https://api.github.com/users/LethiferousMoose/received_events",
      "repos_url": "https://api.github.com/users/LethiferousMoose/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LethiferousMoose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LethiferousMoose/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LethiferousMoose"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@lzybkr Could you please clarify - should we resolve the request?",
    "created_at": "2018-06-07T03:42:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7000#issuecomment-395283100",
    "id": 395283100,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7000",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTI4MzEwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395283100/reactions"
    },
    "updated_at": "2018-06-07T03:42:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395283100",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I am also experiencing this problem when working with PS events. I expected it to use the original event subscription's MessageData, but it looks like I need to provide its MessageData object each time New-Event is called. I am using -Forward parameter to forward the event to the main subscribed event.\r\n\r\n**Simplified code**\r\n\r\n**Main script:**\r\n$testEventData = New-Object PSObject -property @{someValue = $someValue}\r\nRegister-EngineEvent -SourceIdentifier Test.Event -MessageData $testEventData -Action { ... }\r\n\r\n**In another script:**\r\nRegister-EngineEvent -SourceIdentifier Test.Event -Forward\r\nNew-Event Test.Event\r\n\r\n---\r\n\r\n$event.MessageData.someValue is null when the event is called in another script, even though I have set that event to forward to the main event.",
    "created_at": "2018-12-14T16:17:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7000#issuecomment-447373823",
    "id": 447373823,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7000",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzM3MzgyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447373823/reactions"
    },
    "updated_at": "2018-12-14T16:17:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/447373823",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17824719?v=4",
      "events_url": "https://api.github.com/users/Kungfoowiz/events{/privacy}",
      "followers_url": "https://api.github.com/users/Kungfoowiz/followers",
      "following_url": "https://api.github.com/users/Kungfoowiz/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kungfoowiz/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Kungfoowiz",
      "id": 17824719,
      "login": "Kungfoowiz",
      "node_id": "MDQ6VXNlcjE3ODI0NzE5",
      "organizations_url": "https://api.github.com/users/Kungfoowiz/orgs",
      "received_events_url": "https://api.github.com/users/Kungfoowiz/received_events",
      "repos_url": "https://api.github.com/users/Kungfoowiz/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Kungfoowiz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kungfoowiz/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Kungfoowiz"
    }
  }
]
