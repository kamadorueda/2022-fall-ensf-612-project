[
  {
    "author_association": "NONE",
    "body": "Currently you can call a method of the base class like this, but it requires an ugly type cast (see [about_Classes](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_classes?view=powershell-7.1#invoke-base-class-methods)):\r\n\r\n```powershell\r\nclass bar : foo {\r\n    [string] sayhello($name) {\r\n        return ([foo] $this).sayhello($name) + \"`npower${name}\"\r\n    }\r\n}\r\n```\r\nOutput:\r\n<pre>\r\nhello shell\r\npowershell\r\n</pre>\r\n\r\nI would prefer to call the base class without having to repeat its name and without casting, similar to C#'s [`base`](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/base) keyword:\r\n```powershell\r\nclass bar : foo {\r\n    [string] sayhello($name) {\r\n        # Currently not possible!\r\n        return $base.sayhello($name) + \"`npower${name}\"\r\n    }\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2021-02-13T21:03:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14795#issuecomment-778678047",
    "id": 778678047,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14795",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY3ODA0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778678047/reactions"
    },
    "updated_at": "2021-02-13T21:08:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778678047",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/18427509?v=4",
      "events_url": "https://api.github.com/users/zett42/events{/privacy}",
      "followers_url": "https://api.github.com/users/zett42/followers",
      "following_url": "https://api.github.com/users/zett42/following{/other_user}",
      "gists_url": "https://api.github.com/users/zett42/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/zett42",
      "id": 18427509,
      "login": "zett42",
      "node_id": "MDQ6VXNlcjE4NDI3NTA5",
      "organizations_url": "https://api.github.com/users/zett42/orgs",
      "received_events_url": "https://api.github.com/users/zett42/received_events",
      "repos_url": "https://api.github.com/users/zett42/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/zett42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zett42/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/zett42"
    }
  },
  {
    "author_association": "NONE",
    "body": "@zett42  thanks,\r\n\r\nthe problem with your ideas\r\n\r\n1)         return ([foo] $this).sayhello($name) + \"`npower${name}\"\r\n\r\nis uggly\r\n\r\n2)         return $base.sayhello($name) + \"`npower${name}\"\r\n\r\nits better but it need to write explicitly the code (sometimes is good) but not all the times...imagine you have a child class inherit to a base class and the base class inherit to a super class ? OR imagine your call to method is repeated in other methods...its preferable to use a new keyword to do this...but still your idea a good idea and maybe the 2 ideas is good to implement.\r\n\r\nexample of problems:\r\n\r\n```\r\n class b  {\r\n    funct() {}\r\n}\r\n\r\nclass c : b {\r\n    super funct() {}\r\n}\r\n\r\nclass d : b {\r\n    super funct() {}\r\n}\r\n\r\nclass c : b {\r\n    super funct() {}\r\n}\r\n```\r\n\r\nit less typing",
    "created_at": "2021-02-14T00:40:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14795#issuecomment-778700231",
    "id": 778700231,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14795",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODcwMDIzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 1,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778700231/reactions"
    },
    "updated_at": "2021-02-14T00:40:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778700231",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> the problem with your ideas\r\n\r\nJust to be clear, the first example isn't an idea, that's how the PowerShell team decided to implement that functionality (side note: I can kinda see why. `$base` would have been a pain to implement with how the binder works, and since it probably doesn't matter for DSC it likely wasn't a big priority).  Like that example currently works.\r\n\r\n`$base` would have been nice, but implementing it today may not be feasible without breaking changes.\r\n\r\n---\r\n\r\nAs for `super`, that's sort of confusing with a return value.  It always just adds them together? So if the method returns `int`, the parent returns `5` and the child returns `5` then the invocation returns `10`?",
    "created_at": "2021-02-14T01:39:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14795#issuecomment-778706230",
    "id": 778706230,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14795",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODcwNjIzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778706230/reactions"
    },
    "updated_at": "2021-02-14T01:46:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778706230",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience \r\n\r\nthanks...the idea come from [Ruby](https://stackoverflow.com/questions/4632224/super-keyword-in-ruby) . ",
    "created_at": "2021-02-14T07:55:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14795#issuecomment-778742330",
    "id": 778742330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14795",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODc0MjMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778742330/reactions"
    },
    "updated_at": "2021-02-14T07:55:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778742330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> thanks...the idea come from [Ruby](https://stackoverflow.com/questions/4632224/super-keyword-in-ruby) .\r\n\r\nLooks like (from that SO at least) it's called in a similar way as `$base` would be (e.g. it's a method body keyword, not a method signature keyword).  And it makes a little bit more sense there since they're doing the equivalent of `Write-Host` rather than actually trying to join return values.\r\n\r\n---\r\n\r\nIt **would** be nice to have a better way to call a method on the base class, even if it doesn't come up all that often.",
    "created_at": "2021-02-14T22:41:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14795#issuecomment-778854064",
    "id": 778854064,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14795",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODg1NDA2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778854064/reactions"
    },
    "updated_at": "2021-02-14T22:41:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778854064",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
