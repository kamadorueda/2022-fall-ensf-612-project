[
  {
    "author_association": "NONE",
    "body": "At the same, this issue can be replicated in PowerShell Core (v6 Beta).\r\n\r\n![posh_issue_2017-05-17_15-45-56](https://cloud.githubusercontent.com/assets/19892435/26172902/f99ccdf6-3b17-11e7-8267-86379ece3d04.jpg)\r\n\r\nPlease, I may suggest to also post this incident at Windows PowerShell UserVoice site at: https://windowsserver.uservoice.com/forums/301869-powershell/category/148044-powershell-engine\r\n\r\nThis way the Windows PowerShell team can assist in taking a look at this issue.\r\n\r\n:)\r\n",
    "created_at": "2017-05-17T19:47:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302211883",
    "id": 302211883,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjIxMTg4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302211883/reactions"
    },
    "updated_at": "2017-05-17T19:47:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302211883",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "PowerShell compiles the entire text of a script at once so a parse error anywhere in the block prevents the entire block from being executed. QED you can't catch or detect a parse error in the code being parsed since that code is never run. @mklement0 's example of 1/0 is not a parse error. (It was treated as a parse-time error in PowerShell V1 but it's been a runtime error since then.) ",
    "created_at": "2017-05-17T22:55:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302254018",
    "id": 302254018,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjI1NDAxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302254018/reactions"
    },
    "updated_at": "2017-05-17T22:55:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302254018",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Really in second example a pipeline is created but [interrupted](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L367) and [the code](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/hostifaces/LocalPipeline.cs#L407) that set QuestionMarkVariableValue don't executed. \r\nDefault value for QuestionMarkVariableValue is True - so we see True as result.\r\n\r\nI believe it is by design - (1) as @BrucePay said it is not problem for script because _no command_ will be executed - that's why we should use try-catch. (2) for interactive session using $? is pointless while you see parser error - I believe we shouldn't worry about QuestionMarkVariableValue value in that case.",
    "created_at": "2017-05-18T10:00:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302359108",
    "id": 302359108,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjM1OTEwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302359108/reactions"
    },
    "updated_at": "2017-05-18T10:00:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302359108",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: My bad (I have little insight into how PS parsing works at this point; other comment deleted too):\r\n\r\nI missed that if the code is placed in a script, the _entire script_ won't be executed, so it _is_ treated as  parse error. \r\n\r\nInteractively, this can be shown by placing `$?` on the _same_ line, in which case `$?` is never executed:\r\n\r\n```powershell\r\n1..5 | $_; $?   # $? never executes\r\n```\r\n\r\nCalling a script that fails to parse _from another script_ DOES set `$?` to `$False`, so the interactive behavior - though unexpected - is less of an issue, as you say.\r\n\r\nOn a related note, however: from the calling script's perspective, shouldn't an attempt to call a script _with parse errors_ result in a _terminating_ error that the calling script must therefore handle with `try` / `catch`?\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-05-18T13:38:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302405924",
    "id": 302405924,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQwNTkyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302405924/reactions"
    },
    "updated_at": "2017-05-18T13:38:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302405924",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Please don't remove history. You can strike out - use ~~double tildes around the words~~.",
    "created_at": "2017-05-18T13:44:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302407830",
    "id": 302407830,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQwNzgzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302407830/reactions"
    },
    "updated_at": "2017-05-18T13:44:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302407830",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "My understanding is that $? is from v1 time and today a prefered way is ` try  /  catch`",
    "created_at": "2017-05-18T13:47:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302408576",
    "id": 302408576,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQwODU3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302408576/reactions"
    },
    "updated_at": "2017-05-18T13:47:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302408576",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good point re history, will do.\r\n\r\n`$?` still has (and, I presume, will continue to have) its place for reflecting _non-terminating_ errors, but a parse error is arguably severe enough to warrant a terminating one so that the calling script aborts _by default_.\r\n\r\nYes, you _can_ detect the parse error with `try` / `catch` (the exception inside the error record is of type `[System.Management.Automation.ParseException]`), but _by default_ the calling script continues to run.\r\n\r\nNote that an ordinary non-terminating error - such as reported by `Get-Item /Nosuch` can _not_ be caught with `try` / `catch`.\r\n\r\nFrom what I can tell, this **problematic hybrid behavior** - non-terminating-error behavior by default, terminating-error behavior with `try` / `catch` - applies to the following kinds of errors:\r\n\r\n * parse errors in an invoked script (`[System.Management.Automation.ParseException]`)\r\n * runtime errors such as `1 / 0` (`[System.Management.Automation.RuntimeException]`)\r\n * parameter-binding exceptions such as `Get-Content -NoSuchParam` (`[System.Management.Automation.ParameterBindingException]`)\r\n * .NET methods that report an exception, such as`[int]::Parse('foo')` (`[System.Management.Automation.MethodInvocationException]`)\r\n\r\nNote sure if there are more.\r\n\r\nAs I've suggested in https://github.com/PowerShell/PowerShell/issues/3359#issuecomment-287842045, **perhaps it makes more sense to treat these as _terminating_ errors.**\r\n\r\n\r\n\r\n",
    "created_at": "2017-05-18T14:06:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302414087",
    "id": 302414087,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQxNDA4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302414087/reactions"
    },
    "updated_at": "2017-05-18T16:11:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302414087",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "In PowerShell context \"terminating\" error is a error \"terminating current pipeline\".\r\nAs previously mentioned, we have confusion with terminating and non-terminating errors.",
    "created_at": "2017-05-18T14:52:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302428262",
    "id": 302428262,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQyODI2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302428262/reactions"
    },
    "updated_at": "2017-05-18T14:52:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302428262",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> My understanding is that $? is from v1 time and today a prefered way is try / catch\r\n\r\n`$?` is still useful in scripts to see if a command encountered a non-terminating error.  Say I'm copying a bunch of files recursively from one dir to another.  If there is a file or folder I don't have permission to the copy will not 100% succeed.  I can test for this condition by checking `$?`.  \r\n\r\nOf course, you can tell PowerShell to convert the non-terminating error to a terminating error with `-ErrorAction Stop` and then use try/catch.  Which one a scripter chooses comes down to preference - what a scripter is more comfortable with.",
    "created_at": "2017-05-18T15:39:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302443582",
    "id": 302443582,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQ0MzU4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302443582/reactions"
    },
    "updated_at": "2017-05-18T15:39:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302443582",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rkeithhill: \r\n\r\nAbsolutely, but my point was that the error types I've mentioned (parse in callee/runtime/parameter binding/method invocation):\r\n\r\n* behave like _non-terminating_ errors by default\r\n* though in their ability to be caught _irrespective of the current `$ErrorActionPreference` value_ they behave like _terminating ones_ - this is what I meant by \"hybrid\".\r\n\r\nIt seems to me that making these error types regular _terminating_ errors not only resolves the inconsistency, but also makes more sense:\r\nThese types of errors are _not_ the ones you want to _tolerate_ as _partial failures_ while the script goes on to still perform (partially) useful things.\r\n\r\nFor instance, if I call `Get-Content -NoSuchParameter` in a script, I want that script to _break_ by default. \r\n\r\nWith respect to the general distinction between terminating and non-terminating errors and to what extent PS and its cmdlets play by the official rules, I've tried to summarize the state of affairs in [this SO answer](http://stackoverflow.com/a/39949027/45375) a while back.\r\n\r\n[_Update_ with the benefit of hindsight: I was arguing for a _script_-terminating error, as opposed to a _statement_-terminating one; the former term is not official, but reflects the de-facto behavior summarized in this [doc issue](https://github.com/PowerShell/PowerShell-Docs/issues/1583).]",
    "created_at": "2017-05-18T16:24:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302461661",
    "id": 302461661,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQ2MTY2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302461661/reactions"
    },
    "updated_at": "2018-03-18T16:29:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302461661",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": ">     $?  \r\n>        Contains the execution status of the last operation. It contains\r\n>        TRUE if the last operation succeeded and FALSE if it failed\r\n\r\nFrom the end user point of view it doesn't matter what type of error he sees on the screen. He sees red text and an error description but $? returns $true. He decides \"ok, look like this thing doesn't work, I wont use it\" and then he goes to: \r\n```powershell\r\n$error.Clear()\r\n... -ErrorAction SilentlyContinue\r\nif($error.Count -gt 0) \r\n```\r\nLooks like it would be great to change the default value to $false.\r\nIf no operation was executed then how status of it's execution can be $true.",
    "created_at": "2017-05-18T17:07:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302474962",
    "id": 302474962,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQ3NDk2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302474962/reactions"
    },
    "updated_at": "2017-05-18T17:07:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302474962",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24692707?v=4",
      "events_url": "https://api.github.com/users/dronkoff/events{/privacy}",
      "followers_url": "https://api.github.com/users/dronkoff/followers",
      "following_url": "https://api.github.com/users/dronkoff/following{/other_user}",
      "gists_url": "https://api.github.com/users/dronkoff/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dronkoff",
      "id": 24692707,
      "login": "dronkoff",
      "node_id": "MDQ6VXNlcjI0NjkyNzA3",
      "organizations_url": "https://api.github.com/users/dronkoff/orgs",
      "received_events_url": "https://api.github.com/users/dronkoff/received_events",
      "repos_url": "https://api.github.com/users/dronkoff/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dronkoff/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dronkoff/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dronkoff"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I do question the value of making a change here. `$?` is most useful when it's not obvious if there was an error or not, and it's especially useful in automation.\r\n\r\nParse errors that occur during automation should be exceedingly rare - it basically means you didn't test your script before deployment.",
    "created_at": "2017-05-18T17:52:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302489617",
    "id": 302489617,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjQ4OTYxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302489617/reactions"
    },
    "updated_at": "2017-05-18T17:52:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302489617",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@lzybkr: I realize I've hijacked this thread a bit.\r\n\r\n* _Interactively_, I do see that the current behavior is not too problematic, despite its awkwardness.\r\n\r\n* When it comes to _automation_:\r\n\r\n  * Even with respect to parse errors alone I would want a script that calls a non-parseable script to _fail right away_, even  _while developing_ a script.\r\n\r\n  * There are also the less predictable cases I've mentioned (runtime/parameter binding/method invocation), where a script _breaking_ would be much more helpful than just continuing.\r\n\r\nJust so we have clarity:\r\n\r\n* Is the only reason for not wanting to make a change _backward compatibility_?\r\n\r\n* Does this apply to _all_ of the error types mentioned, or is it worth opening a separate issue for at least _some_ of them?\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-05-18T21:07:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-302541867",
    "id": 302541867,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjU0MTg2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302541867/reactions"
    },
    "updated_at": "2017-05-18T21:07:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/302541867",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 \r\n\r\n> Even with respect to parse errors alone I would want a script that calls a non-parseable script to fail right away, even while developing a script.\r\n\r\nCommand resolution is done at run time (commands are late-bound). A called script won't be compiled until it is called. It may not even be called at all depending on the runtime logic of the calling script.\r\n",
    "created_at": "2018-03-13T17:36:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-372752882",
    "id": 372752882,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc1Mjg4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372752882/reactions"
    },
    "updated_at": "2018-03-13T17:36:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372752882",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\nYes, but that's not what I meant. I was responding to the following comment by @lzybkr:\r\n\r\n>  it basically means you didn't test your script before deployment.\r\n\r\nWhat I was trying to say was: _at runtime_, an attempt to call a script that fails to parse should cause a _script_-terminating error (runspace-terminating error), not a _statement_-terminating error - whether in production or during development.\r\n\r\nIt simply makes no sense to continue execution _by default_ in such a scenario, which is what currently happens.\r\n\r\n\r\n",
    "created_at": "2018-03-13T18:23:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-372769005",
    "id": 372769005,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc2OTAwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372769005/reactions"
    },
    "updated_at": "2018-03-13T18:23:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/372769005",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 I get that parse errors _feel_ different, but thinking practically, why should a parse error be handled differently from any other fatal error that the script might encounter? Either way, from the caller's perspective, it's just another command that failed.  Now you could argue that **all** unhandled errors should be fatal and terminate the script by default. That's what C# effectively does. But that's not what shells (bash, cmd, etc.) do and PowerShell is a shell. But PowerShell is also a scripting language and so we have hybrid semantics with exit status ($?) and exceptions. In fact part of the reason for deciding to have the `trap` statement was that it made it easy to change how fatal errors are handled throughout a script. \r\n\r\n(Small note: you probably don't want syntax errors to be runspace terminating otherwise your interactive session would end the first time you mistyped a command. That seems undesirable :-)",
    "created_at": "2018-03-14T19:04:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-373139350",
    "id": 373139350,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzEzOTM1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373139350/reactions"
    },
    "updated_at": "2018-03-14T19:04:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373139350",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay  I'll address the conceptual issues later; but re your small note:\r\n\r\n> you probably don't want syntax errors to be runspace terminating otherwise your interactive session would end the first time you mistyped a command.\r\n\r\nRunspace-terminating errors don't terminate interactive sessions; I don't know how interactive sessions are implemented, but executing something like `Throw \"a fit\"` on the command line does _not_ terminate the session.",
    "created_at": "2018-03-17T03:02:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-373889726",
    "id": 373889726,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg4OTcyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373889726/reactions"
    },
    "updated_at": "2018-03-17T03:02:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/373889726",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\n> I get that parse errors feel different, but thinking practically, why should a parse error be handled differently from any other fatal error that the script might encounter? \r\n\r\nIndeed, they should all be treated the same.\r\n\r\n> Now you could argue that all unhandled errors should be fatal and terminate the script by default. \r\n\r\nIndeed, that's exactly what should happen (needless to say, a massively breaking change, but hopefully at least food for thought for when the time comes).\r\n\r\n> But that's not what shells (bash, cmd, etc.) do and PowerShell is a shell.\r\n\r\nPowerShell is _also_ a shell, but its scripting language is miles above Bash's tacked-on language, let alone `cmd.exe`'s.\r\n\r\nGiven that it has the capabilities of a \"normal\" programming language and borrows many of its constructs (including `try` / `catch`), making terminating errors terminate the _script, by default_ (making them _fatal_) would have been a great opportunity to make scripting \"grow up\".\r\n\r\nI don't think that anyone would have complained about this helpful deviation from the brittle Bash behavior.\r\n\r\n> part of the reason for deciding to have the trap statement was that it made it easy to change how fatal errors are handled throughout a script.\r\n\r\nDefaults matter greatly, and having to `trap` something - including remembering to place a `break` in the script block - in order to achieve what should have been the default behavior is unfortunate.\r\n\r\nA _reversal_ of this logic would have been great: let a terminating error terminate the script  by default, and allow an optional `trap` statement to prevent that or modify the exit.\r\n",
    "created_at": "2018-03-18T16:31:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-374013538",
    "id": 374013538,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDAxMzUzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/374013538/reactions"
    },
    "updated_at": "2018-03-18T19:44:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/374013538",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 \r\n>>    Now you could argue that all unhandled errors should be fatal and terminate the script by default.\r\n\r\n> Indeed, that's exactly what should happen\r\n\r\nThink about that for a second. There are a lot of little errors where people just let the error message go to the output stream, Instead you want these errors to terminate the entire thread of execution? If nothing else, it would make the interactive experience unusable.\r\n\r\n> Runspace-terminating errors don't terminate interactive sessions; I don't know how interactive sessions are implemented, but executing something like Throw \"a fit\" on the command line does not terminate the session.\r\n\r\n_Runspace terminating errors most certainly terminate your session_ since a session is nothing but a wrapper around a runspace. Your example\r\n```\r\nThrow \"a fit\" \r\n```\r\nis not a runspace terminating exception. It's just an exception that will, if uncaught, terminate the current thread of execution. The runspace, however, will remain open (i.e. not terminated). If you do want to try terminating you runspace, fell free to try\r\n```\r\n[runspace]::defaultrunspace.close()\r\n```",
    "created_at": "2018-04-24T02:03:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-383779216",
    "id": 383779216,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzc3OTIxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/383779216/reactions"
    },
    "updated_at": "2018-04-24T02:03:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/383779216",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\n>  It's just an exception that will, if uncaught, terminate the current thread of execution. \r\n\r\nIn the absence of information in the documentation, I've been struggling to come up with the right terminology to describe the unit of execution that gets terminated when you execute something like `Throw \"a fit\"` - I've called it a _script-terminating_ error and then, sensing it might not be the best term, _guessed_ at _runspace-terminating_ error.\r\n\r\nBased on what you're saying, the most accurate term is therefore _thread-terminating_ error?\r\nUntil I have confirmation, I'll call them _fatal errors_ - which may be the more intuitive term anyway (which would still leaves us with the potentially misleading term _terminating error_ in the existing documentation, where it more often than not means _statement_-terminating error).\r\nDo tell us what you think the term should be.\r\n\r\n---\r\n\r\nTherefore, what I was really advocating was to treat cases such as `1 / 0` and `[int]::Parse('foo')` the same as `Throw \"a fit\"`, i.e., to treat them as _fatal errors_ (by default).\r\n\r\nIn other words: yes, inside a script, I want that script to terminate with an error by default in all these cases.\r\n",
    "created_at": "2018-04-24T02:29:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-383783407",
    "id": 383783407,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mzc4MzQwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/383783407/reactions"
    },
    "updated_at": "2018-04-24T02:31:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/383783407",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  I've called it a script-terminating error and then, sensing it might not be the best term,\r\n\r\nScript-terminating is generally fine. Or \"terminates the current thread of execution\".\r\n\r\n> Therefore, what I was really advocating was to treat cases such as 1 / 0 and [int]::Parse('foo') the same as Throw \"a fit\", i.e., to treat them as fatal errors (by default).\r\n\r\nThat's easy - put a trap at the top level of your script:\r\n```\r\ntrap { break }\r\n& {\r\n    &{\r\n        foreach ($i in 0..5)\r\n        {\r\n            1/$i\r\n            \"Hello\"\r\n        }\r\n    }\r\n}\r\n```\r\nThis will turn statement-terminating error into a \"fatal\" one.\r\n",
    "created_at": "2018-04-24T23:03:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-384107047",
    "id": 384107047,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEwNzA0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384107047/reactions"
    },
    "updated_at": "2018-04-24T23:03:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384107047",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\n> Script-terminating is generally fine. Or \"terminates the current thread of execution\".\r\n\r\nThanks. I've since kind of fallen in love with _fatal error_ for its brevity, though (a fatal attraction, if you will), so it may leak out from time to time. Let me know if you think that's not appropriate.\r\n\r\n(My original rationale for coining the term _script-terminating_ was to (a) use a term for the unit of execution being terminated familiar to even casual PowerShell users and (b) to keep the word \"terminating\" in there so as tease out the difference between a _statement_-terminating and a _thread_-terminating error so conspicuously absent from the documentation. It doesn't tell the fully story, however - but perhaps it doesn't need to.)\r\n\r\nYes, your `trap { break }` solution effectively does what I'm asking for, but my point is that this should always have been the _default behavior_ - but I know that that only matters in the context of the \"PowerShell vZeroTechnicalDebt\" conversation.\r\n\r\n",
    "created_at": "2018-04-24T23:17:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3798#issuecomment-384109907",
    "id": 384109907,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3798",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDEwOTkwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384109907/reactions"
    },
    "updated_at": "2018-04-24T23:18:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384109907",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
