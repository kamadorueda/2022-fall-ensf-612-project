[
  {
    "author_association": "MEMBER",
    "body": "@JamesWTruher Can you please take a look and see if this is by design? If not, please replace the `Needs-Triage` label with `Issue-Bug`.",
    "created_at": "2021-06-09T21:19:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15261#issuecomment-858109636",
    "id": 858109636,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15261",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODEwOTYzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/858109636/reactions"
    },
    "updated_at": "2021-06-09T21:19:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/858109636",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "With some experimentation it looks to me like what is happening is the --% is not really being ignored, but it's being considered as one string literal ~~and then passed as the first argument (which is then escaped), the same as if you wrote `find '/v \"\"'`.~~\r\n\r\nEdit: that wasn't quite correct, it's passing the string as the full command line, but after doing the escaping. So the --% is bypassing powershell parsing, but not bypassing the escaping.",
    "created_at": "2022-06-04T20:30:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15261#issuecomment-1146681368",
    "id": 1146681368,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15261",
    "node_id": "IC_kwDOAvT7bc5EWPgY",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146681368/reactions"
    },
    "updated_at": "2022-06-04T20:36:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1146681368",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339155?v=4",
      "events_url": "https://api.github.com/users/rmccampbell/events{/privacy}",
      "followers_url": "https://api.github.com/users/rmccampbell/followers",
      "following_url": "https://api.github.com/users/rmccampbell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmccampbell/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rmccampbell",
      "id": 8339155,
      "login": "rmccampbell",
      "node_id": "MDQ6VXNlcjgzMzkxNTU=",
      "organizations_url": "https://api.github.com/users/rmccampbell/orgs",
      "received_events_url": "https://api.github.com/users/rmccampbell/received_events",
      "repos_url": "https://api.github.com/users/rmccampbell/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rmccampbell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmccampbell/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rmccampbell"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "the new behavior enables this scenario directly:\r\n`'foo' | find /v \"\"` and the additional `--%` is not needed.\r\nThe addition of the `--%` creates the second argument as a literal `\"\"` which is why the misbehavior occurs due to some other code paths. Because the legacy behavior constructs a string to be handed off, the quotes are part of that string. The empty string is (and should be) present in the argument list (new behavior) without the quotes.\r\n\r\nI have noticed an additional issue because the quoted strings need to passed somewhat untampered with (which is occurring outside the powershell argumentlist handling). \r\n\r\nfor example:\r\n```cmd\r\n'foo' | find /v \"bl at\"\r\nfoo\r\n```\r\nworks just fine, but \r\n```cmd\r\n'foo' | find /v \"blat\"\r\nFIND: Parameter format not correct\r\n```\r\ndoes not. In both cases arglist is constructed correctly, and then handed off to the .NET api\r\n\r\n```powershell\r\nDEBUG: 2022-07-19 11:37:05.0177 ParameterBinding Information: 0 : BIND NAMED native application line args [C:\\windows\\system32\\find.exe]\r\nDEBUG: 2022-07-19 11:37:05.0180 ParameterBinding Information: 0 :     BIND cmd line arg [/v] to position [0]\r\nDEBUG: 2022-07-19 11:37:05.0184 ParameterBinding Information: 0 :     BIND cmd line arg [bl at] to position [1]\r\n```\r\n\r\n```powershell\r\nDEBUG: 2022-07-19 11:38:02.8644 ParameterBinding Information: 0 : BIND NAMED native application line args [C:\\windows\\system32\\find.exe]\r\nDEBUG: 2022-07-19 11:38:02.8647 ParameterBinding Information: 0 :     BIND cmd line arg [/v] to position [0]\r\nDEBUG: 2022-07-19 11:38:02.8653 ParameterBinding Information: 0 :     BIND cmd line arg [blat] to position [1]\r\n```\r\n\r\nI'm suspicious that this may actually be happening in the .net layer as there is some dodgy quote escapement that happens there. This matches the above observations because there is a space in the string, it would need to be quoted so i suspect it is internally. The second case would not need to be quoted and then we see that `find.exe` gets heartburn.\r\n\r\nI've not been able to reproduce this with an other `.exe` (although my search has not been exhaustive), so it may be best to put `find.exe` into the list of `legacy` behavior (along with cmd.exe). If you have other examples of Windows tools which display similar aberrant behavior we can add those as well.\r\n\r\nI don't agree that the new behavior \"breaks the stop-parsing symbol\" at all, we're constructing the argument list appropriately which is why I'm marking this `by-design`.",
    "created_at": "2022-07-19T18:11:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15261#issuecomment-1189401728",
    "id": 1189401728,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15261",
    "node_id": "IC_kwDOAvT7bc5G5NSA",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1189401728/reactions"
    },
    "updated_at": "2022-07-19T18:54:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1189401728",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "author_association": "NONE",
    "body": "Ignoring the oddities of find.exe, I think the --% syntax is still broken. By my understanding it should bypass both powershell parsing and any escaping, and pass the rest of the command line directly to the app, the same as it did in Legacy mode. This isn't the case though:\r\n\r\n```\r\n> $PSNativeCommandArgumentPassing = \"Legacy\"\r\n> cmd --% /c echo \"hi\"\r\n\"hi\"\r\n> $PSNativeCommandArgumentPassing = \"Standard\"\r\n> cmd --% /c echo \"hi\"\r\n\"\\\"hi\\\"\"\r\n```\r\nThe Standard mode should match the Legacy mode here IMO.\r\n(I'm not sure what the behavior should be if there are arguments before the --%, preferably those arguments would be properly escaped but I think that's probably irrelevant in most cases)",
    "created_at": "2022-07-20T06:48:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15261#issuecomment-1189894760",
    "id": 1189894760,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15261",
    "node_id": "IC_kwDOAvT7bc5G7Fpo",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1189894760/reactions"
    },
    "updated_at": "2022-07-20T06:48:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1189894760",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339155?v=4",
      "events_url": "https://api.github.com/users/rmccampbell/events{/privacy}",
      "followers_url": "https://api.github.com/users/rmccampbell/followers",
      "following_url": "https://api.github.com/users/rmccampbell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmccampbell/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rmccampbell",
      "id": 8339155,
      "login": "rmccampbell",
      "node_id": "MDQ6VXNlcjgzMzkxNTU=",
      "organizations_url": "https://api.github.com/users/rmccampbell/orgs",
      "received_events_url": "https://api.github.com/users/rmccampbell/received_events",
      "repos_url": "https://api.github.com/users/rmccampbell/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rmccampbell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmccampbell/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rmccampbell"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as by-design and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2022-07-21T09:01:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15261#issuecomment-1191231089",
    "id": 1191231089,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15261",
    "node_id": "IC_kwDOAvT7bc5HAL5x",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1191231089/reactions"
    },
    "updated_at": "2022-07-21T09:01:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1191231089",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "Is this actually by design, given my previous comment? It doesn't seem to be usefully designed if so. That means that probably many cases would have to use `cmd /c` to get exact control over the command line",
    "created_at": "2022-07-21T23:18:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15261#issuecomment-1192021249",
    "id": 1192021249,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15261",
    "node_id": "IC_kwDOAvT7bc5HDM0B",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1192021249/reactions"
    },
    "updated_at": "2022-07-21T23:18:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1192021249",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8339155?v=4",
      "events_url": "https://api.github.com/users/rmccampbell/events{/privacy}",
      "followers_url": "https://api.github.com/users/rmccampbell/followers",
      "following_url": "https://api.github.com/users/rmccampbell/following{/other_user}",
      "gists_url": "https://api.github.com/users/rmccampbell/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rmccampbell",
      "id": 8339155,
      "login": "rmccampbell",
      "node_id": "MDQ6VXNlcjgzMzkxNTU=",
      "organizations_url": "https://api.github.com/users/rmccampbell/orgs",
      "received_events_url": "https://api.github.com/users/rmccampbell/received_events",
      "repos_url": "https://api.github.com/users/rmccampbell/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rmccampbell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rmccampbell/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rmccampbell"
    }
  }
]
