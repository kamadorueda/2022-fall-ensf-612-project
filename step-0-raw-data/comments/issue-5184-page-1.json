[
  {
    "author_association": "MEMBER",
    "body": "Personally, I think we should not enhance `start-process` and instead provide ways to solve interacting with processes natively.  It seems that if we make the Variable: provider work like a file, this should solve some of your problems?\r\n\r\n```powershell\r\nsomecommand 2> variable:stderr 1> variable:stdout\r\n```\r\n\r\n`Tee-Object` doesn't work with redirection, so need to think how to redirect while still outputting...\r\n\r\nWe should also allow redirecting one stream to another stream beyond stdout like:\r\n\r\n```powershell\r\nsomecommand 2>&3\r\n```\r\n",
    "created_at": "2017-10-21T00:37:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5184#issuecomment-338351406",
    "id": 338351406,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5184",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODM1MTQwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/338351406/reactions"
    },
    "updated_at": "2017-10-21T00:37:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/338351406",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT   For long running commands, this would make it look like powershell has hung.\r\n\r\nI think we need a layered approach where the lowest level converts output and errors to a tagged union of `output * string` and `error * string`. On top of that it is quite easy to layer redirection to different streams, or to capture in variables.\r\n\r\nIt also opens a path to handling more complex commands where there is mixed progress and verbose output in the different streams, and makes it quite easy to make a parser that interprets the output and direct it do the appropriate powershell stream.",
    "created_at": "2017-10-24T14:33:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5184#issuecomment-339010979",
    "id": 339010979,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5184",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTAxMDk3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/339010979/reactions"
    },
    "updated_at": "2017-10-24T14:33:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/339010979",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "```C#\r\npublic class ProcessOutput {\r\n   private string _value;\r\n   public ProcessOutputKind Kind {get;}\r\n   public bool IsOutput => Kind == ProcessOutputKind.Output;\r\n   public string Error => Kind == ProcessOutputKind.Error ? _value : throw new InvalidOperationException();\r\n   public string Output => Kind == ProcessOutputKind.Output ? _value : throw new InvalidOperationException();\r\n}\r\n\r\nclass ProcessEx {\r\n   public IEnumerable<ProcessOutput> Run(..., CancelationToken cancel){\r\n         ...\r\n         foreach(processOutput item in someConcurrentQueueWithOutputAndErrors.Enumerate(cancel)) {\r\n              yield return processOutput;\r\n         }\r\n   }\r\n\r\n   private void OnError(...){\r\n         someConcurrentQueueWithOutputAndErrors.Add(new ProcessOutput(ProcessOutputKind.Error, theErrorString);\r\n   }\r\n   private void OnOutput(...){\r\n         someConcurrentQueueWithOutputAndErrors.Add(new ProcessOutput(ProcessOutputKind.Output, theErrorString);\r\n   }\r\n}\r\n```\r\n\r\nSomething similar would make it easy to use from the PowerShell side.\r\n\r\n```powershell\r\n\r\nforeach($po in ProcessEx.Run(...)){\r\n   if ($po.IsOutput){\r\n         # parse output and split into Output and Progress\r\n   }\r\n   else {\r\n        # parse error and split into for example Verbose, Warning and Error\r\n   }\r\n}\r\n\r\n```\r\n",
    "created_at": "2017-10-24T14:43:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5184#issuecomment-339014515",
    "id": 339014515,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5184",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzOTAxNDUxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/339014515/reactions"
    },
    "updated_at": "2017-10-24T14:47:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/339014515",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "`Start-Process` is of [limited usefulness particularly on Unix](https://github.com/PowerShell/PowerShell/issues/4521#issuecomment-324931106), so I think @SteveL-MSFT's suggestion of using direct invocation with enhanced redirections is the more promising idea to pursue, especially if you're interested in showing _ongoing_ output as well as capturing, which only makes sense with _synchronous_ execution (at least on Unix, where running in a _new terminal window_ is not an option).\r\n\r\nIf we had the ability to capture in a variable while optionally also passing output through, then I think no lower-level approach is needed.\r\n\r\nI had [previously suggested syntax `>&targetVarName`](https://github.com/PowerShell/PowerShell/issues/3996#issuecomment-308433651), but I like the idea of using namespace notation (`> variable:targetVarName`)\r\n\r\nHowever, additional syntax is needed for:\r\n\r\n* optional pass-through-as-well behavior, as suggested by @SteveL-MSFT (`>|`?)\r\n\r\n* optional append-to-preexisting-variable-contents behavior (a `+` prefix might do, as with `-OutVariable` for instance).\r\n\r\nThese two behaviors would bring the redirection operators on par with the `-OutVariable` and `-ErrorVariable` common parameters.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-11-12T14:35:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5184#issuecomment-343741446",
    "id": 343741446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5184",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0MTQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343741446/reactions"
    },
    "updated_at": "2017-11-12T14:35:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343741446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S:  Asking for the ability to capture stderr lines in a variable is the subject of #4332",
    "created_at": "2017-11-12T14:40:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5184#issuecomment-343741919",
    "id": 343741919,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5184",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0MTkxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343741919/reactions"
    },
    "updated_at": "2017-11-12T14:40:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343741919",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
