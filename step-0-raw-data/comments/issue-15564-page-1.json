[
  {
    "author_association": "COLLABORATOR",
    "body": "As far as my own understanding goes, native applications on Windows, MacOS, and Linux generally only have access to two streams: stdout, and stderror.\r\n\r\nThe additional streams PowerShell provides only really exist as a concept _inside_ of PowerShell. So any way of writing to them has to be handled from one of these existing inter-process communication methods. I'm not clear on how you'd enable that without also making the application (potentially) submit oddly-formed output to non-PowerShell applications?",
    "created_at": "2021-06-11T15:03:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-859645023",
    "id": 859645023,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTY0NTAyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859645023/reactions"
    },
    "updated_at": "2021-06-11T15:03:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859645023",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This is actually possible today but there are a few caveats. Your native app can output to stdout in CLIXML the objects you want to return back to PowerShell. Here is a basic example of that when using bash (any app will do though)\r\n\r\n```powershell\r\nSet-Content -Path /tmp/test.sh -Value @'\r\n#!/usr/bin/env bash\r\n\r\necho '#< CLIXML'\r\necho -n '<Objs Version=\"1.1.0.1\" xmlns=\"http://schemas.microsoft.com/powershell/2004/04\">'\r\necho -n  '<S S=\"Output\">output string</S>'\r\necho -n  '<Obj S=\"Output\" RefId=\"0\"><TN RefId=\"0\"><T>System.Management.Automation.PSCustomObject</T><T>System.Object</T></TN><MS><S N=\"Foo\">Bar</S></MS></Obj>'\r\necho -n  '<S S=\"Verbose\">verbose msg</S>'\r\necho -n '</Objs>'\r\n'@\r\n\r\n$out = bash /tmp/test.sh\r\n```\r\n\r\nWhen running that I get the following\r\n\r\n![image](https://user-images.githubusercontent.com/8462645/121739931-ac5baf00-cb3f-11eb-93c4-dfa254b88399.png)\r\n\r\n\r\nWhat's happening is that pwsh sees the start of the output is `# <CLIXML` and then parses the rest of the output as actual objects. It allows you to write to specific streams as well as write complex objects back which is pretty nice. The downsides of this\r\n\r\n* The native app needs to be aware of this - `pwsh` has the `-OutputFormat XML` that does the same thing, a native app could do the same\r\n* You explicitly need to capture/redirect the output when calling the native app\r\n  * Not doing so means the output is written directly to the console so the end user will see the CLIXML\r\n  * Capturing is essentially doing something like `$var = native` or pipelining/redirection in pwsh\r\n* CLIXML is very verbose\r\n  * Simple strings are fine but dealing with complex objects gets messy very quickly",
    "created_at": "2021-06-11T19:36:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-859797993",
    "id": 859797993,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTc5Nzk5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859797993/reactions"
    },
    "updated_at": "2021-06-11T19:36:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859797993",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "> As far as my own understanding goes, native applications on Windows, MacOS, and Linux generally only have access to two streams: stdout, and stderror.\r\n\r\nAnd `stdin`. And `3..8` descriptors may be used for arbitrary output (for bash):\r\n```bash\r\nexec 3>file\r\necho \"test\" >&3\r\ncat file\r\n```",
    "created_at": "2021-06-11T21:18:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-859915823",
    "id": 859915823,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTkxNTgyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859915823/reactions"
    },
    "updated_at": "2021-06-11T21:18:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859915823",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We discussed such proposal previously and rejected because native application sometimes use error output handle not for writing errors but for other purposes.",
    "created_at": "2021-06-12T06:09:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860006252",
    "id": 860006252,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDAwNjI1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860006252/reactions"
    },
    "updated_at": "2021-06-12T06:09:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860006252",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I’m not sure what else needs to be done, it’s entirely possible as evident by my previous comment.",
    "created_at": "2021-06-12T09:28:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860027627",
    "id": 860027627,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDAyNzYyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860027627/reactions"
    },
    "updated_at": "2021-06-12T09:28:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860027627",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I've seen, and encountered, a number of issues reported across multiple repositories (and my own use cases) where people are dealing with the fact that writing to stderr from a native application may result in an error. \r\n\r\nThis issue is being addressed via a feature which is experiment in the 7.2 previews `PSNotApplyErrorActionToStderr`.",
    "created_at": "2021-06-12T20:29:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860104875",
    "id": 860104875,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDEwNDg3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860104875/reactions"
    },
    "updated_at": "2021-06-12T20:29:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860104875",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> We discussed such proposal previously and rejected because native application sometimes use error output handle not for writing errors but for other purposes.\r\n\r\nThat's one thing that led me to open this request. I think the preferred solution, for those who wish to target PS, would be to make use of the Info stream, but at present it doesn't seem feasible. If a mechanism for that could be surfaced, such applications could handle streams appropriately per shell, and we might even see other shells add additional streams some day.\r\n\r\n@jborean93 Your suggestion is really interesting, and I'll probably do some exploration on that front. One of the caveats, however, makes it quite difficult to rely on the current mechanism:\r\n> You explicitly need to capture/redirect the output when calling the native app\r\n>\r\n>    Not doing so means the output is written directly to the console so the end user will see the CLIXML\r\n>    Capturing is essentially doing something like $var = native or pipelining/redirection in pwsh\r\n\r\nWhile possible, I believe it would be deemed infeasible, in most scenarios, to assume that output would be captured in this way. This is going to be outside of the control of most developers, unless they decide to distribute a shim with their application. While that might be technically feasible, imposing that on the majority of those who are writing native applications seems unlikely to bring about any useful results.\r\n\r\nRegarding the other two points:\r\n> *    The native app needs to be aware of this - pwsh has the -OutputFormat XML that does the same thing, a native app >could do the same\r\n> *    CLIXML is very verbose\r\n>        Simple strings are fine but dealing with complex objects gets messy very quickly\r\n\r\nWhile not perfect, I think these are solve-able, with the first being the most difficult (because environment detection is almost always painful). Dealing with CLIXML wouldn't be too bad if libraries were available in developers' chosen languages.",
    "created_at": "2021-06-14T12:42:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860653303",
    "id": 860653303,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDY1MzMwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860653303/reactions"
    },
    "updated_at": "2021-06-14T12:42:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860653303",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/583359?v=4",
      "events_url": "https://api.github.com/users/bgshacklett/events{/privacy}",
      "followers_url": "https://api.github.com/users/bgshacklett/followers",
      "following_url": "https://api.github.com/users/bgshacklett/following{/other_user}",
      "gists_url": "https://api.github.com/users/bgshacklett/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bgshacklett",
      "id": 583359,
      "login": "bgshacklett",
      "node_id": "MDQ6VXNlcjU4MzM1OQ==",
      "organizations_url": "https://api.github.com/users/bgshacklett/orgs",
      "received_events_url": "https://api.github.com/users/bgshacklett/received_events",
      "repos_url": "https://api.github.com/users/bgshacklett/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bgshacklett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bgshacklett/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bgshacklett"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> While possible, I believe it would be deemed infeasible, in most scenarios, to assume that output would be captured in this way.\r\n\r\nSomewhat agreed as it's another barrier but it's just something we have to live with. Luckily at least on Windows it is definitely possible to detect whether your app has redirected output (pwsh is capturing it) or it's connected directly to the console. This allows you to have your native app determine whether to output as per usual or whether it should output in CLIXML. I would recommend you still put it behind a certain argument/switch when calling the native app just to be explicit just like pwsh has `-OutputFormat XML`.\r\n\r\nTo detect whether your `stdout` is being captured you need to call [GetStdHandle](https://docs.microsoft.com/en-us/windows/console/getstdhandle) for `-11` (`stdout`) then call [GetFileType](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getfiletype). If the value is `FILE_TYPE_CHAR` you know no redirection has occurred and if it's `FILE_TYPE_PIPE` you know it has been redirected and pwsh is capturing it.\r\n\r\nThis somewhat makes sense as you don't want to be writing CLIXML to the stdout yourself for any actual output as it will be written straight to the console. It does suck if all you want to do is write to the verbose/warning/debug/info stream but the workaround is as simple as doing something like `native.exe | Out-String`. Considering you will probably have this behind some flag like `native.exe -OutFormat Pwsh` it's probably not too hard of an ask to make sure you are piping it into pwsh.\r\n\r\nIt's unfortunate but simply something you just need to adjust when calling your native app.",
    "created_at": "2021-06-14T19:07:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860924591",
    "id": 860924591,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDkyNDU5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860924591/reactions"
    },
    "updated_at": "2021-06-14T19:08:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860924591",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think we'd need to sort out a fix for https://github.com/PowerShell/PowerShell/issues/15363 before we can really call this \"solved\"; currently CLIXML isn't always deserialised by PS when received, and I think that's pretty undesirable. It's very non-obvious to the user that simply capturing the output will magically deserialise it properly.\r\n\r\nAnother thing was mentioned here that is worth reinforcing as well -- something that would make this significantly easier is creating a standalone CLIXML library for other folks to use when structuring their output, and provide abstractions for writing to the distinct streams.\r\n\r\nEven if only a C# library is provided initially, if it's open source others can take pointers from there and copy the implementation into another language to allow this to work for any native application with minimal friction.",
    "created_at": "2021-06-14T19:49:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860947965",
    "id": 860947965,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDk0Nzk2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860947965/reactions"
    },
    "updated_at": "2021-06-14T19:49:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860947965",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think we'd need to sort out a fix for #15363 before we can really call this \"solved\"\r\n\r\nSomewhat agreed, the trouble is that to solve #15363 would mean that powershell always processes the `stdout` leading to the existing problems with how it encodes the bytes from this stream. There are many issues with this and there's no silver bullet to solve them all so I personally doubt this is something that is really feasible. It also doesn't really make much sense to convert an object from CLIXML when all it is going to do is then output it to the host. The only major disadvantage I can see from the optional CLIXML parsing is that you don't write data to the various streams. Even then this isn't too big of a problem IMO because\r\n\r\n* Streams just typically write to the host in the default session, the native app could do the same thing in this case\r\n* If you are running it in a PowerShell pipeline and are inspecting the streams manually then the output is captured by pwsh anyway so the CLIXML is parsed\r\n\r\nIt's not ideal but it's possible today for a native app to determine whether to print CLIXML or just text. I would have to double check on Linux around this but I don't see any reasons why it wouldn't be possible",
    "created_at": "2021-06-14T20:05:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-860957444",
    "id": 860957444,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDk1NzQ0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860957444/reactions"
    },
    "updated_at": "2021-06-14T20:05:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/860957444",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If a native application is *targeting* PowerShell then I'd expect a binary module instead.  If they aren't explicitly targeting PowerShell, then any solution is going to require quite a bit of extra complexity and overhead.  Either output will need to be serialized in a way PowerShell recognizes (which would then require PowerShell to analyze the output of every native app) or some sort of IPC would have to be opened between them.\r\n\r\nTo me it seems like the ideal use case for the proposed feature is something the dev can tack onto their existing application to make it PowerShell friendly rather than being required in run in PowerShell.  I have a hard time imagining how this feature could be implemented in a way that would make the extra complexity worth while.",
    "created_at": "2021-06-15T14:29:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15564#issuecomment-861548691",
    "id": 861548691,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15564",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTU0ODY5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/861548691/reactions"
    },
    "updated_at": "2021-06-15T14:29:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/861548691",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
