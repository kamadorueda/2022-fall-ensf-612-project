[
  {
    "author_association": "NONE",
    "body": "A class dedicated and specific to providers Powershell, according to the principle of [System.IO.FileInfo], would it not be more appropriate?\r\n\r\nSomething like that :\r\n```Powershell\r\nNew-PSPathInfo -path  'C:\\Program Files\\Application Verifier\\foo.txt'\r\n\r\nisProviderQualified         : False\r\nProvider                    : FileSystem\r\nisWildcard                  : False\r\nWin32PathName               : C:\\Program Files\\Application Verifier\\foo.txt\r\nisItemExist                 : False\r\nisPSValid                   : True\r\nLastError                   :\r\nisCurrentLocationFileSystem : True\r\nResolvedPSPath              : C:\\Program Files\\Application Verifier\\foo.txt\r\nisUNC                       : False\r\nisParentItemExist           : False\r\nisAbsolute                  : True\r\nResolvedPSFiles             : {}\r\nisProviderExist             : True\r\nisDriveExist                : True\r\nName                        : C:\\Program Files\\Application Verifier\\foo.txt\r\nCurrentDriveName            : C\r\nisFileSystemProvider        : True\r\nDriveName                   : C\r\nasLiteral                   : False\r\n# +\r\nQualifier  : C:\r\nParent     : C:\\Program Files\\Application Verifier\r\nLeaf       : foo.txt\r\nLeafBase   : foo\r\nExtension  : .txt\r\n```",
    "created_at": "2018-04-10T08:16:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6606#issuecomment-380014745",
    "id": 380014745,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6606",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDAxNDc0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380014745/reactions"
    },
    "updated_at": "2018-04-10T08:16:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380014745",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4894452?v=4",
      "events_url": "https://api.github.com/users/LaurentDardenne/events{/privacy}",
      "followers_url": "https://api.github.com/users/LaurentDardenne/followers",
      "following_url": "https://api.github.com/users/LaurentDardenne/following{/other_user}",
      "gists_url": "https://api.github.com/users/LaurentDardenne/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LaurentDardenne",
      "id": 4894452,
      "login": "LaurentDardenne",
      "node_id": "MDQ6VXNlcjQ4OTQ0NTI=",
      "organizations_url": "https://api.github.com/users/LaurentDardenne/orgs",
      "received_events_url": "https://api.github.com/users/LaurentDardenne/received_events",
      "repos_url": "https://api.github.com/users/LaurentDardenne/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LaurentDardenne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LaurentDardenne/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LaurentDardenne"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@LaurentDardenne:\r\n\r\nThanks for the feedback.\r\n\r\nI do like the idea of providing additional information like you suggest, especially whether the path refers to an existing item, whether it is wildcard-based, what the underlying provider is, and perhaps also a symlink's target (chain), if applicable.\r\n\r\nAs for the _form_ of the command:\r\n\r\nThe focus of the functionality is _splitting / parsing_, not _construction_, so I think that using a `New-*` cmdlet would be confusing.\r\n\r\nBy contrast, integration with `Split-Path`, whose purpose already _is_ splitting / parasing, seems natural and doesn't require introducing a new cmdlet.\r\n\r\nNote that `Split-Path` already exceeds its titular mandate somewhat with the `-IsAbsolute` switch, which doesn't _split_ the path and only _returns information_ about it.\r\n(This could be considered unfortunate, but it's here to stay.)\r\n\r\nMy preference is to have switch counterparts to _all_ properties of the object to be returned with `-All` (e.g., `-Leaf` corresponding to the `.Leaf` property), though proliferation of switches is a concern there.\r\n\r\nLet's see what others think.\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2018-04-10T13:25:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6606#issuecomment-380096833",
    "id": 380096833,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6606",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDA5NjgzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380096833/reactions"
    },
    "updated_at": "2018-04-10T13:25:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380096833",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0  \r\nThe use of new is not mandatory, I thought more to a public provider API because existing ones are difficult to use for a beginner:\r\n```Powershell\r\n[S.M.A.PSPathInfo]::New($path)\r\n```\r\nThe need may not be directly related to this issue.",
    "created_at": "2018-04-10T18:53:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6606#issuecomment-380209413",
    "id": 380209413,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6606",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDIwOTQxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380209413/reactions"
    },
    "updated_at": "2018-04-10T18:53:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380209413",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4894452?v=4",
      "events_url": "https://api.github.com/users/LaurentDardenne/events{/privacy}",
      "followers_url": "https://api.github.com/users/LaurentDardenne/followers",
      "following_url": "https://api.github.com/users/LaurentDardenne/following{/other_user}",
      "gists_url": "https://api.github.com/users/LaurentDardenne/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LaurentDardenne",
      "id": 4894452,
      "login": "LaurentDardenne",
      "node_id": "MDQ6VXNlcjQ4OTQ0NTI=",
      "organizations_url": "https://api.github.com/users/LaurentDardenne/orgs",
      "received_events_url": "https://api.github.com/users/LaurentDardenne/received_events",
      "repos_url": "https://api.github.com/users/LaurentDardenne/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LaurentDardenne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LaurentDardenne/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LaurentDardenne"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@LaurentDardenne Having a `PSParsedPath` object and a `New-PSParsedPath` command is certainly interesting. It makes the call to the command simpler - no switches, just calculate all of the values. (I've never figured out why `Measure-Object` doesn't just do this - compute all the values in the object.)\r\n\r\n@mklement0 Yeah - our path commands kinda suck :-( `-IsAbsolute` should have been a parameter on `Test-Path`.\r\n\r\nFinally, another approach to consider is using multiple assignment\r\n```\r\n$parent, $leaf= Split-Path -Parent -Leaf # other flags as desired\r\n$newFIleName = join-path $parent \"Prefix$Leaf\"\r\n```\r\nIt's easy to use but I don't know that the comfort level with multiple assignments is there in the community.\r\n",
    "created_at": "2018-04-11T22:56:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6606#issuecomment-380621296",
    "id": 380621296,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6606",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDYyMTI5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380621296/reactions"
    },
    "updated_at": "2018-04-11T22:56:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380621296",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\n>  I don't know that the comfort level with multiple assignments is there in the community.\r\n\r\nThat's a concern, but I think it could be addressed with proper documentation.\r\n\r\nThat said, there's something problematic about assigning _positional_ semantics to switches: deriving the _order of output values_ from the _order in which switches were specified_ would be a first, as far as I know, and thus unexpected.\r\n\r\nI thought about _combined_ switches such as `-ParentAndLeaf`, but that would obviously get out of hand soon, so I landed on `-All`, with a single output object containing all information as properties.\r\n\r\n\r\n",
    "created_at": "2018-04-12T01:49:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6606#issuecomment-380648891",
    "id": 380648891,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6606",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDY0ODg5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380648891/reactions"
    },
    "updated_at": "2018-04-12T01:49:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/380648891",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@LaurentDardenne, in the context of #14745 I've essentially landed on the marriage of our proposals:\r\n\r\n* Introduce a `PSPathInfo` class, as you suggest; specifically:\r\n  *  Derive it from `System.Management.Automation.PathInfo` (which would have to be unsealed, but that shouldn't break anyone), as returned by `Resolve-Path`\r\n  * Define type accelerator `[PSPathInfo]` and a single-parameter public constructor that accepts a path that may or may not point to an _existing_ item; this implicitly enables _casts_ such as `[PSPathInfo] 'foo'.txt'`\r\n  * make it stringify to the full _provider_ path, which means that you can pass even not-yet-extant paths as full, native file-system paths to .NET methods (which is necessary to guard against the usually differing working directories)\r\n\r\nThis class could then be used:\r\n\r\n* as the output type of `Split-Path -All` (or, perhaps better: `Split-Path -AsPSPathInfo`, with `-AsPSPathInfo` aliased to `-pi`)\r\n* directly, such as for calling .NET methods to ensure full, native paths are passed, as described\r\n* via an _opt-in_ (so as not to break backward compatibility) as the output type of `Resolve-Path` - or, perhaps outputting a _derived_ class is an acceptable change.\r\n\r\nMore details about the proposed class at https://github.com/PowerShell/PowerShell/issues/14745#issuecomment-776282779",
    "created_at": "2021-02-10T13:48:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6606#issuecomment-776717229",
    "id": 776717229,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6606",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NjcxNzIyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/776717229/reactions"
    },
    "updated_at": "2021-02-10T21:43:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/776717229",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
