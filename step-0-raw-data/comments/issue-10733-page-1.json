[
  {
    "author_association": "COLLABORATOR",
    "body": "I believe this is by design? `WriteError()` and `ThrowTerminatingError()` are intended to show their parent command as the source of the error.",
    "created_at": "2019-10-08T16:00:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539582940",
    "id": 539582940,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTU4Mjk0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539582940/reactions"
    },
    "updated_at": "2019-10-08T16:00:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539582940",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32 Your statement contradicts itself, as I stated the source of the error is not my cmdlet. The source of the error, is already applied in the ErrorRecord. Our cmdlet is not the source of the error...\r\n\r\n@SteveL-MSFT this is not resolved. The current method does not allow for a cmdlet to show the error's real source.",
    "created_at": "2019-10-08T21:13:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539706985",
    "id": 539706985,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTcwNjk4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539706985/reactions"
    },
    "updated_at": "2019-10-08T21:15:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539706985",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "NONE",
    "body": "Also to note. If a ps1 script calls a cmdlet, and the cmdlet errors, then the error writen to the console is sourced as the cmdlet, not the ps1 script or function.",
    "created_at": "2019-10-08T21:54:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539720248",
    "id": 539720248,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTcyMDI0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539720248/reactions"
    },
    "updated_at": "2019-10-08T21:54:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539720248",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Correct; usually because the script does not itself call `$PSCmdlet.WriteError()`.\r\n\r\nMy understanding is: `$PSCmdlet.WriteError()` **deliberately** overwrites `InvocationInfo` so as to allow script cmdlets to more closely mimic compiled cmdlets written in C# or another .NET language. It is generally undesirable from a module author's perspective to issue to an end-user an error that exposes internal details of the command, as it can be very confusing for end users to see errors appearing from sections of code they have no control over.\r\n\r\nThus, the method informs the user that the error simply was caused by the cmdlet itself, rather than some line of code _inside_ the cmdlet.\r\n\r\nFrom memory, I think the best course of action if you _don't_ want this behaviour would be to use `Write-Error` instead?\r\n\r\nCan you confirm if my understanding is correct, @daxian-dbw and/or @SeeminglyScience?",
    "created_at": "2019-10-08T22:18:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539727397",
    "id": 539727397,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTcyNzM5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539727397/reactions"
    },
    "updated_at": "2019-10-08T22:19:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539727397",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Correct, a script or a function would call Write-Error. Which is the equivalent to a cmdlet's WriteError().\r\n\r\nYou are missing what I am getting at, we are not calling some internal cmdlet that is throwing an error that a end-user can't understand. We are calling a AWS PowerShell cmdlet that is throwing a error, the InvocationInfo for the error is correctly pointing at the real source of the error within the AWS cmdlet, along with all the relevant info needed to know why it failed. One important aspect is the AWS cmdlet name, that gets overwritten with our cmdlet's name...\r\n\r\nAlso, Write-Error does the EXACT same thing as cmdlet.WriteError(), nor does it write out to the console/host. We tried that first.\r\n\r\nWhat is a \"script cmdlet\"?? Is this new in PS Core? I know of functions, scripts, and cmdlets, with the first two being scripts in ps files and only cmdlets being compiled code.\r\n\r\nYou can think of this like an inner exception, it contains important info that needs to be displayed in console during a WriteError() when the ErrorRecord passed in already has the InvocationInfo set.",
    "created_at": "2019-10-09T00:15:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539756980",
    "id": 539756980,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTc1Njk4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539756980/reactions"
    },
    "updated_at": "2019-10-09T00:19:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539756980",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "\"script cmdlet\" is a name used by some folks in the community for a function that has the `[CmdletBinding()]` attribute applied, as that changes how it behaves significantly, even down to the level of how PowerShell's internals handle the code.\r\n\r\nI'm pretty sure I understand what you're saying. What I'm saying is that in most cases, module authors do not want the end user being handed an error object that surfaces internal code directly, and $PSCmdlet.WriteError() respects that, and alters the InvocationInfo so that the \"blame\" as it were falls on the command the user actually called, and not a command or method that is called by the function internally. What you appear to be asking for is for this hiding effect to be removed, because it doesn't suit your purposes.\r\n\r\nAm I missing something?",
    "created_at": "2019-10-09T01:42:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539781451",
    "id": 539781451,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTc4MTQ1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539781451/reactions"
    },
    "updated_at": "2019-10-09T01:42:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539781451",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yes, you are very much missing it. You're confusing internal exceptions with valid PS ErrorRecords… I'm not talking about showing exceptions thrown in code... I'm referring to showing PS errors from other cmdlets/functions that surfaced up to the cmdlet. Those are **NOT** to be hidden, if they were then they would be hidden when they surfaced from within a PS1 function. Those are also not to be hidden either, because they are the source of the error, the actual cmdlet/function that threw the error. Without this, no one would be able to know where the error came from.\r\n\r\nIf the user doesn't see what the real error is, then there will be no means to know what is causing it nor where to look to fix it. A great example is with the AWS cmdlets, if your existing token has expired then the AWS cmdlet states this, and you know you need to update/refresh your token to move on. Instead... they see the error looking as if it sourced from our cmdlet, and now not sure what token has expired. This same exact code written as a PS1 function, surfaces the actual error coming from the AWS cmdlet, NOT the PS1 function... Another, calling a azure cmdlet that gives an error about policy compliance for a resource. Without seeing what the command that threw the error is, there is no idea what resource to update to fix it.",
    "created_at": "2019-10-09T03:02:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539801504",
    "id": 539801504,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTgwMTUwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539801504/reactions"
    },
    "updated_at": "2019-10-09T03:02:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539801504",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I assure you, I understand where you're coming from. I just have a different opinion on what's important for the end user to see. Most end users of a module don't really care if there's a command three levels deep in a script module that caused an error. \r\n\r\nUnless it's an error in the module's own code (which, to be sure, can and does happen), most of those errors will be caused by the user's own input. To that end, the fact that the actual error occurs three or four levels deep and was originally thrown from a .NET method, or a binary cmdlet, is effectively irrelevant; I would think users need to know, in most cases:\r\n\r\n1. the command _they_ called that caused the error.\r\n2. the reason for the error, which is usually encompassed in the error text\r\n3. remediation steps, which typically involve changing their input in some fashion to be acceptable\r\n\r\nI would wager that very few end users of a script module want to see the guts of the script module; they want it to work, and they want to be given a clear error when something goes wrong. Telling users that a command they've never seen (often because it's hidden within the module and not meant to be interacted with directly) is throwing an error, in a file full of code they've never seen the inside of, is nothing more than a recipe for confusion.\r\n\r\nI understand and respect that _you_ may want to see those details. I often do too. But I do not think we are in the majority in that.",
    "created_at": "2019-10-09T03:38:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539810289",
    "id": 539810289,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTgxMDI4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539810289/reactions"
    },
    "updated_at": "2019-10-09T03:38:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539810289",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "You just gave the exact reason why this is a bug... \"most of those errors will be caused by the user's own input.\" If the user does not know what caused the error or what command caused it, then they will not have any idea of where to begin to look at what to fix with THIER input. They will never be able to figure out your step 3 if they don't get to see the actual cmdlet's name that created the ErrorRecord. This is relieving confusion, by letting the user know the cmdlet's name that is reporting the error.\r\n\r\nAgain and again... I am not talking about exceptions, you are. I am referring to actual ErrorRecords from another cmdlet or function. ErrorRecords are created from the cmdlet, to be shown to the user... You can see this by example by creating a PS1 function and seeing the underlining cmdlet's name that created the ErrorRecord.\r\n\r\nYour creation of very vague scenarios does not apply to anything I am pointing out here, so please stop with the attempt to muddy the water of what I am talking about. Never did I ever say anything about showing random exceptions from code within other cmdlets, again those are exceptions and not ErrorRecords...",
    "created_at": "2019-10-09T04:02:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539816405",
    "id": 539816405,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTgxNjQwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539816405/reactions"
    },
    "updated_at": "2019-10-09T04:02:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539816405",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Then let's work with specifics. I'm not trying to muddy the waters, you appear to be misunderstanding what I mean. Not every ErrorRecord will necessarily be created for the purpose of the user being shown it directly, though that is a common reason to create one.\r\n\r\nCan you give **specific examples** of what you mean so as to clarify the issue?",
    "created_at": "2019-10-09T10:42:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-539945871",
    "id": 539945871,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTk0NTg3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539945871/reactions"
    },
    "updated_at": "2019-10-09T10:42:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/539945871",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "I already gave two examples. I'll give another for your pleasure.\r\n\r\nWe have a cmdlet that is used for removing a azure VM. This cmdlet calls a few az cmdlets to clean up all of the VMs resources; the vm itself, the os disk and any data disks, the NICs, the availability set if it's the only VM attached it to, etc... During this process the user may not have RBAC access to delete one of those resources, like disks for example. The az cmdlet comes back with an \"Access denied\"/Unauthorized ErrorRecord for the Remove-AzDisk cmdlet. When we try to write this ErrorRecord out with WriteError() it shows our cmdlet's name in the console with the message \"Access Denied\". So the user now knows they don't have access to remove something, but unable to determine what resources they don't have access. \r\n\r\nWhen this same functionality is written as a PS1 function, the ErrorRecord from Remove-AzDisk get's written as is to the console, showing that Remove-AzDisk gave a \"Access Denied\" error. Allowing the user to know it was disk access missing, and to go request access to be able to remove disks.\r\n\r\nWe stumbled upon this because the original functionality for this process was written as a PS1 advanced function, aka \"script cmdlet.\" We were under the direction to convert all functions into cmdlets. Well in the cmdlet, when you create a PowerShell class to call another cmdlet/function, any Write-Error calls from that cmdlet doesn't get written to the console, it gets written to the PowerShell.Streams.Error. So in order to show the user of the errors, we call WriteError for any ErrorRecords in the stream.",
    "created_at": "2019-10-09T14:49:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-540036359",
    "id": 540036359,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAzNjM1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540036359/reactions"
    },
    "updated_at": "2019-10-09T14:49:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540036359",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "My apologies; I should have been more clear.\r\n\r\nCan you give a minimal example written in PowerShell or C# code that illustrates the problem you're seeing and your proposed solution (example of function(s) structure, which function is surfacing the error record, which is actually calling `WriteError()`, and what your expected outcome is)?\r\n\r\nI'm fairly sure I understand what you're talking about, but your explanations seem to indicate you think I'm missing something, so I want to be sure we're on the same page. 🙂 ",
    "created_at": "2019-10-09T15:46:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-540061940",
    "id": 540061940,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDA2MTk0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540061940/reactions"
    },
    "updated_at": "2019-10-09T15:46:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540061940",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "You will have to give me some time to put together a sample project.",
    "created_at": "2019-10-09T18:09:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-540121557",
    "id": 540121557,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDEyMTU1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540121557/reactions"
    },
    "updated_at": "2019-10-09T18:09:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/540121557",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'll need to write an example resembling close to what we are calling, a cloud providers cmdlets. What do you have access to, to be able to call? AWS or Azure?",
    "created_at": "2019-10-18T17:41:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-543855608",
    "id": 543855608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg1NTYwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543855608/reactions"
    },
    "updated_at": "2019-10-18T17:41:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543855608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2798441?v=4",
      "events_url": "https://api.github.com/users/johnwc/events{/privacy}",
      "followers_url": "https://api.github.com/users/johnwc/followers",
      "following_url": "https://api.github.com/users/johnwc/following{/other_user}",
      "gists_url": "https://api.github.com/users/johnwc/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johnwc",
      "id": 2798441,
      "login": "johnwc",
      "node_id": "MDQ6VXNlcjI3OTg0NDE=",
      "organizations_url": "https://api.github.com/users/johnwc/orgs",
      "received_events_url": "https://api.github.com/users/johnwc/received_events",
      "repos_url": "https://api.github.com/users/johnwc/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johnwc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johnwc/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johnwc"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "A simple repro indicating the structure you're working with is fine, it doesn't need to be above and beyond. 🙂 \r\n\r\nIf you need to tie into those things, I can work with an Azure example. ^^",
    "created_at": "2019-10-18T17:44:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10733#issuecomment-543856954",
    "id": 543856954,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10733",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg1Njk1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543856954/reactions"
    },
    "updated_at": "2019-10-18T17:44:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543856954",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
