[
  {
    "author_association": "MEMBER",
    "body": "@BrucePay or @JamesWTruher can best answer this.",
    "created_at": "2017-02-27T20:00:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3217#issuecomment-282835101",
    "id": 282835101,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3217",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjgzNTEwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/282835101/reactions"
    },
    "updated_at": "2017-02-27T20:01:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/282835101",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "\r\nif we look at what the parameter binder believes it's arguments are we can understand the output better:\r\n```\r\nPS> trace-command *param* { write-output $(2+2)/H } -pshost                                                                                                                                                             \r\nDEBUG: ParameterBinderController Information: 0 :  WriteLine   Argument count: 2\r\n<snip>\r\n4\r\n/H\r\n```\r\nvs\r\n```\r\nPS> trace-command *param* { write-output H/$(2+2) } -pshost                                                                                                                                                             \r\nDEBUG: ParameterBinderController Information: 0 :  WriteLine   Argument count: 1\r\n<snip>\r\nH/4\r\n```\r\nSo, by the time the arguments get to the parameter binder it's already either broken up (or not) the tokens. There's definitely a difference between a variable reference `$a` and a subexpression `$(2+2)` so i would expect a difference in the behavior between `write-output $(2+2)/H` and `write-output $a/H`.\r\n\r\nI _suspect_ that it's the location of the obvious `string` element which causes the behavioral change which changes it from two arguments to one. I haven't tracked that down though. \r\n`write-output H/...` is an obvious string (since that's how it starts), pretty much anything that follows it which isn't a token separator (`space` for example) is just going to be tacked on the end.\r\n\r\nAs for `write-output .$HOME` - remember that the `.` serves two functions, one as a invocation operator and another as a property reference operator, depending on context. In this case, we've definitely got 2 tokens `.` (the invocation operator) and `$HOME`, so we emit two lines. \r\nFWIW, `Write-Host` sees these two tokens as well:\r\n```\r\nWrite-Host .$HOME\r\n. /Users/james\r\n```\r\nnote the space. Why the difference? The difference between `write-host` and `write-object` is the parameter type for the input object. in `write-host` the type is `object` and in `write-output` the parameter type is `PSObject[]`.\r\n",
    "created_at": "2017-05-24T00:28:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3217#issuecomment-303579931",
    "id": 303579931,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3217",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzU3OTkzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303579931/reactions"
    },
    "updated_at": "2017-05-24T00:28:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303579931",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for that, @JamesWTruher.\r\n\r\nTo provide more motivation for my question, which is primarily about the _user experience_, not the technical underpinnings:\r\n\r\n* It is obscure to have behavior depend on the order of tokens in this case, especially since variable references and subexpressions are _not_ treated differently when explicitly embedded inside `\"...\"`\r\n\r\n  * `Write-Output \"$(2 + 2)/H\"` yields only 1 argument.\r\n  * In POSIX-like shells, a command/arithmetic substitution (the equivalent of a subexpression in PS) _does_ work as the first token:  \r\n`echo $(( 2 + 2 ))/H` yields 1 argument, `4/H`\r\n  * That said, (the expanded results of) unquoted tokens in POSIX-like shells are subject to shell expansions that are often unwanted, leading to the annoyance that double quotes _must_ be used everywhere (and beginners forgetting them is a constant source of bugs).\r\n  * PowerShell generally frees us from that annoyance, so it's unfortunate that it doesn't do so in this case (because it results in multiple arguments).  \r\n \r\n  * Generally, _remembering_ when it works and when it doesn't, in the absence of an intuitive reason, is a challenge and, I suspect, will be an ongoing source of confusion.\r\n\r\n* The same obscure  behavior applies to juxtaposing differently quoted substrings (which are commonly used in POSIX-like shells):\r\n\r\n   * `Write-Output bare\"I'm quoted\"` -> _1_ argument, because the 1st token is _unquoted_:  \r\n`bareI'm quoted`\r\n   * `Write-Output \"I'm quoted\"bare` -> _2_ arguments, because the 1st token is _quoted_:  \r\n`I'm quoted` and `bare`\r\n\r\n* As for the `.$HOME` case: Given that the token is a _non-initial_ token parsed in _argument mode_, it _shouldn't_ be interpreted as the invocation operator.  \r\nIf unquoted tokens are to be treated like _expandable strings_ (i.e., as if the token were explicitly enclosed in `\"...\"`, \"_unless it begins with one of the following special characters: dollar sign (`$`), at sign (`@`), single quotation mark (`'`), double quotation mark (`\"`), or an opening parenthesis (`(`)_\", according to `Get-Help about_Parsing`), then `.$HOME` should work the same way as, say, `x$HOME`.\r\n\r\nI suspect the answer is that changing the behaviors described is way too late and risky, but perhaps the pitfalls of the existing behavior can be _documented_ somewhere.\r\n\r\n",
    "created_at": "2017-05-24T13:28:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3217#issuecomment-303723416",
    "id": 303723416,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3217",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzcyMzQxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303723416/reactions"
    },
    "updated_at": "2017-05-24T13:28:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/303723416",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I came across this issue as I created a similar [Unquoted Strings](https://github.com/PoshCode/PowerShellPracticeAndStyle/issues/146) request at the [The PowerShell Best Practices and Style Guide](https://github.com/PoshCode/PowerShellPracticeAndStyle) a few weeks ago without any activity. I have also created a similar statckoverflow question: [Unquoted key rules / best practice](https://stackoverflow.com/q/62754771/1701026), as I got lost in the (open and close) cascaded issues and whether this is already covered or even answered. And if not, to which issue I should add my findings (or create a new one?).",
    "created_at": "2020-07-06T11:09:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3217#issuecomment-654168054",
    "id": 654168054,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3217",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDE2ODA1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654168054/reactions"
    },
    "updated_at": "2020-07-06T16:37:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654168054",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8080834?v=4",
      "events_url": "https://api.github.com/users/iRon7/events{/privacy}",
      "followers_url": "https://api.github.com/users/iRon7/followers",
      "following_url": "https://api.github.com/users/iRon7/following{/other_user}",
      "gists_url": "https://api.github.com/users/iRon7/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iRon7",
      "id": 8080834,
      "login": "iRon7",
      "node_id": "MDQ6VXNlcjgwODA4MzQ=",
      "organizations_url": "https://api.github.com/users/iRon7/orgs",
      "received_events_url": "https://api.github.com/users/iRon7/received_events",
      "repos_url": "https://api.github.com/users/iRon7/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iRon7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iRon7/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iRon7"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iRon7, #6467 is more comprehensive and there's a related docs issue now: https://github.com/MicrosoftDocs/PowerShell-Docs/issues/3440\r\n\r\n\r\n",
    "created_at": "2020-07-06T16:15:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3217#issuecomment-654332925",
    "id": 654332925,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3217",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDMzMjkyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654332925/reactions"
    },
    "updated_at": "2020-07-06T16:15:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/654332925",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
