[
  {
    "author_association": "COLLABORATOR",
    "body": "I discussed some thoughts on this in https://github.com/PowerShell/PowerShell/issues/3241#issuecomment-383263156.\r\n\r\nIn that issue there seemed to be broad agreement that that `&&`/`||` syntax should be reserved for Bourne shell-style control operators for chaining commands.\r\n\r\nFuzzy-boolean coalescence lives in the world of expression values rather than command effects, so the existing PowerShell expression operator syntax seems appropriate.\r\n\r\nI think I've proposed it somewhere else, but basically a thought I've had in my head was to just make expression-value-conserving versions of the existing boolean operators that work like JavaScript's `&&` and `||`:\r\n\r\n```powershell\r\n'' -eor 'default' # evaluates to 'default'\r\n\r\n'' -eand 'second' # evaluates to ''\r\n```\r\n\r\n(The `e` stands for \"expression\", since we want the actual expression result &mdash; just a suggestion!)",
    "created_at": "2021-06-16T21:35:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862743042",
    "id": 862743042,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc0MzA0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862743042/reactions"
    },
    "updated_at": "2021-06-16T21:39:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862743042",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "Maybe I'm wrong, but I considered this construction as the result of executing a command. Success or failure.\r\n```\r\nGet-Item variable:fake -ea 0 || Get-Item variable:fake2 -ea 0 || 'Failure'\r\nGet-Item variable:fake -ea 0 || Get-Item variable:PSHome -ea 0 && 'Success'\r\n```",
    "created_at": "2021-06-16T22:08:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862762224",
    "id": 862762224,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc2MjIyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862762224/reactions"
    },
    "updated_at": "2021-06-16T22:08:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862762224",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@237dmitry yeah, you've characterised your example correctly.\r\n\r\nI think the issue with that is that it requires a cmdlet to be executed and to succeed or fail to use PowerShell's `&&`/`||` operators. You can think of those operators as conditional semicolons; they proceed from statement to statement on condition of success or failure. If you're trying to just coalesce to some default value, that's cumbersome, computationally expensive, and relies on the notion of execution state (rather than a conceptually pure expression).\r\n\r\nRather than shoulder that complexity, it would be nice to just have a way to coalesce expressions directly:\r\n\r\n```powershell\r\n$fake -eor $fake2 -eor 'Failure'\r\n```\r\n\r\nWhile I think more on it, it turns out you can kind of do something similar with the existing boolean operators:\r\n\r\n```powershell\r\n$null = ($result = $fake) -or ($result = $fake2) -or ($result = 'Failure')\r\n```\r\n\r\nThat takes advantage of (1) the result of the assignment occurring before conversion to boolean, (2) the value of an assignment statement being the value of the assigned value for the purposes of a subpipeline, and (3) the short-circuit logic of boolean operators.",
    "created_at": "2021-06-16T22:14:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862765156",
    "id": 862765156,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc2NTE1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862765156/reactions"
    },
    "updated_at": "2021-06-16T22:19:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862765156",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "This is success as there are not terminated errors:\r\n```\r\n$fake && $fake2 && 'Success'\r\n```\r\nFor checking null-values:\r\n```\r\n$fake ?? 'This is $null'\r\n$fake ??= 10            # if fake is $null set it to 10\r\n$fake\r\n```",
    "created_at": "2021-06-16T22:31:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862773180",
    "id": 862773180,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc3MzE4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862773180/reactions"
    },
    "updated_at": "2021-06-16T22:31:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862773180",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, in the first case `$fake` being unset, null or the empty string won't affect the result. You'll always get the concatenation of the outputs as the final result.\r\n\r\nIn the second case, the null assignment only checks for null values, not falsey ones.",
    "created_at": "2021-06-16T22:45:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862779383",
    "id": 862779383,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc3OTM4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862779383/reactions"
    },
    "updated_at": "2021-06-16T22:45:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862779383",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I suppose you could introduce a new operator that checked IsNullOrEmpty instead of just IsNull e.g.:\r\n```\r\n$emptyStr ??~ $emptyStr2 ??~ $real\r\n```\r\nNot crazy about that operator token.",
    "created_at": "2021-06-16T22:49:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862781100",
    "id": 862781100,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc4MTEwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862781100/reactions"
    },
    "updated_at": "2021-06-16T22:49:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862781100",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> In the second case, the null assignment only checks for null values, not falsey ones.\r\n\r\nYes, I agreed\r\n\r\n> `??~`\r\n\r\nThis is beauty ))",
    "created_at": "2021-06-16T22:55:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862783399",
    "id": 862783399,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc4MzM5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862783399/reactions"
    },
    "updated_at": "2021-06-16T22:55:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862783399",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> that checked IsNullOrEmpty\r\n\r\nI was thinking the underlying test would be [`LanguagePrimitives.IsTrue(value)`](https://github.com/PowerShell/PowerShell/blob/77054ff586d2c723114862347b798bd89f8e0c56/src/System.Management.Automation/engine/LanguagePrimitives.cs#L987). However, it looks like `-and` and `-or` don't use a `LanguagePrimitives` API:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/77054ff586d2c723114862347b798bd89f8e0c56/src/System.Management.Automation/engine/parser/Compiler.cs#L5659-L5662\r\n\r\n> `??~`\r\n\r\nI would normally associate `~` in an operator with regex, like [in Perl](https://www.tutorialspoint.com/perl/perl_regular_expression.htm), [bash](https://stackoverflow.com/questions/19441521/bash-regex-operator), or [Haskell](http://www.serpentine.com/blog/2007/02/27/a-haskell-regular-expression-tutorial/).",
    "created_at": "2021-06-16T22:59:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862784821",
    "id": 862784821,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc4NDgyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862784821/reactions"
    },
    "updated_at": "2021-06-16T22:59:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862784821",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "RE `~` I was thinking \"approximately\".  In the 90's I worked on a graphical programming environment for engineering and we had an `~=`  operator that would compare floating point numbers such that they were considered \"equal\" if they were within `epsilon` of one another.  But I agree, these days `~` is more often associated with regex operations.",
    "created_at": "2021-06-16T23:06:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862788331",
    "id": 862788331,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc4ODMzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862788331/reactions"
    },
    "updated_at": "2021-06-16T23:06:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862788331",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Here's another slightly cursed option that I've probably used at some point before:\r\n\r\n```powershell\r\n$a = @($emptyStr, $emptyStr2, $real).Where({$_}, 'First')\r\n```",
    "created_at": "2021-06-16T23:17:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-862793359",
    "id": 862793359,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2Mjc5MzM1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 2,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862793359/reactions"
    },
    "updated_at": "2021-06-16T23:20:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/862793359",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt \r\n\r\n> However, it looks like `-and` and `-or` don't use a `LanguagePrimitives` API:\r\n\r\nIt's confusing at a glance, but `Convert` there is an extension method that does eventually call `LanguagePrimitives`. You're (understandably) thinking of `Expression.Convert` which doesn't.",
    "created_at": "2021-06-17T13:07:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-863223265",
    "id": 863223265,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzIyMzI2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/863223265/reactions"
    },
    "updated_at": "2021-06-17T13:08:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/863223265",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> an extension method that does eventually call LanguagePrimitives\r\n\r\nAh, I had my suspicions. It seemed like it was doing that given things like `'hello' -and 'goodbye'`",
    "created_at": "2021-06-17T16:16:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-863376373",
    "id": 863376373,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzM3NjM3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/863376373/reactions"
    },
    "updated_at": "2021-06-17T16:16:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/863376373",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Here's another slightly cursed option that I've probably used at some point before\r\n\r\nYeah I wrote something like this as a demo:\r\n\r\n```powershell\r\nfunction Coalesce\r\n{\r\n    foreach ($a in $args) { if ($a) { return $a } }\r\n}\r\n\r\nCoalesce $first $second 'default'\r\n```\r\n\r\nYou could probably make this work more generally like in https://github.com/PowerShell/PowerShell/issues/8098#issuecomment-434540830 too.",
    "created_at": "2021-06-17T16:19:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15594#issuecomment-863379014",
    "id": 863379014,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15594",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MzM3OTAxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/863379014/reactions"
    },
    "updated_at": "2021-06-17T16:19:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/863379014",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  }
]
