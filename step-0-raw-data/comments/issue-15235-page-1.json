[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for writing this up.\r\n\r\nRe behavior 1. (resolving to full paths before creating the symlink):\r\n\r\nWe do _not_ want this, because defining symlinks that reference their targets via _relative_ paths is an important feature, which enables moving such symlinks - along with their targets - to a different location without breaking things.\r\n\r\nTherefore - I agree with your preference - we want behavior 2.\r\n\r\nWith that in mind, we want:\r\n\r\n* preserving relative targets _as specified_ in the symlink's actual _definition_ (potentially after normalizing path separators to the platform-native form).\r\n\r\n* for the sake of _validating_ the target on creation, an _existence check_ relative to the _symlink_'s directory.\r\n\r\n  * Currently, such checks are _not_ performed (in terms of resulting in _errors_), except if the target is specified as a _full path_ AND that path starts with a nonexistent _drive_ specification or a nonexistent _UNC share_.\r\n\r\n   * Conversely, you may  want to - by way of _opt-in_ - create a symlink to a target that you _know not to exist yet_. \r\n     * For _technical_ reasons, _on Windows_ this additionally requires explicitly indicating the target's file-system _type_ (_file_ vs. _directory_).\r\n  * See https://github.com/PowerShell/PowerShell/issues/9067#issuecomment-470140963 for a discussion of these issues.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2021-04-15T01:34:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-819955446",
    "id": 819955446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTk1NTQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819955446/reactions"
    },
    "updated_at": "2021-04-15T01:56:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/819955446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "If this gets fixed as suggested, the following is a moot point, but just to prevent additional confusion:  \r\n\r\n#12797, which, as you state, was conceptually the wrong fix, only _partially_ achieved what it tried to do: a target path such as `.\\foo` _is_ recognized as a relative path and resolved against `$PWD`, but the equivalent `foo` (no `.\\` prefix) is not, and is currently still resolved against the _process_' current directory (`[Environment]::CurrentDirectory`); see #15161 for a repro (since closed, because it will implicitly also be resolved by resolving _this_ issue).\r\n",
    "created_at": "2021-04-15T17:27:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-820603629",
    "id": 820603629,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDYwMzYyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820603629/reactions"
    },
    "updated_at": "2021-04-15T17:27:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/820603629",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The Engine WG spent ~25 minutes discussing about this issue. We agreed that the proposed fix no.2 is reasonable (quoted below). Namely, a relative path specified for `-Target` should be resolved using the path to the symbolic link, instead of powershell's current working directory.\r\n\r\n> Allow relative paths, but when checking for target type (file/directory), use the path `Join-Path $Path $Target` internally, but still write `$Target` as provided by user (relative) into the symlink itself. This is imo the better solution, allows the user to create symlinks with relative paths, but still correctly detects the type.\r\n\r\nThis makes sense because when accessing a file/directory symbolic that is associated with a relative path, such as `Get-Content <symlink>`, the relative path is resolved using the symlink path. So, we should be consistent in resolving the target relative path when creating a symbolic link with `New-Item`.\r\n\r\nThis proposed fix would be a breaking change to PowerShell 7.1. It feels like the right thing to do, but we need to evaluate the impact before proceeding.\r\n\r\n----------------------------\r\n\r\nInterestingly, our discussion led to another idea when comparing `New-Item` with `mklink`, which we want to throw out here for more discussion.\r\n\r\nWhen creating a symbolic using [`mklink`](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mklink), `mklink` doesn't check the existence of the specified `<target>` path. It creates a file symbolic by default, and creates a directory symbolic when `/d` is specified.\r\n\r\nAs is shown in the screenshot below, `myfolder` is an existing directory, but `mklink my-link c:\\arena\\tmp\\test-2\\myfolder` creates a file symbolic, even though the target path is an existing directory.\r\n\r\n![image](https://user-images.githubusercontent.com/127450/121633364-7df2ac80-ca37-11eb-84df-da09f53c5d20.png)\r\n\r\nSo, maybe `New-Item` should work similarly as `mklink` in creating a symbolic link?\r\n    - does not check on the existence of `target` path\r\n    - create file symbolic by default, and add a new `switch` parameter for creating directory symbolic\r\n\r\nThis would be a breaking change too, in that if target points to an existing directory, a directory symbolic will be create with the current behavior, but a file symbolic will be created if we change to the `mklink` behavior.\r\n",
    "created_at": "2021-06-11T05:45:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-859286180",
    "id": 859286180,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTI4NjE4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859286180/reactions"
    },
    "updated_at": "2021-06-11T05:47:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859286180",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "If it is a bug why we would say \"breaking change\"? :-)",
    "created_at": "2021-06-11T19:12:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-859786938",
    "id": 859786938,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1OTc4NjkzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859786938/reactions"
    },
    "updated_at": "2021-06-11T19:12:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/859786938",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I was going to comment on #15750 but it was closed.\r\n\r\n**New-Item Junction example:**\r\nPwsh version: `7.1.4`\r\n```pwsh\r\nNew-Item '.\\node_modules\\example-project-base\\' -ItemType Junction -Value '.\\example-project-base\\'\r\n# New-Item: Could not find item .\\example-project-base\\.\r\n```\r\n\r\nPowerShell version: `5.1.19041.1023`:\r\n```pwsh\r\nNew-Item '.\\node_modules\\example-project-base\\' -ItemType Junction -Value '.\\example-project-base\\'\r\n#    Directory: C:\\example-project\\node_modules\r\n# Mode                 LastWriteTime         Length Name\r\n# ----                 -------------         ------ ----\r\n# d----l        2021.08.23     23:27                example-project-base\r\n```\r\n",
    "created_at": "2021-08-23T20:37:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-904107334",
    "id": 904107334,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "IC_kwDOAvT7bc4145VG",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/904107334/reactions"
    },
    "updated_at": "2021-08-23T21:03:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/904107334",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/486818?v=4",
      "events_url": "https://api.github.com/users/dogancelik/events{/privacy}",
      "followers_url": "https://api.github.com/users/dogancelik/followers",
      "following_url": "https://api.github.com/users/dogancelik/following{/other_user}",
      "gists_url": "https://api.github.com/users/dogancelik/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dogancelik",
      "id": 486818,
      "login": "dogancelik",
      "node_id": "MDQ6VXNlcjQ4NjgxOA==",
      "organizations_url": "https://api.github.com/users/dogancelik/orgs",
      "received_events_url": "https://api.github.com/users/dogancelik/received_events",
      "repos_url": "https://api.github.com/users/dogancelik/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dogancelik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dogancelik/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dogancelik"
    }
  },
  {
    "author_association": "NONE",
    "body": "I ran into this regression today and found it rather tricky to find this issue because a lot of parts just work until they don't. I hope the following points help others find it more easily and deal with it:\r\n\r\n1. Relative paths that start with `..\\` (or `../`) are not supported by the current PowerShell implementation, but happen to work in many cases, specifically, when the path exists relative to the directory PowerShell was started in. (`../<username>` is a good candidate to check that, in console windows started in the home directory).\r\n    - There is little reason for the following code to check for literal `./` or `.\\` at the start of the target path. Those are not the only valid relative paths. Instead, I'd argue that `!System.IO.Path.IsPathRooted(strTargetPath)` should be used. https://github.com/PowerShell/PowerShell/blob/7dc4587014bfa22919c933607bf564f0ba53db2e/src/System.Management.Automation/namespaces/FileSystemProvider.cs#L2408-L2413 Alternatively, `Path.Join` could be called unconditionally, because rooted paths just discard the first part of the join anyways.\r\n2. The *new* feature, which we'd like to keep is that only the relative path is stored on disk, while PWSH 5 made every path absolute first, then checked whether it exists and then set the absolute path into the reparse point. This would not work well with git repos.\r\n3. When a binary (e.g. PowerShell) calls [`CreateSymbolicLink`](https://docs.microsoft.com/de-de/windows/win32/api/winbase/nf-winbase-createsymboliclinka), there's a flag called `SYMBOLIC_LINK_FLAG_DIRECTORY`, whose only effect is to switch the result of `GetFileAttributesA` from `FILE_ATTRIBUTE_ARCHIVE | FILE_ATTRIBUTE_REPARSE_POINT` to `FILE_ATTRIBUTE_DIRECTORY | FILE_ATTRIBUTE_REPARSE_POINT`. That's the reason PowerShell needs to figure out why that target is a directory in the first place, which isn't something Linux needs.\r\n4. In fact, this matters so little, that you can `Get-ChildItem symlink/subfolder` through a symlink with the wrong attribute (adding to the confusion). The only thing that actually breaks is getting a handle to the target directory via `CreateFile`. This could be considered a bug inside of windows (and breaks the way flutter detects invalid links on windows, which is how I got here in the first place)\r\n5. Powershell also needs to take care of replacing `/` with `\\` because that causes different sets of errors if written to the repare point with un-normalized forward slashes.\r\n\r\nTo summarize: If you need to work around this bug right now, just prefix all relative paths with `.\\` even if they start with `..\\` already. This is both a regression in PowerShell from 5 to 7 (e.g. `New-Item -ItemType SymbolicLink -Path \"data\" -Target \"..\\data\"` no longer works reliably) and an area of the operating system that still breaks in mysterious and under-documented ways if not handled right (e.g. creating symlinks using the Win32 api with forward slashes or pointing to the wrong type of filesystem entry)",
    "created_at": "2022-06-27T19:00:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-1167760821",
    "id": 1167760821,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "IC_kwDOAvT7bc5Fmp21",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1167760821/reactions"
    },
    "updated_at": "2022-06-27T19:00:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1167760821",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14206221?v=4",
      "events_url": "https://api.github.com/users/Xiphoseer/events{/privacy}",
      "followers_url": "https://api.github.com/users/Xiphoseer/followers",
      "following_url": "https://api.github.com/users/Xiphoseer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xiphoseer/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Xiphoseer",
      "id": 14206221,
      "login": "Xiphoseer",
      "node_id": "MDQ6VXNlcjE0MjA2MjIx",
      "organizations_url": "https://api.github.com/users/Xiphoseer/orgs",
      "received_events_url": "https://api.github.com/users/Xiphoseer/received_events",
      "repos_url": "https://api.github.com/users/Xiphoseer/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Xiphoseer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xiphoseer/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Xiphoseer"
    }
  },
  {
    "author_association": "NONE",
    "body": "> To summarize: If you need to work around this bug right now, just prefix all relative paths with .\\ even if they start with ..\\ already. This is both a regression in PowerShell from 5 to 7 (e.g. New-Item -ItemType SymbolicLink -Path \"data\" -Target \"..\\data\" no longer works reliably) and an area of the operating system that still breaks in mysterious and under-documented ways if not handled right (e.g. creating symlinks using the Win32 api with forward slashes or pointing to the wrong type of filesystem entry)\r\n\r\nAdditionally, you need to be in the working directory you want to add the directory-based symbolic link to because PowerShell is currently detecting whether a path is a file or a folder based on your current working directory rather than relative to the new item's path.\r\n\r\nLastly, you have to use double-quotes, if the relative path is in single-quotes it won't work properly.\r\n\r\nThis is rather contrived, I wish there could just be a switch parameter to specify that it's a directory I want to make rather than a file, or maybe its own special type like 'SymbolicLinkDir'.",
    "created_at": "2022-08-20T14:39:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15235#issuecomment-1221326556",
    "id": 1221326556,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15235",
    "node_id": "IC_kwDOAvT7bc5Iy_bc",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1221326556/reactions"
    },
    "updated_at": "2022-08-20T14:39:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1221326556",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/53661808?v=4",
      "events_url": "https://api.github.com/users/ImportTaste/events{/privacy}",
      "followers_url": "https://api.github.com/users/ImportTaste/followers",
      "following_url": "https://api.github.com/users/ImportTaste/following{/other_user}",
      "gists_url": "https://api.github.com/users/ImportTaste/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ImportTaste",
      "id": 53661808,
      "login": "ImportTaste",
      "node_id": "MDQ6VXNlcjUzNjYxODA4",
      "organizations_url": "https://api.github.com/users/ImportTaste/orgs",
      "received_events_url": "https://api.github.com/users/ImportTaste/received_events",
      "repos_url": "https://api.github.com/users/ImportTaste/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ImportTaste/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ImportTaste/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ImportTaste"
    }
  }
]
