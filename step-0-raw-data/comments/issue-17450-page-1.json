[
  {
    "author_association": "COLLABORATOR",
    "body": "> This can be shoehorned into PowerShell verbs by making \"plan\" a noun instead of verb, so we can \"create a New plan,\" instead of \"planning a deployment\". And we can \"Deploy a configuration\" (from a plan, or not).\r\n\r\nCan you elaborate a bit on why the verbs `New` and `Deploy` don't fit?\r\n\r\n> In fact doing what was prepared seems to fit existing verbs - if the authors of terraform had chosen, deploy, import, merge, publish, push, submit, or update instead of \"apply\" no-one would have noticed, but there's nothing to replace \"plan\"\r\n\r\nFor folks not familiar with terraform (including myself) it may be helpful to describe in greater detail the scenario you're referring to and it's impact on this discussion.",
    "created_at": "2022-05-27T15:47:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139739569",
    "id": 1139739569,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D7wux",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139739569/reactions"
    },
    "updated_at": "2022-05-27T15:47:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139739569",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yet another team that choose 'verbs' that are incompatible with PowerShell verbs. IMHO the answer is to fix Terraform, not create new verbs. Winget is another team short of clues even though they were offered the advice from the get-go. I am not in favor of adding to the verb list to fit a dev team who appears not to have signed up for the sacred vow.",
    "created_at": "2022-05-27T16:04:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139752652",
    "id": 1139752652,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D7z7M",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139752652/reactions"
    },
    "updated_at": "2022-05-27T16:04:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139752652",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3630329?v=4",
      "events_url": "https://api.github.com/users/doctordns/events{/privacy}",
      "followers_url": "https://api.github.com/users/doctordns/followers",
      "following_url": "https://api.github.com/users/doctordns/following{/other_user}",
      "gists_url": "https://api.github.com/users/doctordns/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/doctordns",
      "id": 3630329,
      "login": "doctordns",
      "node_id": "MDQ6VXNlcjM2MzAzMjk=",
      "organizations_url": "https://api.github.com/users/doctordns/orgs",
      "received_events_url": "https://api.github.com/users/doctordns/received_events",
      "repos_url": "https://api.github.com/users/doctordns/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/doctordns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doctordns/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/doctordns"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience \r\n\r\nIn terraform there is command `plan`  which is \"compare desired state with actual state and determine steps to carry out\" - this can optionally output a file which holds those steps. Whether you output the file or not, it shows what it is going to do - this output can be JSON and doing stuff with crescendo I can turn that into something PowerShelly.  It's a _preview_ but not a `-WhatIf`  \r\n\r\nI can bend the meaning of it to \"Create a new plan file\" , but it if not file is specified it isn't creating a new anything so right now I _do_ have `New-TerraformPlan [-Outfile <path>]` but if don't supply a parameter it's not  creating something new, so it feels wrong.\r\n\r\nIf I create the plan file then the next phase _does_ fit into `deploy` -  what terraform calls `apply` is either \"run the steps in the plan file\", or \"plan the steps and immediately apply them\"  in the terraform case , and I think more generally, the \"Do the thing you prepared\" fits into existing verbs. \r\n\r\n@doctordns  - terraform comes from a whole other organization, they could have picked the imperative form of other verbs  for their commands. \"Apply\" could be replaced with others, but there isn't a ready alternative for \"plan\". It would need the product to be redesigned without that function, not just giving it another name.   \r\nI'm on record as saying Microsoft should fire anyone who tries to introduce a new, non-PowerShell command-line tool for Windows, so you can guess my take on winget from there.  \r\n",
    "created_at": "2022-05-27T16:39:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139785097",
    "id": 1139785097,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D772J",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139785097/reactions"
    },
    "updated_at": "2022-05-27T16:39:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139785097",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Test IMO is the closest current verb to what you want here and should cover your needs",
    "created_at": "2022-05-27T16:46:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139791010",
    "id": 1139791010,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D79Si",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139791010/reactions"
    },
    "updated_at": "2022-05-27T16:46:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139791010",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6355225?v=4",
      "events_url": "https://api.github.com/users/kilasuit/events{/privacy}",
      "followers_url": "https://api.github.com/users/kilasuit/followers",
      "following_url": "https://api.github.com/users/kilasuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/kilasuit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kilasuit",
      "id": 6355225,
      "login": "kilasuit",
      "node_id": "MDQ6VXNlcjYzNTUyMjU=",
      "organizations_url": "https://api.github.com/users/kilasuit/orgs",
      "received_events_url": "https://api.github.com/users/kilasuit/received_events",
      "repos_url": "https://api.github.com/users/kilasuit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kilasuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kilasuit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kilasuit"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I can bend the meaning of it to \"Create a new plan file\" , but it if not file is specified it isn't creating a new anything so right now I _do_ have `New-TerraformPlan [-Outfile <path>]` but if don't supply a parameter it's not creating something new, so it feels wrong.\r\n\r\n`New` does not have to refer to a file, like `New-Object` for instance. If you scroll through `Get-Command -Verb New` most of them do not create files.\r\n\r\n> If I create the plan file then the next phase _does_ fit into `deploy` - what terraform calls `apply` is either \"run the steps in the plan file\", or \"plan the steps and immediately apply them\" in the terraform case , and I think more generally, the \"Do the thing you prepared\" fits into existing verbs.\r\n\r\nI know `Invoke` gets overused, but it seems to fit very well here.\r\n\r\n",
    "created_at": "2022-05-27T17:32:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139845559",
    "id": 1139845559,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D8Km3",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139845559/reactions"
    },
    "updated_at": "2022-05-27T17:32:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139845559",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@kilasuit  there is a `validate` so, really, test is taken. And I did think about using that, but it seems wrong for creating output which then is used for something else. ",
    "created_at": "2022-05-27T17:49:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139892529",
    "id": 1139892529,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D8WEx",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139892529/reactions"
    },
    "updated_at": "2022-05-27T17:49:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139892529",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@jhoneill we don't have validate as an approved verb in PowerShell today - is this perhaps in terraform?",
    "created_at": "2022-05-27T18:33:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139927147",
    "id": 1139927147,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D8ehr",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139927147/reactions"
    },
    "updated_at": "2022-05-27T18:33:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139927147",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6355225?v=4",
      "events_url": "https://api.github.com/users/kilasuit/events{/privacy}",
      "followers_url": "https://api.github.com/users/kilasuit/followers",
      "following_url": "https://api.github.com/users/kilasuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/kilasuit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kilasuit",
      "id": 6355225,
      "login": "kilasuit",
      "node_id": "MDQ6VXNlcjYzNTUyMjU=",
      "organizations_url": "https://api.github.com/users/kilasuit/orgs",
      "received_events_url": "https://api.github.com/users/kilasuit/received_events",
      "repos_url": "https://api.github.com/users/kilasuit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kilasuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kilasuit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kilasuit"
    }
  },
  {
    "author_association": "NONE",
    "body": "@kilasuit  Yes. sorry validate is a terraform command, which translates neatly to being Test in Powershell\r\n\r\n\r\n\r\n> > I can bend the meaning of it to \"Create a new plan file\" , but it if not file is specified it isn't creating a new anything so right now I _do_ have `New-TerraformPlan [-Outfile <path>]` but if don't supply a parameter it's not creating something new, so it feels wrong.\r\n> \r\n> `New` does not have to refer to a file, like `New-Object` for instance. If you scroll through `Get-Command -Verb New` most of them do not create files.\r\n> \r\nIt doesn't need to create a _file_, but new means _something_ exists afterwards which didn't exist before, with `terraform plan` sometimes a new file exists afterwards and sometimes nothing new exists. I'm using new but it feels wrong.   \r\n\r\n> > If I create the plan file then the next phase _does_ fit into `deploy` - what terraform calls `apply` is either \"run the steps in the plan file\", or \"plan the steps and immediately apply them\" in the terraform case , and I think more generally, the \"Do the thing you prepared\" fits into existing verbs.\r\n> \r\n> I know `Invoke` gets overused, but it seems to fit very well here.\r\n\r\nThe problem with crescendo is it ends up doing things like [\"Invoke-ls\"](https://github.com/PowerShell/Crescendo/blob/master/Microsoft.PowerShell.Crescendo/Samples/ls.crescendo.json) and tbh, I'm trying not to just turn _every_ terraform command into `Invoke-TerraformThis` and `Invoke-TerraformThat`, there may be cases where that is unavoidable . `Invoke-PrerequisteStepsForTerrraformDeployment`  is a bit ugly. \"Prepare-TFConfig\" and \"Deploy-TFConfig\" would be natural. \r\n",
    "created_at": "2022-05-27T19:30:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1139967776",
    "id": 1139967776,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D8ocg",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139967776/reactions"
    },
    "updated_at": "2022-05-27T19:30:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1139967776",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "After looking at the documentation for Terraform (I have not used Terraform before). The `Build` verb could be used in place for plan. According to the documentation plan takes a set of input (configuration) and compares that to the current state of the system and builds a set of actions to get it into the desired state. Build also fits in nicely with the build and deploy model.\r\n\r\nIf a user runs `Build-TerraformPlan` and no changes are required it could return null as it would be in the desired state. If the system is out of compliance it could return an object of all the proposed changes. That could then be piped to `Deploy-TerraformPlan`. The user could also send the object/output to a file for later use.",
    "created_at": "2022-05-27T20:17:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1140002570",
    "id": 1140002570,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D8w8K",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1140002570/reactions"
    },
    "updated_at": "2022-05-27T20:17:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1140002570",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/38873752?v=4",
      "events_url": "https://api.github.com/users/ThomasNieto/events{/privacy}",
      "followers_url": "https://api.github.com/users/ThomasNieto/followers",
      "following_url": "https://api.github.com/users/ThomasNieto/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThomasNieto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ThomasNieto",
      "id": 38873752,
      "login": "ThomasNieto",
      "node_id": "MDQ6VXNlcjM4ODczNzUy",
      "organizations_url": "https://api.github.com/users/ThomasNieto/orgs",
      "received_events_url": "https://api.github.com/users/ThomasNieto/received_events",
      "repos_url": "https://api.github.com/users/ThomasNieto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ThomasNieto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThomasNieto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ThomasNieto"
    }
  },
  {
    "author_association": "NONE",
    "body": "@ThomasNieto Yes, that works. Deploy makes sense, and Build as the step before deploy also makes sense, and the process is similar to a building software.  I still think Prepare is a good idea, but I may well use build for now. Thanks!\r\n\r\n**edit** after sleeping on it, I wonder if `build` is such a good idea when infrastructure is involved.  Does `Build-TerrafromPlan`  suggest that one takes the terraform config files and creates a plan file from them or does it suggest one takes the plan file  and creates the infrastructure from it?  I'm heading towards `New-TerraformPlan` having always creating a file unless -whatif is specified.  \r\n",
    "created_at": "2022-05-27T20:43:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1140022483",
    "id": 1140022483,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5D81zT",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1140022483/reactions"
    },
    "updated_at": "2022-05-28T16:38:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1140022483",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "While I super appreciate that we have common verbs for operations like `Remove` instead of `del`, `delete`, `erase`, etc.  I've also come to believe that there are going to be non-approved verbs and that's OK.  Don't get me wrong, we want folks to use approved verbs **when** there's a good fit.  But there isn't always a good fit.  There are so many problem domains out there where those users need verbs that better map to their problem domain instead of a bad force fit to approved verbs.  Either that or PowerShell starts accepting more verbs, but that seems like a never-ending issue.  Just my 2 cents.",
    "created_at": "2022-06-09T18:45:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1151478010",
    "id": 1151478010,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5Eoij6",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1151478010/reactions"
    },
    "updated_at": "2022-06-09T18:45:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1151478010",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Eh in my opinion if a verb offers something that is truly not represented in the existing list of approved verbs, it's reasonable to look to add it in. If it doesn't add anything that isn't already covered by another approved verb, then in general there's no reason not to use that other verb. 🤷 ",
    "created_at": "2022-06-09T18:51:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1151483526",
    "id": 1151483526,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5Eoj6G",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1151483526/reactions"
    },
    "updated_at": "2022-06-09T18:51:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1151483526",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/wg-powershell-engine discussed this and didn't see the value in adding this new verb.",
    "created_at": "2022-06-09T20:58:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1151617106",
    "id": 1151617106,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5EpEhS",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1151617106/reactions"
    },
    "updated_at": "2022-06-09T20:58:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1151617106",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "author_association": "NONE",
    "body": "@rkeithhill  - yeah I became a fan of not using 101 synonyms for the same verb pretty early on. Easy to get wedded to a specific one (we still \"Format\" volumes which is the wrong sense of the word) \r\n `Get-Verb` gives 100 verbs and if the one I think it _should be_ isn't one of those or a synonym for one which flips easily - my first thought is that I'm describing the task poorly. Something for \"do the things that get this ready\" is a missing one. Sure I _can_ use \"Prepare-Configuration\"  and then \"Complete-Configuration\"  but I think adding verbs is bad.\r\n\r\nFor my case there are multiple alternatives to Complete, I could  \"Build-Environment\", \"Send-Configuation\", \"Deploy-Configuration\", or \"submit-configuration\",  \"Push-Configuration\"  Or \"Publish-Configuration\"  Possibly \"enable\" it, \"Import\" it. or simply \"use\" it. That's 10 verbs for using what I've prepared but doing the prep...?\r\n\r\n@JamesWTruher   Insufficient demand, or served well enough with existing verbs ?  \r\n\r\n",
    "created_at": "2022-06-10T15:42:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1152495980",
    "id": 1152495980,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5EsbFs",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152495980/reactions"
    },
    "updated_at": "2022-06-10T15:42:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1152495980",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as declined and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2022-06-11T22:01:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17450#issuecomment-1153004562",
    "id": 1153004562,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17450",
    "node_id": "IC_kwDOAvT7bc5EuXQS",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1153004562/reactions"
    },
    "updated_at": "2022-06-11T22:01:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1153004562",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
