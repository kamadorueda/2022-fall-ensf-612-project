[
  {
    "author_association": "COLLABORATOR",
    "body": "This is a core PowerShell design feature and is not likely to be changed as would be a major breaking change due to the way that the pipeline works and is designed.\n\nan example to understand how the pipeline is used in Powershell would be like\n\n``` powershell\n Get-ChildItem C:\\scripts\\ -Recurse | Where-Object {$_.Name -like \"*.ps*1\"} | Group-object -Property Extension | Select-Object Count,Name\n```\n\nTo break this down we are getting all the items in the C:\\Scripts\\ folder and recursive folders and then with the collection of objects that would output we pass this to Where-Object using the Pipeline to then only return files that have a ps*1 extension and then with the collection of objects that would output this is then passed again using the pipeline to Group-Object where we get an output based on the grouping of the items based on the file extension and the we pipe this to Select-Object and tell it that we want only the Count and Name returned from that collection\n\nThe Output we would get from would get something similar to the below\n\n```\nCount Name \n----- ---- \n   76 .ps1 \n    1 .psm1\n```\n\nHappy to answer any other questions on the PowerShell Pipeline if you have them?\n",
    "created_at": "2016-08-19T10:40:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1947#issuecomment-240986232",
    "id": 240986232,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1947",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDk4NjIzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/240986232/reactions"
    },
    "updated_at": "2016-08-19T10:41:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/240986232",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6355225?v=4",
      "events_url": "https://api.github.com/users/kilasuit/events{/privacy}",
      "followers_url": "https://api.github.com/users/kilasuit/followers",
      "following_url": "https://api.github.com/users/kilasuit/following{/other_user}",
      "gists_url": "https://api.github.com/users/kilasuit/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kilasuit",
      "id": 6355225,
      "login": "kilasuit",
      "node_id": "MDQ6VXNlcjYzNTUyMjU=",
      "organizations_url": "https://api.github.com/users/kilasuit/orgs",
      "received_events_url": "https://api.github.com/users/kilasuit/received_events",
      "repos_url": "https://api.github.com/users/kilasuit/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kilasuit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kilasuit/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kilasuit"
    }
  },
  {
    "author_association": "NONE",
    "body": "Hi!\n\n@kilasuit, I could be off base, but IIRC commands with a proper `process` block implementation will stream their output, allowing something akin to @ilius' example.\n\nI'm guessing there might be some odd behavior if you mix and match output from *nix tools and PowerShell tools, and this would be expected in cases where you have a blocking command (e.g. you need all items to sort them).\n\nCheers!\n",
    "created_at": "2016-08-19T13:16:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1947#issuecomment-241015432",
    "id": 241015432,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1947",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTAxNTQzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241015432/reactions"
    },
    "updated_at": "2016-08-19T13:16:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241015432",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6377597?v=4",
      "events_url": "https://api.github.com/users/RamblingCookieMonster/events{/privacy}",
      "followers_url": "https://api.github.com/users/RamblingCookieMonster/followers",
      "following_url": "https://api.github.com/users/RamblingCookieMonster/following{/other_user}",
      "gists_url": "https://api.github.com/users/RamblingCookieMonster/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RamblingCookieMonster",
      "id": 6377597,
      "login": "RamblingCookieMonster",
      "node_id": "MDQ6VXNlcjYzNzc1OTc=",
      "organizations_url": "https://api.github.com/users/RamblingCookieMonster/orgs",
      "received_events_url": "https://api.github.com/users/RamblingCookieMonster/received_events",
      "repos_url": "https://api.github.com/users/RamblingCookieMonster/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RamblingCookieMonster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RamblingCookieMonster/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RamblingCookieMonster"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@RamblingCookieMonster is correct. Powershell will stream objects down the pipe when it can. A good common example would be to tail a log file and pipe to a search string.\n\nGet-Content -Path $path -Tail | Select-String 'Error'\n\nBut there are other commands that will block the pipe and wait for all the objects before continuing. Sort-Object is an obvious example. \n",
    "created_at": "2016-08-20T00:03:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1947#issuecomment-241163500",
    "id": 241163500,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1947",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE2MzUwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241163500/reactions"
    },
    "updated_at": "2016-08-20T00:03:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241163500",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7864621?v=4",
      "events_url": "https://api.github.com/users/KevinMarquette/events{/privacy}",
      "followers_url": "https://api.github.com/users/KevinMarquette/followers",
      "following_url": "https://api.github.com/users/KevinMarquette/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinMarquette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KevinMarquette",
      "id": 7864621,
      "login": "KevinMarquette",
      "node_id": "MDQ6VXNlcjc4NjQ2MjE=",
      "organizations_url": "https://api.github.com/users/KevinMarquette/orgs",
      "received_events_url": "https://api.github.com/users/KevinMarquette/received_events",
      "repos_url": "https://api.github.com/users/KevinMarquette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KevinMarquette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinMarquette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KevinMarquette"
    }
  },
  {
    "author_association": "NONE",
    "body": "I can't see how this breaks compatibility\nIf a command (like ``Sort-Object` or `Select-Object`) **needs the whole input** to process, it can **wait for the whole input** itself, that's up to the second command (receiver), that does not prevent the first command (sender) or the Shell to send it's output.\n\nhttps://en.wikipedia.org/wiki/Pipeline_(Unix)\n",
    "created_at": "2016-08-20T01:24:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1947#issuecomment-241169688",
    "id": 241169688,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1947",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE2OTY4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241169688/reactions"
    },
    "updated_at": "2016-08-20T01:24:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241169688",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/197648?v=4",
      "events_url": "https://api.github.com/users/ilius/events{/privacy}",
      "followers_url": "https://api.github.com/users/ilius/followers",
      "following_url": "https://api.github.com/users/ilius/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilius/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ilius",
      "id": 197648,
      "login": "ilius",
      "node_id": "MDQ6VXNlcjE5NzY0OA==",
      "organizations_url": "https://api.github.com/users/ilius/orgs",
      "received_events_url": "https://api.github.com/users/ilius/received_events",
      "repos_url": "https://api.github.com/users/ilius/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ilius/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilius/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ilius"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Closing as this is a duplicate, see #559.  It is fixable, but a bit tricky.\n",
    "created_at": "2016-08-20T02:00:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1947#issuecomment-241172028",
    "id": 241172028,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1947",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE3MjAyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241172028/reactions"
    },
    "updated_at": "2016-08-20T02:00:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241172028",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  }
]
