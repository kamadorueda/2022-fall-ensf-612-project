[
  {
    "author_association": "COLLABORATOR",
    "body": "@ryhayash \r\n\r\n> I understand there are workarounds but just want to know if this is expected behavior \r\n\r\nThis behaviour is the logical consequence of what you're doing. Unlike the `foreach` statement which just has a block as part of the statement., `Where-Object` is a _command_ that takes a script block _object_ as it's argument. A scriptblock is an anonymous function (anonymous command) so it has it's own invocation information and, since it's anonymous, the command name is empty. The other fields are populated however e.g.\r\n```powershell\r\n{master}PSCore (1:11) >  & { $MyInvocation.MyCommand.CommandType}\r\nScript\r\n```",
    "created_at": "2019-09-03T20:07:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-527618146",
    "id": 527618146,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzYxODE0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527618146/reactions"
    },
    "updated_at": "2019-09-03T20:07:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527618146",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@BrucePay if that's the case, why does the behaviour differ between `Where-Object` and `ForEach-Object`? They are both cmdlets, and I don't think it's unreasonable for users to expect a consistent experience between these two commands in terms of how their scriptblock implementations behave.",
    "created_at": "2019-09-03T20:28:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-527626190",
    "id": 527626190,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzYyNjE5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527626190/reactions"
    },
    "updated_at": "2019-09-03T20:28:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527626190",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I agree. We need to decide which behavior is the correct one.\r\nFrom my personal view, `Where-Object` seems doing the right thing because just like @BrucePay said, a script block is an anonymous function.\r\n\r\nHere is another example:\r\n```powershell\r\nPS> cat .\\b.ps1\r\n. { Write-Host('MyInvocation in the script block: ' + $MyInvocation.MyCommand.Name) }\r\nPS> .\\b.ps1\r\nMyInvocation in the script block:\r\n```\r\nHere, `b.ps1` contains an invocation of a script block, and as we can see, the script block doesn't uses `b.ps1` as the command name.\r\n\r\n#10454 is related to this issue. The PR made an optimization to override `ForEahc-Object` with dot-sourcing a filter-like script block for some common uses of `ForEach-Object`, and when that optimization kicks in, `$MyInvocation.MyCommand.Name` is `null` for `ForEach-Object` too.\r\nWhether that should be fixed and how to fix it depends on the conclusion of this issue.\r\n\r\n-----------------------------------\r\n\r\nHere are the output of `$MyInvocation` from `Where-Object` and `ForEach-Object` in the repro scenario as in `preview.3`:\r\n\r\n```powershell\r\nMyInvocation in ForEach-Object:\r\n\r\nMyCommand             : a.ps1\r\nBoundParameters       : {}\r\nUnboundArguments      : {}\r\nScriptLineNumber      : 1\r\nOffsetInLine          : 1\r\nHistoryId             : 46\r\nScriptName            :\r\nLine                  : .\\a.ps1\r\nPositionMessage       : At line:1 char:1\r\n                        + .\\a.ps1\r\n                        + ~~~~~~~\r\nPSScriptRoot          :\r\nPSCommandPath         :\r\nInvocationName        : .\\a.ps1\r\nPipelineLength        : 1\r\nPipelinePosition      : 1\r\nExpectingInput        : False\r\nCommandOrigin         : Runspace\r\nDisplayScriptPosition :\r\n```\r\n\r\n```powershell\r\nMyInvocation in Where-Object:\r\n\r\nMyCommand             :\r\nBoundParameters       : {}\r\nUnboundArguments      : {}\r\nScriptLineNumber      : 1\r\nOffsetInLine          : 1\r\nHistoryId             : 47\r\nScriptName            :\r\nLine                  : .\\c.ps1\r\nPositionMessage       : At line:1 char:1\r\n                        + .\\c.ps1\r\n                        + ~~~~~~~\r\nPSScriptRoot          :\r\nPSCommandPath         :\r\nInvocationName        :\r\nPipelineLength        : 0\r\nPipelinePosition      : 0\r\nExpectingInput        : False\r\nCommandOrigin         : Internal\r\nDisplayScriptPosition :\r\n```\r\nHere is the output of  `$MyInvocation` from `ForEach-Object` in the repro scenario with the optimization change in #10454:\r\n\r\n```powershell\r\nMyInvocation in ForEach-Object:\r\n\r\nMyCommand             :\r\n                            'MyInvocation in ForEach-Object: '\r\n                            $MyInvocation | fl *\r\n\r\nBoundParameters       : {}\r\nUnboundArguments      : {}\r\nScriptLineNumber      : 5\r\nOffsetInLine          : 36\r\nHistoryId             : 32\r\nScriptName            : F:\\tmp\\a.ps1\r\nLine                  : 1..2 | Where-Object { $_ -gt 1 } | ForEach-Object {\r\n\r\nPositionMessage       : At F:\\tmp\\a.ps1:5 char:36\r\n                        + 1..2 | Where-Object { $_ -gt 1 } | ForEach-Object {\r\n                        +                                    ~~~~~~~~~~~~~~~~\r\nPSScriptRoot          : F:\\tmp\r\nPSCommandPath         : F:\\tmp\\a.ps1\r\nInvocationName        : ForEach-Object\r\nPipelineLength        : 2\r\nPipelinePosition      : 2\r\nExpectingInput        : True\r\nCommandOrigin         : Internal\r\nDisplayScriptPosition :\r\n```",
    "created_at": "2019-09-03T21:54:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-527655997",
    "id": 527655997,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzY1NTk5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527655997/reactions"
    },
    "updated_at": "2019-09-04T23:32:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527655997",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Don't forget about `ForEach -Parallel` - we need to have a consistency with it too.",
    "created_at": "2019-09-04T03:11:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-527720785",
    "id": 527720785,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzcyMDc4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527720785/reactions"
    },
    "updated_at": "2019-09-04T03:11:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527720785",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "At the meantime, I also doubt if it's necessary to pursue the consistency of `$MyInvocation` for `ForEach-Object` and `Where-Object`. I will analyze the [powershell corpus](https://onedrive.live.com/?authkey=%21AC9cbXs%2DtwuSZ%2DE&cid=7874CFD565B38D4B&id=7874CFD565B38D4B%211091892&parId=7874CFD565B38D4B%211091891&action=locate) to find out if there is any uses of `$MyInvocation` within the `Where/ForEach-Object` script block arguments.",
    "created_at": "2019-09-04T06:29:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-527761893",
    "id": 527761893,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzc2MTg5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527761893/reactions"
    },
    "updated_at": "2019-09-04T06:29:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527761893",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I analyzed the [powershell corpus]().`ForEach-Object` appears 260954 times in those scripts, and the variable `$MyInvocation` is used in 294 `ForEach-Object` invocations. Out of that 294 uses, 259 are `$MyInvocation.MyCommand.XXX`.\r\nGiven this analysis result, the pipeline-rewriting optimization is a practical breaking change, and has been reverted.",
    "created_at": "2019-09-05T16:35:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528452401",
    "id": 528452401,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODQ1MjQwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528452401/reactions"
    },
    "updated_at": "2019-09-05T16:35:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528452401",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Is there no way to implement the optimization without the breaking change? 🙁 ",
    "created_at": "2019-09-05T16:42:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528455023",
    "id": 528455023,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODQ1NTAyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528455023/reactions"
    },
    "updated_at": "2019-09-05T16:42:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528455023",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I looked into how feasible to fix this with the pipeline-rewriting. It turned out not possible unless with some hacky code to break how the `ScriptCommandProcessor` works today, for example, making the `InternalCommand.MyInvocation` settable, which might introduce other problems because the rest of code assumes `InternalCommand.MyInvocation` reflects exactly the `InternalCommand`.",
    "created_at": "2019-09-05T17:09:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528479866",
    "id": 528479866,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODQ3OTg2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528479866/reactions"
    },
    "updated_at": "2019-09-05T17:09:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528479866",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Does the .MyInvocation work right in filter function?",
    "created_at": "2019-09-06T04:26:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528702608",
    "id": 528702608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODcwMjYwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528702608/reactions"
    },
    "updated_at": "2019-09-06T04:26:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528702608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@iSazonov I'm not clear what you are asking. For reference, below are the places where the `InvocationInfo` is constructed for `ForEach-Object` and `Where-Object`. Basically, it's impossible to retain the exact same `InvocationInfo` if we replace the `ForEach-Objcet` with a script command.\r\n\r\n**ForEach-Object:**\r\nhttps://github.com/PowerShell/PowerShell/blob/cc0fed479a3e455b746a3d12597f078462f2d644/src/System.Management.Automation/engine/lang/scriptblock.cs#L676-L677\r\n\r\n**Where-Object:**\r\nhttps://github.com/PowerShell/PowerShell/blob/cc0fed479a3e455b746a3d12597f078462f2d644/src/System.Management.Automation/engine/runtime/CompiledScriptBlock.cs#L1051-L1059",
    "created_at": "2019-09-06T16:45:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528928328",
    "id": 528928328,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODkyODMyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528928328/reactions"
    },
    "updated_at": "2019-09-06T16:45:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528928328",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Basically, it's impossible to retain the exact same InvocationInfo if we replace the ForEach-Objcet with a script command.\r\n\r\nI see. My comment was that we consider ForEach-Object, Where-Object and ForEach (and .ForEach()) but there is filter functions. I guess that ForEach and filter functions have the same behaviour.\r\n\r\nWe have or could have other cmdlets with scriptblock parameters. What is their behavior?",
    "created_at": "2019-09-06T18:57:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528974277",
    "id": 528974277,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODk3NDI3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528974277/reactions"
    },
    "updated_at": "2019-09-06T18:57:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528974277",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> I guess that ForEach and filter functions have the same behaviour.\r\n\r\nNo, `Foreach-Object` and filter functions (or script block with the process block only) have different behavior when it comes to `$MyInvocation`.\r\n\r\n> We have or could have other cmdlets with scriptblock parameters. What is their behavior?\r\n\r\nThat depends on which `XXInvokeXX` method is being used for those script block arguments.",
    "created_at": "2019-09-06T20:00:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528994193",
    "id": 528994193,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODk5NDE5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528994193/reactions"
    },
    "updated_at": "2019-09-06T20:00:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528994193",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Should we be matching which `XXInvokeXX` method is being used between ForEach-Object and Where-Object?",
    "created_at": "2019-09-06T20:11:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528997598",
    "id": 528997598,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODk5NzU5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528997598/reactions"
    },
    "updated_at": "2019-09-06T20:11:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528997598",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I don't know. It sounds like a breaking change. And again, the question would be back to `is it necessary to pursue the consistency in these two particular cases`.",
    "created_at": "2019-09-06T20:17:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-528999693",
    "id": 528999693,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyODk5OTY5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528999693/reactions"
    },
    "updated_at": "2019-09-06T20:17:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/528999693",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> That depends on which XXInvokeXX method is being used for those script block arguments.\r\n\r\nIf we allow this for third-party cmdlets why do we search a consistency for core cmdlets?\r\n\r\nIf a conclusion will be that we should use only one way this will mean that we should deprecate a public API, right?\r\n",
    "created_at": "2019-09-07T18:53:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-529136702",
    "id": 529136702,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTEzNjcwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/529136702/reactions"
    },
    "updated_at": "2019-09-07T18:53:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/529136702",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  Inspecting the code, it appears that both `Where-Object` and `ForEach-Object` both have code to set MyInvocation, but using different APIs.  It seems that user found utility in getting this information so we recommend that `Where-Object` should behave like `ForEach-Object` even if it is technically correct that it's an anonymous function.",
    "created_at": "2019-12-18T23:43:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10477#issuecomment-567262667",
    "id": 567262667,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10477",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzI2MjY2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567262667/reactions"
    },
    "updated_at": "2019-12-18T23:43:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/567262667",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
