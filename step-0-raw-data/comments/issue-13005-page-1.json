[
  {
    "author_association": "COLLABORATOR",
    "body": "Main purpose of the cmdlet is to inform users about a progress in long time process. Current implementation allows to cover  most of real scenarios. Even in the above example, you can place important information instead of \"End\" string. (I believe that it is possible to write a script that will do this the same way in both versions.)\r\nCurrent optimization is really skipping all updates for 200 ms. It is simple and gives great performance. You ask to track last update. This will complicate the code and consume more resources. Given other issues with this cmdlet, this is not worth the effort.\r\n",
    "created_at": "2020-06-22T12:25:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647484081",
    "id": 647484081,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzQ4NDA4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647484081/reactions"
    },
    "updated_at": "2020-06-22T12:25:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647484081",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Hmm. It shouldn't be _too_ much more complicated to just cache the last update somewhere & overwrite that reference when a new record is received, I wouldn't think?\r\n\r\nSounds like a fairly straightforward improvement to me.",
    "created_at": "2020-06-22T12:34:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647489556",
    "id": 647489556,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzQ4OTU1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647489556/reactions"
    },
    "updated_at": "2020-06-22T12:34:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647489556",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Improving what? Do you know a real scenario that requires this?\r\n",
    "created_at": "2020-06-22T12:40:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647492949",
    "id": 647492949,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzQ5Mjk0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647492949/reactions"
    },
    "updated_at": "2020-06-22T12:40:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647492949",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> \r\n> \r\n> Improving what? Do you know a real scenario that requires this?\r\n\r\nIn the example I posted lest say the the loop takes an hour to complete. you see in the progress bar something like `\"I: 1\" \"step xxx\"` manning you are somewhere on loop 1 but in reality loop 1 finished half an hour ago and you are actually on loop 2 for the last half hour .\r\nThe progress bar in this scenario is more confusing then helpful.\r\n\r\nputting information in the \"End\" string as you say will not help as this stage is not relevant any more.\r\n\r\nHope it's clear.",
    "created_at": "2020-06-22T13:17:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647513330",
    "id": 647513330,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzUxMzMzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647513330/reactions"
    },
    "updated_at": "2020-06-22T13:37:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647513330",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6960531?v=4",
      "events_url": "https://api.github.com/users/ili101/events{/privacy}",
      "followers_url": "https://api.github.com/users/ili101/followers",
      "following_url": "https://api.github.com/users/ili101/following{/other_user}",
      "gists_url": "https://api.github.com/users/ili101/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ili101",
      "id": 6960531,
      "login": "ili101",
      "node_id": "MDQ6VXNlcjY5NjA1MzE=",
      "organizations_url": "https://api.github.com/users/ili101/orgs",
      "received_events_url": "https://api.github.com/users/ili101/received_events",
      "repos_url": "https://api.github.com/users/ili101/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ili101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ili101/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ili101"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@ili101 In \"Expected behavior\" you say that you expect \"Work\". This also says that you agree ignore \"Start\" and \"End\". In the case you can remove these two Write-Progress and get expected behavior.",
    "created_at": "2020-06-22T13:36:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647524089",
    "id": 647524089,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzUyNDA4OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647524089/reactions"
    },
    "updated_at": "2020-06-22T13:36:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647524089",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> \r\n> \r\n> @ili101 In \"Expected behavior\" you say that you expect \"Work\". This also says that you agree ignore \"Start\" and \"End\". In the case you can remove these two Write-Progress and get expected behavior.\r\n\r\nNow you may say do something like this: \r\n``` powershell\r\nforeach ($item in 1..3) {\r\n    Write-Progress -Activity \"Working on: $item\"\r\n    Start-Sleep 3\r\n}\r\n```\r\nThat will work but not always because lest say 1 takes an hour (shows correctly as \"Working on: 1\"), then step 2 take no time (lest say something not exists so noting to do for 2), then step 3 take an hour like 1.\r\nfor the entire hour of step 3 you will see in the progress bar \"Working on: 2\" and not 3.",
    "created_at": "2020-06-22T13:38:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647525053",
    "id": 647525053,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzUyNTA1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647525053/reactions"
    },
    "updated_at": "2020-06-22T13:38:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647525053",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6960531?v=4",
      "events_url": "https://api.github.com/users/ili101/events{/privacy}",
      "followers_url": "https://api.github.com/users/ili101/followers",
      "following_url": "https://api.github.com/users/ili101/following{/other_user}",
      "gists_url": "https://api.github.com/users/ili101/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ili101",
      "id": 6960531,
      "login": "ili101",
      "node_id": "MDQ6VXNlcjY5NjA1MzE=",
      "organizations_url": "https://api.github.com/users/ili101/orgs",
      "received_events_url": "https://api.github.com/users/ili101/received_events",
      "repos_url": "https://api.github.com/users/ili101/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ili101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ili101/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ili101"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@ili101 If you know that one cycle can take 1 hour and next 0 sec you can add short delay in 200 ms.",
    "created_at": "2020-06-22T13:48:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647530877",
    "id": 647530877,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzUzMDg3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647530877/reactions"
    },
    "updated_at": "2020-06-22T13:48:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647530877",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, but that's the kind of implementation detail that should just be handled nicely by the cmdlet / underlying system already.\r\n\r\nUsers shouldn't have to know the fine details of exactly how progress buffers records to make it work.",
    "created_at": "2020-06-22T13:58:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647536912",
    "id": 647536912,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzUzNjkxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647536912/reactions"
    },
    "updated_at": "2020-06-22T13:58:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647536912",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It is an implementation detail for developers, not for end users.\r\nAlso you ask to address \"Work\" but next request would be to address \"Start\" and/or \"End\". This can not be resolved automatically in common - in any case developers will have to do a workaround while the optimization exits but we can not remove it. ",
    "created_at": "2020-06-22T14:33:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647557537",
    "id": 647557537,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU1NzUzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647557537/reactions"
    },
    "updated_at": "2020-06-22T14:33:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647557537",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Can you describe the issues you're foreseeing in more detail? I'm not sure I understand why that would be any different to its current behaviour, nor why the suggested improvement will make a non-negligible impact there.",
    "created_at": "2020-06-22T14:36:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647559232",
    "id": 647559232,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU1OTIzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647559232/reactions"
    },
    "updated_at": "2020-06-22T14:36:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647559232",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32 A root of the issue is that we _skip_ some progress records for performance. This means that there will _always_ be a situation that will require a workaround. Today we have a compromise. In fact, the situation is even worse because there may be several runspaces which affect each other.\r\n\r\n",
    "created_at": "2020-06-22T14:57:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647571621",
    "id": 647571621,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU3MTYyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647571621/reactions"
    },
    "updated_at": "2020-06-22T14:57:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647571621",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Sure, but it stands to reason that the most recently-submitted progress record should be the one used to redraw after a rest period.\r\n\r\nThe current implementation assumes that there will always be a constant stream of progress records, so when no more progress records are received, any sent since the last update are completely ignored. Instead we can flip this around so that the more recent record is always displayed.\r\n\r\nThere are a multitude of other issues we could bring up -- I enumerated _many_ of them in my issue #7983 from 2018. At the very least, until someone is willing to redesign the whole system we can allow smaller QOL fixes for the current system to be a little more usable.",
    "created_at": "2020-06-22T15:06:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647577302",
    "id": 647577302,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU3NzMwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647577302/reactions"
    },
    "updated_at": "2020-06-22T15:06:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647577302",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Sure, but it stands to reason that the most recently-submitted progress record should be the one used to redraw after a rest period.\r\n\r\nThat is how it works. I assumed that we ignore records at all, but in fact we put them in a cache and delay only for show to the screen. \r\nTo address the request we would to have to make the show code async and put the show code in another thread. This was rejected in time the performance optimization was added because of complicity. \r\nSo it is by-design since a simple workaround with delay exists and until this area will be redesigned and reimplemented.\r\n\r\n\r\n",
    "created_at": "2020-06-22T17:55:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647682749",
    "id": 647682749,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzY4Mjc0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647682749/reactions"
    },
    "updated_at": "2020-06-22T17:55:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647682749",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I think the most common thing I see `Write-Progress` used for is \"copying files with a progress bar\".  While generally not super advisable, it's the first experience a lot of folks are going to have with the cmdlet.  For this use case, it's pretty much exclusively going to show the wrong thing:\r\n\r\n```powershell\r\nfor ($i = 0; $true; $i++) {\r\n    Write-Progress \"Processing $i\"\r\n    Write-Host \"Actually processing $i\"\r\n\r\n    # Simulate the occasional large file\r\n    if ($i % 5 -eq 0) {\r\n        Start-Sleep 5\r\n    }\r\n}\r\n```\r\n\r\nMost folks aren't going to research the work around, they're just going to assume the cmdlet is broken and never touch it again.\r\n\r\nWould it be possible to simply put the show code in the `TimerCallback` (enclosed in a `try`/`finally` that starts and stops the timer)?",
    "created_at": "2020-06-22T18:32:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647700156",
    "id": 647700156,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzcwMDE1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647700156/reactions"
    },
    "updated_at": "2020-06-22T18:32:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647700156",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Would it be possible to simply put the show code in the TimerCallback (enclosed in a try/finally that starts and stops the timer)?\r\n\r\nThis was my first impulse, but after discussion, we chose an easier way. Why? This is a fundamental property of this progress bar function that developers have to adopt to every specific scenario.\r\nAn operation can take 1ms or/and 1 hour. In first case we should skip updates because users cannot see such frequent updates. In second case users will see one message long time - it is not good experience. Windows file copy API can register and call a callback so that if we copy 1 Tb file we can see that a progress bar is updated. But .Net API does not utilize the API. (I did not found such API in Linux too.). In the third case, short and long operations may alternate. This again requires a special approach.\r\nEven if we move the show code to the timer callback, we will not solve most scenarios. Therefore, the conclusion was that the simplest thing that users can do is add a delay as needed.\r\nTaking into account that MSFT team does not do a review for most contributions, at present I do not think that any changes in this code will be approved.\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2020-06-23T04:29:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-647900194",
    "id": 647900194,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzkwMDE5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647900194/reactions"
    },
    "updated_at": "2020-06-23T04:29:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/647900194",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> This was my first impulse, but after discussion, we chose an easier way. Why? This is a fundamental property of this progress bar function that developers have to adopt to every specific scenario.\r\n\r\nCan you elaborate a bit? I'm having a hard time following how this is a fundamental property.\r\n\r\n> An operation can take 1ms or/and 1 hour. In first case we should skip updates because users cannot see such frequent updates.\r\n\r\nMy proposal will still skip the same amount of updates, it'll just ensure that the most relevant one is rendered instead of waiting until the next `WriteProgress` call.\r\n\r\n> In second case users will see one message long time - it is not good experience.\r\n\r\nWhat about 5 seconds like my example? If most operations take 50ms but some take 2 seconds the progress message will still be consistently wrong.\r\n\r\n> Windows file copy API can register and call a callback so that if we copy 1 Tb file we can see that a progress bar is updated. But .Net API does not utilize the API. (I did not found such API in Linux too.). In the third case, short and long operations may alternate. This again requires a special approach.\r\n\r\nYeah like I said, not generally advisable.  Still though, it's going to be what a lot of newbies try first, and if it just straight up shows the wrong thing a lot will just never touch the command again.\r\n\r\n> Even if we move the show code to the timer callback, we will not solve most scenarios.\r\n\r\nGotcha.  Out of curiosity could you elaborate on the scenarios that will miss?\r\n\r\n> Therefore, the conclusion was that the simplest thing that users can do is add a delay as needed.\r\n\r\nIs that really better than just ditching progress entirely though?  The only time you *don't* have to add the delay is if you don't care if the message shows the wrong step.  Or if you know **for sure** that there are no machines where one step will take under 200ms, and another will take a couple seconds. I guess what I'm getting at is, was performance really fixed if the only way to use it reliably is to add a delay?",
    "created_at": "2020-06-23T12:50:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-648124311",
    "id": 648124311,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODEyNDMxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648124311/reactions"
    },
    "updated_at": "2020-06-23T12:50:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648124311",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SeeminglyScience You intend to plunge me into a redesign of this feature. :-) But I do not see any chance that this will be realized in near months... :-( \r\nAlthough ... I think I know a better way - to add more flexibility to this feature.\r\nBut it bothers me more that this feature creates strong pressure on garbage.\r\nI hope to resolve this after the project comes to life.\r\n",
    "created_at": "2020-06-23T17:05:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-648293739",
    "id": 648293739,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODI5MzczOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648293739/reactions"
    },
    "updated_at": "2020-06-23T17:05:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648293739",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> You intend to plunge me into a redesign of this feature. :-)\r\n\r\n[Maaaybee...](https://media1.tenor.com/images/c6609bccc44eb321f34c583496faccd3/tenor.gif?itemid=4384335) 😀 \r\n\r\nLet me just spell out real quick what I'm suggesting though.  Feel free to disregard if you have a better plan 🙂 \r\n\r\n1. Put a lock around https://github.com/PowerShell/PowerShell/blob/7500513911763d5cd9ad08ded6ce0a7f3b336617/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterfaceProgress.cs#L72\r\n\r\n1. Change https://github.com/PowerShell/PowerShell/blob/7500513911763d5cd9ad08ded6ce0a7f3b336617/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterfaceProgress.cs#L93-L98 to be:\r\n\r\n    ```csharp\r\n    Interlocked.Exchange(ref someNewFlagIndicatingUpdateNeeded, 1)\r\n    ```\r\n\r\n1. Change https://github.com/PowerShell/PowerShell/blob/7500513911763d5cd9ad08ded6ce0a7f3b336617/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHostUserInterfaceProgress.cs#L107-L110 to be:\r\n\r\n    ```csharp\r\n    ProgressPaneUpdateTimerElapsed(object sender)\r\n    {\r\n        if (Interlocked.CompareExchange(ref someNewFlagIndicatingUpdateNeeded, 0, 0) == 0)\r\n        {\r\n            return;\r\n        }\r\n\r\n        var timer = (Timer)sender;\r\n        timer.Stop();\r\n        try\r\n        {\r\n            lock (_sameLockAsUpdate)\r\n            {\r\n                _progPane.Show(_pendingProgress);\r\n                Interlocked.Exchange(ref someNewFlagIndicatingUpdateNeeded, 0);\r\n            }\r\n        }\r\n        finally\r\n        {\r\n            timer.Start();\r\n        }\r\n    }\r\n    ```\r\n\r\nNeeds tweaking but hopefully gives the full idea.",
    "created_at": "2020-06-23T18:19:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13005#issuecomment-648334121",
    "id": 648334121,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODMzNDEyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648334121/reactions"
    },
    "updated_at": "2020-06-23T18:19:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648334121",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
