[
  {
    "author_association": "COLLABORATOR",
    "body": "I would still like a discussion about what's the right thing to do methods with more than 63 overloads and or more than 16 generic parameters.\r\n\r\nThese are for sure edge cases, but it would be nice to at least handle them gracefully\r\n",
    "created_at": "2017-11-02T18:34:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-341518013",
    "id": 341518013,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTUxODAxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341518013/reactions"
    },
    "updated_at": "2017-11-02T18:34:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341518013",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@powercode - if you want full generality, as long as `MethodGroup` is an internal type, you can have a special case where, if the last type parameter is `MethodGroup`, then you have essentially a linked list, and the type parameters to that last `MethodGroup` is the continuation of the list.\r\n\r\nTo be concrete, say we only support 1 or 2 methods in `MethodGroup`, but you have 3 overloads. You would encode that as:\r\n\r\n```\r\nMethodGroup[\r\n    Func[int, int],\r\n    MethodGroup[\r\n        Func[string, string],\r\n        Func[long, long]]]\r\n```\r\n\r\nUsing this trick, you could use a single generic type to represent all generic type parameters, the length of the list would encode T0, T1, etc.\r\n\r\n```\r\nPSGenericType[unit] # T0\r\nPSGenericType[PSGenericType[unit]] # T1\r\nPSGenericType[PSGenericType[PSGenericType[unit]]] # T2\r\n# etc.\r\n```\r\n",
    "created_at": "2017-11-02T20:35:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-341550047",
    "id": 341550047,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU1MDA0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341550047/reactions"
    },
    "updated_at": "2017-11-02T20:35:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341550047",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@lzybkr I kinda already to that:\r\n```\r\ncase 7: return typeof(MethodGroup<,,,>).MakeGenericType(types[0], types[1], types[2], CreateMethodGroup(types, 3, 4));\r\n```\r\n\r\nIt is recursive in the last parameter.",
    "created_at": "2017-11-02T21:00:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-341556567",
    "id": 341556567,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU1NjU2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341556567/reactions"
    },
    "updated_at": "2017-11-02T21:00:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341556567",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I just learned that I need to have a representation of Span<T> too. That special class cannot be used as a generic argument. https://github.com/dotnet/corefxlab/blob/master/docs/specs/span.md ",
    "created_at": "2017-11-03T12:08:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-341686308",
    "id": 341686308,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTY4NjMwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341686308/reactions"
    },
    "updated_at": "2017-11-03T12:08:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341686308",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@lzybkr  I will explore the `PSGenericType[unit]` route in the weekend. I liked the idea better than the hardcoded types. Or maybe a combination, that if more than `n` parameters, use the template",
    "created_at": "2017-11-03T12:30:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-341690452",
    "id": 341690452,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTY5MDQ1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341690452/reactions"
    },
    "updated_at": "2017-11-03T12:30:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/341690452",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "A few further improvement points\r\n--------------------------------------\r\n1. `DelegateArgsComparator.ParameterTypesMatches` doesn't consider the Variance in delegate parameter types. A method signature `int CallMe(object input)` should be able to be converted to `Func<string, int>`.\r\n2. `PSMethod.MatchesPSMethodProjectedType` doesn't handle the case where both `targetType` and `projectedSourceType` are the same `ByRef` type or `Pointer` type.\r\n3. I think the 'Unit' type name should be changed to 'VOID'. Use type `Unit` to represent `void` is not intuitive and I misread it to `uint` when first looking at the code.\r\n4. I don't get the point of having `ReplaceGenericTypeArgumentsWithMarkerTypes`. After making a generic method using our synthetic reference/value types, the generated `MethodInfo` signature won't match any real delegates except in one condition -- the original generic method doesn't use the generic type argument for any of its parameters or return type -- I think it's rare for this condition to be met for a generic method.\r\n\r\nTwo questions about the design\r\n----------------------------------------------\r\n1. It's eye-opening for me to see how you can track the signature information using the generic type argument of `PSMethod<>` 😮 But why do you choose the current design over adding a `List<Type>` field/property to `PSMethod` to keep all the `Func<...>` delegate types? \r\nWith a `List<Type>` field/property, you don't need the algorithm to create `MethodGroup<...>` or to enumerate the `Func<...>` type from the `MethodGroup<...>` type, and we won't need to make that many generic types, and the code would be easier to understand too.\r\n2. I agree that we need pseudo types to represent `ByRef` type (ref/out), `Pointer` type `void` type and even `TypeReference`, but why do we need `PSEnum<>` to wrap enum types?",
    "created_at": "2017-12-01T21:12:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-348615573",
    "id": 348615573,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYxNTU3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348615573/reactions"
    },
    "updated_at": "2017-12-02T01:33:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348615573",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@daxian-dbw - The use of `PSMethod<>` allows for faster conversions.\r\n\r\nIf you have a conversion from `PSMethod` to `Action`, `Action<int>`, `Action<int,int>`, etc., then it requires a more expensive check to determine the conversion validity.\r\n\r\nIf it is type based, then there is no conversion from `PSMethod` to `Action<int>`, but there is for `PSMethod<MethodGroup<Action<int>>>` to `Action<int>`.\r\n\r\nPut another way, the `FigureConversion` logic essentially relies on types. If you look closely, you'll see that value dependent conversions do exist, but the design only accommodates them because I couldn't see a better way to support that rarely used scenario.",
    "created_at": "2017-12-01T21:39:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-348621234",
    "id": 348621234,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODYyMTIzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348621234/reactions"
    },
    "updated_at": "2017-12-01T21:39:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348621234",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@lzybkr That makes perfect sense now. I forgot about the conversion cache.\r\n\r\n- Without `PSMethod<>` type, the cache is useless for this kind of conversion -- we will end up doing the validity check on every `PSMethod -> Delegate` conversion.\r\n- With the `PSMethod<>` type, no duplicate validity check is needed. For invalid \r\n`PSMethod<> -> Delegate` conversions, the conversion cache will have a `ConvertNoConversion` for the `FromType, ToType` tuples, powershell won't need to do the check again.\r\n\r\nCan you please also shed some light on the `PSEnum<>` question?",
    "created_at": "2017-12-02T00:51:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-348652837",
    "id": 348652837,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY1MjgzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348652837/reactions"
    },
    "updated_at": "2017-12-02T00:51:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348652837",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The failed tests in macOS build are known test failures. It's tracked by #5590.",
    "created_at": "2017-12-02T01:01:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-348654114",
    "id": 348654114,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY1NDExNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348654114/reactions"
    },
    "updated_at": "2017-12-02T01:01:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348654114",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@powercode  will have to address `PSEnum<>` - he just took my basic idea and worked out all the details - and I do mean all, I might have skipped `Pointer` because you can't really use it from PowerShell.",
    "created_at": "2017-12-02T01:17:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-348655669",
    "id": 348655669,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY1NTY2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348655669/reactions"
    },
    "updated_at": "2017-12-02T01:17:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348655669",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@powercode I will merge this PR, but let's continue the discussion if you have time 😄",
    "created_at": "2017-12-02T02:38:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-348661924",
    "id": 348661924,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2MTkyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348661924/reactions"
    },
    "updated_at": "2017-12-02T02:38:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/348661924",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Sorry all for my horrible response time. I have to revisit the code and look at it. Some of the special cases, like `pointer`, never shows up from PowerShell, but I ran into them by enumerating all methods in all loaded assemblies and tried to make sure I could create `PSMethod<>`s for them.\r\n\r\n",
    "created_at": "2017-12-30T16:37:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-354555244",
    "id": 354555244,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU1NTI0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354555244/reactions"
    },
    "updated_at": "2017-12-30T16:37:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/354555244",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Should we document the feature?",
    "created_at": "2018-01-03T15:11:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5287#issuecomment-355035446",
    "id": 355035446,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5287",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTAzNTQ0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355035446/reactions"
    },
    "updated_at": "2018-01-03T15:11:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/355035446",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
