[
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro can probably explain it much better than I'm able to, since he wrote all that fun code. ðŸ˜Š \r\n\r\nThe short version (probably missing a good deal of context myself, but what I know atm) is: `-Debug` was generally very unusable for the way most folks were wanting to use it, and completely unusable in CI environments, where ostensibly a lot of folks could stand to use it more.\r\n\r\nThings like `-ErrorAction Break` or `$debugActionPreference = 'Break'` were added to actually drop into the debugger on error or debug when you wanted to, but most folks were generally finding `-Debug` fairly unusable with the constant prompting.",
    "created_at": "2019-10-23T16:21:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545524169",
    "id": 545524169,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTUyNDE2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545524169/reactions"
    },
    "updated_at": "2019-10-23T16:23:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545524169",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "See https://github.com/PowerShell/PowerShell/pull/8195",
    "created_at": "2019-10-23T16:27:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545527069",
    "id": 545527069,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTUyNzA2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545527069/reactions"
    },
    "updated_at": "2019-10-23T16:27:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545527069",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jhoneill Good questions. Here are the answers in no particular order:\r\n\r\n1. `ActionPreference.Suspend` was for workflows and workflows only. We don't have workflows anymore, ergo, no `ActionPreference.Suspend` support. We're still keeping the enumeration around, but it's reserved for future use at this time. I'm just calling that out since we're talking a little about `Suspend` as well as `ActionPreference` here.\r\n\r\n1. The `Suspend` option in the handling of `ActionPreference.Inquire` is different than `ActionPreference.Suspend`. In the context of the `Inquire` prompt, `Suspend` drops you into a nested prompt. Nested prompts offered a way to do some inspection in PowerShell in v1, before PowerShell had a debugger. When it comes to debugging, today they offer much less value than the built-in debugger support. See also #9755.\r\n\r\n1. `ActionPreference.Debug` was always about outputting debug messages. In PowerShell v1, when we didn't have a debugger, it also provided a way to get into a nested prompt so that you could look around and troubleshoot some things. It was not an actual debugger though -- you would be in a nested prompt (different scope), and you couldn't step through code, look at the code you were debugging using a debugger command, etc.\r\n\r\n    Given the very limited usefulness of entering a nested prompt vs actually debugging, we added `ActionPreference.Break` for those times when you want to break into a debugger and troubleshoot. This is what you should use if you want to enter the debugger and troubleshoot something.\r\n\r\n    Further, since `Write-Debug` would result in interactive prompting, users who wanted to output messages in PowerShell that were not shown by default would always use `Write-Verbose`, but that's not a great model, and has resulted in too much messaging being pumped through the `Verbose` stream. `Verbose` messages are for extra messages that should help an end user figure out what is going wrong when something isn't working. `Debug` messages are for extra messages that should help a developer figure out exactly what is happening when something is going wrong with a script or command they authored that is being run on another system.\r\n\r\n### To sum up:\r\n\r\n|Feature|PowerShell 5.1|PowerShell 7+|\r\n|--|--|--|\r\n|`-Debug`|Output debug messages in an interactive prompt that would allow you to enter a nested prompt (but not actually a debugger) to troubleshoot.|Output debug messages so that we can have two levels of extra output when necessary (one for `Verbose` and one for `Debug`)|\r\n|`ActionPreference.Break`|N/A|Break into the debugger when a specific type of message is generated, the moment that message is generated (e.g. `-ErrorAction Break`)|\r\n\r\nIn both cases, `ActionPreference.Inquire` still exists, but is of questionable usefulness (again, see the discussion on #9755).\r\n\r\n### Other items related to this discussion that you may want to be aware of:\r\n\r\n1. #10238 - this PR adds `-DebugAction`, `-DebugVariable`, `-VerboseAction`, `-VerboseVariable`, `-ProgressAction`, and `-ProgressVariable`. These common parameters bring consistency to the common parameter set for handling messages. Once this is merged, if you want something like the old `-Debug`/`ActionPreference.Inquire` behaviour, you could simply invoke a command with `-DebugAction Inquire`.\r\n\r\n1. https://github.com/PowerShell/PowerShell-RFC/pull/219 - this RFC proposes adding `ScriptBlock` support to `-*Action` common parameters, and `$*Action` preference variables, so that what they do can be decided on at runtime based on the actual `*Record` or `Exception` that caused the `ScriptBlock` to be invoked. That will allow people to break into the debugger when a certain type of message is generated, but only if it has specific properties (e.g. certain exception type, or error ID, or debug message string).\r\n\r\n\r\n\r\n",
    "created_at": "2019-10-23T18:44:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545582557",
    "id": 545582557,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTU4MjU1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545582557/reactions"
    },
    "updated_at": "2019-10-24T10:49:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545582557",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks all (esp @KirkMunro)  for the detail. I was checking something I'd written a while back and found the behaviour had changed. I rarely use write-debug for exactly the reasons given as a rationale for the change :-)  so I hadn't spotted it before.  \r\nInitially I didn't think `-debug `as \"super verbose\" was a good idea, but having read the links above (Kirk again) it makes more sense than the other options. Inquire is of limited use, especially as it doesn't offer to drop into debug, only the nested prompt, and the number of times we need \r\n`<<message>> Stop or Continue ?` messages as part of debugging is small. \r\n\r\nThe more I think about it the more its seems any problem here is that this change is so long overdue. I'm assuming other have grown used to something has worked, but quite poorly, so when it is made to work better, the change jars. Now I've read the docs, I think that's OK.  \r\n\r\n3 observations   \r\n\r\n- The error message when setting the preference to \"suspend\" in 6 and later could be better. \r\n- The message printed by write-debug only appears when execution returns from the debugger, it should really appear first. . \r\n- The debugger doesn't have the equivalent of \"yes to all\" in inquire, but as a work-round setting $debugpreference in the debugger sets it for the local scope, which is OK. \r\n  \r\nBut since the question is answered, and there is no bug so I'm going to close this issue.  ",
    "created_at": "2019-10-24T09:31:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545833476",
    "id": 545833476,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTgzMzQ3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545833476/reactions"
    },
    "updated_at": "2019-10-24T09:31:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545833476",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> * The error message when setting the preference to \"suspend\" in 6 and later could be better.\r\n\r\nThe current message is \"The Suspend ActionPreference value is reserved for future use and is not supported at this time. For more information about preference variables, see the Help topic, \"about_Preference_Variables.\"\" What do you think is missing from that message?\r\n\r\n> * The message printed by write-debug only appears when execution returns from the debugger, it should really appear first. .\r\n\r\nThis is by design.\r\n\r\nPowerShell breaks into the debugger the moment the message is created so that you can look around at that point. Having it break into the debugger once the message is written to the host means unwinding the stack more and so you may lose some visibility on what was going on.\r\n\r\nThat said, in addition to showing the breakpoint line, we could consider showing the message text or some details about the trigger object (which is just an `ErrorRecord`, `Exception`, `DebugRecord`, etc.) when we enter the debugger based on a message, so that users see the stream message that triggered the breakpoint.\r\n\r\n> * The debugger doesn't have the equivalent of \"yes to all\" in inquire, but as a work-round setting $debugpreference in the debugger sets it for the local scope, which is OK.\r\n\r\nYou're right. There are more things that could be done here, such as:\r\n\r\n* continue without breaking on other Error/Debug/etc. messages\r\n* making the `detach (d)` debugger command work for local script debugging as a way to tell PowerShell to disable the debugger until the current execution completes, running the command to completion without other breakpoints being triggered.\r\n\r\nI was already thinking I would add the latter at some point. The former may be useful as well.",
    "created_at": "2019-10-24T11:00:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545865270",
    "id": 545865270,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTg2NTI3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545865270/reactions"
    },
    "updated_at": "2019-10-24T11:02:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545865270",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > * The error message when setting the preference to \"suspend\" in 6 and later could be better.\r\n> \r\n> The current message is \"The Suspend ActionPreference value is reserved for future use and is not supported at this time. For more information about preference variables, see the Help topic, \"about_Preference_Variables.\"\" What do you think is missing from that message?\r\n\r\nIt's not so much missing, it's a tautology (Reserved for the future means not supported _now_) and back to front, it is there for legacy reasons. \"Suspend is no longer supported\" or if it might return \"Suspend is not supported in this version of PowerShell\" is shorter and clearer.   \r\n\"At this time\" is usually filler as well - it's technically wrong, it isn't a facet of the day on which you run it but the version - but leaves the question of _when_ will it be supported. \r\n\r\n> \r\n> > * The message printed by write-debug only appears when execution returns from the debugger, it should really appear first. .\r\n> \r\n> This is by design.\r\n> \r\n> PowerShell breaks into the debugger the moment the message is created so that you can look around at that point. Having it break into the debugger once the message is written to the host means unwinding the stack more and so you may lose some visibility on what was going on.\r\n> \r\n> That said, in addition to showing the breakpoint line, we could consider showing the message text or some details about the trigger object (which is just an `ErrorRecord`, `Exception`, `DebugRecord`, etc.) when we enter the debugger based on a message, so that users see the stream message that triggered the breakpoint.\r\n\r\nThat would be ideal. If I have  \r\n` if (something involving $x and $y) { Write-debug \"X is now $x and Y is $Y\"}` \r\nseeing the values which dropped me into the debugger is a plus :-)  \r\n**EDIT**\r\nI was just thinking I might write code as \r\n```\r\nif ($myInvocation.boundparameters.debug -and something involving $x and $y) {\r\nWrite-host \"X is now $x and Y is $Y\"\r\nwait-debugger\r\n}\r\n```\r\ni.e. still use the debug switch never` write-debug`....\r\n**/EDIT**\r\n\r\n> > * The debugger doesn't have the equivalent of \"yes to all\" in inquire, but as a work-round setting $debugpreference in the debugger sets it for the local scope, which is OK.\r\n> \r\n> You're right. There are more things that could be done here, such as:\r\n> \r\n> * continue without breaking on other Error/Debug/etc. messages\r\n> * making the `detach (d)` debugger command work for local script debugging as a way to tell PowerShell to disable the debugger until the current execution completes, running the command to completion without other breakpoints being triggered.\r\n> \r\n> I was already thinking I would add the latter at some point. The former may be useful as well.\r\n\r\nAgree.  The first thing I tried was detaching the debugger and it says no :-)\r\n",
    "created_at": "2019-10-24T12:10:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545887962",
    "id": 545887962,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTg4Nzk2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545887962/reactions"
    },
    "updated_at": "2019-10-24T12:24:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545887962",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "There's one other thing I forgot to mention that I have planned. I wrote my `DebugPx` module with its `Enter-Debugger` command around the same time that the PowerShell Team wrote `Wait-Debugger`. One key feature that `Enter-Debugger` offered over `Wait-Debugger` is a `scriptblock` parameter that is used as a condition. It also has a string `-Message` parameter so that a specific message gets shown in the debugger when it enters a breakpoint based on a condition.\r\n\r\nIt is my intention to bring forward the functionality I've built-up in that module into PowerShell itself as native functionality. I've outlined that plan in #10448. I'd appreciate your thoughts on that plan as well @jhoneill, because I think between the functionality it provides, and with `scriptblock` support in `ActionPreference` parameters as described in https://github.com/PowerShell/PowerShell-RFC/pull/219, those would be better suited for the conditional debugging scenario you highlight in your edit above.",
    "created_at": "2019-10-24T16:24:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10873#issuecomment-545996326",
    "id": 545996326,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10873",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTk5NjMyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545996326/reactions"
    },
    "updated_at": "2019-10-24T16:24:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545996326",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
