[
  {
    "author_association": "COLLABORATOR",
    "body": "So, to summarize in brief -- you're proposing that `[AllowNull()][int]` automatically implies we should transform that parameter into `[Nullable[int]]`?\r\n\r\nI mean, that seems fairly sensible. 👍 ",
    "created_at": "2019-10-17T18:12:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543296924",
    "id": 543296924,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzI5NjkyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543296924/reactions"
    },
    "updated_at": "2019-10-17T18:12:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543296924",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32: \r\n\r\n_Conceptually_ that is a good summary.\r\n\r\nHowever, I don't think that it is _technically_ necessary:\r\n\r\nWhat seems to be happening in the _implicit_ case is that the parameter variable is simply not _initialized_, which is what makes its value `$null` by default.\r\n\r\nHowever, the type constraint _is_ in effect, and _is_ enforced if you later try to assign to that variable (although you typically wouldn't do that with a _parameter_ variable):\r\n\r\n```powershell\r\nPS> & { param([datetime] $dt) $dt = $null } # FAILS, because $dt, despite being initially $null, IS type-constrained\r\n\r\nCannot convert null to type \"System.DateTime\".\r\n```\r\n\r\nWhile I'm not familiar with the plumbing, my guess is that we can apply this non-initialization technique in the explicit case too - without needing to involve `Nullable<T>`.\r\n",
    "created_at": "2019-10-17T18:41:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543308807",
    "id": 543308807,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzMwODgwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543308807/reactions"
    },
    "updated_at": "2019-10-17T18:41:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543308807",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32: I've since realized that the non-initialization to `$null` only applies to _non-numeric_ value types. With _numeric_ ones you get `0`, which presents a different problem with `[AllowNull()]`: passing `$null` quietly converts to `0` - I've updated the OP accordingly.",
    "created_at": "2019-10-18T17:48:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543858681",
    "id": 543858681,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg1ODY4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543858681/reactions"
    },
    "updated_at": "2019-10-18T17:48:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543858681",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Hmm, interesting. Given that `[nullable[T]]` doesn't let Mandatory parameters accept null values, and with the odd behaviour with numeric inputs there...\r\n\r\nI'm not really sure what the optimal solution is there. I think I'm still partial to having `[AllowNull()]` make it a `[nullable[T]]` implicitly, I think, as that would probably be a fairly minimal and least-likely-to-break-something change, and neatly skirts the slightly awkward syntax for `[nullable[int]]$Count` etc.\r\n\r\nBut yes, it's not necessarily the idea solution. I'm also not sure simply \"not initializing\" the value is something we can do without taking some extra care, because I wouldn't be surprised if trying to do that excludes it from `$PSBoundParameters`; and for those parameters where you want to be able to detect the difference between \"not specified\" and \"null\", that is a fairly critical piece of plumbing.",
    "created_at": "2019-10-18T18:02:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543863978",
    "id": 543863978,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg2Mzk3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543863978/reactions"
    },
    "updated_at": "2019-10-18T18:02:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543863978",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32: \r\n\r\nFirst, as an aside: that non-bound value-type parameters behave differently depending on whether they're numeric (default to `0`) or not (default to `$null`) is problematic in itself, but it's probably too late to fix that inconsistency.\r\n\r\n> `[nullable[T]]` doesn't let Mandatory parameters accept null values\r\n\r\nMaybe I'm misreading your comment, but `[Nullable[T]]` _does_ work as a workaround even with numeric value types:\r\n\r\n```powershell\r\nPS> & { param([Parameter(Mandatory)] [AllowNull()] [nullable[int]] $i) $null -eq $i } -i $null\r\n\r\nTrue\r\n```\r\n\r\n\r\n>  I'm also not sure simply \"not initializing\" the value is something we can do without taking some extra care\r\n\r\nFair point - we certainly want `$PSBoundParameters` to continue to tell the truth.\r\n\r\nI don't know enough about PowerShell's variable plumbing to be of help there, but I do see that trying to initialize a `[datetime]` variable with `$null` does _not_ work:\r\n\r\n```powershell\r\n# Borrow a [datetime] argument-transformation attribute from a regular variable.\r\n[datetime] $dt = 0; $ta = (Get-Variable dt).Attributes[0]\r\n\r\n# !! FAILS\r\n[psvariable]::new(\r\n  'foo', \r\n  $null,  # initial value\r\n 'None', \r\n [System.Collections.ObjectModel.Collection[System.Attribute]] $ta\r\n) \r\n```\r\n\r\nThat said, the `.Value` property of `System.Management.Automation.PSVariable` instances is `object`-typed, so I think it's at least _possible_ to initialize to `$null`.\r\n\r\nBut perhaps `[Nullable[T]]` is indeed the answer. If it is, we should make sure it doesn't peek from behind the curtain or at least doesn't cause obscure variations in behavior.\r\n\r\n",
    "created_at": "2019-10-18T18:39:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543880943",
    "id": 543880943,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg4MDk0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543880943/reactions"
    },
    "updated_at": "2019-10-18T19:46:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543880943",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 I mean that `[nullable[T]]` _without_ using `[AllowNull()]` doesn't work. But yes, that is a currently available workaround, if one that feels very redundant. 🙂 \r\n\r\nYour example with datetime there makes me wonder if we may simply are missing some checks for the `[allownull()]` attribute when setting variables, though, if we can't even initialize them like that. Note that this also fails:\r\n\r\n```powershell\r\n[AllowNull()][datetime]$value = $null\r\n```\r\n\r\nPotentially we need to simply add a check for whether the variable has the `[AllowNull()]` attribute before we try to create an instance of `[datetime]` (or anything else) with a null value...",
    "created_at": "2019-10-18T18:52:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543886456",
    "id": 543886456,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg4NjQ1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543886456/reactions"
    },
    "updated_at": "2019-10-18T18:52:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543886456",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I've noticed that `[AllowNull()][datetime]$value = $null` fails, and so does later assigning `$null` to a parameter variable declared this way.\r\n\r\nSo it sounds like in a manner of speaking we could roll our own nullable types, without actually needing to use `[Nullable[T]]`, correct?\r\n\r\nThat is, if the `[AllowNull()]` attribute is set on a value-type-constrained variable, allow assigning `$null` as-is (make `.Value` return `null`) rather than attempting to convert `$null` to the type.\r\n",
    "created_at": "2019-10-18T19:04:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543891113",
    "id": 543891113,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg5MTExMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543891113/reactions"
    },
    "updated_at": "2019-10-18T19:04:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543891113",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Aye, I think either we need to do that, or if that is unfeasible or ends up being more misleading, we may want to make `[AllowNull()]` imply the use of `[nullable[T]]` instead.",
    "created_at": "2019-10-18T19:32:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10817#issuecomment-543903605",
    "id": 543903605,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10817",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkwMzYwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543903605/reactions"
    },
    "updated_at": "2019-10-18T19:32:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543903605",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
