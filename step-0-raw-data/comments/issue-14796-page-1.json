[
  {
    "author_association": "COLLABORATOR",
    "body": "Are you talking about `: base()` like this?\r\n\r\n```powershell\r\nclass B : A {\r\n    B([int] $a) : base($a) {\r\n    }\r\n}\r\n```\r\n\r\n> 1. its infrastructure code\r\n> 2. its not fluent with classes\r\n> (...)\r\n> 4. why inheritence its not full supported\r\n\r\nNot sure what you mean, please elaborate.\r\n\r\n> 3. other programmer dont understand this concept unique to PS\r\n\r\nI haven't really heard many folks complaining about this specifically.  It doesn't come up super often, and typically only comes up when implementing existing .NET classes without a default constructor (and there's nothing PS can really do about that). Also it's not unique to PS. The same syntax is lifted from C# pretty directly, and the concept of calling base constructors exists in many languages.",
    "created_at": "2021-02-13T20:34:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14796#issuecomment-778674504",
    "id": 778674504,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14796",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY3NDUwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778674504/reactions"
    },
    "updated_at": "2021-02-13T20:34:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778674504",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience \r\n\r\nin other languages the inheritence is full supported. i mean when a class  inherit to a parent class it inherit automatically parent constructors unless we overide the base class constructor within child class. in PS we must use :base()\r\n\r\nthanks",
    "created_at": "2021-02-13T20:58:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14796#issuecomment-778677553",
    "id": 778677553,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14796",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY3NzU1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778677553/reactions"
    },
    "updated_at": "2021-02-13T20:59:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778677553",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Only if you define a constructor in the base class.  If you do that, there's no default constructor, so you have to tell it how to call the parent's constructor.  That's how the .NET runtime works and isn't something PowerShell can change.",
    "created_at": "2021-02-13T21:12:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14796#issuecomment-778679002",
    "id": 778679002,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14796",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODY3OTAwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778679002/reactions"
    },
    "updated_at": "2021-02-13T21:12:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/778679002",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "To build on @SeeminglyScience's comments with a **succinct summary of when you _must_ call `: base(...)` in a derived class' constructor in PowerShell (as well as in C#)**:\r\n\r\n* You _must_ call a base-class constructor explicitly with `: base(...)` if the base class lacks an accessible _parameterless_ constructor. (Of course, if other accessible base-class constructors exist, you _may_ call them.)\r\n\r\n* Conversely, if you do _not_ use `: base(...)`(and can get away with it), the (then by definition accessible) _parameterless_ base-class constructor is _implicitly_ called.\r\n\r\nAs such, the deciding factor is not whether the base class has a _default_ constructor, but whether there is an _accessible parameterless_ constructor - irrespective of whether this constructor is _implicit_ (the default constructor) or _explicit_, as it must be if the base class also defines _other_ constructors (which derived classes do _not_ inherit), by definition _with_ parameters.\r\n\r\n* In PowerShell, classes (which includes `enum`s) and their members are _invariably_ `public` and therefore accessible to anyone; PowerShell classes lack support for access modifiers altogether.\r\n\r\n   *  However, classes as a whole can _in effect_ be inaccessible due to existing in _different PowerShell scopes_ (which can be overcome with dot-sourcing for classes declared in _scripts_, and with `using module` for classes declared in _modules_).\r\n\r\n   * With respect to class _members_, PowerShell only supports _hiding_ members with the `hidden` keyword, which, however, doesn't prevent _access_ and is only honored by the PowerShell engine and select cmdlets (a notable exception is #9847).\r\n\r\n* In C#, the only way to make a base-class constructor _inaccessible_ to derived classes is by declaring it with one of the following access modifiers:\r\n\r\n  * `private` (the default), which makes it inaccessible to _all_ derived classes.\r\n  * `private protected` (C# 7.2+), which makes it inaccessible to derived classes _located in other assemblies_.\r\n\r\n---\r\n\r\n@p0W3RH311, given @SeeminglyScience's conclusion:\r\n\r\n> That's how the .NET runtime works and isn't something PowerShell can change.\r\n\r\nI think it makes sense to close this issue.\r\n\r\n",
    "created_at": "2021-02-15T16:39:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14796#issuecomment-779336845",
    "id": 779336845,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14796",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3OTMzNjg0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/779336845/reactions"
    },
    "updated_at": "2021-02-15T16:39:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/779336845",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
