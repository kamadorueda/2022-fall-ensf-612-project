[
  {
    "author_association": "COLLABORATOR",
    "body": "@chriskuech Thanks for your contribution!\r\n\r\nRelated #3769",
    "created_at": "2019-05-28T03:46:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9740#issuecomment-496354761",
    "id": 496354761,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjM1NDc2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496354761/reactions"
    },
    "updated_at": "2019-05-29T03:08:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496354761",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov , can you elaborate more on why you believe this to be a duplicate?\r\n\r\nThe issue you linked is for attributes failing silently; however, mine seems to be the opposite--attributes failing so loudly that they cannot be caught.  Also, unlike in the issue you linked, there's nothing wrong with my attributes--they are valid attributes, as shown in the first `try/catch` of my repro.  My issue is exclusively when the parameter value is passed by pipeline input.\r\n\r\nYours seems to be about _user_ error when _defining invalid_ validation attributes.  Mine seems to be about an _internal_ error when _applying valid_ validation attributes.",
    "created_at": "2019-05-28T20:27:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9740#issuecomment-496676401",
    "id": 496676401,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjY3NjQwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496676401/reactions"
    },
    "updated_at": "2019-05-28T20:27:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496676401",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3680671?v=4",
      "events_url": "https://api.github.com/users/chriskuech/events{/privacy}",
      "followers_url": "https://api.github.com/users/chriskuech/followers",
      "following_url": "https://api.github.com/users/chriskuech/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriskuech/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chriskuech",
      "id": 3680671,
      "login": "chriskuech",
      "node_id": "MDQ6VXNlcjM2ODA2NzE=",
      "organizations_url": "https://api.github.com/users/chriskuech/orgs",
      "received_events_url": "https://api.github.com/users/chriskuech/received_events",
      "repos_url": "https://api.github.com/users/chriskuech/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chriskuech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriskuech/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chriskuech"
    }
  },
  {
    "author_association": "NONE",
    "body": "Also I'm curious if there are two (interrelated) issues:\r\n1. Why is the attribute throwing an error when applied to pipeline input?\r\n2. Why is the thrown error not being caught by `try/catch`?",
    "created_at": "2019-05-28T20:33:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9740#issuecomment-496678287",
    "id": 496678287,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjY3ODI4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496678287/reactions"
    },
    "updated_at": "2019-05-29T03:10:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/496678287",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3680671?v=4",
      "events_url": "https://api.github.com/users/chriskuech/events{/privacy}",
      "followers_url": "https://api.github.com/users/chriskuech/followers",
      "following_url": "https://api.github.com/users/chriskuech/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriskuech/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chriskuech",
      "id": 3680671,
      "login": "chriskuech",
      "node_id": "MDQ6VXNlcjM2ODA2NzE=",
      "organizations_url": "https://api.github.com/users/chriskuech/orgs",
      "received_events_url": "https://api.github.com/users/chriskuech/received_events",
      "repos_url": "https://api.github.com/users/chriskuech/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chriskuech/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriskuech/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chriskuech"
    }
  },
  {
    "author_association": "NONE",
    "body": "@chriskuech Not to sidetrack from the original focus of this working with `throw`, but this is behaving differently yet still not working correctly when using `$PSCmdlet.ThrowTerminatingError()`. Hopefully this helps add to the original issue:\r\n\r\nUpdated `repro` function:\r\n\r\n```powershell\r\nfunction repro {\r\n    param(\r\n        [Parameter(Mandatory, ValueFromPipeline)]\r\n        [ValidateScript({\r\n            $PSCmdlet.ThrowTerminatingError([System.Management.Automation.ErrorRecord]::new(\r\n                ([System.IO.FileNotFoundException]\"Uh oh!\"),\r\n                'Repro.Error',\r\n                [System.Management.Automation.ErrorCategory]::InvalidArgument,\r\n                $_\r\n            ))\r\n        })]\r\n        [string] $param\r\n    )\r\n}\r\n```\r\n\r\nUsing your sample triggers the catch block on both, but prints the error on the second as well as the catch block's Write-Host statement:\r\n\r\n```powershell\r\ntry {\r\n    repro \"arg\"\r\n}\r\ncatch {\r\n    Write-Host \"This error is caught\"\r\n}\r\n\r\ntry {\r\n    \"arg\" | repro\r\n} catch {\r\n    Write-Host \"...so why isn't this error caught?\"\r\n}\r\nThis error is caught\r\nrepro:\r\nLine |\r\n   9 |      \"arg\" | repro\r\n     |              ~~~~~\r\n     | Cannot validate argument on parameter 'param'. The pipeline has been stopped.\r\n...so why isn't this error caught?\r\n```\r\n\r\nWrapping it in a scriptblock and invoking it yields the expected response, but it's swallowing the errors in the scriptblock scope from what it seems:\r\n\r\n```powershell\r\n{\r\n    try {\r\n        repro \"arg\"\r\n    }\r\n    catch {\r\n        Write-Host \"This error is caught\"\r\n    }\r\n    try {\r\n        \"arg\" | repro\r\n    } catch {\r\n        Write-Host \"...so why isn't this error caught?\"\r\n    }\r\n}.Invoke()\r\nThis error is caught\r\n...so why isn't this error caught?\r\n```\r\n\r\nWhich seems like a win, but trying to run those in a Pester test halts the pipeline before it can evaluate the result:\r\n\r\n```powershell\r\nImport-Module Pester\r\n{repro \"arg\"} | Should -Throw\r\n{\"arg\" | repro} | Should -Throw\r\nrepro:\r\nLine |\r\n   3 |  {\"arg\" | repro} | Should -Throw\r\n     |           ~~~~~\r\n     | Cannot validate argument on parameter 'param'. The pipeline has been stopped.\r\n```\r\n\r\n***\r\n\r\nEnvironment info:\r\n\r\n```powershell\r\n>> $PSVersionTable; Get-Module Pester\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      7.2.0-preview.2\r\nPSEdition                      Core\r\nGitCommitId                    7.2.0-preview.2\r\nOS                             Darwin 20.2.0 Darwin Kernel Version 20.2.0: Wed Dec  2 20:39:59 PST 2020; root:xnu-7195.60.75~1/RELEASE_X86_64\r\nPlatform                       Unix\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0…}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n\r\nName              : Pester\r\nPath              : /Users/nferrell/.local/share/powershell/Modules/Pester/4.10.1/Pester.psm1\r\nDescription       : Pester provides a framework for running BDD style Tests to execute and validate PowerShell commands inside of PowerShell and offers a\r\n                    powerful set of Mocking Functions that allow tests to mimic and mock the functionality of any command inside of a piece of PowerShell\r\n                    code being tested. Pester tests can execute any command or script that is accessible to a pester test file. This can include functions,\r\n                    Cmdlets, Modules and scripts. Pester can be run in ad hoc style in a console or it can be integrated into the Build scripts of a\r\n                    Continuous Integration system.\r\nGuid              : a699dea5-2c73-4616-a270-1f7abb777e71\r\nVersion           : 4.10.1\r\nModuleBase        : /Users/nferrell/.local/share/powershell/Modules/Pester/4.10.1\r\nModuleType        : Script\r\nPrivateData       : {PSData}\r\nAccessMode        : ReadWrite\r\nExportedAliases   : {[Add-ShouldOperator, Add-ShouldOperator], [And, And], [But, But], [Given, Given]…}\r\nExportedCmdlets   : {}\r\nExportedFunctions : {[Add-AssertionOperator, Add-AssertionOperator], [AfterAll, AfterAll], [AfterEach, AfterEach], [AfterEachFeature, AfterEachFeature]…}\r\nExportedVariables : {}\r\nNestedModules     : {Axiom, Format, TypeClass}\r\n```",
    "created_at": "2021-02-11T05:22:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9740#issuecomment-777209587",
    "id": 777209587,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzIwOTU4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/777209587/reactions"
    },
    "updated_at": "2021-02-11T05:32:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/777209587",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12724445?v=4",
      "events_url": "https://api.github.com/users/scrthq/events{/privacy}",
      "followers_url": "https://api.github.com/users/scrthq/followers",
      "following_url": "https://api.github.com/users/scrthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/scrthq/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scrthq",
      "id": 12724445,
      "login": "scrthq",
      "node_id": "MDQ6VXNlcjEyNzI0NDQ1",
      "organizations_url": "https://api.github.com/users/scrthq/orgs",
      "received_events_url": "https://api.github.com/users/scrthq/received_events",
      "repos_url": "https://api.github.com/users/scrthq/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scrthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scrthq/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scrthq"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT Could you take a look at this issue?\r\n\r\nI wasn't sure if there was a way to tag the new `WG-Engine` members.\r\n\r\n**Additional Info** \r\nIt appears that `ValidateRangeAttribute` works correctly against each item in the pipeline, but does not fail the entire pipeline or terminate the function if an element of the array is out of range or an incorrect type.\r\n\r\nAnd `ValidateCountAttribute` is not able to get a count because it requires the entire array.\r\n\r\n```powershell\r\nfunction Test-MaxCount {\r\n    [CmdletBinding()]\r\n    param(\r\n        [Parameter(Mandatory,Position = 0,ValueFromPipeline)]\r\n        [ValidateRange(1,9)]\r\n        [ValidateCount(1,10)]\r\n        [int[]]$Value\r\n    )\r\n    begin {\r\n        $Data = [System.Collections.ArrayList]::new()\r\n    }\r\n    process {\r\n        [void]$Data.Add($Input)\r\n    }\r\n    end {\r\n        if ($Data.Count -gt 10) {\r\n            throw (\"The parameter requires at least 1 value(s) and no more than 10 value(s) - {0} value(s) were provided. END BLOCK\" -f $Data.Count)\r\n        } else {\r\n            'Count: {0}' -f $Data.Count\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n```conole\r\nPS7.1.1 > 1,2,5,6,7,8,9,8,4,4,4,4,6,5 | Test-ValidateCount\r\nException: D:\\Test-ValidateCount.ps1:17\r\nLine |\r\n  17 |              throw (\"The parameter requires at least 1 value(s) and no …\r\n     |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | The parameter requires at least 1 value(s) and no more than 10 value(s) - 14 value(s) were provided.\r\n     | END BLOCK\r\n\r\nPS7.1.1 > 1,2,5,6,7,8,9,8,4,4,4,4,6,5,'G' | Test-MaxCount\r\nTest-MaxCount: The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.\r\nException: D:\\GitHub\\IronScripterSolutions\\2021-02-09\\2-Advanced.ps1:17\r\nLine |\r\n  17 |              throw (\"The parameter requires at least 1 value(s) and no …\r\n     |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | The parameter requires at least 1 value(s) and no more than 10 value(s) - 14 value(s) were provided.\r\n     | END BLOCK\r\n\r\nPS7.1.1 > 1,2,5,6,7,8,9,8,4,4,4,4,6,5,10 | Test-MaxCount\r\nTest-MaxCount: Cannot validate argument on parameter 'Value'. The 10 argument is greater than the maximum allowed range of 9. Supply an argument that is less than or equal to 9 and then try the command again.\r\nException: D:\\GitHub\\IronScripterSolutions\\2021-02-09\\2-Advanced.ps1:17\r\nLine |\r\n  17 |              throw (\"The parameter requires at least 1 value(s) and no …\r\n     |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | The parameter requires at least 1 value(s) and no more than 10 value(s) - 14 value(s) were provided.\r\n     | END BLOCK\r\n\r\n\r\nPS7.1.1 > 1,2,5,6,7,8,9,8,4,4 | Test-MaxCount\r\nCount: 10\r\n```\r\n\r\n**Updated Docs and Guidance**\r\nPipeline support is a significant boon for PowerShell, as is the `Validate*` parameter decorators. \r\n\r\nIf this will not be resolved anytime soon, there should be verbiage included in the [about_Functions_Advanced_Parameters validation section](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_functions_advanced_parameters?view=powershell-7.1#parameter-and-variable-validation-attributes).\r\n\r\nAdditionally, guidance on possible workarounds, if any, would be well appreciated.\r\n\r\nThanks!",
    "created_at": "2021-02-11T06:26:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9740#issuecomment-777229090",
    "id": 777229090,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzIyOTA5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/777229090/reactions"
    },
    "updated_at": "2021-02-11T06:34:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/777229090",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/37391437?v=4",
      "events_url": "https://api.github.com/users/thedavecarroll/events{/privacy}",
      "followers_url": "https://api.github.com/users/thedavecarroll/followers",
      "following_url": "https://api.github.com/users/thedavecarroll/following{/other_user}",
      "gists_url": "https://api.github.com/users/thedavecarroll/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/thedavecarroll",
      "id": 37391437,
      "login": "thedavecarroll",
      "node_id": "MDQ6VXNlcjM3MzkxNDM3",
      "organizations_url": "https://api.github.com/users/thedavecarroll/orgs",
      "received_events_url": "https://api.github.com/users/thedavecarroll/received_events",
      "repos_url": "https://api.github.com/users/thedavecarroll/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/thedavecarroll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thedavecarroll/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/thedavecarroll"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> And `ValidateCountAttribute` is not able to get a count because it requires the entire array.\r\n\r\nPipeline enumerates inputs. You should send entire array as a single object if you want ValidateCount works on it.\r\n\r\n----\r\n\r\nI believe the behavior in a pipeline is by-design - I have no idea where we could insert \"catch exception\" into a pipeline.",
    "created_at": "2021-02-11T15:35:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9740#issuecomment-777582523",
    "id": 777582523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzU4MjUyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/777582523/reactions"
    },
    "updated_at": "2021-02-11T15:36:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/777582523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
