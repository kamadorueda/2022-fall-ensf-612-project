[
  {
    "author_association": "COLLABORATOR",
    "body": "This is not specific to `select`. For example:\r\n```\r\nPS[1] (459) > $myObj | foreach { $_.Foo }\r\n123\r\nPS[1] (460) > $myObj | foreach Foo\r\nPS[1] (461) >\r\n```\r\nIt looks like we aren't handling `DynamicObject` in the `PSObject` wrapper.  `Foo` doesn't show up as a property:\r\n```\r\nPS[1] (467) > $myObj.PSObject.Properties\r\nPS[1] (468) >\r\n```",
    "created_at": "2018-04-05T01:09:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-378791613",
    "id": 378791613,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODc5MTYxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/378791613/reactions"
    },
    "updated_at": "2018-04-05T01:09:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/378791613",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The original title was a bit confusing given that PowerShell, from V3 on, uses the DLR extensively. I've updated it to more accurately reflect what I think the problem is. @jazzdelightsme - are you ok with the updated title?",
    "created_at": "2018-04-05T18:06:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-379026074",
    "id": 379026074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTAyNjA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379026074/reactions"
    },
    "updated_at": "2018-04-05T18:06:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379026074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Sure. Thank you!",
    "created_at": "2018-04-05T19:02:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-379043106",
    "id": 379043106,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTA0MzEwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379043106/reactions"
    },
    "updated_at": "2018-04-05T19:02:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379043106",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "`PSDynamicMember` appears to be a mostly-useless stub: the `Value` getter/setters just throw, and it doesn't even hold a reference to the owning object. It seems like the solution will involve teaching this thing how to get a value... first I suppose we need to be able to determine if the \"Foo\" member even *is* a property or not (maybe it's a method). Then, if it's a property, we have to figure out if it is settable and/or gettable. @LzyBkr / @BrucePay, is that possible with some DLR-fu? \r\n\r\nLooking at the DLR stuff is ... intimidating. It's hard to tell where to grab on first. Any hints?\r\n",
    "created_at": "2018-04-18T16:11:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-382442184",
    "id": 382442184,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQ0MjE4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382442184/reactions"
    },
    "updated_at": "2018-04-18T16:11:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382442184",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "`PSDynamicMember` exists just for `Get-Member` - and the results of `Get-Member` don't reference an owning object.\r\n\r\nI believe this is the [code](https://github.com/PowerShell/PowerShell/blob/c05f1ec3f34d0565ac83e41dec938465c78652fc/src/System.Management.Automation/engine/MshObject.cs#L2196) that is supposed to cover your scenario. It was likely tested (I don't typically write code like that without testing) so I'm not sure why it doesn't work - but I'd start there.",
    "created_at": "2018-04-19T00:08:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-382567635",
    "id": 382567635,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU2NzYzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382567635/reactions"
    },
    "updated_at": "2018-04-19T00:08:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382567635",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @LzyBkr!\r\n\r\nI believe that code *does* in fact work. That's why things like `$myObj.Foo` work: PSObject dynamically binds the member access, and all is well.\r\n\r\nBut for `Select-Object -ExpandProperty`, on the other hand... that code does not come into play.\r\n\r\nWhen using wildcards (like `$myObj | select -exp *Foo*`), [`DotNetAdapter.AddAllDynamicMembers`](https://github.com/PowerShell/PowerShell/blob/da40c6efb787c7800103d02dae0b768d51032d9b/src/System.Management.Automation/engine/CoreAdapter.cs#L3474) correctly finds the \"Foo\" member, and adds a `PSDynamicMember` to the collection, so the [`Match`](https://github.com/PowerShell/PowerShell/blob/c05f1ec3f34d0565ac83e41dec938465c78652fc/src/System.Management.Automation/engine/MshMemberInfo.cs#L5033) method, when it calls `GetIntegratedMembers`, has the \"Foo\" member in the list.\r\n\r\nHowever, the `Match` method is instructed to only return members of type `Properties` or `PropertySet` (as specified by [`MshExpression.ResolveNames(PSObject, bool)`](https://github.com/PowerShell/PowerShell/blob/c05f1ec3f34d0565ac83e41dec938465c78652fc/src/System.Management.Automation/FormatAndOutput/common/Utilities/Mshexpression.cs#L126)), but the \"Foo\" member is a `Dynamic`, so it gets filtered out.\r\n\r\nFor the non-wildcard case (like `$myObj | select -exp Foo`), `ResolveNames` just looks for `target.Members[_stringValue]` (where `_stringValue` is \"Foo\"), and dynamic members don't seem to show up in that `PSMemberInfoIntegratingCollection`.\r\n\r\nIf dynamic members were to be exposed to `ResolveNames` (via `Members.Match` or `Members`[string indexer], though... perhaps things could work. But wouldn't `PSDynamicMember` would have to built up a bit, for that to work? And I'm not sure if PSDynamicMember can be taught to do what it needs to do.\r\n\r\nIf that's not the right approach... then what will\r\n[`MshExpression.GetValue`](https://github.com/PowerShell/PowerShell/blob/c05f1ec3f34d0565ac83e41dec938465c78652fc/src/System.Management.Automation/FormatAndOutput/common/Utilities/Mshexpression.cs#L228) do? (if the dynamic member does not show up in `Properties`?)\r\n\r\n",
    "created_at": "2018-04-19T02:11:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-382586848",
    "id": 382586848,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU4Njg0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382586848/reactions"
    },
    "updated_at": "2018-04-19T02:11:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382586848",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Ah, of course. That's the problem then. The `PSObject` pseudo-reflection like api **can't** work for dynamic objects, at least not in general.\r\n\r\nThe `GetDynamicMemberNames` api that a dynamic object implements is not a contract. For example, a dynamic object could synthesize a property just by trying to access it - essentially giving the object infinite members. The primary use case for the api is a debugger, or in PowerShell's case, `Get-Member` - in other words - for a somewhat improved UI, but nothing more.\r\n\r\nI believe the right fix is to use a dynamic site in the same way that PowerShell does for the `$obj.member` syntax.\r\n\r\nThis problem affects `Select-Object`, `ForEach-Object`, `Sort-Object`, `Measure-Object`, `Where-Object`, `Format-List`, `Format-Table` and maybe more.\r\n\r\nIt would seem this scenario is a corner case - it has never worked and this is the first report I've seen. That said, fixing it has a nice benefit - performance should improve even when not using dynamic objects.\r\n\r\nA fix does need to be careful though - some of those commands accept wildcards for property names. It might be best to keep the existing code for any use of wildcards.",
    "created_at": "2018-04-19T14:13:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-382752159",
    "id": 382752159,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc1MjE1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382752159/reactions"
    },
    "updated_at": "2018-04-19T14:13:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/382752159",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Okay, it may be beyond my ken, but I'll buy you lunch, @LzyBkr, if you are willing to talk me through what you think the \"right\" change would look like...",
    "created_at": "2018-04-26T00:53:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-384478568",
    "id": 384478568,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDQ3ODU2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384478568/reactions"
    },
    "updated_at": "2018-04-26T00:53:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384478568",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "No need to buy me lunch, but I'm happy to chat.\r\n\r\nTo get you started - you can find similar code [here](https://github.com/PowerShell/PowerShell/blob/63c0d8d783b8127b611ac32cabd730ecd46eca4e/src/System.Management.Automation/engine/ShellVariable.cs#L725).\r\n\r\nThe difference is - you'll use `PSGetMemberBinder.Get(\"PropertyName\")`. It really does just boil down to a couple of lines of code - creating the call site with the right binder, then invoking the delegate for that site.\r\n",
    "created_at": "2018-04-26T01:53:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-384487617",
    "id": 384487617,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDQ4NzYxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384487617/reactions"
    },
    "updated_at": "2018-04-26T01:53:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/384487617",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I came up with an PoC (see [here](https://github.com/jazzdelightsme/PowerShell/commit/2a3e54b08e866d1cdaee40c20d39f8e1b8fd8cf7)) that seems to work well, but it *only* addresses `Select-Object`--not other things like `Where-Object`.\r\n\r\nNext I'll try pushing the solution down a bit further, into the `.Members` collection itself.",
    "created_at": "2018-04-27T15:54:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6567#issuecomment-385013877",
    "id": 385013877,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6567",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTAxMzg3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385013877/reactions"
    },
    "updated_at": "2018-04-27T15:54:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385013877",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  }
]
