[
  {
    "author_association": "COLLABORATOR",
    "body": "Hi @cskwrd I'm not sure I understand exactly what you're asking. The basic answer is to install the module if it isn't already installed, load the module (or let autoloading do it for you) then call the cmdlet. (But I'm guessing that's not the answer you're looking for.)",
    "created_at": "2018-05-08T16:08:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6840#issuecomment-387455899",
    "id": 387455899,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ1NTg5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/387455899/reactions"
    },
    "updated_at": "2018-05-08T16:08:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/387455899",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "NONE",
    "body": "@BrucePay You're right, that isn't quite what I wish to do.\r\n\r\nI have the following class in a binary module I am making.\r\n```csharp\r\n    [Cmdlet(VerbsDiagnostic.Test, \"Widget\")]\r\n    public class TestWidgetCommand : PSCmdlet\r\n    {\r\n        protected override void ProcessRecord()\r\n        {\r\n            base.ProcessRecord();\r\n            // I can do this to invoke other cmdlets defined in this binary module.\r\n            var result = (new OtherCmdletFromMyModuleWrittenInCsharp()).Invoke();\r\n\r\n            // here I would like to call something like 'Get-Member $result'\r\n        }\r\n    }\r\n```\r\n\r\nI hope the comments I have left in the code above help to further clarify my question.\r\n\r\nMore abstractly, I want to invoke a cmdlet that either exists (in script form instead of C#) as part of my module or external to my module (think system provided cmdlets, like `Get-Member`). If ` public class TestWidgetCommand : PSCmdlet { ... }` were written as `function Restore-Database { ... }`, the answer would be to just call `Get-Member $result` in the body of the function, but I am working in C# and can't do that.\r\n\r\nMust I do some thing like this: [Runpool PowerShell Example](https://code.msdn.microsoft.com/PowerShell-Sample-02-affe8453/sourcecode?fileId=70908&pathId=720601728) (see the string script variable)",
    "created_at": "2018-05-08T16:52:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6840#issuecomment-387468953",
    "id": 387468953,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ2ODk1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/387468953/reactions"
    },
    "updated_at": "2018-05-08T16:52:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/387468953",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10216235?v=4",
      "events_url": "https://api.github.com/users/cskwrd/events{/privacy}",
      "followers_url": "https://api.github.com/users/cskwrd/followers",
      "following_url": "https://api.github.com/users/cskwrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/cskwrd/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cskwrd",
      "id": 10216235,
      "login": "cskwrd",
      "node_id": "MDQ6VXNlcjEwMjE2MjM1",
      "organizations_url": "https://api.github.com/users/cskwrd/orgs",
      "received_events_url": "https://api.github.com/users/cskwrd/received_events",
      "repos_url": "https://api.github.com/users/cskwrd/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cskwrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cskwrd/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cskwrd"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@cskwrd You do have to use the `PowerShell` API to call other commands from C# but you don't need to create new runspaces. Instead, use `PowerShell.Create(RunspaceMode.CurrentRunspace)` to create the `PowerShell` instance (this is assuming that you don't want to do asynchronous stuff). That way, you'll have access to the current session. So\r\n```csharp\r\nvar myPowerShellInstance = PowerShell.Create(RunspaceMode.CurrentRunspace).\r\n    AddCommand(\"OtherCmdletFromMyModuleWrittenInCsharp\");\r\nCollection<PSObject> result = myPowerShellInstance.Invoke();\r\n```\r\nThen to call `Get-Member` with the results,\r\n```csharp \r\nvar mySecondPowerShellInstance = PowerShell.Create(RunspaceMode.CurrentRunspace).\r\n    AddCommand(\"Get-Member\");\r\nCollection<PSObject> result2 = mySecondPowerShellInstance.Invoke(result1);\r\n```\r\n(Note:  WRT getting members, the `Invoke()` method returns `Collection<PSObject>` and  `PSObject` has a property `Members` which is essentially what `Get-Member` returns.)\r\n\r\nOr you can do it all in one pipeline\r\n```csharp\r\n var myPowerShellInstance = PowerShell.Create(RunspaceMode.CurrentRunspace).\r\n    AddCommand(\"OtherCmdletFromMyModuleWrittenInCsharp\").\r\n         AddCommand(\"Get-Member\");\r\nCollection<PSObject> result = myPowerShellInstance.Invoke();\r\n```\r\nAnd remember to dispose your `PowerShell` instances. Also, you can reuse a `PowerShell` instance by calling `myPowerShellInstance.Commands.Clear()` which removes the commands from the pipeline. ",
    "created_at": "2018-05-08T18:41:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6840#issuecomment-387501918",
    "id": 387501918,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzUwMTkxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/387501918/reactions"
    },
    "updated_at": "2018-05-08T18:41:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/387501918",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "NONE",
    "body": "@BrucePay Thanks for the info! This is what I needed.",
    "created_at": "2018-05-11T14:40:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6840#issuecomment-388383920",
    "id": 388383920,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6840",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODM4MzkyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/388383920/reactions"
    },
    "updated_at": "2018-05-11T14:40:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/388383920",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10216235?v=4",
      "events_url": "https://api.github.com/users/cskwrd/events{/privacy}",
      "followers_url": "https://api.github.com/users/cskwrd/followers",
      "following_url": "https://api.github.com/users/cskwrd/following{/other_user}",
      "gists_url": "https://api.github.com/users/cskwrd/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cskwrd",
      "id": 10216235,
      "login": "cskwrd",
      "node_id": "MDQ6VXNlcjEwMjE2MjM1",
      "organizations_url": "https://api.github.com/users/cskwrd/orgs",
      "received_events_url": "https://api.github.com/users/cskwrd/received_events",
      "repos_url": "https://api.github.com/users/cskwrd/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cskwrd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cskwrd/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cskwrd"
    }
  }
]
