[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Indeed, passing a \"null collection\" - `[System.Management.Automation.Internal.AutomationNull]::Value` - as an _argument_ (parameter value) currently invariably converts it to `$null`.\r\n\r\nI can't speak to why this behavior was chosen, but hopefully others can. /cc @lzybkr \r\n\r\nNote that you can more simply create this \"null collection\" value with `. {}`\r\n\r\nAs for the enumeration behavior:\r\n\r\n* `$null` _is_ passed through the _pipeline_, as you've observed.\r\n\r\n```powershell\r\nPS> $null | ForEach-Object { 'hi' }\r\nhi\r\n```\r\n\r\n* By contrast, it _isn't_ if you use a `foreach` _loop_:\r\n\r\n```powershell\r\nPS> foreach ($val in $null) { 'hi' }\r\n # (no output)\r\n```\r\n\r\nWhile you _can_ use this distinction to prevent enumeration (assuming your function doesn't truly need to distinguish between `[System.Management.Automation.Internal.AutomationNull]::Value` and `$null`, which is currently impossible via a _parameter_), I personally find it problematic - see https://github.com/PowerShell/PowerShell/issues/7049#issuecomment-399808799\r\n\r\nOf course, you could also use `$null -eq $a`  to test `$a` for `$null` and skip further processing based on that test.\r\n",
    "created_at": "2019-03-17T22:32:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-473721848",
    "id": 473721848,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcyMTg0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473721848/reactions"
    },
    "updated_at": "2019-03-17T22:46:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473721848",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "This is 100% abstraction leak. When you just want to write a script, you should always think about $null, [System.Management.Automation.Internal.AutomationNull]::Value and @(). Also about single element enumeration where you cannot get Count = 1.\r\nThis is horrible error-prone part of PowerShell.\r\nHope to see some cleanup here in PowerShell 7.0+",
    "created_at": "2019-03-17T22:59:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-473724173",
    "id": 473724173,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcyNDE3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473724173/reactions"
    },
    "updated_at": "2019-03-17T22:59:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473724173",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10322215?v=4",
      "events_url": "https://api.github.com/users/dmitriyse/events{/privacy}",
      "followers_url": "https://api.github.com/users/dmitriyse/followers",
      "following_url": "https://api.github.com/users/dmitriyse/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmitriyse/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dmitriyse",
      "id": 10322215,
      "login": "dmitriyse",
      "node_id": "MDQ6VXNlcjEwMzIyMjE1",
      "organizations_url": "https://api.github.com/users/dmitriyse/orgs",
      "received_events_url": "https://api.github.com/users/dmitriyse/received_events",
      "repos_url": "https://api.github.com/users/dmitriyse/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dmitriyse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmitriyse/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dmitriyse"
    }
  },
  {
    "author_association": "NONE",
    "body": "The problems of this kind make PowerShell less attractive that it could be and kills many other benefits.",
    "created_at": "2019-03-17T23:01:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-473724363",
    "id": 473724363,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcyNDM2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473724363/reactions"
    },
    "updated_at": "2019-03-17T23:01:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473724363",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10322215?v=4",
      "events_url": "https://api.github.com/users/dmitriyse/events{/privacy}",
      "followers_url": "https://api.github.com/users/dmitriyse/followers",
      "following_url": "https://api.github.com/users/dmitriyse/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmitriyse/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dmitriyse",
      "id": 10322215,
      "login": "dmitriyse",
      "node_id": "MDQ6VXNlcjEwMzIyMjE1",
      "organizations_url": "https://api.github.com/users/dmitriyse/orgs",
      "received_events_url": "https://api.github.com/users/dmitriyse/received_events",
      "repos_url": "https://api.github.com/users/dmitriyse/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dmitriyse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmitriyse/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dmitriyse"
    }
  },
  {
    "author_association": "NONE",
    "body": "As a current workaround, you need always put `@(<something>)` to force `<something>` behave as a collection.",
    "created_at": "2019-03-17T23:11:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-473725218",
    "id": 473725218,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzcyNTIxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473725218/reactions"
    },
    "updated_at": "2019-03-17T23:12:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473725218",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10322215?v=4",
      "events_url": "https://api.github.com/users/dmitriyse/events{/privacy}",
      "followers_url": "https://api.github.com/users/dmitriyse/followers",
      "following_url": "https://api.github.com/users/dmitriyse/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmitriyse/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dmitriyse",
      "id": 10322215,
      "login": "dmitriyse",
      "node_id": "MDQ6VXNlcjEwMzIyMjE1",
      "organizations_url": "https://api.github.com/users/dmitriyse/orgs",
      "received_events_url": "https://api.github.com/users/dmitriyse/received_events",
      "repos_url": "https://api.github.com/users/dmitriyse/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dmitriyse/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmitriyse/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dmitriyse"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I hear you, @dmitriyse.\r\n\r\nIf backward compatibility weren't a concern, my vote would be for the following:\r\n\r\n* Default uninitialized variables to `[System.Management.Automation.Internal.AutomationNull]::Value` rather than `$null`.\r\n\r\n* Preserve `[System.Management.Automation.Internal.AutomationNull]::Value` when passed as an _argument_.\r\n\r\n* Make `foreach` loops enumerate `$null` (and ignore `[System.Management.Automation.Internal.AutomationNull]::Value`), just as the pipeline does.\r\n\r\n* Continue to treat `[System.Management.Automation.Internal.AutomationNull]::Value` like `$null` in conditionals and .NET method calls, but provide a way to distinguish between the two, if needed (see below).\r\n\r\nThe above would make for consistent behavior, and there may then rarely be a need to _explicitly_ distinguish between `$null` and `[System.Management.Automation.Internal.AutomationNull]::Value` in conditionals, but it's still worth doing the following:\r\n\r\n  * Introduce a new automatic variable named, say, `$nullArray` to more succinctly represent `[System.Management.Automation.Internal.AutomationNull]::Value`.\r\n\r\n * Make `-eq` with a `[System.Management.Automation.Internal.AutomationNull]::Value` _LHS_ only be equal to itself, to more easily allow distinguishing it from `$null` (whereas it's fine to continue to implicitly convert the former to `$null`, notably in .NET method calls).\r\n\r\n    * Currently, you have to use the following, somewhat obscure, technique to detect `[System.Management.Automation.Internal.AutomationNull]::Value`: `@($potentialAutomationNull).Count -eq 0`\r\n\r\n\r\nI encourage you to read the discussion at #6745, which calls for a future PowerShell version not encumbered by the need to maintain backward compatibility.\r\n\r\nAs it turns out, the issue at hand is already mentioned there, at https://github.com/PowerShell/PowerShell/issues/6745#issuecomment-386912975",
    "created_at": "2019-03-18T02:05:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-473743805",
    "id": 473743805,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzc0MzgwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473743805/reactions"
    },
    "updated_at": "2019-03-20T15:46:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/473743805",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I'm not sure this was intentional, more like an oversight.\r\n\r\nI believe the following scenarios differed in V2 and I changed that in V3.\r\n\r\n```powershell\r\n# direct piping\r\nGet-EmptyPipeline | Do-Something\r\n\r\n# piping after assignment\r\n$something = Get-EmptyPipeline\r\n$something | Do-Something \r\n```\r\n\r\nIf my memory is correct, then I just missed the scenario of passing the value as an argument.",
    "created_at": "2019-03-20T01:43:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-474650803",
    "id": 474650803,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1MDgwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/474650803/reactions"
    },
    "updated_at": "2019-03-20T01:43:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/474650803",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the insight, @lzybkr.\r\n\r\nIndeed, in v2 assigning `[System.Management.Automation.Internal.AutomationNull]::Value` to a _variable_ (such as returned from a pipeline with no output) implicitly converted it to `$null`, so sending such a variable through the pipeline later then unexpectedly resulted in `$null` getting sent as the input object to the next command in the pipeline (rather than not sending anything).\r\n\r\nFixing the _argument case_ too is a breaking change; however, if we leave the aspect of defaulting uninitialized variables to AutomationNull and fixing the `foreach` loop behavior aside, could it be considered a bucket 3 change?\r\n\r\nIn any event, these fixes are worth considering for a future version that is not beholden to backward compatibility.\r\n(I've cleaned up the proposal in my previous comment.)",
    "created_at": "2019-03-20T14:58:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9150#issuecomment-474869468",
    "id": 474869468,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9150",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDg2OTQ2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/474869468/reactions"
    },
    "updated_at": "2019-03-20T15:47:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/474869468",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
