[
  {
    "author_association": "CONTRIBUTOR",
    "body": "@TravisEz13 It looks like macOS does not support multiple protocols being set at once. This is not surprising as the entire SSL/TLS/Certificate implementation in CoreFX is flakey on macOS where some things work sometimes, not at all, or only partially.\r\n\r\nI'm going to logic gate the multi-protocol test cases so they don't run on macOS.\r\n\r\n```powershell\r\n$handler = [System.Net.Http.HttpClientHandler]::new() \r\n$handler.SslProtocols = [System.Security.Authentication.SslProtocols]::Tls -bor [System.Security.Authentication.SslProtocols]::Tls11\r\n$HttpClient = [System.Net.Http.HttpClient]::New($handler) \r\n$Response = $HttpClient.GetAsync(\"https://httpbin.org/user-agent\").GetAwaiter().GetResult()\r\n```\r\n\r\nresult\r\n```none\r\nException calling \"GetResult\" with \"0\" argument(s): \"The requested security protocol is not supported.\"\r\nAt line:1 char:1\r\n+ $Response = $HttpClient.GetAsync(\"https://httpbin.org/user-agent\").Ge ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n+ CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\r\n+ FullyQualifiedErrorId : NotSupportedException\r\n\r\nErrorRecord                 : Exception calling \"GetResult\" with \"0\" argument(s): \"The requested security protocol is not supported.\"\r\nWasThrownFromThrowStatement : False\r\nMessage                     : Exception calling \"GetResult\" with \"0\" argument(s): \"The requested security protocol is not supported.\"\r\nData                        : {System.Management.Automation.Interpreter.InterpretedFrameInfo}\r\nInnerException              : System.NotSupportedException: The requested security protocol is not supported.\r\n                                 at System.Net.Http.CurlHandler.SslProvider.SetSslVersion(EasyRequest easy)\r\n                                 at System.Net.Http.CurlHandler.SslProvider.SetSslOptions(EasyRequest easy, ClientCertificateOption clientCertOption)\r\n                                 at System.Net.Http.CurlHandler.EasyRequest.InitializeCurl()\r\n                                 at System.Net.Http.CurlHandler.MultiAgent.ActivateNewRequest(EasyRequest easy)\r\n                              --- End of stack trace from previous location where exception was thrown ---\r\n                                 at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                                 at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                                 at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n                                 at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\r\n                              --- End of stack trace from previous location where exception was thrown ---\r\n                                 at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                                 at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                                 at CallSite.Target(Closure , CallSite , Object )\r\nTargetSite                  : Void ConvertToMethodInvocationException(System.Exception, System.Type, System.String, Int32, System.Reflection.MemberInfo)\r\nStackTrace                  :    at System.Management.Automation.ExceptionHandlingOps.ConvertToMethodInvocationException(Exception exception, Type typeToThrow, String meth\r\n                              odName, Int32 numArgs, MemberInfo memberInfo)\r\n                                 at CallSite.Target(Closure , CallSite , Object )\r\n                                 at System.Dynamic.UpdateDelegates.UpdateAndExecute1[T0,TRet](CallSite site, T0 arg0)\r\n                                 at System.Management.Automation.Interpreter.DynamicInstruction`2.Run(InterpretedFrame frame)\r\n                                 at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\nHelpLink                    :\r\nSource                      : System.Management.Automation\r\nHResult                     : -2146233087\r\n```\r\n\r\n\r\n",
    "created_at": "2017-11-10T20:34:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343578975",
    "id": 343578975,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzU3ODk3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343578975/reactions"
    },
    "updated_at": "2017-11-10T20:34:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343578975",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Hmm. It looks like the `'Tls, Tls12'` failure on Linux is a possible CoreFX bug. It appears it doesn't honor the `Tls12` property when it is supplied with `Tls` and instead tries to use `Tls` only. All the other combinations work, including `'Tls, Tls11, Tls12'`, `'Tls11, Tls12'`, and `'Tls12'`.\r\n\r\n```powershell\r\n$url = Get-WebListenerUrl -Test Get -Https -SslProtocol Tls12\r\n$handler = [System.Net.Http.HttpClientHandler]::new() \r\n$handler.ServerCertificateCustomValidationCallback = [System.Net.Http.HttpClientHandler]::DangerousAcceptAnyServerCertificateValidator\r\n$handler.SslProtocols = [System.Security.Authentication.SslProtocols]::Tls -bor [System.Security.Authentication.SslProtocols]::Tls12\r\n$HttpClient = [System.Net.Http.HttpClient]::New($handler) \r\n$Response = $HttpClient.GetAsync(\"$url\").GetAwaiter().GetResult()\r\n```\r\n\r\n```none\r\nMessage        : An error occurred while sending the request.\r\nData           : {}\r\nInnerException : System.Net.Http.CurlException: SSL connect error\r\n                    at System.Net.Http.CurlHandler.ThrowIfCURLEError(CURLcode error)\r\n                    at System.Net.Http.CurlHandler.MultiAgent.FinishRequest(StrongToWeakReference`1 easyWrapper, CURLcode messageResult)\r\nTargetSite     : Void Throw()\r\nStackTrace     :    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                    at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n                    at System.Net.Http.HttpClient.<FinishSendAsyncBuffered>d__58.MoveNext()\r\n                 --- End of stack trace from previous location where exception was thrown ---\r\n                    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                    at CallSite.Target(Closure , CallSite , Object )\r\nHelpLink       :\r\nSource         : System.Private.CoreLib\r\nHResult        : 35\r\n\r\n```\r\n\r\nI'll logic this one out of being run on both linux and macOS. When I get some time I will open an issue with CoreFX. ",
    "created_at": "2017-11-10T23:38:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343615242",
    "id": 343615242,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYxNTI0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343615242/reactions"
    },
    "updated_at": "2017-11-10T23:38:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343615242",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "In previous years, we had a simple logic when we started with a highest protocol and fallback at a lower.\r\nAfter it has been recognized as a security hole, I guess the setting of several protocols is irrelevant and we should block it.",
    "created_at": "2017-11-11T09:38:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343652693",
    "id": 343652693,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY1MjY5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343652693/reactions"
    },
    "updated_at": "2017-11-11T09:38:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343652693",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov Your recommendation is to switch it to a Non-Flags Enum?\r\n\r\nMy plan was to not document the possibility of multiple protocols and leave as an exercise for advanced users.  They don't show up in intellisense and unless someone advanced enough in the l;language took a good look at the Enum, they wouldn't really know. \r\n\r\nMultiple protocols work 100% on windows , 99% on linux and 0% on macOS. The linux one is a bug and macOS curl is a known trouble spot in CoreFX that they have been steadily improving. \r\n\r\nI'd rather leave it in and let advanced users give it a try than take the option away.\r\n\r\nIf there is a concern, it could be documented that \"setting multiple protocols is possible, though not supported on all platforms\".",
    "created_at": "2017-11-11T11:47:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343659186",
    "id": 343659186,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY1OTE4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343659186/reactions"
    },
    "updated_at": "2017-11-11T11:47:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343659186",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thinking about security I believe we lost nothing if remove `Flags`. @PaulHigin Could you please comment?",
    "created_at": "2017-11-11T16:50:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343677883",
    "id": 343677883,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY3Nzg4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343677883/reactions"
    },
    "updated_at": "2017-11-11T16:50:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343677883",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov you are right in that there is no security loss. But, lets say a user has a contractual agreement to use TLS 1.1 at minimum, they could supply `'Tls11, Tls12'` and ensure the endpoint isn't using TLS 1.0. That works perfect on Windows and Linux. Now we take the Flags away the user must now call first with TLS 1.1 and then try again with TLS 1.2.\r\n\r\nSo no, security loss, but, we do make it harder for the user. ",
    "created_at": "2017-11-11T17:03:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343678697",
    "id": 343678697,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY3ODY5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343678697/reactions"
    },
    "updated_at": "2017-11-11T17:03:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343678697",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Since POODLE attacks TLS fallbacks was disabled. Currently only client moderated fallbacks is allowed by means of TLS_FALLBACK_SCSV fake cipher suite. \r\nI'm sure this is a lower level API than PowerShell. I don't know if CoreFX support this. If no so there's no point in specifying multiple protocols.\r\nIf CoreFX could support this, we could indicate `Tls12,Tls11`, which would mean: try to connect with Tls12, if server reply with TLS_FALLBACK_SCSV then use Tls11.\r\n",
    "created_at": "2017-11-11T17:59:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343682523",
    "id": 343682523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY4MjUyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343682523/reactions"
    },
    "updated_at": "2017-11-11T17:59:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343682523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov I'm not exactly sure what is being done, but I know for a fact from the tests in This PR, that if you supply `Tls12, Tls11` to a `Tls12` endpoint it works, to a `Tls11` endpoints it works, to a `Tls` endpoint it fails. So at the very least it is allow for only `Tls12` and `Tls11` endpoints.  ",
    "created_at": "2017-11-11T18:03:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343682859",
    "id": 343682859,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY4Mjg1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343682859/reactions"
    },
    "updated_at": "2017-11-11T18:03:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343682859",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This design is similar to most browsers.  I don't think we need to remove fallback.  The user can of course specify just one protocol.  We are giving the user the control.",
    "created_at": "2017-11-11T20:15:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343691143",
    "id": 343691143,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY5MTE0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343691143/reactions"
    },
    "updated_at": "2017-11-11T20:16:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343691143",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The design - yes, most of browsers has check boxes to select some protocols. But its behavior is secure - all of browsers disable fallback since [POODLE discovered](https://en.wikipedia.org/wiki/POODLE). Currently client and server must support TLS_FALLBACK_SCSV to do moderated fallback. If PowerShell and .Net Core allow to select some protocols and don't support TLS_FALLBACK_SCSV - it is security hole, an user using PowerShell can be redirected to a fake (Azure) server.",
    "created_at": "2017-11-12T10:40:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343727855",
    "id": 343727855,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzcyNzg1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343727855/reactions"
    },
    "updated_at": "2017-11-12T10:40:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343727855",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov I do not follow your logic.\r\n\r\nUser has a requirement to NOT use TLS 1.0.  The user supplies `-SslProtocol 'Tls11, Tls12'`. Here are the conditions of the endpoint:\r\n\r\n\r\n| End Point Protocol | Result  |\r\n| ------------------ | ------- |\r\n| TLS 1.0            | FAILED  |\r\n| TLS 1.1            | Success |\r\n| TLS 1.2            | Success |\r\n\r\nI'm not sure how POODLE is even a problem since SSL 3.0 is not even supported in CoreFX by the `HttpClient`.\r\n\r\nWhen `HttpClientHandler.SslProtocols` is not set, supplied `None`, or supplied `Tls, Tls11, Tls12` they act exactly the same except for the logic to determine which Flags were supplied. So if this is insecure, for some reason, it is already insecure and supplying multiple Flags doesn't change that. At the very least, it offers enhanced security because at least the user can disallow a specific protocol.",
    "created_at": "2017-11-12T12:10:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343732690",
    "id": 343732690,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzczMjY5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343732690/reactions"
    },
    "updated_at": "2017-11-12T14:18:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343732690",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@markekraus Currently not only TLS->SSL fallback is security hole, TLS high level -> TLS low level also is security hole and is under the prohibition. If PowerShell is trying to connect with TLS 1.2 and server reject the connection, PowerShell shouldn't fallback to TLS 1.1 in classic way (only by supporting TLS_FALLBACK_SCSV).\r\nSo main question is - do underline system (CoreFX) implement the fallback on TLS_FALLBACK_SCSV? If yes I am fine with setting many protocols, if no I believe we shouldn't violate security and the modern standard for the TLS_FALLBACK_SCSV fallback.\r\n\r\nAlso if today CoreFX don't implement the same behavior for all platforms it is better for script portability to be limited to one protocol.",
    "created_at": "2017-11-12T16:53:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343750682",
    "id": 343750682,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1MDY4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343750682/reactions"
    },
    "updated_at": "2017-11-12T16:53:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343750682",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov I doesn't matter. if the user doesn't want TLS 1.0, or TLS 1,1, they specify `-SslProtocol 'Tls12'` The connection will not work on anything other than TLS 1.2. The test in this PR prove that.",
    "created_at": "2017-11-12T16:57:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343750911",
    "id": 343750911,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1MDkxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343750911/reactions"
    },
    "updated_at": "2017-11-12T16:57:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343750911",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Also if today CoreFX don't implement the same behavior for all platforms it is better for script portability to be limited to one protocol.\r\n\r\nThen we should rip out all of our security features for macOS since they are all partially or not supported or only work under the right circumstances. or, we should completely rip out these cmdlets from macOS because the entire CoreFX HttpClient implementation on macOS is riddled with issues. When we go RTM I am expecting macOS users to flood with web cmdlets issue. CoreFX is just weak there.\r\n\r\nThis kind of thing just needs to be documented and to a degree it will be expected by users. Python, PHP, and other cross-platform languages have plenty of their own cross-platform implementation quirks. Something being either not supported on one platform or partially supported on another never stops other languages from implementing enhancements for a majority of platforms.\r\n\r\nAgain, multiple protocols works 100% on Windows, 99% on Linux (the one instance that doesn't work appears to be a bug in CoreFX) and not at all on macOS. I don't think throwing the feature out just because macOS and CoreFX have issues with libcurl is worth it, when all windows platforms, and almost all Linux platforms will support it. If we start down that path we will never get to implement anything that is an improvement for most platforms just because one platform happens to be fragile. If this only worked on Windows, then maybe I would agree it's not worth implementing.\r\n\r\nCoreFX will have better support for these things in macOS in the future. Their issues are littered with HttpClient implementation issues on macOS. They know it's a weak point and we should acknowledge it as one for ourselves as well. ",
    "created_at": "2017-11-12T17:12:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343751911",
    "id": 343751911,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1MTkxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343751911/reactions"
    },
    "updated_at": "2017-11-12T17:12:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343751911",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">we should completely rip out these cmdlets from macOS because the entire CoreFX HttpClient implementation on macOS is riddled with issues.\r\n\r\nIf I were a user of PowerShell on MacOs, I'd feel cheated if I had cmdlets that didn't work.",
    "created_at": "2017-11-12T18:03:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343755173",
    "id": 343755173,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1NTE3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343755173/reactions"
    },
    "updated_at": "2017-11-12T18:03:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343755173",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> If I were a user of PowerShell on MacOs, I'd feel cheated if I had cmdlets that didn't work.\r\n\r\nI'd rather have a web cmdlets that at least works for the most part with basic web calls than none at all. Even if certain features aren't all supported on my platform, I'd still want it. The point is that partial support is better than none at all.",
    "created_at": "2017-11-12T18:19:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-343756201",
    "id": 343756201,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1NjIwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343756201/reactions"
    },
    "updated_at": "2017-11-12T18:19:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/343756201",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "If we need to remove a disable the cmdlets for macOS file another issue.  For the fallback issue, I think fallback is a required feature based on past experience.  If we need a more restricted fallback, I think we would need support for .NET to support that.",
    "created_at": "2017-11-13T18:44:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-344017238",
    "id": 344017238,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDAxNzIzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344017238/reactions"
    },
    "updated_at": "2017-11-13T18:44:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344017238",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10873629?v=4",
      "events_url": "https://api.github.com/users/TravisEz13/events{/privacy}",
      "followers_url": "https://api.github.com/users/TravisEz13/followers",
      "following_url": "https://api.github.com/users/TravisEz13/following{/other_user}",
      "gists_url": "https://api.github.com/users/TravisEz13/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TravisEz13",
      "id": 10873629,
      "login": "TravisEz13",
      "node_id": "MDQ6VXNlcjEwODczNjI5",
      "organizations_url": "https://api.github.com/users/TravisEz13/orgs",
      "received_events_url": "https://api.github.com/users/TravisEz13/received_events",
      "repos_url": "https://api.github.com/users/TravisEz13/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/TravisEz13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TravisEz13/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TravisEz13"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'm leaving a note here for those who view this discussion in the future and for clarity to avoid panic:\r\n\r\nThe issues I have seen with `HttpClient` on macOS are not reliably reproducible. I am uncertain how much of it relates to an instability of CoreFX on macOS or just consistent bad luck and phantom external issues.  \r\n\r\nFor the most part, simple HTTP calls work to a high rate of success. However, they will randomly fail even in our tests in this project for macOS where they are not failing for the same tests in Windows and Linux. Some of that maybe Travis CI related. However, since I acquired a macOS machine to test with I have seen similar stability issues on my own machine. Again, I don't know how much of that is just bad luck, my lack of experience with macOS in general, or possible stability issues in CoreFX. I cannot reliably reproduce the issues I find, so it is impossible at my skill level to track down a specific root cause.\r\n\r\nAs such, I can only say, without solid evidence, that I have general distrust for the stability of `HttpClient` on CoreFX and thus a similar feeling about the Web Cmdlets which use `HttpClient`. Without being able to quantify my experience, I cannot recommend the Cmdlets be removed from macOS. \r\n\r\nIt is clear, however, that many of the features relating to security and encryption are not fully implemented CoreFX on macOS. They work at the basic level depending on how the environment is configured. Sometimes they do not work at all, again, depending on how the environment is configured. However, I do not feel it is prudent to cripple these features for all platforms simply because a single platform cannot full implement them.",
    "created_at": "2017-11-13T19:09:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-344024696",
    "id": 344024696,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDAyNDY5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344024696/reactions"
    },
    "updated_at": "2017-11-13T19:09:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344024696",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@markekraus Clould you please open tracking Issue? It wouldd be usefull for documentating the limitations and tracking CoreFX.",
    "created_at": "2017-11-14T03:59:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-344139529",
    "id": 344139529,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDEzOTUyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344139529/reactions"
    },
    "updated_at": "2017-11-14T03:59:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344139529",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov #4650 is related I could just update that.  The underlying cause is the same. \r\n\r\nI'm not sure if we should open a master issue to track all macOS limitations, or just Web Cmdlets. As I recall, there are several other cmdlets that have issues on macOS but I can't recall which ones immediately. ",
    "created_at": "2017-11-14T09:59:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-344206062",
    "id": 344206062,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDIwNjA2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344206062/reactions"
    },
    "updated_at": "2017-11-14T09:59:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344206062",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That would be very good if users were given this description (broken cmdlets) in the documentation (release notes). If you open the issue anyone  can complete it at any time.",
    "created_at": "2017-11-14T10:14:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-344210299",
    "id": 344210299,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDIxMDI5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344210299/reactions"
    },
    "updated_at": "2017-11-14T10:14:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344210299",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov  #5443",
    "created_at": "2017-11-14T10:37:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/5329#issuecomment-344216847",
    "id": 344216847,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5329",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDIxNjg0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344216847/reactions"
    },
    "updated_at": "2017-11-14T10:38:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/344216847",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6509955?v=4",
      "events_url": "https://api.github.com/users/markekraus/events{/privacy}",
      "followers_url": "https://api.github.com/users/markekraus/followers",
      "following_url": "https://api.github.com/users/markekraus/following{/other_user}",
      "gists_url": "https://api.github.com/users/markekraus/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/markekraus",
      "id": 6509955,
      "login": "markekraus",
      "node_id": "MDQ6VXNlcjY1MDk5NTU=",
      "organizations_url": "https://api.github.com/users/markekraus/orgs",
      "received_events_url": "https://api.github.com/users/markekraus/received_events",
      "repos_url": "https://api.github.com/users/markekraus/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/markekraus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/markekraus/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/markekraus"
    }
  }
]
