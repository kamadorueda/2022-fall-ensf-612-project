[
  {
    "author_association": "COLLABORATOR",
    "body": "At first look I'd expect that \"-Command -\" accept only one line command but how input multi-line one? And it is not clear that is semantic of \"-File script.ps1 -\" \r\n\r\nAlso I'd expect that we read console input if there is not explicit redirection but currenly the dash accepted as argument that can confuse.",
    "created_at": "2019-04-29T05:08:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487453170",
    "id": 487453170,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzQ1MzE3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487453170/reactions"
    },
    "updated_at": "2019-04-29T05:10:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487453170",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> At first look I'd expect that `-Command -` accept only one line command but how input multi-line one? \r\n\r\nAs argued in https://github.com/PowerShell/PowerShell/issues/9494#issuecomment-487621948, there's really no point in supporting `-Command -` altogether, if `-File -` worked properly.\r\n\r\nGiven that we cannot remove it: Just like you can already pass a multi-line argument to `-Command`, the entirety of stdin input should be executed as a snippet of source code.\r\n(Line-by-line _interactive_ execution doesn't really make sense - just start a PowerShell session normally to do that.)\r\n\r\n> it is not clear that is semantic of `-File script.ps1 -`\r\n\r\nAs stated in the linked comment, the `-` is not special at all in this case: since it _follows_ a `-File` argument - `script.ps1` - it is just a (positional) _argument_ to pass to `script.ps1`; `-` is only special _in lieu of_ a script-file argument.\r\n\r\n\r\n",
    "created_at": "2019-04-29T15:28:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487626057",
    "id": 487626057,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzYyNjA1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487626057/reactions"
    },
    "updated_at": "2019-04-29T15:28:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487626057",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Given that we cannot remove it: Just like you can already pass a multi-line argument to -Command, the entirety of stdin input should be executed as a snippet of source code.\r\n\r\nWe have API `Powershell.AddCommand()` and Powershell.AddScript() - I believe \"-Command\" behavior must fit first and \"-File\" - second.",
    "created_at": "2019-04-29T17:38:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487673869",
    "id": 487673869,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzY3Mzg2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487673869/reactions"
    },
    "updated_at": "2019-04-29T17:38:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487673869",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It is the other way around:\r\n\r\n`.AddScript()` is the one that behaves like `-Command` - you can pass it an arbitrary snippet of PowerShell code - the method is poorly named, `.AddScriptBlock()` would have made more sense.\r\n\r\n`.AddCommand()` is for adding a command _name or path_, with the need to specify arguments separately; as such it is akin to `-File`.\r\n\r\nAside from that, there's no requirement of one-to-one mapping to SDK methods here.\r\n\r\n",
    "created_at": "2019-04-29T17:43:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487675672",
    "id": 487675672,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzY3NTY3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487675672/reactions"
    },
    "updated_at": "2019-04-29T17:43:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487675672",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Aside from that, there's no requirement of one-to-one mapping to SDK methods here.\r\n\r\nMy comment was about expected behavior. Both methods is often used in our tests and I'd expect such behavior in CLI too.",
    "created_at": "2019-04-29T18:30:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487692310",
    "id": 487692310,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzY5MjMxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487692310/reactions"
    },
    "updated_at": "2019-04-29T18:30:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487692310",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As shown, the names of the SDK methods not only do not align with the CLI parameters, but suggest the _opposite_ mapping.\r\n\r\nIt is the CLI parameters that are sensibly named, and their _fundamental_ semantics must not and should not change (`-File` is self-describing (the fact that the argument must be a _script_ file is implied), and `-Command` / `-c` aligns with the long-established `-c` command in POSIX-like shells (and is akin to `/c` in `cmd.exe`)).\r\n\r\nWhat _should_ change, however, is how they deal with _stdin input_, as (now) suggested in the OP and argued in https://github.com/PowerShell/PowerShell/issues/9494#issuecomment-487648892\r\n\r\n",
    "created_at": "2019-04-29T18:54:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487700567",
    "id": 487700567,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzcwMDU2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487700567/reactions"
    },
    "updated_at": "2019-04-29T18:55:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487700567",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "P.S., @iSazonov: You could open a separate issue suggesting more sensible alias names for the SDK methods (obviously, the old names cannot be removed); especially `.AddScript()` keeps causing confusion.",
    "created_at": "2019-04-29T19:03:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487703705",
    "id": 487703705,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzcwMzcwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487703705/reactions"
    },
    "updated_at": "2019-04-29T19:03:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487703705",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 I think this is a dead proposal (add aliases) because it is a _public_ API.\r\n\r\n-File - is not documented so we could change its behavior as we need.",
    "created_at": "2019-04-30T04:51:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487820506",
    "id": 487820506,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NzgyMDUwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487820506/reactions"
    },
    "updated_at": "2019-04-30T04:51:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487820506",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> `-File -` is not documented so we could change its behavior as we need.\r\n\r\nThat's a good point.\r\n\r\nWe can then deprecate `-Command -` (and leave it as is) to support the following idioms, mostly based on `-File`, in conjunction with fixing #9497:\r\n\r\n```powershell\r\n# Execute *code* piped from stdin.\r\n... | pwsh   # same as: ... | pwsh -File -\r\n\r\n# Execute *code* piped from stdin *with arguments* \r\n# (`File -` is then required for disambiguation)\r\n... | pwsh -File - args...\r\n\r\n# Provide *input data* via stdin - to a script file\r\n... | pwsh -File someScript.ps1 [args...] \r\n\r\n# Provide *input data* via stdin - to a string containing commands\r\n... | pwsh -Command $snippetOfPsCode\r\n```\r\n\r\nThe unfortunate thing - which we cannot change - is that `-Command` doesn't accept _arguments_ to pass to `$snippetOfPsCode` (which the latter would see as `$Args` or bind to its parameters) - it simply considers the remaining arguments to be _part of the command string_.\r\n\r\n>  I think this is a dead proposal (add aliases) because it is a _public API_.\r\n\r\nI don't think it's a pressing issue, and the downside is that it bloats the SDK, but _why_ couldn't we add new, more descriptive method names that effectively call their less descriptively named predecessors? Of course, you'd then need to know what version of the SDK you're targeting.\r\n\r\n\r\n\r\n",
    "created_at": "2019-04-30T14:30:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487975049",
    "id": 487975049,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzk3NTA0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487975049/reactions"
    },
    "updated_at": "2019-04-30T16:39:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487975049",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'd expect that AddScriptBlock() accept a parameter of ScriptBlock type, AddScript() - string parameter.",
    "created_at": "2019-04-30T14:50:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487982921",
    "id": 487982921,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4Nzk4MjkyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487982921/reactions"
    },
    "updated_at": "2019-04-30T14:50:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/487982921",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "`AddScript()` adds a _script block_ that just _happens to be_ constructed from a _string argument_. \r\n\r\nIt's better to name methods for _what they do_, not the - somewhat incidental, possibly varying by overload - type of their _arguments_.\r\n\r\nAnd, of course, the far more typical use of the term _script_ is to refer to a _script file_ - and that's where the confusion comes from.",
    "created_at": "2019-04-30T16:42:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-488026049",
    "id": 488026049,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4ODAyNjA0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/488026049/reactions"
    },
    "updated_at": "2019-04-30T16:45:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/488026049",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Just to add another voice here, we've just stumbled on this behaviour as part of a generic \"monitoring solution\". The plan was to feed generic scripts through to `powershell -command -` as a script interpreter; we don't really have a workaround for this at the moment short of requiring that all scripts fed in are terminated with two blank lines (which seems to _work_ but is definitely suboptimal).\r\n\r\nI think the ideal for us would be the suggested `-File - args` handling in https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-487975049",
    "created_at": "2021-09-08T10:40:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3223#issuecomment-915123492",
    "id": 915123492,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3223",
    "node_id": "IC_kwDOAvT7bc42i60k",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/915123492/reactions"
    },
    "updated_at": "2021-09-08T11:39:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/915123492",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36475663?v=4",
      "events_url": "https://api.github.com/users/infraweavers/events{/privacy}",
      "followers_url": "https://api.github.com/users/infraweavers/followers",
      "following_url": "https://api.github.com/users/infraweavers/following{/other_user}",
      "gists_url": "https://api.github.com/users/infraweavers/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/infraweavers",
      "id": 36475663,
      "login": "infraweavers",
      "node_id": "MDQ6VXNlcjM2NDc1NjYz",
      "organizations_url": "https://api.github.com/users/infraweavers/orgs",
      "received_events_url": "https://api.github.com/users/infraweavers/received_events",
      "repos_url": "https://api.github.com/users/infraweavers/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/infraweavers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/infraweavers/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/infraweavers"
    }
  }
]
