[
  {
    "author_association": "COLLABORATOR",
    "body": "It looks like overhead for PowerShell to have a lock.\r\n\r\n/cc @PaulHigin ",
    "created_at": "2020-07-15T12:18:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-658733835",
    "id": 658733835,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODczMzgzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658733835/reactions"
    },
    "updated_at": "2020-07-15T12:18:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658733835",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There is no need to take a lock before running a script block.  And in fact doing so serializes script block execution, completely losing any benefit of using -Parallel.  PowerShell can't know what script will be executed in the -Parallel block and so it is up to the script author to use thread synchronization objects as needed, just like in C#.  But it is recommended to use thread safe types (such as ConcurrentDictionary) so that explicit use of sync objects is not needed.",
    "created_at": "2020-07-15T15:30:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-658836566",
    "id": 658836566,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODgzNjU2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658836566/reactions"
    },
    "updated_at": "2020-07-15T15:30:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658836566",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "NONE",
    "body": "@PaulHigin I see your point but if you guys are going to implement Multi-threading then you should leave it up to the user how they execute such operations like how C# handles it.  The performance impact is minimal as it simply ensures thread safety when executing commands.  The performance gain of Parallel vs non is still there so what is the performance impact on PowerShell implementing this?",
    "created_at": "2020-07-15T15:42:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-658842764",
    "id": 658842764,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg0Mjc2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658842764/reactions"
    },
    "updated_at": "2020-07-15T15:46:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658842764",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15974943?v=4",
      "events_url": "https://api.github.com/users/Smorgan05/events{/privacy}",
      "followers_url": "https://api.github.com/users/Smorgan05/followers",
      "following_url": "https://api.github.com/users/Smorgan05/following{/other_user}",
      "gists_url": "https://api.github.com/users/Smorgan05/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Smorgan05",
      "id": 15974943,
      "login": "Smorgan05",
      "node_id": "MDQ6VXNlcjE1OTc0OTQz",
      "organizations_url": "https://api.github.com/users/Smorgan05/orgs",
      "received_events_url": "https://api.github.com/users/Smorgan05/received_events",
      "repos_url": "https://api.github.com/users/Smorgan05/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Smorgan05/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Smorgan05/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Smorgan05"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I am not convinced this is necessary.  As you point out, it is already possible to use C# sync objects if needed.  But needing sync objects seems rare enough where it is not necessary to create a new PowerShell language 'lock' keyword.  \r\n\r\nBTW, it is not necessary to protect 'Write-Host' inside a lock.  \r\n\r\nIt seems to me the most likely scenario is for collecting data, but that can be covered by C# thread safe types or the PowerShell pipeline.\r\n\r\n```powershell\r\n$dictionary = [System.Collections.Concurrent.ConcurrentDictionary[[int],[string]]]::new()\r\n1..1000 | ForEach-Object -Parallel {\r\n    $dict = $using:dictionary\r\n    $null = $dict.TryAdd($_, \"Item $_\")\r\n    Write-Host \"Item $_\"\r\n}\r\n$dictionary[35]\r\nItem 35\r\n```\r\n\r\n```powershell\r\n$Items = 1..1000 | ForEach-Object -Parallel {\r\n    Write-Output \"Item $_\"\r\n    Write-Host \"Item $_\"\r\n}\r\n$Items[35]\r\nItem 36\r\n```\r\nBTW, PowerShell has supported running multi-threaded script blocks for over 10 years via API.  The new ForeEach-Object -Parallel feature just makes it easier to use, similar to ThreadJobs.",
    "created_at": "2020-07-15T16:53:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-658879711",
    "id": 658879711,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODg3OTcxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658879711/reactions"
    },
    "updated_at": "2020-07-15T16:53:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/658879711",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14019529?v=4",
      "events_url": "https://api.github.com/users/PaulHigin/events{/privacy}",
      "followers_url": "https://api.github.com/users/PaulHigin/followers",
      "following_url": "https://api.github.com/users/PaulHigin/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaulHigin/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PaulHigin",
      "id": 14019529,
      "login": "PaulHigin",
      "node_id": "MDQ6VXNlcjE0MDE5NTI5",
      "organizations_url": "https://api.github.com/users/PaulHigin/orgs",
      "received_events_url": "https://api.github.com/users/PaulHigin/received_events",
      "repos_url": "https://api.github.com/users/PaulHigin/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PaulHigin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaulHigin/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PaulHigin"
    }
  },
  {
    "author_association": "NONE",
    "body": "If we follow through with this logic then the user should always use concurrent data structures when working with Parallel foreach.  The user is not going to want to use concurrent data structures all the time because of the overhead involved with such processing.  Additionally, there should be a means to initialize a Concurrent Data Structure without using .net objects to make this happen.\r\n\r\nI think we need to cut to the chase here.  The lock statement should be implemented so that the end user has both options.  Having a flag means that it won't be turned on by default thus nailing your concerns.",
    "created_at": "2020-07-16T02:21:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-659116970",
    "id": 659116970,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTExNjk3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/659116970/reactions"
    },
    "updated_at": "2020-07-16T02:32:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/659116970",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15974943?v=4",
      "events_url": "https://api.github.com/users/Smorgan05/events{/privacy}",
      "followers_url": "https://api.github.com/users/Smorgan05/followers",
      "following_url": "https://api.github.com/users/Smorgan05/following{/other_user}",
      "gists_url": "https://api.github.com/users/Smorgan05/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Smorgan05",
      "id": 15974943,
      "login": "Smorgan05",
      "node_id": "MDQ6VXNlcjE1OTc0OTQz",
      "organizations_url": "https://api.github.com/users/Smorgan05/orgs",
      "received_events_url": "https://api.github.com/users/Smorgan05/received_events",
      "repos_url": "https://api.github.com/users/Smorgan05/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Smorgan05/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Smorgan05/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Smorgan05"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> If we follow through with this logic then the user should always use concurrent data structures when working with Parallel foreach.\r\n> (...)\r\n> Additionally, there should be a means to initialize a Concurrent Data Structure without using .net objects to make this happen.\r\n\r\nThe majority of use cases won't actually need concurrent data structures nor locking.  Most of the time folks just use the pipeline like in @PaulHigin's example.\r\n\r\n> The user is not going to want to use concurrent data structures all the time because of the overhead involved with such processing.\r\n\r\nTypically the concurrent types are a lot faster than old school sync objects.\r\n\r\n> The lock statement should be implemented so that the end user has both options. Having a flag means that it won't be turned on by default thus nailing your concerns.\r\n\r\nThere's only going to be a very small handful of cases where a sync object makes sense.  In those scenarios, using `Monitor.Enter` and `Exit` will work just fine.  For something to be worth adding a whole extra keyword and hooking up the parser/compiler to handle it, it's gotta have pretty high demand.",
    "created_at": "2020-07-16T02:54:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-659126375",
    "id": 659126375,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTEyNjM3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/659126375/reactions"
    },
    "updated_at": "2020-07-16T02:54:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/659126375",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Really PowerShell implements many magic things hided from users. Thus conhost has internal locks and users have no needs to lock/sync console outputs. \r\nI think we should follow the best practice and enhance internal PowerShell engine if we need to cover a new scenario. ",
    "created_at": "2020-07-16T03:35:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-659137630",
    "id": 659137630,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTEzNzYzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/659137630/reactions"
    },
    "updated_at": "2020-07-16T03:35:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/659137630",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2020-07-17T12:00:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/13174#issuecomment-660069030",
    "id": 660069030,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/13174",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MDA2OTAzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/660069030/reactions"
    },
    "updated_at": "2020-07-17T12:00:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/660069030",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
