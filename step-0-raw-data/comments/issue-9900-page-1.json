[
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, your last commit had 40 failures in `PowerShell-CI-macos`\r\n(These are 5 of the failures)\r\n\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[6].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 3\r\nActual length:   5\r\nStrings differ at index 0.\r\nExpected: '{2}'\r\nBut was:  '[int]'\r\nat <ScriptBlock>, /Users/vsts/agent/2.153.1/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[7].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 1\r\nActual length:   6\r\nStrings differ at index 0.\r\nExpected: '2'\r\nBut was:  '[char]'\r\nat <ScriptBlock>, /Users/vsts/agent/2.153.1/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[8].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 1\r\nActual length:   3\r\nStrings differ at index 0.\r\nExpected: '2'\r\nBut was:  '{2}'\r\nat <ScriptBlock>, /Users/vsts/agent/2.153.1/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[10].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 5\r\nActual length:   1\r\nStrings differ at index 0.\r\nExpected: '[int]'\r\nBut was:  '2'\r\nat <ScriptBlock>, /Users/vsts/agent/2.153.1/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[11].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 6\r\nActual length:   1\r\nStrings differ at index 0.\r\nExpected: '[char]'\r\nBut was:  '2'\r\nat <ScriptBlock>, /Users/vsts/agent/2.153.1/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\n",
    "created_at": "2019-06-14T14:04:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-502122037",
    "id": 502122037,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjEyMjAzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502122037/reactions"
    },
    "updated_at": "2021-03-12T01:52:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502122037",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, your last commit had 40 failures in `PowerShell-CI-linux`\r\n(These are 5 of the failures)\r\n\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[6].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 3\r\nActual length:   5\r\nStrings differ at index 0.\r\nExpected: '{2}'\r\nBut was:  '[int]'\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[7].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 1\r\nActual length:   6\r\nStrings differ at index 0.\r\nExpected: '2'\r\nBut was:  '[char]'\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[8].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 1\r\nActual length:   3\r\nStrings differ at index 0.\r\nExpected: '2'\r\nBut was:  '{2}'\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[10].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 5\r\nActual length:   1\r\nStrings differ at index 0.\r\nExpected: '[int]'\r\nBut was:  '2'\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\ntry/catch/finally statement parsing.Error Statement expected: <<try {1} catch [int],[char] {2} catch>>.$asts[11].Extent.Text\r\n```powershell\r\nExpected strings to be the same, but they were different.\r\nExpected length: 6\r\nActual length:   1\r\nStrings differ at index 0.\r\nExpected: '[char]'\r\nBut was:  '2'\r\nat <ScriptBlock>, /home/vsts/work/1/s/test/tools/Modules/HelpersLanguage/HelpersLanguage.psm1: line 125\r\n125:             It \"`$asts[$($i + 1)].Extent.Text\" { $asts[$i + 1].Extent.Text | Should Be $a[$i] }\r\n```\r\n",
    "created_at": "2019-06-14T14:05:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-502122307",
    "id": 502122307,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjEyMjMwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502122307/reactions"
    },
    "updated_at": "2021-03-12T01:52:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/502122307",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "As this is a change to the core language it should go through the RFC process.",
    "created_at": "2019-06-29T00:03:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-506908932",
    "id": 506908932,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjkwODkzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/506908932/reactions"
    },
    "updated_at": "2019-06-29T00:03:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/506908932",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@BrucePay please see https://github.com/PowerShell/PowerShell-RFC/pull/207 😄 ",
    "created_at": "2019-06-29T14:36:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-506961508",
    "id": 506961508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjk2MTUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/506961508/reactions"
    },
    "updated_at": "2019-06-29T14:36:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/506961508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows",
    "created_at": "2019-09-19T18:35:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-533256136",
    "id": 533256136,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzI1NjEzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533256136/reactions"
    },
    "updated_at": "2021-03-16T17:33:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533256136",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2019-09-19T18:36:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-533256323",
    "id": 533256323,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzI1NjMyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533256323/reactions"
    },
    "updated_at": "2021-03-16T17:33:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533256323",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@poshchan please retry windows",
    "created_at": "2019-09-30T21:29:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-536760985",
    "id": 536760985,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjc2MDk4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536760985/reactions"
    },
    "updated_at": "2021-03-16T17:33:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536760985",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2019-09-30T21:29:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-536761184",
    "id": 536761184,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjc2MTE4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536761184/reactions"
    },
    "updated_at": "2021-03-16T17:33:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/536761184",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows",
    "created_at": "2019-10-01T17:08:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-537133631",
    "id": 537133631,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzEzMzYzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537133631/reactions"
    },
    "updated_at": "2021-03-16T17:34:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537133631",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2019-10-01T17:09:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-537133915",
    "id": 537133915,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzEzMzkxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537133915/reactions"
    },
    "updated_at": "2021-03-16T17:34:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537133915",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This issue has changes that could potentially change syntax. Please consider adding this feature to [EditorSyntax](https://github.com/PowerShell/EditorSyntax) which is used for syntax highlighting in GitHub, Visual Studio Code, Atom, Sublime Text, and many more locations.\r\n\r\nConsistent syntax highlighting is very important for the language and a feature isn't \"complete\" until syntax highlighting is what is expected.\r\n\r\nIf you can't contribute to [EditorSyntax](https://github.com/PowerShell/EditorSyntax), at least open an issue to track the work - however, please note, that no one is actively working on the repo and so the work will likely not get done in a timely manner.\r\n\r\nWe hope that you consider contributing to [EditorSyntax](https://github.com/PowerShell/EditorSyntax).\r\n\r\n(note this is copy/pasted text for any change that looks like it could impact EditorSyntax - and will be a bot in the future)",
    "created_at": "2019-10-12T14:35:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-541330384",
    "id": 541330384,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTMzMDM4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541330384/reactions"
    },
    "updated_at": "2021-03-16T17:35:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541330384",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2644648?v=4",
      "events_url": "https://api.github.com/users/TylerLeonhardt/events{/privacy}",
      "followers_url": "https://api.github.com/users/TylerLeonhardt/followers",
      "following_url": "https://api.github.com/users/TylerLeonhardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TylerLeonhardt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TylerLeonhardt",
      "id": 2644648,
      "login": "TylerLeonhardt",
      "node_id": "MDQ6VXNlcjI2NDQ2NDg=",
      "organizations_url": "https://api.github.com/users/TylerLeonhardt/orgs",
      "received_events_url": "https://api.github.com/users/TylerLeonhardt/received_events",
      "repos_url": "https://api.github.com/users/TylerLeonhardt/repos",
      "site_admin": true,
      "starred_url": "https://api.github.com/users/TylerLeonhardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TylerLeonhardt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TylerLeonhardt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@TylerLeonhardt yeah that doesn't look too complicated. I don't know if I know everywhere that I'll need to change, but I can look for where it references other named blocks and go from there. 💖 \r\n\r\nEDIT: See https://github.com/PowerShell/EditorSyntax/pull/186",
    "created_at": "2019-10-12T14:41:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-541330908",
    "id": 541330908,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTMzMDkwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541330908/reactions"
    },
    "updated_at": "2021-03-16T17:35:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541330908",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry all",
    "created_at": "2020-04-23T04:35:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-618171983",
    "id": 618171983,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODE3MTk4Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618171983/reactions"
    },
    "updated_at": "2021-03-16T17:36:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618171983",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-static-analysis, PowerShell-CI-Windows, PowerShell-CI-macOS, PowerShell-CI-Linux`",
    "created_at": "2020-04-23T04:35:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-618172076",
    "id": 618172076,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODE3MjA3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618172076/reactions"
    },
    "updated_at": "2021-03-16T17:36:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/618172076",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows",
    "created_at": "2020-04-24T19:41:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619205758",
    "id": 619205758,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTIwNTc1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619205758/reactions"
    },
    "updated_at": "2021-03-16T17:36:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619205758",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2020-04-24T19:41:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619205887",
    "id": 619205887,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTIwNTg4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619205887/reactions"
    },
    "updated_at": "2021-03-16T17:36:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619205887",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows",
    "created_at": "2020-04-24T20:30:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619225325",
    "id": 619225325,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTIyNTMyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619225325/reactions"
    },
    "updated_at": "2021-03-16T17:36:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619225325",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2020-04-24T20:31:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619225505",
    "id": 619225505,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTIyNTUwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619225505/reactions"
    },
    "updated_at": "2021-03-16T17:36:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619225505",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows",
    "created_at": "2020-04-26T19:57:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619616239",
    "id": 619616239,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYxNjIzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619616239/reactions"
    },
    "updated_at": "2021-03-16T17:36:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619616239",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2020-04-26T19:58:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619616361",
    "id": 619616361,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYxNjM2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619616361/reactions"
    },
    "updated_at": "2021-03-16T17:36:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619616361",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry Windows",
    "created_at": "2020-04-26T20:58:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619623892",
    "id": 619623892,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYyMzg5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619623892/reactions"
    },
    "updated_at": "2021-03-16T17:37:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619623892",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2020-04-26T20:58:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-619623928",
    "id": 619623928,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYyMzkyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619623928/reactions"
    },
    "updated_at": "2021-03-16T17:37:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619623928",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Mmkay, got the bulk of it working. Something up with error reporting duplicating some errors (oops), but that's a problem for Tomorrow!Me to solve. ^^",
    "created_at": "2020-05-16T04:36:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-629587148",
    "id": 629587148,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU4NzE0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629587148/reactions"
    },
    "updated_at": "2020-05-16T04:36:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629587148",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows",
    "created_at": "2020-05-19T04:34:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-630573506",
    "id": 630573506,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDU3MzUwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630573506/reactions"
    },
    "updated_at": "2021-03-19T01:29:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630573506",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2020-05-19T04:34:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-630573595",
    "id": 630573595,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDU3MzU5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630573595/reactions"
    },
    "updated_at": "2021-03-19T01:29:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/630573595",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, I do not understand the build target(s) `windows macos`; I only allow `static`, `windows`, `macos`, `linux`, `ssh`, `all`",
    "created_at": "2020-05-22T17:03:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-632807907",
    "id": 632807907,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjgwNzkwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632807907/reactions"
    },
    "updated_at": "2021-03-19T01:29:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632807907",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@PoshChan please retry windows, macos",
    "created_at": "2020-05-22T17:04:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-632808356",
    "id": 632808356,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjgwODM1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632808356/reactions"
    },
    "updated_at": "2021-03-19T01:29:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632808356",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32, successfully started retry of `PowerShell-CI-Windows, PowerShell-CI-macOS`",
    "created_at": "2020-05-22T17:04:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-632808507",
    "id": 632808507,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjgwODUwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632808507/reactions"
    },
    "updated_at": "2020-05-22T17:04:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/632808507",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2020-06-06T14:00:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-640065551",
    "id": 640065551,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDA2NTU1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640065551/reactions"
    },
    "updated_at": "2021-03-19T01:30:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640065551",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'll get the conflicts sorted out this evening; @rjmholt can you update your review when you can? Cheers! 😊 💖 ",
    "created_at": "2020-06-24T13:38:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-648825892",
    "id": 648825892,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODgyNTg5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648825892/reactions"
    },
    "updated_at": "2021-03-19T01:30:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/648825892",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Any chance we can get this for PS 7.1?",
    "created_at": "2020-08-06T02:02:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-669638742",
    "id": 669638742,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTYzODc0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/669638742/reactions"
    },
    "updated_at": "2021-03-19T01:30:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/669638742",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/38873752?v=4",
      "events_url": "https://api.github.com/users/ThomasNieto/events{/privacy}",
      "followers_url": "https://api.github.com/users/ThomasNieto/followers",
      "following_url": "https://api.github.com/users/ThomasNieto/following{/other_user}",
      "gists_url": "https://api.github.com/users/ThomasNieto/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ThomasNieto",
      "id": 38873752,
      "login": "ThomasNieto",
      "node_id": "MDQ6VXNlcjM4ODczNzUy",
      "organizations_url": "https://api.github.com/users/ThomasNieto/orgs",
      "received_events_url": "https://api.github.com/users/ThomasNieto/received_events",
      "repos_url": "https://api.github.com/users/ThomasNieto/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ThomasNieto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ThomasNieto/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ThomasNieto"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt @SteveL-MSFT @daxian-dbw friendly ping for review",
    "created_at": "2020-11-04T13:24:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-721729597",
    "id": 721729597,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTcyOTU5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/721729597/reactions"
    },
    "updated_at": "2021-03-19T01:30:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/721729597",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Rebased to sort out the merge conflict. Give me a holler if anything else is needed here. 💖 ",
    "created_at": "2020-11-11T18:14:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-725580500",
    "id": 725580500,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNTU4MDUwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/725580500/reactions"
    },
    "updated_at": "2021-03-19T01:31:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/725580500",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 can you resolve the conflict?  Would like to see if we can get this in for 7.2-preview.2",
    "created_at": "2020-11-30T17:00:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-735912546",
    "id": 735912546,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTkxMjU0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 2,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/735912546/reactions"
    },
    "updated_at": "2021-03-19T01:31:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/735912546",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT should be good to go! 💖 ",
    "created_at": "2020-11-30T19:01:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-735978879",
    "id": 735978879,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTk3ODg3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/735978879/reactions"
    },
    "updated_at": "2021-03-19T01:31:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/735978879",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT @TravisEz13 those build errors are coming from files I haven't touched in this PR. Not sure what's up there, I'm guessing something got merged that for some reason managed not to trigger the build errors but should have?",
    "created_at": "2020-11-30T19:22:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-735989913",
    "id": 735989913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTk4OTkxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/735989913/reactions"
    },
    "updated_at": "2020-11-30T19:23:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/735989913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> @SteveL-MSFT @TravisEz13 those build errors are coming from files I haven't touched in this PR. Not sure what's up there, I'm guessing something got merged that for some reason managed not to trigger the build errors but should have?\r\n\r\nYeah I'm not able to build this branch locally either.\r\n\r\nLooks like it's coming from [these](https://github.com/PowerShell/PowerShell/pulls?q=is%3Apr+is%3Amerged+IDE0090), but checks for those PRs passed.\r\n\r\nLooking into how best to fix (and ideally prevent from reoccurring).\r\n\r\n/cc @iSazonov ",
    "created_at": "2020-11-30T20:41:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736030665",
    "id": 736030665,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjAzMDY2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736030665/reactions"
    },
    "updated_at": "2020-11-30T20:41:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736030665",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Rebased onto https://github.com/PowerShell/PowerShell/pull/14297 to get CI passing",
    "created_at": "2020-11-30T20:55:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736037395",
    "id": 736037395,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjAzNzM5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736037395/reactions"
    },
    "updated_at": "2020-11-30T20:55:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736037395",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks, Rob! 💖 \r\n\r\nHmm, that failure's a new one. I'm _pretty_ sure I haven't touched anything that would affect that test. Retriggering CI to verify failure, I don't have a Linux box to test on atm really.",
    "created_at": "2020-11-30T21:42:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736073667",
    "id": 736073667,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjA3MzY2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736073667/reactions"
    },
    "updated_at": "2020-11-30T21:43:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736073667",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Hmm, that failure's a new one.\r\n\r\nWell CodeFactor likes to include changes outside the actual diff (just in the same file). It's not a blocker for me",
    "created_at": "2020-11-30T22:25:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736093188",
    "id": 736093188,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjA5MzE4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736093188/reactions"
    },
    "updated_at": "2020-11-30T22:25:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736093188",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, I'm not too worried about CodeFactor here, this PR'd be twice the size if I did 😂 \r\n\r\nThere was a transient failure on the Linux build, something about the logging picking up something odd. I'm gonna say it's not something I did given it disappeared when I got it to rebuild. 🙂 All looks good now, ty for the help! 💖 ",
    "created_at": "2020-11-30T22:36:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736097703",
    "id": 736097703,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjA5NzcwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736097703/reactions"
    },
    "updated_at": "2020-11-30T22:37:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736097703",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "However, I have run this branch now, with the following script:\r\n\r\n```powershell\r\nfunction Test-Cleanup\r\n{\r\n  cleanup\r\n  {\r\n    Write-Host \"Enter message:\"\r\n    $msg = Read-Host\r\n    Write-Host \"Cleanup: $msg\"\r\n  }\r\n}\r\n\r\nTest-Cleanup\r\n\r\n```\r\n\r\nThe `Read-Host` is pretty artificial, but is an easy way to trigger a pipeline stop (by using <kbd>Ctrl</kbd>+<kbd>C</kbd>). Basically I wanted to see what happens when we put the lock logic under some stress.\r\n\r\nWhen we do that, I've seen a couple of things happen:\r\n\r\n- The ReadLine call is cancelled without the pipeline being stopped and PSReadLine then gets caught in a double prompt state between the host PowerShell and the dev PowerShell (in my case):\r\n\r\n    ![readline_bad](https://user-images.githubusercontent.com/7009879/100674111-7ed4b400-3319-11eb-9fa8-7846ec8aeb01.gif)\r\n\r\n    At this point, it's actually possible to interact with processes alternately; every second keystroke goes to the host process, so you can get two results for `$PID` in the same session\r\n\r\n- More importantly, the consolehost thread races the pipeline thread for the monitor, so the pipeline thread is able to re-enter the critical section before the consolehost is able to stop it. I'm not yet sure what the consequences are beyond general pipeline thread state corruption, but I would characterise it as unwanted behaviour.\r\n\r\n    ![stop_racecondition](https://user-images.githubusercontent.com/7009879/100675312-9319b080-331b-11eb-9735-c57c7659fd8b.gif)\r\n\r\n\r\nI think this issue is solvable, but I want to spend a little bit more time working on the solution to present one to you that I like. In particular some questions are:\r\n\r\n- How do we prevent a deadlock between the pipeline stopping and the disposal if the cleanup block tries to wait for the pipeline to stop? Does that even make sense as a scenario, or is the escape hatch higher level than that and we just need to account for it in the disposal logic (so that we can dispose *and then* stop)?\r\n- If a pipeline is stopped mid-disposal, how do we communicate that stopping failed? Or again, do we complete the cleanup block and then stop? In particular, if the pipeline is stopped from PSReadLine, how do we block the caller properly on the stop so that we don't simply proceed through the cleanup as if the stop worked?\r\n\r\nI suspect the answer to this might simply be to force the stopper to hold the lock, but that makes stopping harder. I need to think about what the actual scenarios are and whether there's more cleanup state we need to take care of.",
    "created_at": "2020-11-30T23:00:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736106568",
    "id": 736106568,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjEwNjU2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736106568/reactions"
    },
    "updated_at": "2020-11-30T23:00:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736106568",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Interesting!\r\n\r\nOkay so... I -thought- that I'd already accounted for that case, but it looks like the case where a user presses Ctrl+C during normal operation of `cleanup{}` is a bit different to hitting Ctrl+C on something that is actively asking the user for input. Very interesting, nice find! (Zero idea if there's a way to actually put together a test for that specific case though!)\r\n\r\nI think stopping the pipeline within `cleanup{}` should be essentially impossible, short of terminating pwsh entirely. If something _within_ the cleanup block triggers that in some way, I think we have two options (I prefer the first, personally):\r\n\r\n  1. It is ignored, because the purpose of `cleanup{}` is to circumvent pipeline stops to ensure critical code paths can be followed.\r\n  2. It is treated as a \"normal\" exception that occurs within `cleanup{}` and the remainder of the current cleanup block is terminated.\r\n\r\nIn this specific case where it is explicitly cancelling a specific command because the Ctrl+C is received from this input query directly (which I think is _kind of_ an unusual edge case; as far as I've been able to find, any other attempt to Ctrl+C during operation of the dispose block is successfully basically ignored until the cleanup{} script completes) I think it makes sense to treat it as an exception thrown from the Read-Host command itself and terminate the rest of the block.... maybe? 😅 ",
    "created_at": "2020-11-30T23:21:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736114430",
    "id": 736114430,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjExNDQzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736114430/reactions"
    },
    "updated_at": "2020-11-30T23:21:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736114430",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> It is ignored, because the purpose of cleanup{} is to circumvent pipeline stops to ensure critical code paths can be followed.\r\n\r\nI'd say this is most consistent with the general scenario where this will occur, which is where a hosted PowerShell runtime will have `Stop()` called on it from another thread. The `cleanup` block could be doing anything at that point, so throwing an exception could be impossible or could do anything, which is basically what we're trying to avoid.\r\n\r\nSo I think it makes sense to block the `Stop()` call on the `cleanup` block completing. The issue is then that if the `cleanup` block itself is triggering the `Stop()` call, we have a deadlock we need to resolve somehow. It might be possible for us to resolve that with a check and then throwing an exception -- that way we don't need to consider an API change...",
    "created_at": "2020-12-01T00:05:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736129093",
    "id": 736129093,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjEyOTA5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736129093/reactions"
    },
    "updated_at": "2020-12-01T00:05:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736129093",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, I'd agree there. I'm not sure of the best way to check that, though... Perhaps setting a value on the pipeline stopper which indicates which thread/runspace \"holds\" the critical section, and if Stop() is called by that same runspace/thread it either returns (no-op, allowing the `cleanup{}` block to continue?) or throws an exception (which frankly I'm not _entirely_ sure how things further up the stack would handle... but is probably OK?)\r\n\r\nHm. 🤔 ",
    "created_at": "2020-12-01T00:16:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736132575",
    "id": 736132575,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjEzMjU3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736132575/reactions"
    },
    "updated_at": "2020-12-01T00:16:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736132575",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I guess I could try to check that the same thread or runspace that's currently running cleanup{} isn't calling Stop(), but I'm not sure how I'd get at that. Any ideas? 😕",
    "created_at": "2020-12-01T23:01:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736874285",
    "id": 736874285,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNjg3NDI4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736874285/reactions"
    },
    "updated_at": "2020-12-01T23:01:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/736874285",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> If a pipeline is stopped mid-disposal, how do we communicate that stopping failed? Or again, do we complete the cleanup block and then stop? In particular, if the pipeline is stopped from PSReadLine, how do we block the caller properly on the stop so that we don't simply proceed through the cleanup as if the stop worked?\r\n\r\nThis part I'm less sure about. My inclination is that if the cleanup script _itself_ errors out normally, we should just emit that error (and currently, we do). For a straight up PipelineStoppedException as it hits in the case you raised, I'm wondering if perhaps a silent termination of that block is _okay_... it's an edge case that I'm not sure how else folks might run into, but in the majority of cases it shouldn't be possible to even hit that.\r\n\r\nPerhaps at _most_ we could rewrap the PipelineStoppedException with another exception that indicates that a stop was explicitly demanded / unavoidable during the cleanup{} operation? I can't think of any other way to handle it at the moment.",
    "created_at": "2020-12-03T19:52:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-738267591",
    "id": 738267591,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODI2NzU5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738267591/reactions"
    },
    "updated_at": "2020-12-10T01:07:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/738267591",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> How do we prevent a deadlock between the pipeline stopping and the disposal if the cleanup block tries to wait for the pipeline to stop? Does that even make sense as a scenario, or is the escape hatch higher level than that and we just need to account for it in the disposal logic (so that we can dispose and then stop)?\r\n\r\nSo there's two types of stops for the most part:\r\n\r\n1. A stop triggered via the pipeline stopper (e.g. `PowerShell.Stop` or similar)\r\n1. Inline stop triggered via a `PipelineStoppedException` throw within pipeline invocation\r\n\r\nDuring the execution of the cleanup block itself, there should only ever be the latter. It would be pretty hard for the cleanup block to actually get an object to trigger the former.  That said, in the event that it does, the lock will already be taken on that thread so it should just abort the cleanup block normally.\r\n\r\n> if the pipeline is stopped from PSReadLine, how do we block the caller properly on the stop so that we don't simply proceed through the cleanup as if the stop worked?\r\n\r\nSo if PSRL tries to stop the pipeline mid cleanup, this series of calls will happen (roughly):\r\n\r\n1. `PowerShell.Stop`\r\n1. `LocalPipeline.Stop`\r\n1. `PipelineStopper.AwaitPipelineCriticalSection`\r\n1. Block until the cleanup block exits and calls `PipelineStopper.ExitCriticalSection`\r\n1. Continue with stop\r\n\r\nI can't think of a scenario where PSRL will be on the pipeline thread, while a cleanup block is running, and want to stop the pipeline.  But if there is one it should work like the my first paragraph.",
    "created_at": "2020-12-08T15:42:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-740698218",
    "id": 740698218,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDY5ODIxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/740698218/reactions"
    },
    "updated_at": "2020-12-08T15:42:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/740698218",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "Open PRs should not be assigned to milestone, so they are not assigned to the wrong milestone after they are merged.  For backport consideration, use a `backport` label. ",
    "created_at": "2020-12-09T23:12:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-742122866",
    "id": 742122866,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjEyMjg2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742122866/reactions"
    },
    "updated_at": "2020-12-09T23:12:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/742122866",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Also, @rjmholt:\r\n\r\n> At this point, it's actually possible to interact with processes alternately; every second keystroke goes to the host process, so you can get two results for $PID in the same session\r\n\r\nFWIW I'm seeing this same behaviour from a dev build on the master branch as well; just call `Read-Host` and Ctrl+C out of it from a running dev build on the master branch.",
    "created_at": "2020-12-13T03:05:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-743940232",
    "id": 743940232,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0Mzk0MDIzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743940232/reactions"
    },
    "updated_at": "2020-12-13T03:05:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/743940232",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Is this likely to make it into 7.2?",
    "created_at": "2020-12-15T17:23:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-745440616",
    "id": 745440616,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTQ0MDYxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/745440616/reactions"
    },
    "updated_at": "2020-12-15T17:23:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/745440616",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3630329?v=4",
      "events_url": "https://api.github.com/users/doctordns/events{/privacy}",
      "followers_url": "https://api.github.com/users/doctordns/followers",
      "following_url": "https://api.github.com/users/doctordns/following{/other_user}",
      "gists_url": "https://api.github.com/users/doctordns/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/doctordns",
      "id": 3630329,
      "login": "doctordns",
      "node_id": "MDQ6VXNlcjM2MzAzMjk=",
      "organizations_url": "https://api.github.com/users/doctordns/orgs",
      "received_events_url": "https://api.github.com/users/doctordns/received_events",
      "repos_url": "https://api.github.com/users/doctordns/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/doctordns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/doctordns/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/doctordns"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That's the hope. Depends if we get the final kinks ironed out and reviews approved, I suppose. 🙂 ",
    "created_at": "2020-12-15T18:14:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-745470947",
    "id": 745470947,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NTQ3MDk0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/745470947/reactions"
    },
    "updated_at": "2020-12-15T18:14:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/745470947",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2020-12-23T02:00:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-749878991",
    "id": 749878991,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0OTg3ODk5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/749878991/reactions"
    },
    "updated_at": "2021-03-13T02:08:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/749878991",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@daxian-dbw @rjmholt @SteveL-MSFT  please let me know if more is needed. I've responded to all concerns raised as best as I can. 🙂 ",
    "created_at": "2021-03-02T23:58:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-789311139",
    "id": 789311139,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTMxMTEzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789311139/reactions"
    },
    "updated_at": "2021-03-02T23:58:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789311139",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 thanks for your continued work on this!  However, it seems that this comment is still a concern https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-736106568",
    "created_at": "2021-03-03T01:11:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-789347550",
    "id": 789347550,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTM0NzU1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789347550/reactions"
    },
    "updated_at": "2021-03-03T01:11:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789347550",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@SteveL-MSFT The behaviour Rob describes is one I see often with nested PS instances in VS Code consoles, especially when building one of them in debug mode.\r\n\r\nI see the same behaviour building off the master branch and replicating similar situations with stopping pipelines. I haven't tried in a full VS console, but I'd be surprised if this is any different.\r\n\r\nI cannot replicate the behaviour in the default pwsh console or Windows Terminal, either, with or without a debugger attached.\r\n\r\nI can only conclude either it's something to do with the terminal it's running under, or some odd interaction between pwsh and certain terminals when compiled in debug mode. Release builds do not exhibit the issue at all. In the default pwsh console, or in windows terminal, the behaviour does not surface. In VS Code (for me, at least), it surfaces both with these changes and without them.",
    "created_at": "2021-03-03T01:18:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-789350100",
    "id": 789350100,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTM1MDEwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789350100/reactions"
    },
    "updated_at": "2021-03-03T01:20:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789350100",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32, @daxian-dbw will take a look later this week",
    "created_at": "2021-03-03T01:43:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-789360080",
    "id": 789360080,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTM2MDA4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789360080/reactions"
    },
    "updated_at": "2021-03-03T01:43:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/789360080",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2021-03-10T02:00:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-794733572",
    "id": 794733572,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5NDczMzU3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/794733572/reactions"
    },
    "updated_at": "2021-03-13T02:08:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/794733572",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 I apologize for having this PR left behind for so long. I will drive the architecture and code review, and hopefully to have it in for 7.2.0-preview.5.\r\n\r\nI tried to refresh my memory today by reading the RFC, PR description, and roughly browsing through the existing comments in the PR. I had conversations with @rjmholt and @JamesWTruher to get a better understanding of the expected behaviors of the `cleanup` block, and I will also talk to @joeyaiello to understand the real case scenarios better.\r\n\r\nI will be looking into your implementation over the course of the next couple of weeks, and will be leaving comments/questions as I go. Please, bear with me 😄 ",
    "created_at": "2021-03-13T02:07:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-797848168",
    "id": 797848168,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5Nzg0ODE2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/797848168/reactions"
    },
    "updated_at": "2021-03-13T02:07:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/797848168",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Alright, let's see.\r\n> * Should the `Clean` block execution be _guaranteed_ or _best effort_? Namely:\r\n\r\nIMO the value of it existing at all goes down fairly significantly if it's not guaranteed.\r\n\r\n>   * How does it respond to Ctrl+c?\r\n\r\nNot at all, just like `finally` _should_. In fact, there are cases where `finally` will _not_ respond to Ctrl+C, and IMO the correct fix for that would be to make it properly ignore Ctrl+C. If you have an execution flow where Ctrl+C is triggered _during_ a `try` block, then the `finally` block will still run, and Ctrl+C will be ignored until that finally block is completed.\r\n\r\nThis disparity is not great. The purpose of `finally`, just like `clean`, is to guarantee that a code author can properly clean up what they're doing, to avoid the user having to shoulder the burden of leftover resources later. The ability to cancel it is kind of dangerous at best, IMO.\r\n\r\n>   * Will a terminating error from one `Clean` block stop any other named blocks (including other `Clean` blocks) in the pipeline?\r\n\r\nWill stop other named blocks, will not stop other `clean` blocks.\r\n\r\n>     * If not, how are we going to surfaces different terminating errors from multiple `Clean` blocks in the same pipeline?\r\n>     * Note that, the current implementation skips `End` blocks of the downstream commands when a `Clean` block throw terminating error.\r\n\r\nIf you mean \"what if a `clean` block throws a terminating error\", then:\r\n\r\n1. The remainder of that clean block is skipped, and\r\n2. subsequent clean blocks will be run.\r\n\r\nIn the unusual case that multiple successive clean blocks report an error, the _current_ behaviour is to display the most recent exception. All errors are still recorded in $error if the user needs to dig deeper.\r\n\r\nThis is already an improvement over the nearest comparison I can find in the .NET model; in .NET, if you have a `finally` block running due to an exception, and the `finally` block throws an exception of its own, you simply cannot find the original exception, as far as I can tell, it just disappears. In this implementation, you can still find all the exceptions.\r\n\r\n> * When will a `Clean` block run? Maybe only if at least one of the `Begin`, `Process`, and `End` blocks runs, given that it's for cleanup?\r\n>   * Think about `A | B | C`, and B's `Begin` block throws terminating error. In such case, no named blocks from `C` got to run, and thus it doesn't make sense to run the `Clean` block for `C`, right?\r\n\r\nI would agree that it doesn't make sense to run `clean` if no other blocks have been run, yeah.\r\n\r\nAs for your follow-up thoughts: \r\n\r\n> I put a lot thoughts on them and here are my 2 cents to the above questions:\r\n> \r\n> 1. `Clean` block should be defined as _**it's guaranteed to get a chance to run, but no guarantee that it will run to the end**_\r\n>    \r\n>    * _Guaranteed to get a chance to run:_\r\n>      \r\n>      * The `Clean` block will run when the normal pipeline execution was successful\r\n>      * The `Clean` block will run when the normal pipeline execution was stopped by either a terminating error or Ctrl+c\r\n>    * _No guarantee that it will run to the end:_\r\n>      \r\n>      * The `Clean` block can be stopped by Ctrl+c, just like `finally` block can be stopped by Ctrl+c today.\r\n>        \r\n>        * The end user should have the power to cancel `Clean` block execution. When Ctrl+c happens during the normal running of the pipeline (`Begin/Process/End`), the normal pipeline execution should be stopped, but `Clean` blocks get their chance to run. However, when Ctrl+c happens again while a `Clean` block is running, the `Clean` block should be stopped and the rest to-be-run `Clean` blocks should be skipped.\r\n>        * This is very similar to the current `try/finally` behavior. WhenCtrl+c happens while the `try` block is running, the `try` block execution will be stopped, but we temporarily suspend the stopping pipeline and give the `finally` block a chance to run. If Ctrl+c happens again while in `finally`, the `finally` block will be stopped.\r\n>      * The `Clean` block can be stopped by a terminating error thrown within it, but it shouldn't affect any other commands in the pipeline.\r\n\r\nI disagree that the end user should have much of any say over whether `clean` can be cancelled. The intent is to provide the author with a guarantee that critical code sections can be run, so as to save the user from rendering their own pwsh session or machine state unusable or unstable. If authors can't trust that, this simply isn't a useful addition.\r\n\r\nThe guarantee of it running without an impatient user getting in the way is kind of critically important to it being a usable feature at all. If that isn't available, this is more or less a slightly better `end` block, and we'd be better off just making `end` do this instead.\r\n\r\nThere are several folks that have voiced support on Twitter and to me personally for this feature precisely _because_ of that. If we make it cancellable, it becomes entirely useless to them as a feature. And, I suspect, useless to most folks who would otherwise find it very useful.\r\n\r\nI do like the idea of `clean` being somewhat self-contained in its own errors and not cancelling other things when it errors, though. In this case, do you think it would be better to suppress the errors, or convert them to non-terminating errors automatically so the overall pipeline isn't halted unnecessarily?\r\n\r\n> 2. How do we surface the terminating and non-terminating errors that are thrown from multiple `Clean` blocks?\r\n>    \r\n>    * Error from any `Clean` blocks should mark the pipeline execution as _failed_, even if the `Begin/Process/End` normal pipeline execution was successful.\r\n>    * For `Clean` blocks, we turn terminating error into non-terminating errors -- the terminating error will still stop the `Clean` block execution, but the exception will not be propagated up, but instead, be simply written to the error steam, somehow.\r\n\r\nAh, you pretty much answered that question then. Yeah, this should be doable. I'm not 100% sure but I _think_ emitting any errors, terminating or not, will mark the pipeline as \"failed\" automatically, so if we can figure out a way to convert the errors to non-terminating ones, we should be set.\r\n\r\n> 3. A `Clean` block should run only if any of the `Begin/Process/End` blocks from the same function got to run. No cleanup is needed when a function never got to run.\r\n\r\nAgreed, that makes sense.\r\n \r\n> Regarding to the implementation, I think `Clean` blocks should be run in batch after all `End` blocks finish. This helps to keep the execution order the same as before for the existing named blocks. If we choose to run `Clean` block right after `End` block of the same function finishes, then we are basically adding operations between this `End` block and the `End` block of the downstream function. Given that `Clean` block can run arbitrary code, this may cause subtle behavior changes to some commands.\r\n\r\nI... don't agree. Part of the hassle of pipelines in some cases is that resources from an upstream command _cannot_ be disposed early enough currently. As an offhand example, the case of `Get-Content $file | .... | Set-Content $file` (I think there may have been a specific fix for this not that long ago, actually? Don't remember if this actually currently works or not, but it didn't for a very, very long time).\r\n\r\nIf we dispose / cleanup cmdlets as soon as their `end` / `EndProcessing()` portions complete, then we don't have a need for workarounds in the case of two cmdlets sharing a pipeline needing access to the same resource.\r\n\r\n> I was mainly looking at `SynchronousExecuteEnumerate`, and I think the `Clean` blocks can run in the `finally` block, and all exception should be caught. I will do some prototype to see how it work, and push to your branch if it works as I expected.\r\n\r\n👍 sure, would love to see what you come up with!\r\n\r\n> Another thing that we should keep in our mind is to make sure the `Clean` block works well in debugger. It may just work but we need to validate that scenario thoroughly.\r\n\r\nFar as I can tell, it seems to behave as one would expect, but I'll be the first to say I haven't really used the debugger heavily in general, so would be good to get second/third opinions on it as well.",
    "created_at": "2021-03-24T20:32:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806167462",
    "id": 806167462,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjE2NzQ2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806167462/reactions"
    },
    "updated_at": "2021-03-24T21:01:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806167462",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> IMO the value of it existing at all goes down fairly significantly if it's not guaranteed.\r\n> The intent is to provide the author with a guarantee that critical code sections can be run, so as to save the user from rendering their own pwsh session or machine state unusable or unstable. If authors can't trust that, this simply isn't a useful addition.\r\n\r\nI'm concerned about making `Clean` block not interruptible, given that it could run arbitrary code. Yes, I know you already can put arbitrary code in a `Dispose` method from a binary cmdlet, but here we are talking about a feature facing script users, not C# developers exclusively.\r\n\r\nToday, `finally` does this _\"guarantee to run, but no guarantee to finish\"_ manner of operation with regard to <kbd>Ctrl+c</kbd>. Is this behavior really not sufficient?\r\n\r\nWhen I initially heard the ask for this feature in 2018, it was asking for a finally block that can cover all named blocks, so that a user can avoid enclosing each named block in `try/finally` with redundant cleanup code just to handle terminating errors thrown from any of those named blocks.\r\n\r\nSo, I'm not super sure if the \"non-interruptible\" behavior is really needed. For automation scenario, it will work fine as <kbd>Ctrl+c</kbd> is not in the picture. For the interactive scenario, if the code in a `Clean` block is concise and fast as it should be, this _\"guarantee to run but interruptible\"_ behavior should mostly work fine as well. But I would love to learn more about the real world scenarios where this is proven to be not sufficient. I will chat with @joeyaiello about this too.\r\n\r\nWhen I propose this feature to be _\"best effort\"_, I do think we should have a _\"guaranteed, but more scoped\"_ approach for users to free up the `IDisposible` resources specifically. That can be achieved by introducing a language feature similar to the `using` variables in C#, or the `with` statement in Python. Let's say we call it `with` variable given that we already have `$using:` for remoting and `using` statement for referencing a module or namespace in PowerShell. It allows you to assign a `IDisposible` object to a `with` variable, which will be automatically called `Dispose` on when it goes out of scope (when the scope where the `with` variable is declared gets removed from the scope chain).\r\n\r\nWith the _\"best effort\"_ `Clean` block and the _\"guaranteed, but more scoped\"_ `with` variables, we should be able to cover all scenarios. The `Clean` block would be semantically similar to `finally` block, providing a flexible way to free up resources, especially resources that are not guarded by a `IDisposible` object, for example, I want to clean up some Azure resources in case a terminating error thrown from my `Begin/Process/End`.\r\n\r\n> The guarantee of it running without an impatient user getting in the way is kind of critically important to it being a usable feature at all. If that isn't available, this is more or less a slightly better end block, and we'd be better off just making end do this instead.\r\n\r\nThe `End` block was originally designed to be used as a clean-up step, see [this comment](https://github.com/PowerShell/PowerShell/blob/44d450ae0e890eb904b6fadcd2ff9f37b4037c70/src/System.Management.Automation/engine/CommandBase.cs#L218-L220) as an example, but it's not been used like that since, maybe day 1 😄. I don't think we can change how `End` behaves today.\r\n\r\n> I... don't agree. Part of the hassle of pipelines in some cases is that resources from an upstream command cannot be disposed early enough currently. As an offhand example, the case of `Get-Content $file | .... | Set-Content` $file (I think there may have been a specific fix for this not that long ago, actually? Don't remember if this actually currently works or not, but it didn't for a very, very long time).\r\n\r\nIt's not clear to me how much it would help to solve that problem by running `Clean` right after each `End`. For the `Get-Content $file | .... | Set-Content` example, both `Get-Content` and `Set-Content` try to open the same file in the `Begin` block, and thus freeing the file after `End` of `Get-Content` won't help. It may help only if the conflicting resource is only used in the `End` block of the downstream functions.",
    "created_at": "2021-03-24T22:38:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806229777",
    "id": 806229777,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjIyOTc3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806229777/reactions"
    },
    "updated_at": "2021-03-24T22:38:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806229777",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I categorically disagree with having non-interruptable script _in a shell_ by default. I checked `ksh`, `bash`, `dash`, `zsh` and *all* of those shells have trap statements which are interruptable. We can have an additional discussion about a mechanism for suppressing `Crtl-C` (which I think would be reasonable - something similar to `stty intr ''`), but by default? no way.\r\n\r\nSurely, there are times when INTR has trouble percolating down to a blocked API and doesn't affect script flow until the API returns, etc, but I deem that misbehavior rather than something we should perpetuate.",
    "created_at": "2021-03-25T00:23:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806268665",
    "id": 806268665,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjI2ODY2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806268665/reactions"
    },
    "updated_at": "2021-03-25T00:23:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806268665",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I categorically disagree with having non-interruptable script _in a shell_ by default. I checked `ksh`, `bash`, `dash`, `zsh` and _all_ of those shells have trap statements which are interruptable. We can have an additional discussion about a mechanism for suppressing `Crtl-C` (which I think would be reasonable - something similar to `stty intr ''`), but by default? no way.\r\n> \r\n> Surely, there are times when INTR has trouble percolating down to a blocked API and doesn't affect script flow until the API returns, etc, but I deem that misbehavior rather than something we should perpetuate.\r\n\r\nThis isn't by default. It's an explicit opt-in functionality that the author has to intentionally provide. If they want to allow interruptions, they'd just use `end{}`. If folks had to provide an extra command just to make it non-interruptible _as well_, then we're just asking them to write extra code for the same end. The majority of cases where this would be used, I'd imagine, would just do that as well.",
    "created_at": "2021-03-25T02:12:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806308700",
    "id": 806308700,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjMwODcwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806308700/reactions"
    },
    "updated_at": "2021-03-25T02:16:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806308700",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Additional thoughts;\r\n\r\nCurrently `finally` in its existing implementation isn't quite what you describe as \"guaranteed to get a chance to run\" while also being cancellable. It has an unskippable state, which is reached if its `try` block is where the Ctrl+C was registered.\r\n\r\nSo I don't know why this is suddenly a new thing where things are unskippable by default. That already exists, it's already a feature, such as it is.\r\n\r\nI agree that having a more robust / less annoying way to deal with disposable variables is also needed, but since that's not something that has really gone anywhere in the last several years either, I'm not sure it's particularly relevant to design this feature around a feature that doesn't exist yet, and may never actually get implemented.",
    "created_at": "2021-03-25T12:27:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806647254",
    "id": 806647254,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjY0NzI1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806647254/reactions"
    },
    "updated_at": "2021-03-25T12:29:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806647254",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "At the first stage, I would not bother with any kind of interrupts at all, since even C # applications are not always able to perform cleanup. \r\nMoreover, PowerShell has so many \"leaks\" that it cannot be considered as very long-running application - you need to restart it to clear a lot of caches and free up resources.\r\n\r\nLet's implement Cleanup block simply as End block and later think about addressing more specific user scenarios.\r\nAt first I would expect the block to execute and the debugger to work.\r\n",
    "created_at": "2021-03-25T15:27:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806948930",
    "id": 806948930,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjk0ODkzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806948930/reactions"
    },
    "updated_at": "2021-03-25T15:27:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806948930",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "All that already works @iSazonov. That's not really in question here, unless someone's found an issue I haven't seen yet.",
    "created_at": "2021-03-25T15:31:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806955949",
    "id": 806955949,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNjk1NTk0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806955949/reactions"
    },
    "updated_at": "2021-03-25T15:31:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/806955949",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> This isn't by default. It's an explicit opt-in functionality that the author has to intentionally provide.\r\n\r\nBut it becomes _by default_ for the end users, yeah?\r\nPowerShell is a shell, so the fluent and responsive experience is a top priority to the end user.\r\n\r\n> Currently finally in its existing implementation isn't quite what you describe as \"guaranteed to get a chance to run\" while also being cancellable. It has an unskippable state, which is reached if its try block is where the Ctrl+C was registered.\r\n>\r\n> So I don't know why this is suddenly a new thing where things are unskippable by default. That already exists, it's already a feature, such as it is.\r\n\r\nMaybe I didn't describe the `finally` behavior clearly. By _\"guaranteed to get a chance to run\"_, I mean when the `try` block gets to run, the `finally` block is guaranteed to get a chance to run, no matter the `try` block runs to the end successfully, or it's stopped by a terminating error, or it's interrupted by <kbd>Ctrl+c</kbd>. Here is an example for the <kbd>Ctrl+c</kbd> scenario:\r\n\r\n![demo1](https://user-images.githubusercontent.com/127450/112514339-6ff39080-8d52-11eb-885d-e5d31dba3af0.gif)\r\n\r\nBy _\"but no guarantee to finish\"_, I mean the `finally` block can be interrupted by another <kbd>Ctrl+c</kbd>, for example:\r\n\r\n![demo1](https://user-images.githubusercontent.com/127450/112514927-0aec6a80-8d53-11eb-9a8a-513294f9e88b.gif)\r\n\r\nSo the `finally` block is interruptible by <kbd>Ctrl+c</kbd>, and I think the `Clean` block should be semantically the same as `finally` in this aspect.\r\n",
    "created_at": "2021-03-25T17:25:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807138679",
    "id": 807138679,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzEzODY3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807138679/reactions"
    },
    "updated_at": "2021-03-25T17:25:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807138679",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@daxian-dbw that behaviour changes if you Ctrl+C from the try and then also try to cancel the finally, is my point.\r\n\r\n```powershell\r\ntry {\r\n    1..100 | % { Write-Host $_; Start-Sleep 1 }\r\n}\r\nfinally {\r\n    Write-Host \"finally\"\r\n    1..100 | % { Write-Host $_; Start-Sleep 1 }\r\n}\r\n```\r\n\r\nIf you ctrl+c during the try block, you cannot cancel the finally block.\r\n\r\nSomewhat related: https://github.com/PowerShell/PowerShell/issues/10457",
    "created_at": "2021-03-25T17:32:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807150049",
    "id": 807150049,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzE1MDA0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807150049/reactions"
    },
    "updated_at": "2021-03-25T17:37:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807150049",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> But it becomes _by default_ for the end users, yeah?\r\n> PowerShell is a shell, so the fluent and responsive experience is a top priority to the end user.\r\n\r\nIt becomes the default if they are calling something that implements `cleanup`. This is already the case if they call something that invokes a dotnet method, or invokes one of the many binary cmdlets that don't implement `StopProcessing`, so it's not particularly surprising for the occasional command to refuse to cancel.\r\n\r\n> So the `finally` block is interruptible by Ctrl+c, and I think the `Clean` block should be semantically the same as `finally` in this aspect.\r\n\r\nTry this:\r\n\r\n```powershell\r\ntry {\r\n    Write-Host 'press ctrl + c now'\r\n    Start-Sleep 5\r\n    Write-Host 'end try'\r\n} finally {\r\n    Write-Host 'press ctrl + c again'\r\n    Start-Sleep 5\r\n    Write-Host 'end finally'\r\n}\r\n```\r\n\r\nAfter pressing it a second time in the `finally` block, the `Start-Sleep` does *not* cancel and you'll still see `end finally`.\r\n",
    "created_at": "2021-03-25T17:36:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807155251",
    "id": 807155251,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzE1NTI1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807155251/reactions"
    },
    "updated_at": "2021-03-25T17:39:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807155251",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@daxian-dbw \r\n\r\n> But I would love to learn more about the real world scenarios where this is proven to be not sufficient.\r\n\r\nIt may not seem like the risk of skipping an efficient `cleanup` block is very high, but keep in mind the majority of code that would utilize it would be module code.  Sometimes littered throughout a user's script.  The chance to accidently miss something like closing a file handle, or popping a screen buffer, or resetting a static value is too high for library code.\r\n\r\nIf it's for a module, and it's decided that `cleanup` *can* be interrupted, we'll still end up telling folks to do it in C# or not at all.",
    "created_at": "2021-03-25T17:46:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807171930",
    "id": 807171930,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzE3MTkzMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807171930/reactions"
    },
    "updated_at": "2021-03-25T17:47:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807171930",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@vexx32 Thanks for bringing up #10457, I totally missed it. I'm inclined to agree with Bruce's comment in that issue, but let me think about it more and discuss with folks in the team.\r\n\r\n@SeeminglyScience Yes, we already have cases where <kbd>Ctrl+c</kbd> doesn't respond promptly, but that doesn't justify adding more such cases. I understand it's desired to have it deterministic from a dev's perspective. However, we are facing a tradeoff in the right of control between end user and script author, and this is for interactive use only (for automation, there is no difference because <kbd>Ctrl+c</kbd> is out of the picture). So the question is more about \"does the difference between _'guaranteed'_ and _'best-effort'_ really matters practically in the interactive scenarios\".\r\n\r\n ",
    "created_at": "2021-03-25T18:31:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807244625",
    "id": 807244625,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzI0NDYyNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807244625/reactions"
    },
    "updated_at": "2021-03-25T18:31:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807244625",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> @SeeminglyScience Yes, we already have cases where Ctrl+c doesn't respond promptly, but that doesn't justify adding more such cases. I understand it's desired to have it deterministic from a dev's perspective.\r\n\r\nNot just from a dev's perspective.  As a user, if I cancel my script I want to know that the command I use for logging isn't going to leave a file locked until I close the session. I don't want to be stuck in an alternate buffer, or have some other corrupted state in an implementation detail, causing me to lose my session just because I wanted to cancel my script early.\r\n\r\n> However, we are facing a tradeoff in the right of control between end user and script author\r\n\r\nIf we force folks to use C# in these scenarios then we're going to lose more control than we'd gain as they're less likely to be able to properly implement `StopProcessing`.\r\n\r\n> and this is for interactive use only (for automation, there is no difference because Ctrl+c is out of the picture)\r\n\r\nThis is nit picky, but it's really any pipeline stop request.  I don't know of any custom hosts geared towards non-interactive use that are utilizing stops in some way, but PSES for instance uses stops for more than just <kbd>Ctrl</kbd> + <kbd>C</kbd>\r\n\r\n---\r\n\r\nReally though, as long as there is some way to delay `Stop` requests, it's not the end of the world if that just has to be added to every `cleanup` block.  I don't think it would help more than it hurts, but at least the scenario would be enabled.\r\n",
    "created_at": "2021-03-25T19:17:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807316985",
    "id": 807316985,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzMxNjk4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807316985/reactions"
    },
    "updated_at": "2021-03-25T19:17:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807316985",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Really though, as long as there is some way to delay Stop requests, it's not the end of the world if that just has to be added to every cleanup block. I don't think it would help more than it hurts, but at least the scenario would be enabled.\r\n\r\nYeah, fair... I think if the primary purpose of this block requires you use `cleanup{}` _and_ an extra command, there's probably going to be room for said command to be skipped. This requirement (guarantee a block of code will be run to clean up state, etc) is the reason this PR exists at all, and there really isn't much point for the feature if it doesn't behave as expected out of the box.",
    "created_at": "2021-03-25T20:07:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807394380",
    "id": 807394380,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzM5NDM4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807394380/reactions"
    },
    "updated_at": "2021-03-25T20:56:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807394380",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> This requirement (guarantee a block of code will be run to clean up state, etc) is the reason this PR exists at all, and there really isn't much point for the feature if it doesn't behave as expected out of the box.\r\n\r\nI would not use such terminology. This can be confusing for script and module developers that resources will be _guaranteed_ released when they are not. PowerShell doesn't track disposable resources \"by design\" for many years and this never was a critical, and what's more, the C # API may not allow resources to be released in a predictable and _guarantee_  way.\r\nSo this block is more correctly considered as another way to execute the final code.\r\nThe most expected behavior is that this block **must try** to execute if resources could have been allocated (at least one of these blocks - Begin, Process, End - started).\r\nThis means that the block must try to execute on terminating errors and stop event (Ctrl-C) and that the blog itself can be stopped by terminating errors and stop event (Ctrl-C) raised in the block.\r\nAs side notice, $item could be passed to the block with a reason (terminating or stop event/exception).\r\n",
    "created_at": "2021-03-26T06:19:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807968743",
    "id": 807968743,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwNzk2ODc0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807968743/reactions"
    },
    "updated_at": "2021-03-26T06:19:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/807968743",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This is not meant to be an automatic thing to release resources. The code must still be written to do so. But if such code cannot be guaranteed to be run without users accidentally cancelling it out of impatience, there isn't much point in writing it, is there?",
    "created_at": "2021-03-26T12:28:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-808177603",
    "id": 808177603,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODE3NzYwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808177603/reactions"
    },
    "updated_at": "2021-03-26T12:28:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808177603",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> This requirement (guarantee a block of code will be run to clean up state, etc) is the reason this PR exists at all, and there really isn't much point for the feature if it doesn't behave as expected out of the box.\r\n\r\nI don't agree with this. As I mentioned above, the very first time I heard about an ask for this, is to have a finally-like thing that covers all `Begin/Process/End` blocks, so that terminating errors thrown from any of those blocks can be handled without needing `try/finally` redundantly in those blocks with the same or similar cleanup code. So even the `Clean` block can be interrupted by <kbd>Ctrl+c</kbd>, it's meaningful and useful because it makes handling terminating errors easier for functions.\r\n\r\nWhen it comes to <kbd>Ctrl+c</kbd> and the interactive scenario, the question is _\"does the difference between 'guaranteed' and 'best-effort' really matters practically\"_. After all, the `finally` block is interruptible since it was introduced to the language, and I personally don't know of a real world scenario where it's proven to be not sufficient (of course, @joeyaiello would know better, and I will definitely discuss with him).\r\n\r\n-------------------------------------------------------------------------\r\n\r\nAs you brought up, after suspending a stopping pipeline, the `finally` block cannot be interrupted by subsequent <kbd>Ctrl+c</kbd>. From the implementation perspective, this is because `ConsoleHost` today [simply ignores the signal when it finds there is already one stopping thread on-going](https://github.com/PowerShell/PowerShell/blob/be7d36603d1cc60abd4e8e738ead8f437b7869fa/src/Microsoft.PowerShell.ConsoleHost/host/msh/ConsoleHost.cs#L410-L421), and thus the `_pipelineStopper.IsStopping` cannot be flipped back to `true`. However, in case that the stop is initiated through API `PowerShell.Stop`, then it's possible to call `PowerShell.Stop` again on a different thread to stop the finally block. Nevertheless, the behavior of `finally` with regarding to <kbd>Ctrl+c</kbd> is inconsistent today because of how `ConsoleHost` handles the signal.\r\n\r\n-----------------------------------\r\n\r\nFor now, I will put aside the discussion about how `Clean` should handle <kbd>Ctrl+c</kbd> (need some time to talk with other folks on team about it), and will focus more on how to fit the `Clean` in the code as a peer of `Begin/Process/End`.",
    "created_at": "2021-03-26T19:20:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-808458040",
    "id": 808458040,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODQ1ODA0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808458040/reactions"
    },
    "updated_at": "2021-03-26T19:20:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808458040",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> But if such code cannot be guaranteed to be run without users accidentally cancelling it out of impatience, there isn't much point in writing it, is there?\r\n\r\nWhat's worse than what's happening now could happen? :-)))\r\n\r\nYou are ignoring the fact that this is a _shell_ and it should behave like a shell as indicated above by @JamesWTruher.\r\n\r\nFor some reason, you think PowerShell users are much more stupid than script writers. Aren't they more often than not the same people? :-) And won't there be a lot of modules in which this block will be used incorrectly and work so badly that it should be interrupted?\r\n\r\nAgain, there is no guarantee that resources will be freed, _even in C#_. The situation is even worse in PowerShell. In fact, this has not been a tragedy for many years. The formulated problem looks rather contrived.\r\n\r\n",
    "created_at": "2021-03-26T19:20:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-808458263",
    "id": 808458263,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODQ1ODI2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808458263/reactions"
    },
    "updated_at": "2021-03-26T19:20:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808458263",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I am really +1 to both @vexx32 and @SeeminglyScience points here in that `cleanup` should really not be user interruptible. The whole purpose of this block is to cleanup any resources that need to be and the best person who knows what needs to be done is the script author not the end user. I don't think that I can add any more arguments to what they've already provided except that I agree with their points and believe the benefits outweigh the disadvantages. I still think having the `cleanup` block is a really nice feature that I would love to use, I just don't think that it should be somewhat muzzled in functionality like `finally` is.\r\n\r\nThe main argument I can see here for being able to interrupt this with ctrl+c is that PowerShell is a shell and that everything should be cancel-able. Why is this argument being applied to a script function and not to binary cmdlets. Using the example in https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-807155251 we can see that binary modules just plain ignore ctrl+c normally.\r\n\r\n```powershell\r\nAdd-Type -OutputAssembly MyModule.dll -TypeDefinition @'\r\nusing System;\r\nusing System.Management.Automation;\r\nusing System.Threading;\r\n\r\nnamespace MyModule\r\n{\r\n    [Cmdlet(\"Test\" , \"Cmdlet\")]\r\n    public class TestCmdletCommand : PSCmdlet\r\n    {\r\n        protected override void EndProcessing()\r\n        {\r\n            try\r\n            {\r\n                Console.WriteLine(\"press ctrl + c\");\r\n                Thread.Sleep(5000);\r\n                Console.WriteLine(\"end try\");\r\n            }\r\n            finally {\r\n                Console.WriteLine(\"press ctrl + c again\");\r\n                Thread.Sleep(5000);\r\n                Console.WriteLine(\"end finally\");\r\n            }\r\n        }\r\n    }\r\n}\r\n'@\r\n\r\n$module = 'MyModule'\r\n$manifestSplat = @{\r\n    Path              = 'MyModule.psd1'\r\n    NestedModules     = @('MyModule.dll')\r\n    FunctionsToExport = @('Test-Cmdlet')\r\n}\r\nNew-ModuleManifest @manifestSplat\r\n\r\nImport-Module .\\MyModule.psd1\r\n\r\nTest-Cmdlet\r\n```\r\n\r\nIf the argument is that people who are writing binary modules should know what they are doing and thus not create situations where this occurs then I feel you are wrong. I've seen varying qualities in both PowerShell scripts and compiled code, just because something is written in C# doesn't mean it's better quality code. What about running a process that hooks into ctrl+c and completely ignores the signal that is sent to it causing the shell to hang anyway. Removing this functionality due to the risk of poor programming just seems wrong and is hampering good functionality without addressing the problem at hand.\r\n\r\nOne of the reasons why I avoid binary cmdlets is because I dislike having to deal with compiling code, shipping multiple dlls, being harder to debug as easily, and not not being able to unload an assembly. Script functions are so much simpler to write and definitely has a lower barrier for entry. By having this feature you are in fact making it possible to write better script functions now that they can cleanup resources they open in some of the more exceptional cases.\r\n\r\nUltimately this is a really nice feature to have and if the powers that be wish to make it interruptible I would be disappointed but still excited to be able to use the `cleanup` block.",
    "created_at": "2021-03-27T05:22:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-808658481",
    "id": 808658481,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODY1ODQ4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808658481/reactions"
    },
    "updated_at": "2021-03-27T05:22:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808658481",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks for your input @jborean93!\r\n\r\nSorry for making this a bit long; it's hard to keep things short when it feels like there are multiple ongoing conversations at once, but I have tried to keep each bit as brief as I could manage.\r\n\r\nI think to some degree the conversation here really boils down to this point:\r\n\r\n> When it comes to Ctrl+C and the interactive scenario, the question is \"does the difference between 'guaranteed' and 'best-effort' really matter practically\"\r\n\r\nAnd there isn't really one answer, there's a few.\r\n\r\n- For automation scenarios: the difference is largely nonexistent, except if the automation platform supports halting the running session abruptly.\r\n- For interactive scenarios, working with functions that may be handling IO handles, COM objects, alternate screen buffers, certain disposable objects (which may be better served by a separate, more targeted solution)... the difference can matter quite a bit.\r\n\r\n---\r\n\r\nThe other point being discussed here is concerns around letting folks run non-interruptible code. Most of the counterpoints here make it sound like a non-interruptible section of code is an exceptional case. At least in my experience using PowerShell, it's really not unusual at all. Ctrl+C is never as responsive as we'd all like, I'm sure. For me this really boils down to two points:\r\n\r\n1. Ignoring Ctrl+C isn't really that rare anyway, and\r\n2. In my opinion, having some form of provision for these use cases is exceedingly useful overall, even if the total number of cases where it's strictly required is not immensely high.\r\n\r\nIf `cleanup{}` doesn't provide a guarantee that necessary code will be run, I think folks that need that to work will simply turn back to using their C# solutions as Patrick mentioned and their code will end up blocking anyway, so those concerns are a bit moot to me. If folks want to block the pipeline to get things done, they can and will do it regardless. This simply enables them to do it in a bit less haphazard manner than they'd otherwise need to use.\r\n\r\n---\r\n\r\n@iSazonov \r\n\r\n> Again, there is no guarantee that resources will be freed, even in C#. **The situation is even worse in PowerShell.** In fact, this has not been a tragedy for many years. The formulated problem looks rather contrived.\r\n\r\n(emphasis is mine)\r\n\r\nThat's precisely why I wrote the code this way and spent all the effort making it a bit easier to handle from PowerShell. As you say, the situation in PowerShell for properly cleaning up resources or state, is quite a bit worse than C# at the moment. This provides an avenue to rectifying that disparity.\r\n\r\nWhether or not you think it's a problem largely depends on the kinds of code you interact with on a daily basis. Perhaps our spheres of operation are a bit far apart here, but I tend to end up moving to C# because PowerShell simply doesn't provide what I'm looking for these days.",
    "created_at": "2021-03-28T03:00:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-808836016",
    "id": 808836016,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwODgzNjAxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808836016/reactions"
    },
    "updated_at": "2021-03-28T14:19:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/808836016",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "I don't have much to add beyond strongly echoing @vexx32 here. This is a feature that makes dealing with things that require deterministic cleanup in PowerShell significantly easier than it is currently. Making it interruptible greatly limits the utility of the feature, to the point that I'm not sure I can think of a case where we'd actually employ it. It would become one more PowerShell feature that would require a nuanced explanation to people who are unfamiliar with PowerShell's numerous idiosyncrasies. The cognitive load of all these gotchas is such that it is extraordinarily difficult to teach anyone, from an experienced .NET developer to a sysadmin dabbling in some scripting, how to do anything in a robust and reliable way in PowerShell. All these efforts to make bad code (e.g. a cleanup block that did some huge amount of work and would block an interactive shell for a meaningful amount of time) have fewer negative consequences end up making it fantastically difficult to write good code.\r\n\r\nIt's far easier to explain \"ctrl+c doesn't interrupt cleanup, so be careful about what you do there\" to someone than it is to explain that \"you shouldn't use cleanup unless your scenario is one where interrupting cleanup may be OK, consider the implications of that at any point in your whole function\".",
    "created_at": "2021-03-30T17:32:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-810444858",
    "id": 810444858,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMDQ0NDg1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/810444858/reactions"
    },
    "updated_at": "2021-03-30T17:32:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/810444858",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3004040?v=4",
      "events_url": "https://api.github.com/users/mattpwhite/events{/privacy}",
      "followers_url": "https://api.github.com/users/mattpwhite/followers",
      "following_url": "https://api.github.com/users/mattpwhite/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattpwhite/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mattpwhite",
      "id": 3004040,
      "login": "mattpwhite",
      "node_id": "MDQ6VXNlcjMwMDQwNDA=",
      "organizations_url": "https://api.github.com/users/mattpwhite/orgs",
      "received_events_url": "https://api.github.com/users/mattpwhite/received_events",
      "repos_url": "https://api.github.com/users/mattpwhite/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mattpwhite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattpwhite/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mattpwhite"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2021-04-07T02:00:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-814545794",
    "id": 814545794,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDU0NTc5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/814545794/reactions"
    },
    "updated_at": "2021-04-20T16:53:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/814545794",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> For now, I will put aside the discussion about how `Clean` should handle <kbd>Ctrl+c</kbd> (need some time to talk with other folks on team about it), and will focus more on how to fit the `Clean` in the code as a peer of `Begin/Process/End`.\r\n\r\nI now have the prototype for an alternative design available at #15177. It's been rebased to the master, with all existing tests passed. The major change is around 2 aspects:\r\n1. Moved the invocation of `Clean` out of `Dispose`, and added a pass in `SynchronousExecuteEnumerate` to execute `Clean` blocks after the pipeline execution is done.\r\n   - So the `Clean` blocks run after all `End` blocks finish when the pipeline execution was successful, which is different from the design in this PR that tries to run a command's `Clean` right after its `End` is done.\r\n   - It's absolutely doable to run a command's `Clean` right after its `End`, but I didn't do it in my prototype for 2 reasons: (1) it introduces more complexity; (2) the benefit is not clear to me. The quote below is from my early response to this topic in https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-806229777:\r\n\r\n       >> I... don't agree. Part of the hassle of pipelines in some cases is that resources from an upstream command cannot be disposed early enough currently. As an offhand example, the case of `Get-Content $file | .... | Set-Content` $file (I think there may have been a specific fix for this not that long ago, actually? Don't remember if this actually currently works or not, but it didn't for a very, very long time).\r\n      >\r\n      >It's not clear to me how much it would help to solve that problem by running `Clean` right after each `End`. For the `Get-Content $file | .... | Set-Content` example, both `Get-Content` and `Set-Content` try to open the same file in the `Begin` block, and thus freeing the file after `End` of `Get-Content` won't help. It may help only if the conflicting resource is used only in the `End` block of the downstream functions.\r\n\r\n2. Focused on the error handling of the `Clean` block. The proposal is captured in details at https://github.com/PowerShell/PowerShell/pull/15177#issue-610252489, and is implemented in the prototype. Any feedback to this proposal is welcome.\r\n\r\nThe prototype doesn't do anything about <kbd>Ctrl+c</kbd> handling, since we don't yet have an agreement there. I haven't gone through all needed changes in steppable pipeline yet. We will need the committee's review on the error handling proposal, and if it is accepted, the next step will be writing a lot tests for the error handling. Also, we will need the committee's review on <kbd>Ctrl+c</kbd> handling as well.",
    "created_at": "2021-04-09T20:51:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-816964687",
    "id": 816964687,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxNjk2NDY4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/816964687/reactions"
    },
    "updated_at": "2021-04-09T23:27:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/816964687",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2021-05-08T14:00:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-835375206",
    "id": 835375206,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNTM3NTIwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835375206/reactions"
    },
    "updated_at": "2021-05-08T14:00:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/835375206",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMaintainer, please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2021-09-23T02:01:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-925454063",
    "id": 925454063,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "IC_kwDOAvT7bc43KU7v",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/925454063/reactions"
    },
    "updated_at": "2021-09-23T02:01:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/925454063",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This PR was superseded by PR #15177, which was merged, so closing this PR. Again, thanks @vexx32 for the initial hard work!",
    "created_at": "2021-10-14T09:28:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/9900#issuecomment-943180439",
    "id": 943180439,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9900",
    "node_id": "IC_kwDOAvT7bc44N8qX",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/943180439/reactions"
    },
    "updated_at": "2021-10-14T09:28:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/943180439",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  }
]
