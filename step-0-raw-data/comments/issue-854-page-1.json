[
  {
    "author_association": "MEMBER",
    "body": "I think I understand why you added _ClrFacade.Load_ in the first place -- you try to make the assemblies loaded by CoreCLR runtime to appear in our assembly cache.\nPowerShell resolves a type by going through the loaded assemblies in the current AppDomain, and search those assemblies one by one to find the specified type. However, CoreCLR doesn't provide an API to show the list of loaded assemblies. All assemblies in the TPA list are considered to be _logically_ loaded, but only CoreCLR runtime decides when any of them will actually be loaded. This is one of the reason why we need to handle the assembly resolution and loading.\n",
    "created_at": "2016-04-15T18:00:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-210566198",
    "id": 210566198,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDU2NjE5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210566198/reactions"
    },
    "updated_at": "2016-04-15T18:00:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210566198",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@daxian-dbw Yes, that is precisely correct. I think the better solution would be to explicitly add the PowerShell assemblies to the cache (and analyze them for types), without needing to force the assemblies through the `AssemblyLoadContext`.\n\nWhat's more, _all_ of this can go away if we can get #733 resolved, which requires .NET Core moving to resolve dotnet/corefx#1784. I think the _real_ solution is for .NET Core to add `GetAssemblies` back, rather than force a lot of partners to work around it.\n\nAn additional resolution could come from .NET Core following @davidfowl's advice [here](https://github.com/dotnet/cli/issues/490#issuecomment-171720303) and make the TPA list unspecial.\n\nNote in dotnet/cli#2044 that the `corehost` is designed to place all app-local assemblies in the TPA; but then loading them by path is [blocked by design](https://github.com/dotnet/cli/issues/490#issuecomment-171484156) as well.\n",
    "created_at": "2016-04-15T19:16:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-210604016",
    "id": 210604016,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDYwNDAxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210604016/reactions"
    },
    "updated_at": "2016-04-15T19:16:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210604016",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I feel it would be a long shot waiting for CoreCLR team to bring back those APIs. There are two options to fix the issue in our current design:\n1. change _PowerShellAssemblyLoadContext.cs_ so that it loads all powershell assemblies that are included in TPA list and put them in cache at its initialization time\n2. change _powershell.inc_ to make it also contain types from powershell assemblies that are included in TPA list\n\nThe first option will diverge _PowerShellAssemblyLoadContext.cs_ between _PowerShell Core from repo_ and _NanoServer PowerShell_. And also, loading assemblies on demand is alwasys better to load a bunch at the init time, which would slow down the startup.\n\nI like the second option better. It basically treats everything in the TPA list as TPA assemblies. Type resolution for powershell types will happen in the same way as resolving CoreCLR library types before.\n",
    "created_at": "2016-04-15T20:38:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-210636288",
    "id": 210636288,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDYzNjI4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210636288/reactions"
    },
    "updated_at": "2016-08-18T00:00:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210636288",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> change PowerShellAssemblyLoadContext.cs so that it loads all powershell assemblies that are included in TPA list and put them in cache at its initialization time\n\nCan this work? .NET is explicitly designed to prevent re-loading those assemblies.\n\n> change powershell.inc to make it also contain types from powershell assemblies that are included in TPA list\n\nI suggested this a while back, but you were gone and I went with \"they don't belong\" :smile:.  This is totally a reasonable approach I think. But will this affect the analysis of the assemblies for cmdlets?\n\nBy the way, please take a look at the [TypeCatalogParser](https://github.com/PowerShell/PowerShell/tree/master/src/TypeCatalogParser) I use to generate a `powershell.inc` from the project dependencies.\n",
    "created_at": "2016-04-15T21:01:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-210645016",
    "id": 210645016,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY0NTAxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210645016/reactions"
    },
    "updated_at": "2016-04-15T21:01:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210645016",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Can this work? .NET is explicitly designed to prevent re-loading those assemblies.\n\n I think this will work. You should be able to load an assembly using Assembly.Load over and over again. CoreCLR runtime probably has a cache containing all loaded TPAs, so it won't actually be a re-loading.\n\n> But will this affect the analysis of the assemblies for cmdlets?\n\nI don't think this will affect analysis of cmdlets from the powershell assemblies. We always try Assembly.Load first to load those powershell assemblies, and in this case CoreCLR runtime will handle the loading properly.\n",
    "created_at": "2016-04-15T21:16:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-210649158",
    "id": 210649158,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY0OTE1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210649158/reactions"
    },
    "updated_at": "2016-04-15T21:16:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210649158",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The _TypeCatalogParser_ is great. So we can make the change very specific to OneCore PowerShell without affecting Nano PS at all.\n",
    "created_at": "2016-04-15T21:27:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-210652464",
    "id": 210652464,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDY1MjQ2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210652464/reactions"
    },
    "updated_at": "2016-04-15T21:27:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/210652464",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Unfortunately a lot of discussion moved to email, I will try to summarize:\n\n> The correct approach to transition to building a .NET Core App that relies on SharedFX is to use the .NET CLI. -- Guarav\n\nThis requires moving to depend on Microsoft.NETCore.App instread of the NETStandard.Library; however, it is _only_ available for RC2, so a few things need to be done, see #862.\n",
    "created_at": "2016-04-18T18:44:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-211521394",
    "id": 211521394,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTUyMTM5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211521394/reactions"
    },
    "updated_at": "2016-04-18T18:44:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211521394",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> For each assembly enumerated, perform a Assembly.Load for it. Since the assembly would be listed in the TPAbinder, but not yet loaded, Assembly.Load will load it and return the reference that you can use.\n\nThis is actually suggesting the option#1:\n\n> change PowerShellAssemblyLoadContext.cs so that it loads all powershell assemblies that are included in TPA list and put them in cache at its initialization time.\n",
    "created_at": "2016-04-18T23:30:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-211630145",
    "id": 211630145,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYzMDE0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211630145/reactions"
    },
    "updated_at": "2016-04-18T23:30:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211630145",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@daxian-dbw Yes, that's what @gkhanna79 recommended. I have not yet received a response to our plan of action in the email thread. If you think we should go a different route, let's decide that before the work is done.\n",
    "created_at": "2016-04-18T23:40:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-211634149",
    "id": 211634149,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYzNDE0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211634149/reactions"
    },
    "updated_at": "2016-04-18T23:40:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211634149",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I'm still not sure what the \"Share Framework\" approach is and what it implies. If you have any links or docs, please share them with me :)\nBut I'm fine with the option#1 because after some more throughts, I feel it's hard to pursue option#2 as we are building powershell assemblies and we cannot feed them to TypeCatalogGen to generate the list of types before they get builit. So that leaves option#1 the only option.\nI know we are not targeting this goal for now, but the perfect solution would be we own the native host.\n",
    "created_at": "2016-04-18T23:48:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-211636141",
    "id": 211636141,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYzNjE0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211636141/reactions"
    },
    "updated_at": "2016-04-18T23:48:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211636141",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> I'm still not sure what the \"Share Framework\" approach is and what it implies. If you have any links or docs, please share them with me :)\n\nThere are no docs! I'm working on integrating it right now based on examples and discussions across the .NET projects (welcome to .NET Core!).\n\nThe shared framework is just that: sharing the .NET Core framework with other apps. Meaning we consume the installed framework instead of shipping our own. We originally planned to do this once RTM hit, but it appears to be possible sooner.\n\n> But I'm fine with the option#1 because after some more throughts, I feel it's hard to pursue option#2 as we are building powershell assemblies and we cannot feed them to TypeCatalogGen to generate the list of types before they get builit. So that leaves option#1 the only option.\n\nI think I agree here. The latter is possible, but wonky.\n\n> I know we are not targeting this goal for now, but the perfect solution would be we own the native host.\n\nI respectfully disagree. I think owning the native host is only a work-around that incurs a high maintenance cost and completely abandons the point of the .NET Core ecosystem (with .NET CLI and shared framework). We should build on top of and utilize .NET Core's work.\n",
    "created_at": "2016-04-18T23:53:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-211637044",
    "id": 211637044,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTYzNzA0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211637044/reactions"
    },
    "updated_at": "2016-04-18T23:53:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211637044",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> I respectfully disagree. I think owning the native host is only a work-around that incurs a high maintenance cost and completely abandons the point of the .NET Core ecosystem (with .NET CLI and shared framework). We should build on top of and utilize .NET Core's work.\n\nIt certainly would be great if we don't need to have our native host, but from what I know so far, there is no elegant solution to our problem -- requirement for support of advanced assembly resolution. Option#1 is a hack, loading a bunch assemblies at the startup time is just bad.\n\nBased on my understanding, we owning the native host would be the most clean solution unless .NET Core can provide one of the followings to us:\n1. Allow us to flexibly configure the native host to only contain Fx assemblies as TPAs and take&set a specified ACL implementation before calling into our entry point.\n2. Bring back all those assembly resolution APIs.\n\nI think the former is a reasonable ask to them.\n",
    "created_at": "2016-04-19T00:13:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-211643210",
    "id": 211643210,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY0MzIxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211643210/reactions"
    },
    "updated_at": "2016-04-19T00:13:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/211643210",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Closing until I have this work completed.\n",
    "created_at": "2016-05-06T17:03:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-217499763",
    "id": 217499763,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzQ5OTc2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/217499763/reactions"
    },
    "updated_at": "2016-05-06T17:03:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/217499763",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "There are [docs](https://dotnet.github.io/docs/core-concepts/app-types.html) now on the shared framework.\n",
    "created_at": "2016-05-20T23:37:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/854#issuecomment-220742502",
    "id": 220742502,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/854",
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMDc0MjUwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/220742502/reactions"
    },
    "updated_at": "2016-05-20T23:37:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/220742502",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2226434?v=4",
      "events_url": "https://api.github.com/users/andschwa/events{/privacy}",
      "followers_url": "https://api.github.com/users/andschwa/followers",
      "following_url": "https://api.github.com/users/andschwa/following{/other_user}",
      "gists_url": "https://api.github.com/users/andschwa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/andschwa",
      "id": 2226434,
      "login": "andschwa",
      "node_id": "MDQ6VXNlcjIyMjY0MzQ=",
      "organizations_url": "https://api.github.com/users/andschwa/orgs",
      "received_events_url": "https://api.github.com/users/andschwa/received_events",
      "repos_url": "https://api.github.com/users/andschwa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/andschwa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andschwa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/andschwa"
    }
  }
]
