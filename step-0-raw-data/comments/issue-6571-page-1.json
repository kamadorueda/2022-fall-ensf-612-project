[
  {
    "author_association": "CONTRIBUTOR",
    "body": "Read-Host and prompting for a choice are generally discouraged in favor of using parameter features. In that light, I think it's ok for prompting for a choice be a little more work to encourage the use of parameters instead.",
    "created_at": "2018-04-07T04:11:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6571#issuecomment-379430616",
    "id": 379430616,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6571",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTQzMDYxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379430616/reactions"
    },
    "updated_at": "2018-04-07T04:11:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379430616",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7864621?v=4",
      "events_url": "https://api.github.com/users/KevinMarquette/events{/privacy}",
      "followers_url": "https://api.github.com/users/KevinMarquette/followers",
      "following_url": "https://api.github.com/users/KevinMarquette/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinMarquette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KevinMarquette",
      "id": 7864621,
      "login": "KevinMarquette",
      "node_id": "MDQ6VXNlcjc4NjQ2MjE=",
      "organizations_url": "https://api.github.com/users/KevinMarquette/orgs",
      "received_events_url": "https://api.github.com/users/KevinMarquette/received_events",
      "repos_url": "https://api.github.com/users/KevinMarquette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KevinMarquette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinMarquette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KevinMarquette"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Read-Host and prompting for a choice are generally discouraged in favor of using parameter features.\r\n\r\nPerhaps. Even so, there are definitely times where you need to prompt for more than a single value.  And when I show colleagues what you have to do in PowerShell to implement that, I hang my head in shame.  Same as when I show them what a function has to do to \"really\" handle path parameters.  This should be addressed IMO.  Perhaps using \"parameterset\" features of `Read-Host`?",
    "created_at": "2018-04-08T16:28:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6571#issuecomment-379562959",
    "id": 379562959,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6571",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU2Mjk1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379562959/reactions"
    },
    "updated_at": "2018-04-14T02:52:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379562959",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "The choice Feature was there ever since PowerShell and will be stay (forever) i think, because it is console the native runtime Environment of PowerShell.\r\nSo i think it makes no sense to discuss the existence or if it makes sense or can be replaced by other technics. It is there.\r\n\r\nin my Point of view we discuss here to make a little Babystep. The question of showing such a hidden gem on the Frontdoor or leave it hidden.\r\nFor me the decision was already made, because Read-Host is there and Write-Host has even a few use cases.\r\n\r\nTo put it inside Read-Host is to put it from one hidden place to another, better then nothing because it is implemented.\r\nI think coice is too Feature rich to hide it inside Read-Host\r\n",
    "created_at": "2018-04-09T08:39:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6571#issuecomment-379677892",
    "id": 379677892,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6571",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTY3Nzg5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379677892/reactions"
    },
    "updated_at": "2018-04-09T08:39:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/379677892",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1510464?v=4",
      "events_url": "https://api.github.com/users/Kriegel/events{/privacy}",
      "followers_url": "https://api.github.com/users/Kriegel/followers",
      "following_url": "https://api.github.com/users/Kriegel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kriegel/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Kriegel",
      "id": 1510464,
      "login": "Kriegel",
      "node_id": "MDQ6VXNlcjE1MTA0NjQ=",
      "organizations_url": "https://api.github.com/users/Kriegel/orgs",
      "received_events_url": "https://api.github.com/users/Kriegel/received_events",
      "repos_url": "https://api.github.com/users/Kriegel/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Kriegel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kriegel/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Kriegel"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@KevinMarquette:\r\n\r\nWhile it's a good idea to take full advantage of the parameter \"plumbing\" in general, that is a separate issue from _building friendly user interfaces_, notably _for non-PS-savvy users_.\r\n\r\nA `Read-Choice` cmdlet, or an extended `Read-Host` cmdlet, as @rkeithhill  suggests, would be in support of the latter scenario.\r\n\r\n---\r\n\r\nAs an aside: The current parameter-\"plumbing\" UX leaves much to be desired and deserves improving in its own right; e.g., try the following:\r\n\r\n```powershell\r\n& { param([ValidateSet('one', 'two', 'three')] [parameter(Mandatory)] [string] $Foo )\r\n```\r\n\r\n* There is no tab completion, and no hint as to what the valid values are.\r\n* Punishment for providing an invalid value is swift: the command is instantly aborted.\r\n\r\nPersonally, given the poor - and broken (#7093, #4068) - \r\n UX, I instantly terminate an unexpected-by-me prompt resulting from accidentally not supplying an argument to a mandatory parameter, and I never use the feature _intentionally_.\r\n\r\n\r\n\r\n",
    "created_at": "2018-05-28T20:15:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6571#issuecomment-392597061",
    "id": 392597061,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6571",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjU5NzA2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/392597061/reactions"
    },
    "updated_at": "2019-04-20T18:18:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/392597061",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Read-Choice would also be mockable with Pester...https://stackoverflow.com/q/57698737/9660\n\n<blockquote><img src=\"https://cdn.sstatic.net/Sites/stackoverflow/img/apple-touch-icon@2.png?v=73d79a89bded\" width=\"48\" align=\"right\"><div>Stack Overflow</div><div><strong><a href=\"https://stackoverflow.com/questions/57698737/how-do-i-mock-host-ui-promptforchoice-with-pester\">How do I mock $host.ui.PromptForChoice with Pester</a></strong></div><div>Considering the below Powershell code, is there a way to mock $host.ui.PromptForChoice without the internalMenuWrapper function?\n\n&lt;#\n    .Synopsis\n        wrap the menu so we can mock calls to i...</div></blockquote>",
    "created_at": "2019-08-29T17:46:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6571#issuecomment-526290952",
    "id": 526290952,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6571",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjI5MDk1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/526290952/reactions"
    },
    "updated_at": "2019-08-29T17:46:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/526290952",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/101746?v=4",
      "events_url": "https://api.github.com/users/daveneeley/events{/privacy}",
      "followers_url": "https://api.github.com/users/daveneeley/followers",
      "following_url": "https://api.github.com/users/daveneeley/following{/other_user}",
      "gists_url": "https://api.github.com/users/daveneeley/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daveneeley",
      "id": 101746,
      "login": "daveneeley",
      "node_id": "MDQ6VXNlcjEwMTc0Ng==",
      "organizations_url": "https://api.github.com/users/daveneeley/orgs",
      "received_events_url": "https://api.github.com/users/daveneeley/received_events",
      "repos_url": "https://api.github.com/users/daveneeley/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daveneeley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daveneeley/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daveneeley"
    }
  }
]
