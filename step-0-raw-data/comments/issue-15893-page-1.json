[
  {
    "author_association": "COLLABORATOR",
    "body": "> I called a PowerShell executable at a PowerShell prompt. So I do not expect an intermediary DOS exec call with it's native command line syntax, which has significant differences. Some cases could even not be realized due to the partially contrary/non-compatible specifications.\r\n\r\nIs this a PowerShell issue or a Windows one? I don't know of any way to invoke a process on WIndows while bypassing the typical command line syntax. ðŸ¤· \r\n\r\nAlso, looking at the other issues you filed, the problem you're seeing looks just about the same between all of them, with only slight differences in how it presents, so I'm not sure what you're hoping to achieve other than confusing folks by filing them all separately. ðŸ˜• ",
    "created_at": "2021-08-09T13:13:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895211973",
    "id": 895211973,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41W9nF",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895211973/reactions"
    },
    "updated_at": "2021-08-09T13:19:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895211973",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "The main confusion of the input and result are:\r\n```\r\nPS> .\\pwsh.exe -noprofile -executionpolicy bypass -file  X:\\print_argv_list.ps1  \"\\\"\"a\"\r\n['\"a']\r\n```\r\nBecause the backslash is not defined by the PowerShell syntax specification as escape character, see *escaped-character*. But the backtick only.\r\n\r\nI don't know how the internal call structure is. So I cannot say where the internal issue for the call is.\r\n\r\nThe only thing I know here is that the backslash is defined by DOS/cmd.exe as an in-quote escape character. Because the caret does not work within double quotes.\r\n```\r\nC:\\Python371>python.exe -c \"import sys;print(sys.argv[1:])\" \"^\"a\"\r\n['^a']\r\n\r\nC:\\Python371>python.exe -c \"import sys;print(sys.argv[1:])\" \"\\\"a\"\r\n['\"a']\r\n\r\nC:\\Python371>\r\n```\r\nThus I assume that a DOS based evaluation and execution is proceeded.\r\n\r\nI tried some calls for example with DOS based escaping, but failed due to the required biased quotes of the PowerShell, thus was not able to pass all my trial strings through to the DOS based call. Therefore I had to add even in the above call an extra double quote.\r\n```\r\n\"\\\"a\" => \"\\\"\"a\"\r\n```\r\nTherefore I did not managed to pass e.g. the following string  due to the non-balanced double qoute error of the PowerShell:\r\n```\r\n\"^\"a\"\r\n```\r\nThe alternative:\r\n```\r\n'^\"a'\r\n```\r\npassed, but did not work as expected.\r\n\r\nThis is why I assume that a simple update of the specification will eventually not suffice for all scenarios.\r\n",
    "created_at": "2021-08-09T13:39:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895231196",
    "id": 895231196,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41XCTc",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895231196/reactions"
    },
    "updated_at": "2021-08-09T13:39:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895231196",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Therefore I did not managed to pass e.g. the following string due to the non-balanced double qoute error of the PowerShell\r\n\r\n```powershell\r\n PS > pwsh -f .\\1.ps1 '^\"\"\"a'\r\n['^\"a']\r\n\r\n PS > gc .\\1.ps1\r\n\"['$args']\"\r\n```",
    "created_at": "2021-08-09T16:28:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895365143",
    "id": 895365143,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41XjAX",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895365143/reactions"
    },
    "updated_at": "2021-08-09T16:28:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895365143",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/78153320?v=4",
      "events_url": "https://api.github.com/users/237dmitry/events{/privacy}",
      "followers_url": "https://api.github.com/users/237dmitry/followers",
      "following_url": "https://api.github.com/users/237dmitry/following{/other_user}",
      "gists_url": "https://api.github.com/users/237dmitry/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/237dmitry",
      "id": 78153320,
      "login": "237dmitry",
      "node_id": "MDQ6VXNlcjc4MTUzMzIw",
      "organizations_url": "https://api.github.com/users/237dmitry/orgs",
      "received_events_url": "https://api.github.com/users/237dmitry/received_events",
      "repos_url": "https://api.github.com/users/237dmitry/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/237dmitry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/237dmitry/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/237dmitry"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "There are multiple levels you need to take into account that aren't specifically PowerShell related.\r\n\r\n* PowerShell's parser to create a string\r\n  * If running in PowerShell itself and you want to create a string you need to abide by the parsing rules\r\n  * That is single quotes/doubles quotes as per https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_quoting_rules?view=powershell-7.1\r\n  * This logic is about creating a string object in PowerShell for use elsewhere\r\n  * This is basically how does PowerShell treat `\"abc\"` vs `'abc'` vs `'\"abc\"'` and so on\r\n* PowerShell's logic when calling a native executable\r\n  * This is the logic that PowerShell uses to convert the arguments that it sees when invoking a native binary\r\n  * e.g. `my.exe $arg1 \"arg2\" ...`\r\n  * It essentially reads each value as positional arguments and generates a list of strings to then pass to the native API\r\n  * On Windows there is no native API to invoke an executable with a list of arguments so PowerShell has logic to convert that list to a single string\r\n  * There are numerous issues around this https://github.com/PowerShell/PowerShell/issues/1995\r\n  * 7.2 is implementing some features that try to make this easier to deal with some some of this logic is on shifting ground\r\n  * In a general sense on Windows, PowerShell will enclose an argument in double quotes but it does not escape the inner double quotes if present\r\n  * `my.exe foo \"bar hello\" '{\"foo\": \"bar\"}'` becomes the following command line value `my.exe foo \"bar hello\" \"{\"foo\": \"bar\"}\"`\r\n* The platforms logic when setting argv of the new process\r\n  * Linux has a native API to start a process with a list of arguments so this is quite simple\r\n  * Windows on the other hand has https://docs.microsoft.com/en-us/archive/blogs/twistylittlepassagesallalike/everyone-quotes-command-line-arguments-the-wrong-way\r\n  * E.g. Windows treats `\"` as a way to escape whitespace chars and `\\\"` as a way to have a literal double quote\r\n* The new process' logic when reading argv\r\n  * A process could use the argv passed into it or it could have it's own rules and just reads the command line string directly\r\n  * There's nothing much PowerShell can do about this as the behaviour is entirely up to the binary being called\r\n\r\nUsing my example above say you were to do the following in PowerShell (on Windows at least)\r\n\r\n```powershell\r\n$nativeArgs = @('argument1', \"argument 2\")\r\n$bar = \"value 123\"\r\n\r\nmy.exe $nativeArgs foo \"bar $bar\" '{\"foo\": \"$bar\"}'\r\n```\r\n\r\nWhat happens is the following:\r\n\r\n* PowerShell parses the line `$nativeArgs ...` and creates an array of strings based on the standard PowerShell quoting rules\r\n* PowerShell parses the line `my.exe ...` and sees it is calling a native binary and it has positional arguments\r\n* These positional arguments are read just like positional arguments to a cmdlet and are flattened down to 2 array\r\n  * `$nativeArgs` already contains an array of strings so no extra parsing there - becomes the args `arguments1`, `argument 2`\r\n  * `foo` is a bare positional argument and is treated as a string - becomes the arg `foo`\r\n  * `\"bar $bar\"` is a double quoted value so is treated as a string and embedded vars are \"templated\" in - becomes the argument `bar value 123`\r\n  * `'{\"foo\": \"$bar\"}'` is a string value inside single quotes so no variable templating applies - becomes the argument `{\"foo\": \"$bar\"}`\r\n* PowerShell takes the list of arguments and wraps them in double quotes if they contain whitespace (space/newline/etc)\r\n  * `argument1` has no space so is kept as `argument1`\r\n  * `argument 2` has a space so it's changed to `\"argument 2\"`\r\n  * `foo` has no space so is kept as `foo`\r\n  * `bar value 123` has a space so it's changed to `\"bar value 123\"`\r\n  * `{\"foo\": \"$bar\"}` has a space so it's changed to `\"{\"foo\": \"$bar\"}\"`\r\n* The list of arguments are added together with spaces and invoked on the C API\r\n  * The command becomes `\"my.exe\" argument1 \"argument 2\" foo \"bar value 123\" \"{\"foo\": \"$bar\"}\"`\r\n* Now the native binary starts and goes to read the command line\r\n  * It either uses the standard Windows rules as defined in https://docs.microsoft.com/en-us/archive/blogs/twistylittlepassagesallalike/everyone-quotes-command-line-arguments-the-wrong-way\r\n  * Or it ignores all that, reads the full command line as a string and parses it in it's own way\r\n* For the first everything works fine until it gets to `\"{\"foo\": \"$bar\"}\"`\r\n  * The argument here ultimately becomes `{foo: $bar}` which is obviously not correct\r\n  * To fix this in PowerShell you would have to escape the inner double quotes manually and do `my.exe $nativeArgs foo \"bar $bar\" '{\\\"foo\\\": \\\"$bar\\\"}'`\r\n  * Escaping for this uses `\\\"` as the escaping happens in this layer and not PowerShell\r\n  * This is the type of things that are targeted towards fixing in 7.2\r\n  * The key thing to note here is the escaping done here is not escaping for PowerShell but rather escaping for this layer\r\n  * Essentially the escaping logic for PowerShell doesn't apply\r\n* For the 2nd there's no golden rule - it's entirely up to the underlying application\r\n\r\nUltimately there is no one size fits all and it's made complex by the many different layers that are involved\n\n<blockquote><img src=\"https://docs.microsoft.com/media/logos/logo-powershell-social.png\" width=\"48\" align=\"right\"><div><strong><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_quoting_rules\">about Quoting Rules - PowerShell</a></strong></div><div>Describes rules for using single and double quotation marks in PowerShell.</div></blockquote>\n<blockquote><div><strong><a href=\"https://docs.microsoft.com/en-us/archive/blogs/twistylittlepassagesallalike/everyone-quotes-command-line-arguments-the-wrong-way\">Everyone quotes command line arguments the wrong way</a></strong></div></blockquote>",
    "created_at": "2021-08-09T20:00:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895500862",
    "id": 895500862,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41YEI-",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895500862/reactions"
    },
    "updated_at": "2021-08-09T20:00:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895500862",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "@237dmitry\r\nI tried to pass the string literal:\r\n```\r\n^\"a\r\n```\r\nto the native layer with the expected literal result - from the native layer:\r\n```\r\n\"a\r\n```\r\nWhich may have a different call context than the call of a native PowerShell script - see also @jborean93.\r\n\r\nAnyhow, this was just a simple trial to understand the instances of the call chain.\r\n",
    "created_at": "2021-08-10T02:48:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895686468",
    "id": 895686468,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41YxdE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895686468/reactions"
    },
    "updated_at": "2021-08-10T02:48:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895686468",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jborean93\r\nThanks for the comprehensive description. This is exactly the challange.\r\n\r\nMy focus on the syntax specification in external code like Python is matched in particular by:\r\n>The new process' logic when reading argv\r\n>\r\n>    A process could use the argv passed into it or it could have it's own rules and just reads the command line string directly\r\n\r\nThis is what I am scanning/lexing/tokenizing online and offline - argv and/or any complete or partial command line string. Therefore I require in particular the complete normative information about quoting and escaping.\r\n\r\nSpoken in terms of this issue - the missing parts of the syntax specification: \r\n- The resulting syntax of native calls requires [PowerShell-7.1 - B. Grammar](https://docs.microsoft.com/en-us/powershell/scripting/lang-spec/chapter-15?view=powershell-7.1) plus the syntax specification of the ~~native~~ *native platform subprocess* call environment. The latter seems basically not available.\r\n\r\n- The syntax of the ~~native~~ *native platform subprocess* layer should be at least referenced by the PowerShell specification. See \r\n[PowerShell-7.1 - C. References](https://docs.microsoft.com/en-us/powershell/scripting/lang-spec/chapter-16?view=powershell-7.1)\r\n",
    "created_at": "2021-08-10T04:26:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895719105",
    "id": 895719105,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41Y5bB",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895719105/reactions"
    },
    "updated_at": "2021-08-10T06:00:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895719105",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32\r\nThe issues are related all to the command line processing and the call of external subprocesses, in particular Python based.\r\nBut target actually different issues:\r\n\r\n- #15888: \r\n  Split into argv - I guess within calling PowerShell.\r\n- #15889: \r\n  Consistency of single and double quotes - where this does not matter - I guess within calling PowerShell.\r\n- #15892: \r\n  Escape behaviour - I guess within calling PowerShell for PowerShell interpreter and subprocess caller.\r\n- #15893: \r\n  Finally the requirement of the complete normative syntax specification for the native PowerShell interpreter as well as subprocess environments. With additional parsers as these require their own quoting/escaping embedded into the same call, but are different from the syntax of the PowerShell.\r\n\r\nThe tasks themself are a bit confusing, therefore I separated them in order to clearly distinguish and define the concrete issues case by case.\r\n",
    "created_at": "2021-08-10T06:01:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-895751759",
    "id": 895751759,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41ZBZP",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895751759/reactions"
    },
    "updated_at": "2021-08-10T06:03:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/895751759",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5156136?v=4",
      "events_url": "https://api.github.com/users/ArnoCan/events{/privacy}",
      "followers_url": "https://api.github.com/users/ArnoCan/followers",
      "following_url": "https://api.github.com/users/ArnoCan/following{/other_user}",
      "gists_url": "https://api.github.com/users/ArnoCan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ArnoCan",
      "id": 5156136,
      "login": "ArnoCan",
      "node_id": "MDQ6VXNlcjUxNTYxMzY=",
      "organizations_url": "https://api.github.com/users/ArnoCan/orgs",
      "received_events_url": "https://api.github.com/users/ArnoCan/received_events",
      "repos_url": "https://api.github.com/users/ArnoCan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ArnoCan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ArnoCan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ArnoCan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "This issue has been treated pretty extensively in https://github.com/PowerShell/PowerShell/issues/1995.\r\n\r\nThere's also discussion in https://github.com/PowerShell/PowerShell/issues/13068.\r\n\r\nEssentially, from https://github.com/PowerShell/PowerShell/issues/1995#issuecomment-251192254, the Windows process creation API requires the command line as a single string rather than an array, and then parses that with [`CommandLineToArgvW`](https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-commandlinetoargvw). This all means that PowerShell is forced to either make a breaking change in how it parses the command line or propagate bad transformations through the .NET and Windows APIs.\r\n\r\nGiven the extensive discussion of this in pre-existing issues, I'll mark this and the other issues as duplicates of #1995.",
    "created_at": "2021-08-12T15:23:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-897731675",
    "id": 897731675,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41gkxb",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/897731675/reactions"
    },
    "updated_at": "2021-08-12T15:23:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/897731675",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as duplicate and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-08-13T17:00:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15893#issuecomment-898598414",
    "id": 898598414,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15893",
    "node_id": "IC_kwDOAvT7bc41j4YO",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/898598414/reactions"
    },
    "updated_at": "2021-08-13T17:00:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/898598414",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
