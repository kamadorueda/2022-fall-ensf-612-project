[
  {
    "author_association": "COLLABORATOR",
    "body": "> Just like re-executing `Add-Type` for a snippet of C# code that has not changed reloading a module that uses classes should also continue to work--even if a script file that contains the [unmodified] class has changed.\r\n\r\nA couple of questions on the expectations of the change:\r\n\r\n- Which `SessionState` (module) would you expect it to be bound to?\r\n- Would you expect all static properties to remain unchanged or would you expect them reinitialized to default and for static constructors to be reinvoked?\r\n- If you have a static constructor that changes module state, would you expect the new module instance to reflect those changes?",
    "created_at": "2021-02-23T03:30:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14884#issuecomment-783851402",
    "id": 783851402,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14884",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4Mzg1MTQwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/783851402/reactions"
    },
    "updated_at": "2021-02-23T17:39:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/783851402",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> Which SessionState (module) would you expect it to be bound to?\r\n\r\nThe new one. (The old version of the module is effectively gone, replaced by force-importing the updated version.)\r\n\r\n> Would you expect all static properties to remain unchanged or would you expect them reinitialized to default and for static constructors to be reinvoked?\r\n\r\nReinitialized to default; static constructors re-invoked.\r\n\r\n> If you have a static constructor that changes module state, would you expect the new module instance to reflect those changes?\r\n\r\nYes.\r\n\r\nIn other words, I expect force-importing the module to be [nearly*] equivalent to just importing that version of the module in a session where no previous version had been loaded. (*of course that does not apply to global session state)",
    "created_at": "2021-02-23T05:52:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14884#issuecomment-783928791",
    "id": 783928791,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14884",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzkyODc5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/783928791/reactions"
    },
    "updated_at": "2021-02-23T05:52:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/783928791",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> > Just like re-executing Add-Type for a snippet of C# code\r\n\r\nI should add that yes, I understand my expectations for C# code are not quite the same as for PowerShell classes. I think this is simply fallout from the fact that C# classes added via `Add-Type` are not tied to session state, but are necessarily global. This is due to limitations of .NET (can't unload the type when a module is unloaded, for example).\r\n\r\nBecause C# classes are effectively global state, that means they continue to work just fine when the module is reloaded. It is true that static constructors are not re-run when the module is re-imported, so if I were storing state in C# static members, I would have to understand that these would be tied to global session state, not module (and therefore state from before the reload could be around afterward). But for PowerShell classes (a first-class, built-in thing), if they are going to be tied to the module, then they should be tied to the module, and continue to work, even when the module is reloaded.",
    "created_at": "2021-02-23T06:11:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14884#issuecomment-783936765",
    "id": 783936765,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14884",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MzkzNjc2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/783936765/reactions"
    },
    "updated_at": "2021-02-23T06:11:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/783936765",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> But for PowerShell classes (a first-class, built-in thing), if they are going to be tied to the module, then they should be tied to the module, and continue to work, even when the module is reloaded.\r\n\r\nI should clarify that they *do* work when reloaded, the difference is largely in design.  `using module` is a parse time concept where `Import-Module` is a runtime concept.  It's possible that this could be made to work in *very* specific situations by reusing the type definition and manually reinitializing everything *only* when `Import-Module -Force` is used.\r\n\r\nThat's a pretty big work item with a lot of risk but I can't quickly see why it'd be impossible.  Though the situations where that is feasible would be pretty limited, so for a user outside of this thread it would be challenging to figure out why it's working sometimes and failing others.",
    "created_at": "2021-02-23T16:49:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14884#issuecomment-784343394",
    "id": 784343394,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14884",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDM0MzM5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/784343394/reactions"
    },
    "updated_at": "2021-02-23T17:39:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/784343394",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I should clarify that they do work when reloaded\r\n\r\nSorry, I don't mean to be obtuse, but: the point of this Issue is that they demonstrably do NOT work when reloaded (see the repro steps). I am not sure where our miscommunication is... can you please clarify?",
    "created_at": "2021-02-23T17:27:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14884#issuecomment-784369747",
    "id": 784369747,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14884",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDM2OTc0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/784369747/reactions"
    },
    "updated_at": "2021-02-23T17:27:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/784369747",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Sorry, I don't mean to be obtuse, but: the point of this Issue is that they demonstrably do NOT work when reloaded (see the repro steps). I am not sure where our miscommunication is... can you please clarify?\r\n\r\nAhh I see, this is different from the issue you linked as none of it is exposed outside the module.  Type is probably cached in the AST and not correctly invalidated. Outside of function signatures (parameter types, attributes, etc) it'll work with forced reloads though.\r\n\r\nI went ahead and hid my other comments as outdated, thanks for the correction.",
    "created_at": "2021-02-23T17:43:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14884#issuecomment-784380876",
    "id": 784380876,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14884",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDM4MDg3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/784380876/reactions"
    },
    "updated_at": "2021-02-23T20:25:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/784380876",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
