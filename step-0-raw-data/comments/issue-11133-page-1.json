[
  {
    "author_association": "COLLABORATOR",
    "body": "I think it is expected as -ErrorAction SilentlyContinue behavior.",
    "created_at": "2019-11-20T17:12:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11133#issuecomment-556119713",
    "id": 556119713,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11133",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjExOTcxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556119713/reactions"
    },
    "updated_at": "2019-11-20T17:12:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556119713",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\n* Stderr output doesn't belong in PowerShell's error stream, because it cannot be assumed to represent _errors_ - that's why it prints straight to the host by default.\r\n\r\n* Using `2>$null` should mean: _discard_ stderr output. That it would _then_ show up in `$Error` is certainly not the intent.\r\n\r\n* That stderr output goes through the error stream with redirection `2>`  is also highly problematic with respect to suddenly being subject to `$ErrorActionPreference = 'Stop'` - see #4002.\r\n\r\nProviding an easy way to collect stderr lines is the subject of #4332.\r\n\r\n\r\n",
    "created_at": "2019-11-20T17:25:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11133#issuecomment-556134628",
    "id": 556134628,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11133",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjEzNDYyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 1,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556134628/reactions"
    },
    "updated_at": "2019-11-20T17:25:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556134628",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Logically standard error output belongs in PowerShell's output stream because because that's where executables write their errors. Unfortunately over the years more and more *NIX binaries use stderr for a bunch of things that have nothing to do with errors. This is annoying and unfortunate. PowerShell's output stream is strongly typed so whatever gets written into it has to get wrapped in an `ErrorRecord` unlike the subprocess pipe which is just an undifferentiated stream of bytes so you get very different behavior. (Wrapping the output into an error object is also important because that's how `Out-Default` demultiples the merged output stream.)\r\n\r\n> That it would then show up in $Error is certainly not the intent.\r\n\r\nIt most certainly *is* the intent, specifically $error is intended to be an in-memory log of *all* the errors that occur during execution, suppressed or not. It's purpose, like any error log, is to allow forensic analysis of the execution.\r\n\r\n> That stderr output goes through the error stream with redirection 2> is also highly problematic\r\n\r\nI didn't understand this statement. WRT the linked issue, errors are either exceptions (terminating errors) or something written to the error stream (non-terminating errors.) `-ErrorAction Stop` changes a non-terminating error into a terminating error. Thus error action only applies to things being written to the error stream.. Consequently, if you redirect the error stream to the output stream, the error action preference no longer has any effect.",
    "created_at": "2019-11-21T03:59:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11133#issuecomment-556909528",
    "id": 556909528,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11133",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjkwOTUyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556909528/reactions"
    },
    "updated_at": "2019-11-21T03:59:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/556909528",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\n> Unfortunately over the years more and more *NIX binaries use stderr for a bunch of things that have nothing to do with errors. This is annoying and unfortunate.\r\n\r\nThe root problem is that native programs only have _2_ output streams at their disposal: stdout and stderr.\r\nThis is an unfortunate limitation, which PowerShell - commendably - has overcome _in its own realm_.\r\n\r\nGiven this limitation, native programs have no choice but to write anything that isn't _data_ to stderr, lest they pollute the data output stream (stdout).\r\nIt is a longstanding practice that is the best approach within the confines of the stated limitation.\r\n\r\nBecause the presence of stderr output can therefore _not_ be assumed to represent error conditions, PowerShell's console host's default behavior is the right approach:\r\n\r\n* print stderr lines to the host\r\n* do not record stderr lines in `$Error`\r\n\r\n_If needed_, stderr output can be targeted selectively with a `2>` redirection; currently, aside from `2>$null` discussed below, you can only redirect to a _file_; it would be nice to have an analog to `-ErrorVariable` for capturing stderr lines in a _variable_, which is what #4332 proposes.\r\n\r\n----\r\n\r\n> It most certainly _is_ the intent, specifically `$error` is intended to be an in-memory log of all the errors that occur during execution, suppressed or not.\r\n\r\nAs explained above, for good reasons that doesn't apply to _stderr_ output, which is passed through to the host.\r\n\r\nThat it would suddenly apply when you use `2>$null` to explicitly signal the intent to _discard_ stderr can't be anyone's intent, least of all the user's.\r\n\r\n---\r\n\r\n> Thus error action only applies to things being written to the error stream.. \r\n\r\nNot only should `2>$null` not touch the error stream at all, that a redirection designed to _discard_ the stream's output, would  - situationally, based on `$ErrorActionPreference` - trigger aborting execution as if it were _writing_ to the error stream is obviously the opposite of the user's intent.\r\n\r\nEven with true error stream output from PowerShell commands `2>$null` is currently broken:\r\n\r\n* Like `-ErrorAction SilentlyContinue` it still records the error in `$Error` (which I think is problematic - see below).\r\n\r\n* Unlike `-ErrorAction SilentlyContinue` (or `-ErrorAction Ignore`), it unexpectedly throws a runspace-terminating error when `$ErrorActionPreference = 'Stop'` happens to be in effect:\r\n\r\n```powershell\r\n$ErrorActionPreference = 'Stop'\r\n\r\n# OK: No error output, but $Error is still populated.\r\nGet-Item /NoSuch -ErrorAction SilentlyContinue\r\n\r\n# Kaboom! A runspace-terminating error occurs.\r\nGet-Item /NoSuch 2>$null\r\n```\r\n\r\nEven if `2>$null` were made fully equivalent to `-ErrorAction SilentlyContinue`, it seems like the wrong way to go.\r\n\r\nThe syntax `2>$null` clearly suggests the intent to _discard_ the error stream's output (as its native cousins `2>/dev/null` and `2>NUL` do), and should therefore be the equivalent of `-ErrorAction Ignore`.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-11-22T16:31:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11133#issuecomment-557600892",
    "id": 557600892,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11133",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzYwMDg5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557600892/reactions"
    },
    "updated_at": "2019-11-22T16:31:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/557600892",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Closed in favor of https://github.com/PowerShell/PowerShell/issues/3996#issuecomment-666495478",
    "created_at": "2020-08-02T15:53:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11133#issuecomment-667691095",
    "id": 667691095,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11133",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzY5MTA5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/667691095/reactions"
    },
    "updated_at": "2020-08-02T15:53:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/667691095",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
