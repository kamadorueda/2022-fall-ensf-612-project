[
  {
    "author_association": "COLLABORATOR",
    "body": "I'd almost call this expected behaviour. The default .ToString() behaviour is to return the class name, which is what will happen here in this binding...\r\n\r\nI do agree that if there's a better type match under an alias name that it should still be selected though. üëç \r\n\r\nNot sure if it qualifies as a bug, but the handling here could absolutely be improved. üòÑ ",
    "created_at": "2019-06-03T13:36:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9804#issuecomment-498259615",
    "id": 498259615,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9804",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODI1OTYxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498259615/reactions"
    },
    "updated_at": "2019-06-03T13:36:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498259615",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'd say it's not expected, because what's the point of a `[string]` type annotation if _anything_ goes (because _everything_ can be `ToString()`ed).\r\n\r\nEven if you say that it should be coerced, you can't even force the string to not get chosen through `ValidatePattern()` - the parameter will still be bound and then fail validation with an error, instead of picking the other property that would pass.",
    "created_at": "2019-06-03T14:03:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9804#issuecomment-498270101",
    "id": 498270101,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9804",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODI3MDEwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498270101/reactions"
    },
    "updated_at": "2019-06-03T14:03:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498270101",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah, that's fair. The logic probably wasn't coded with the expectation that there would be multiple properties that could possibly match, some of which having different types than required.",
    "created_at": "2019-06-03T14:05:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9804#issuecomment-498271156",
    "id": 498271156,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9804",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODI3MTE1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498271156/reactions"
    },
    "updated_at": "2019-06-03T14:06:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/498271156",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "Something similar has hit me, and I think it's more likely than at first indicated by the OP.  Consider:\r\n\r\n```\r\nfunction ProcessString {[cmdletbinding()]Param([Parameter(ValueFromPipeline, ValueFromPipelineByPropertyName)] [string]$p) process { write-host \"p value <$p>, type $($p.gettype())\"}}\r\nfunction ProcessInt    {[cmdletbinding()]Param([Parameter(ValueFromPipeline, ValueFromPipelineByPropertyName)] [int]$p)    process { write-host \"p value <$p>, type $($p.gettype())\"}}\r\nfunction ProcessObject {[cmdletbinding()]Param([Parameter(ValueFromPipeline, ValueFromPipelineByPropertyName)] $p)         process { write-host \"p value <$p>, type $($p.gettype())\"}}\r\n```\r\nThen we'll feed those by pipeline value and propertyname:\r\n```\r\n> '123', 123, [pscustomobject]@{p=123}, [pscustomobject]@{p='123'} | ProcessObject\r\np value <123>, type string\r\np value <123>, type int\r\np value <@{p=123}>, type System.Management.Automation.PSCustomObject\r\np value <@{p=123}>, type System.Management.Automation.PSCustomObject\r\n```\r\nThat's expected, but a small gotcha to remember that the whole custom object can be coerced to string and value bound. There's a way out of course by typing the argument:\r\n```\r\n> '123', 123, [pscustomobject]@{p=123}, [pscustomobject]@{p='123'} | ProcessInt\r\np value <123>, type int\r\np value <123>, type int\r\np value <123>, type int\r\np value <123>, type int\r\n```\r\nThat's expected by type coercion and selection of the propertyname\r\n```\r\n> '123', 123, [pscustomobject]@{p=123}, [pscustomobject]@{p='123'} | ProcessString\r\np value <123>, type string\r\np value <123>, type string\r\np value <@{p=123}>, type string\r\np value <123>, type string\r\n```\r\nThat's surprising. The difference between the by value binding and the by property name binding seems wrong. There's been an \"accidental\" string coercion of the whole `pscustomobject` before the parameter binder spotted the potential property binding.\r\n\r\nIn the end I had to write a `ArgumentTransformationAttribute` to beat the awkward coercion. That cast the `[object]` via `[string][int]` which allowed:\r\n\r\n```\r\nfunction ProcessId {[cmdletbinding()]Param([Parameter(ValueFromPipeline, ValueFromPipelineByPropertyName)] [Id()]  $p) process { write-host \"p value <$p>, type $($p.gettype())\"}}\r\n\r\n> '123', 123, [pscustomobject]@{p=123}, [pscustomobject]@{p='123'} | ProcessId\r\np value <123>, type string\r\np value <123>, type string\r\np value <123>, type string\r\np value <123>, type string\r\n```\r\n\r\n(This did have a side-advantage that I could extract any `int`-like value from an incoming string-like object, so all was not lost)\r\n",
    "created_at": "2020-06-30T15:58:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9804#issuecomment-651887200",
    "id": 651887200,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9804",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MTg4NzIwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/651887200/reactions"
    },
    "updated_at": "2020-06-30T15:58:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/651887200",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26512373?v=4",
      "events_url": "https://api.github.com/users/wisemoth/events{/privacy}",
      "followers_url": "https://api.github.com/users/wisemoth/followers",
      "following_url": "https://api.github.com/users/wisemoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/wisemoth/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/wisemoth",
      "id": 26512373,
      "login": "wisemoth",
      "node_id": "MDQ6VXNlcjI2NTEyMzcz",
      "organizations_url": "https://api.github.com/users/wisemoth/orgs",
      "received_events_url": "https://api.github.com/users/wisemoth/received_events",
      "repos_url": "https://api.github.com/users/wisemoth/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/wisemoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wisemoth/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/wisemoth"
    }
  }
]
