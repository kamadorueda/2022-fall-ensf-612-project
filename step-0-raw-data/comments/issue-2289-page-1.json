[
  {
    "author_association": "MEMBER",
    "body": "I don't think doing that by default is a good idea. Writing objects to the pipe while measuring would change how that script block performs.\n\nYou might think we could turn off the stopwatch while writing objects to downstream pipes, but downstream code that isn't measured could still have a significant impact on the code being measured. \n\nFormat and output is not always efficient. It may allocate a lot of memory. We could trigger garbage collection in ways that make measuring the performance of the script block harder.\n\nGiven this, I think it's reasonable to require `Out-Host` if you really want to measure the impact of formatting.\n",
    "created_at": "2016-09-17T16:07:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-247785001",
    "id": 247785001,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc4NTAwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/247785001/reactions"
    },
    "updated_at": "2016-09-17T18:24:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/247785001",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "All that is true and why we wouldn't want to change the default behavior but it seems reasonable to have a SWITCH parameter would would enable this.  \nI've wanted to do this myself a number of times.\n",
    "created_at": "2016-09-17T17:36:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-247792292",
    "id": 247792292,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc5MjI5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/247792292/reactions"
    },
    "updated_at": "2016-09-17T17:36:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/247792292",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6188114?v=4",
      "events_url": "https://api.github.com/users/jpsnover/events{/privacy}",
      "followers_url": "https://api.github.com/users/jpsnover/followers",
      "following_url": "https://api.github.com/users/jpsnover/following{/other_user}",
      "gists_url": "https://api.github.com/users/jpsnover/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jpsnover",
      "id": 6188114,
      "login": "jpsnover",
      "node_id": "MDQ6VXNlcjYxODgxMTQ=",
      "organizations_url": "https://api.github.com/users/jpsnover/orgs",
      "received_events_url": "https://api.github.com/users/jpsnover/received_events",
      "repos_url": "https://api.github.com/users/jpsnover/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jpsnover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jpsnover/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jpsnover"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@be5invis it would be great if you can provide more details, i.e. the motivation example.\n\nMy best guess is that request is not about a downstream pipeline, but about native commands. \n\n``` powershell\nMeasure-Command { ping ya.ru }\n```\n\ncurrently, the output of ping is collected and not passed down.\n\nThe reason I think that's the request is because the original title said STDOUT and STDERR, so I immediately think about native executables.\n\nUPD: note that stderr is already behaves as requested, and the behavior for stdout can be achived with \n\n``` powershell\nMeasure-Command { ping ya.ru | Write-Host }\n```\n",
    "created_at": "2016-09-17T17:56:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-247793839",
    "id": 247793839,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc5MzgzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/247793839/reactions"
    },
    "updated_at": "2016-09-17T18:02:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/247793839",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/816680?v=4",
      "events_url": "https://api.github.com/users/vors/events{/privacy}",
      "followers_url": "https://api.github.com/users/vors/followers",
      "following_url": "https://api.github.com/users/vors/following{/other_user}",
      "gists_url": "https://api.github.com/users/vors/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vors",
      "id": 816680,
      "login": "vors",
      "node_id": "MDQ6VXNlcjgxNjY4MA==",
      "organizations_url": "https://api.github.com/users/vors/orgs",
      "received_events_url": "https://api.github.com/users/vors/received_events",
      "repos_url": "https://api.github.com/users/vors/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vors/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vors"
    }
  },
  {
    "author_association": "NONE",
    "body": "So something like a `-PassThru` parameter? In that case it's probably beneficial to enable some way of writing the measurement results to a variable somehow, lest they are to appear with the output of the measured command (which would kinda defy the purpose).\n",
    "created_at": "2016-09-19T20:04:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-248107837",
    "id": 248107837,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODEwNzgzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/248107837/reactions"
    },
    "updated_at": "2016-09-19T20:04:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/248107837",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1692688?v=4",
      "events_url": "https://api.github.com/users/ygra/events{/privacy}",
      "followers_url": "https://api.github.com/users/ygra/followers",
      "following_url": "https://api.github.com/users/ygra/following{/other_user}",
      "gists_url": "https://api.github.com/users/ygra/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ygra",
      "id": 1692688,
      "login": "ygra",
      "node_id": "MDQ6VXNlcjE2OTI2ODg=",
      "organizations_url": "https://api.github.com/users/ygra/orgs",
      "received_events_url": "https://api.github.com/users/ygra/received_events",
      "repos_url": "https://api.github.com/users/ygra/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ygra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ygra/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ygra"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Measure-Command takes ValueFromPipeline. So the general approach is:\n\n``` powershell\n1,2,3,4,5 | where { largescriptblock } | foreach {...}\n1,2,3,4,5 | measure-command -MeasureVariable outArray  -PipeExpression { where {largescriptblock} } | foreach {...}\n```\n",
    "created_at": "2016-11-02T12:08:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-257846657",
    "id": 257846657,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Nzg0NjY1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/257846657/reactions"
    },
    "updated_at": "2016-11-02T12:08:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/257846657",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "A vote to including the output as a standard operation. I'd suggest we're over-focusing on the timing, and losing the context of what's being attempted. I've got a series of commands I'd like to time, because \"something isn't looking right\". If I don't have the output, I can't tell what's happening that might have caused a delay. While I appreciate measuring might further add to the amount of time, it's what we need to be useful. Please don't make me do some fancy stream output. Really, I just want my command to be wrapped with a start time, and end time, with the execution time. Perhaps put the timings in a green color.\r\nmeasure-command {docker build} -o true -h \"docker build\"\r\n-o true meaning enable the output\r\n-h is a header that gets included in the output\r\nThe other SteveL (SteveLas-MSFT)",
    "created_at": "2018-01-16T21:52:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-358119860",
    "id": 358119860,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODExOTg2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/358119860/reactions"
    },
    "updated_at": "2018-01-16T21:52:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/358119860",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7647382?v=4",
      "events_url": "https://api.github.com/users/SteveLasker/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveLasker/followers",
      "following_url": "https://api.github.com/users/SteveLasker/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveLasker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveLasker",
      "id": 7647382,
      "login": "SteveLasker",
      "node_id": "MDQ6VXNlcjc2NDczODI=",
      "organizations_url": "https://api.github.com/users/SteveLasker/orgs",
      "received_events_url": "https://api.github.com/users/SteveLasker/received_events",
      "repos_url": "https://api.github.com/users/SteveLasker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveLasker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveLasker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveLasker"
    }
  },
  {
    "author_association": "NONE",
    "body": "Guys, you must be joking. Without showing the stdout and stderr while measuring, this command is largely useless. For a moment I rejoiced I finally found a way to measure a command execution time native to Windows, only to find that I cannot use it. I need to see the output of a command. I can hardly think of use cases where I would want to suppress  stdout and stderr. This is just madness. Please, bring the output back to screen.",
    "created_at": "2018-11-30T06:40:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-443107234",
    "id": 443107234,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzEwNzIzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 10,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 10,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/443107234/reactions"
    },
    "updated_at": "2018-11-30T06:40:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/443107234",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15246045?v=4",
      "events_url": "https://api.github.com/users/dobsa/events{/privacy}",
      "followers_url": "https://api.github.com/users/dobsa/followers",
      "following_url": "https://api.github.com/users/dobsa/following{/other_user}",
      "gists_url": "https://api.github.com/users/dobsa/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dobsa",
      "id": 15246045,
      "login": "dobsa",
      "node_id": "MDQ6VXNlcjE1MjQ2MDQ1",
      "organizations_url": "https://api.github.com/users/dobsa/orgs",
      "received_events_url": "https://api.github.com/users/dobsa/received_events",
      "repos_url": "https://api.github.com/users/dobsa/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dobsa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dobsa/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dobsa"
    }
  },
  {
    "author_association": "NONE",
    "body": "@dobsa: Not that I disagree, but `Measure-Command { <command> | Write-Host }` as suggested by @vors is imho good enough (but really needs to be documented).",
    "created_at": "2019-08-13T11:16:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-520793642",
    "id": 520793642,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDc5MzY0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/520793642/reactions"
    },
    "updated_at": "2019-08-13T11:16:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/520793642",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/43199315?v=4",
      "events_url": "https://api.github.com/users/Mike-Devel/events{/privacy}",
      "followers_url": "https://api.github.com/users/Mike-Devel/followers",
      "following_url": "https://api.github.com/users/Mike-Devel/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mike-Devel/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Mike-Devel",
      "id": 43199315,
      "login": "Mike-Devel",
      "node_id": "MDQ6VXNlcjQzMTk5MzE1",
      "organizations_url": "https://api.github.com/users/Mike-Devel/orgs",
      "received_events_url": "https://api.github.com/users/Mike-Devel/received_events",
      "repos_url": "https://api.github.com/users/Mike-Devel/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Mike-Devel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mike-Devel/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Mike-Devel"
    }
  },
  {
    "author_association": "NONE",
    "body": "A better idea is ` | Out-Default` as it will not affect unicode symbols unlike `| Write-Host`. And it's already in the docs apparently! \r\n\r\nI've sent a PR to make it easier to find there: https://github.com/MicrosoftDocs/PowerShell-Docs/pull/4783",
    "created_at": "2019-09-12T08:56:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-530732687",
    "id": 530732687,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDczMjY4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/530732687/reactions"
    },
    "updated_at": "2019-09-12T08:56:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/530732687",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1836172?v=4",
      "events_url": "https://api.github.com/users/kojoru/events{/privacy}",
      "followers_url": "https://api.github.com/users/kojoru/followers",
      "following_url": "https://api.github.com/users/kojoru/following{/other_user}",
      "gists_url": "https://api.github.com/users/kojoru/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kojoru",
      "id": 1836172,
      "login": "kojoru",
      "node_id": "MDQ6VXNlcjE4MzYxNzI=",
      "organizations_url": "https://api.github.com/users/kojoru/orgs",
      "received_events_url": "https://api.github.com/users/kojoru/received_events",
      "repos_url": "https://api.github.com/users/kojoru/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kojoru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kojoru/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kojoru"
    }
  },
  {
    "author_association": "NONE",
    "body": "A better default is to dispaly output on screen without the need so specify `| Out-Default` or `| Write-Host`. In most of the cases you want to see the output, not to suppress it.",
    "created_at": "2019-09-12T09:23:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-530742686",
    "id": 530742686,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDc0MjY4Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/530742686/reactions"
    },
    "updated_at": "2019-09-12T09:23:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/530742686",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/658865?v=4",
      "events_url": "https://api.github.com/users/AndrewSav/events{/privacy}",
      "followers_url": "https://api.github.com/users/AndrewSav/followers",
      "following_url": "https://api.github.com/users/AndrewSav/following{/other_user}",
      "gists_url": "https://api.github.com/users/AndrewSav/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AndrewSav",
      "id": 658865,
      "login": "AndrewSav",
      "node_id": "MDQ6VXNlcjY1ODg2NQ==",
      "organizations_url": "https://api.github.com/users/AndrewSav/orgs",
      "received_events_url": "https://api.github.com/users/AndrewSav/received_events",
      "repos_url": "https://api.github.com/users/AndrewSav/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AndrewSav/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AndrewSav/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AndrewSav"
    }
  },
  {
    "author_association": "NONE",
    "body": "Unfortunately, piping the output strips color :(",
    "created_at": "2019-11-20T03:09:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-555816766",
    "id": 555816766,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTgxNjc2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/555816766/reactions"
    },
    "updated_at": "2019-11-20T03:09:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/555816766",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/54873843?v=4",
      "events_url": "https://api.github.com/users/pete-om/events{/privacy}",
      "followers_url": "https://api.github.com/users/pete-om/followers",
      "following_url": "https://api.github.com/users/pete-om/following{/other_user}",
      "gists_url": "https://api.github.com/users/pete-om/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/pete-om",
      "id": 54873843,
      "login": "pete-om",
      "node_id": "MDQ6VXNlcjU0ODczODQz",
      "organizations_url": "https://api.github.com/users/pete-om/orgs",
      "received_events_url": "https://api.github.com/users/pete-om/received_events",
      "repos_url": "https://api.github.com/users/pete-om/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/pete-om/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pete-om/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/pete-om"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "This is not just about interactive use cases, there's a use case for using `Measure-Command` in scripts too. There `Out-Default` won't help you because it doesn't allow to further use the pipeline output for processing. I guess you could save it in a variable but then it's not streamed anymore, which can totally skew the numbers (e.g. imagine the pipeline is limited with `Select-Object -First` further down).\r\n\r\nCan we just have a `-PassThru` switch?",
    "created_at": "2020-01-31T10:03:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-580668564",
    "id": 580668564,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY2ODU2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580668564/reactions"
    },
    "updated_at": "2020-01-31T10:04:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/580668564",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I vote for a _new switch_ that would result in getting the exact same output (color included ;-) ) as the raw command being timed.\r\n\r\nChanging the default behavior is probably a bad idea, for backwards-compatibility's sake.\r\n",
    "created_at": "2020-03-11T12:29:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-597604952",
    "id": 597604952,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzYwNDk1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597604952/reactions"
    },
    "updated_at": "2020-03-11T12:29:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597604952",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12860484?v=4",
      "events_url": "https://api.github.com/users/sba923/events{/privacy}",
      "followers_url": "https://api.github.com/users/sba923/followers",
      "following_url": "https://api.github.com/users/sba923/following{/other_user}",
      "gists_url": "https://api.github.com/users/sba923/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sba923",
      "id": 12860484,
      "login": "sba923",
      "node_id": "MDQ6VXNlcjEyODYwNDg0",
      "organizations_url": "https://api.github.com/users/sba923/orgs",
      "received_events_url": "https://api.github.com/users/sba923/received_events",
      "repos_url": "https://api.github.com/users/sba923/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sba923/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sba923/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sba923"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "That's a fairly sensible suggestion. I don't see why we can't `Measure-Command -PassThru`",
    "created_at": "2020-03-11T19:53:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-597835843",
    "id": 597835843,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzgzNTg0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597835843/reactions"
    },
    "updated_at": "2020-03-11T19:53:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/597835843",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Just to be clear, `Measure-Command -PassThru` would emit the objects that are output from the scriptblock AND write the measurements to the host?",
    "created_at": "2020-03-26T20:20:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604664228",
    "id": 604664228,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDY2NDIyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604664228/reactions"
    },
    "updated_at": "2020-03-26T20:20:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604664228",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Hmm. I think it'd be best if it either:\r\n\r\n1. Created a new object, with properties `Data` and `Duration`, or\r\n2. Added a new property to the output object directly (similar to Add-Member), named `Duration` or something along those lines.",
    "created_at": "2020-03-26T20:23:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604665347",
    "id": 604665347,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDY2NTM0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604665347/reactions"
    },
    "updated_at": "2020-03-26T20:36:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604665347",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@vexx32 that all seems pretty complicated compared to just saving the output to a variable no?\r\n\r\n```powershell\r\nMeasure-Command { $data = Invoke-MyTest }\r\n```\r\n\r\nvs\r\n\r\n```powershell\r\n$result = Measure-Command -PassThru { Invoke-MyTest }\r\n$data = $result.Data\r\n$result.Duration\r\n```\r\n\r\n@felixfbecker \r\n\r\n> I guess you could save it in a variable but then it's not streamed anymore, which can totally skew the numbers (e.g. imagine the pipeline is limited with `Select-Object -First` further down).\r\n\r\nWhy wouldn't the `Select-Object -First` be inside the `Measure-Command` scriptblock though? If you're trying to determine how long a code snippet takes to run, do you really want code downstream to alter it? Also as @SteveL-MSFT brought up, if you did have `Select-Object -First` downstream then you wouldn't get the execution length.",
    "created_at": "2020-03-26T21:42:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604702278",
    "id": 604702278,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDcwMjI3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604702278/reactions"
    },
    "updated_at": "2020-03-26T21:42:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604702278",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Just to be clear, Measure-Command -PassThru would emit the objects that are output from the scriptblock AND write the measurements to the host?\r\n\r\nThis is an exhaustive answer why we should not implement this request. We can always get the result with:\r\n\r\n```powershell\r\nMeasure-Command { $data = Invoke-MyTest }\r\n```\r\n",
    "created_at": "2020-03-27T05:44:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604826103",
    "id": 604826103,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDgyNjEwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604826103/reactions"
    },
    "updated_at": "2020-03-27T05:44:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604826103",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "\"Getting the result\" (pipeline data) is not the same as \"getting the same results\" (display).",
    "created_at": "2020-03-27T10:18:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604922017",
    "id": 604922017,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDkyMjAxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604922017/reactions"
    },
    "updated_at": "2020-03-27T10:18:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604922017",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12860484?v=4",
      "events_url": "https://api.github.com/users/sba923/events{/privacy}",
      "followers_url": "https://api.github.com/users/sba923/followers",
      "following_url": "https://api.github.com/users/sba923/following{/other_user}",
      "gists_url": "https://api.github.com/users/sba923/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sba923",
      "id": 12860484,
      "login": "sba923",
      "node_id": "MDQ6VXNlcjEyODYwNDg0",
      "organizations_url": "https://api.github.com/users/sba923/orgs",
      "received_events_url": "https://api.github.com/users/sba923/received_events",
      "repos_url": "https://api.github.com/users/sba923/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sba923/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sba923/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sba923"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> This is an exhaustive answer why we should not implement this request. We can always get the result with:\r\n> \r\n> ```powershell\r\n> Measure-Command { $data = Invoke-MyTest }\r\n> ```\r\n\r\nNo, we can't always do that. This may be possible in most scripts, and maybe even every script you wrote personally, but it's definitely not possible in all scripts. I very recently ran a complex script that processed GB of data through the pipeline. It is simply not possible to save the pipeline output in a variable first, because it would exceed the machine's memory. That is what actually led me to this issue.\r\n\r\nA minor downside is also that it's hard to statically analyze, e.g. VS Code will complain that `$data` is not used because it can't know that the script block is running in the parent's scope.\r\n\r\nThe argument that downstream consumers can slow down the pipeline is a valid one of course, and it can mean that the measured time does not represent _only_ time spent in the script block, but also time spent by the script block waiting because of back pressure. But you don't know if that is actually going to have an impact.  For example, in most cases, the \"downstream consumer\" will just be the host formatting + output, or maybe some light processing of the data. If what we are measuring involves IO, that time will be negligible, and as a user I would like to have the option to ignore it and tell PowerShell to just pipe it through anyway instead of requiring me to rewrite the whole script to not use pipelines (which again, may not even be possible due to memory constraints).\r\n\r\n_Ideally_ of course there would be a way to get the real time spent by the script block. I don't know if this is technically possible, but maybe it is, if the `Measure-Command` cmdlet has a steppable pipeline of the script block, maybe it could run the timer only when the script block is running, and pause it while downstream consumers are processing the emitted items. It could report both times, similar to how Unix's `time` reports multiple times. But even if this is not technically possible, it would still be useful to have `-PassThru` for the majority of the use cases.\r\n\r\nSince I mentioned Unix's `time`: `time` forwards all output too and doesn't swallow it. This means this is also yet another thing that's surprising for people using PowerShell on platforms other than Windows.\r\n\r\nAnswering to more questions from above:\r\n\r\n> Why wouldn't the Select-Object -First be inside the Measure-Command scriptblock though? If you're trying to determine how long a code snippet takes to run, do you really want code downstream to alter it?\r\n\r\nYes, in some cases that's exactly what I want to do. Imagine there's a cmdlet that does REST API calls with `-FollowRelLink`, i.e. it will paginate potentially forever. Limiting it at some point is _essential_, and as a user I am aware that it _would_ take longer if I didn't limit. I am fine with the limiting being taken into account for the execution time. I am asking to give the user the _option_ to make that work. But also keep in mind that as said, in most cases, the \"downstream consumer\" will simply be light processing + host output.\r\n\r\n> Just to be clear, Measure-Command -PassThru would emit the objects that are output from the scriptblock AND write the measurements to the host?\r\n\r\nI think that would be sensible, similar to how `-IncludeTotalCount` adds a TotalCount object to the output. It could be easily filtered out and redirected to e.g. the information stream in a `ForEach-Object`. But adding a `-MeasurementVariable` parameter also sounds like a good idea. There is definitely a use case for processing the measurement further as a `TimeSpan` object instead of writing it to the host, e.g. finding out what percentage of a total time a step took.",
    "created_at": "2020-03-27T11:03:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604940222",
    "id": 604940222,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDk0MDIyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604940222/reactions"
    },
    "updated_at": "2020-03-27T11:03:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604940222",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Yes, in some cases that's exactly what I want to do. Imagine there's a cmdlet that does REST API calls with `-FollowRelLink`, i.e. it will paginate potentially forever. Limiting it at some point is _essential_, and as a user I am aware that it _would_ take longer if I didn't limit. I am fine with the limiting being taken into account for the execution time. I am asking to give the user the _option_ to make that work. But also keep in mind that as said, in most cases, the \"downstream consumer\" will simply be light processing + host output.\r\n\r\nBut then that's part of the test, so why wouldn't that be included *in* the script block? Why is it necessary to do this:\r\n\r\n```powershell\r\nMeasure-Command { Invoke-LongCommand } | Select-Object -First 1\r\n```\r\n\r\nInstead of:\r\n\r\n```powershell\r\nMeasure-Command { Invoke-LongCommand | Select-Object -First 1 }\r\n```",
    "created_at": "2020-03-27T11:31:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604951798",
    "id": 604951798,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDk1MTc5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604951798/reactions"
    },
    "updated_at": "2020-03-27T11:31:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604951798",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "You can easily do that in an example code snippet on GitHub, but that doesn't mean it's easily possible in a complex script. We could be talking about dozens of layers of function calls across multiple files, where somewhere there's the `Select-Object`, and somewhere you want to `Measure`. You can't easily restructure all the scripts and functions just to move that in there. The user should have the option to avoid that.",
    "created_at": "2020-03-27T11:41:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604955227",
    "id": 604955227,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDk1NTIyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604955227/reactions"
    },
    "updated_at": "2020-03-27T11:41:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604955227",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "You wouldn't need to restructure anything, just wrap it in a script block:\r\n\r\n```powershell\r\nMeasure-Command {\r\n    & {\r\n        # complicated code here\r\n    } | Select-Object -First 1\r\n}\r\n```\r\n\r\n`Measure-Command` shouldn't measure things outside of what you tell it to.  If you want to change how it's measured, change the test, not the circumstances around it imo.",
    "created_at": "2020-03-27T11:46:02Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-604956838",
    "id": 604956838,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDk1NjgzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604956838/reactions"
    },
    "updated_at": "2020-03-27T11:46:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604956838",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@felixfbecker  `Measure-Command` cmdlet is not designed for scenarios you ask. The cmdlet is commonly used to measure simple script block in interactive session.\r\nFor more complex scenarios we could discuss injecting performance counters. They can provide more reliable information about script execution and more importantly for hosted applications too.\r\n\r\n",
    "created_at": "2020-03-27T16:30:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-605096124",
    "id": 605096124,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTA5NjEyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/605096124/reactions"
    },
    "updated_at": "2020-03-27T16:30:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/605096124",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "Just going to add my voice to the conversation,\r\n\r\nI would also love a `-PassThru` flag on this command. It would indeed output the output from the script and it's own measurement output.\r\n \r\n> Since I mentioned Unix's time: time forwards all output too and doesn't swallow it. This means this is also yet another thing that's surprising for people using PowerShell on platforms other than Windows.\r\n\r\nI was surprised it didn't already have this functionality, I guess I am more familiar with `time` then this command still. Also, I agree with previous remarks about the common use case requiring devs to see the output of the command they're measuring and it's far more rare that I don't care about the output (at least, in my usage of this command)",
    "created_at": "2020-03-30T12:41:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-605975139",
    "id": 605975139,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNTk3NTEzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/605975139/reactions"
    },
    "updated_at": "2020-03-30T12:41:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/605975139",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4001261?v=4",
      "events_url": "https://api.github.com/users/JordanShurmer/events{/privacy}",
      "followers_url": "https://api.github.com/users/JordanShurmer/followers",
      "following_url": "https://api.github.com/users/JordanShurmer/following{/other_user}",
      "gists_url": "https://api.github.com/users/JordanShurmer/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JordanShurmer",
      "id": 4001261,
      "login": "JordanShurmer",
      "node_id": "MDQ6VXNlcjQwMDEyNjE=",
      "organizations_url": "https://api.github.com/users/JordanShurmer/orgs",
      "received_events_url": "https://api.github.com/users/JordanShurmer/received_events",
      "repos_url": "https://api.github.com/users/JordanShurmer/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JordanShurmer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JordanShurmer/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JordanShurmer"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "If the comparison is to the `time` command which writes its results to stderr, then perhaps `-PassThru` simply writes its measurements as verbose messages?  If you need to capture the measurement object for use later, then perhaps we need a `-MeasurementVariable` parameter?",
    "created_at": "2020-03-31T15:21:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-606694471",
    "id": 606694471,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjY5NDQ3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/606694471/reactions"
    },
    "updated_at": "2020-03-31T15:21:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/606694471",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "yes / yes ;-)",
    "created_at": "2020-03-31T16:30:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-606736091",
    "id": 606736091,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjczNjA5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/606736091/reactions"
    },
    "updated_at": "2020-03-31T16:30:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/606736091",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12860484?v=4",
      "events_url": "https://api.github.com/users/sba923/events{/privacy}",
      "followers_url": "https://api.github.com/users/sba923/followers",
      "following_url": "https://api.github.com/users/sba923/following{/other_user}",
      "gists_url": "https://api.github.com/users/sba923/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sba923",
      "id": 12860484,
      "login": "sba923",
      "node_id": "MDQ6VXNlcjEyODYwNDg0",
      "organizations_url": "https://api.github.com/users/sba923/orgs",
      "received_events_url": "https://api.github.com/users/sba923/received_events",
      "repos_url": "https://api.github.com/users/sba923/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sba923/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sba923/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sba923"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm also going to have to agree that this is a missed feature of `Measure-Command`.\r\n\r\nThe problem that I run into is that I want to know how long a command is going to take *including how long it takes to render output* if that command is going to do that. It's important to be able to capture reality with `Measure-Command`.\r\n\r\nIn my mind, when I run this:\r\n\r\n```\r\nMeasure-Command {\r\n    1..10000 | ForEach-Object { [Math]::Log($_) }\r\n}\r\n```\r\n\r\nI should get comparable time to doing this:\r\n\r\n```\r\n$s = [System.Diagnostics.Stopwatch]::StartNew()\r\n1..10000 | ForEach-Object { [Math]::Log($_) }\r\n$s.Stop()\r\n$s.Elapsed.TotalMilliseconds\r\n```\r\n\r\nAnd I don't.\r\n\r\nI get a difference of two orders of magnitude on my system (~60ms vs ~2800ms) because `Measure-Command` doesn't capture the time it takes to render output. \r\n\r\nI shouldn't have to modify my command to make that work, either, because then I have no way to know if it's performing as it is because that's accurate or because I modified it. You can easily modify it in such a way that it greatly increases the time, after all.\r\n\r\nFor example, there's a huge difference between these because of the number of pipelines constructed:\r\n\r\n```\r\n# 1 pipeline\r\n$a = Measure-Command {\r\n    1..10000 | ForEach-Object { [Math]::Log($_) } | Out-Default\r\n}\r\n\r\n# 10,001 pipelines\r\n$b = Measure-Command {\r\n    1..10000 | ForEach-Object { [Math]::Log($_) | Out-Default }\r\n}\r\n\r\n$a.TotalMilliseconds\r\n$b.TotalMilliseconds\r\n```\r\n\r\nThe second command takes twice as long on my system (~2700ms vs ~4300ms).  \"Okay,\" you say, \"so always use the first pattern.\" Well, if you're using a statement like `foreach` or `for`, you *can't* because they create empty pipelines. You can only do this:\r\n\r\n```\r\n$c = Measure-Command {\r\n    for ($i = 1; $i -le 10000; $i++) {\r\n        [Math]::Log($i) | Out-Default\r\n    }\r\n}\r\n$c.TotalMilliseconds\r\n```\r\n\r\nThat adds 10,000 pipeline constructions and teardowns to the loop. A loop that previously had no pipelines in it.\r\n\r\nYes, I can just use `System.Diagnostics.Stopwatch`. That's exactly what I do. But then I have to ask: What exactly is `Measure-Command` for if it's not to measure the actual time to complete?\r\n",
    "created_at": "2021-03-31T18:07:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-811298043",
    "id": 811298043,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTI5ODA0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811298043/reactions"
    },
    "updated_at": "2021-03-31T18:07:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811298043",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31443007?v=4",
      "events_url": "https://api.github.com/users/AikenBM/events{/privacy}",
      "followers_url": "https://api.github.com/users/AikenBM/followers",
      "following_url": "https://api.github.com/users/AikenBM/following{/other_user}",
      "gists_url": "https://api.github.com/users/AikenBM/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AikenBM",
      "id": 31443007,
      "login": "AikenBM",
      "node_id": "MDQ6VXNlcjMxNDQzMDA3",
      "organizations_url": "https://api.github.com/users/AikenBM/orgs",
      "received_events_url": "https://api.github.com/users/AikenBM/received_events",
      "repos_url": "https://api.github.com/users/AikenBM/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AikenBM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AikenBM/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AikenBM"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@AikenBM For your scenario Measure-Script cmdlet is better choice. I hope we get it soon with #13673.",
    "created_at": "2021-03-31T18:43:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-811334785",
    "id": 811334785,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTMzNDc4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811334785/reactions"
    },
    "updated_at": "2021-03-31T18:43:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811334785",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov That's possible. Based on a quick reading, though, that looks like it's going to be more useful for second order analysis while I'm mostly interested in first order or top level analysis?\r\n\r\nMy argument is that `Measure-Command` isn't as useful as it should be for even first order analysis because it hides the actual rendering or output time cost. That the command should just act like `System.Diagnostics.Stopwatch` timing the whole command, and not modify or capture the output.",
    "created_at": "2021-03-31T19:21:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-811369402",
    "id": 811369402,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTM2OTQwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811369402/reactions"
    },
    "updated_at": "2021-03-31T19:21:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811369402",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31443007?v=4",
      "events_url": "https://api.github.com/users/AikenBM/events{/privacy}",
      "followers_url": "https://api.github.com/users/AikenBM/followers",
      "following_url": "https://api.github.com/users/AikenBM/following{/other_user}",
      "gists_url": "https://api.github.com/users/AikenBM/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AikenBM",
      "id": 31443007,
      "login": "AikenBM",
      "node_id": "MDQ6VXNlcjMxNDQzMDA3",
      "organizations_url": "https://api.github.com/users/AikenBM/orgs",
      "received_events_url": "https://api.github.com/users/AikenBM/received_events",
      "repos_url": "https://api.github.com/users/AikenBM/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AikenBM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AikenBM/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AikenBM"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@AikenBM You can download compiled artifacts from #13673, play with Measure-Script cmdlet and feedback. Currently Measure-Script cmdlet is a prototype and your (and others) feedback will be very useful.",
    "created_at": "2021-03-31T19:28:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2289#issuecomment-811375856",
    "id": 811375856,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2289",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTM3NTg1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811375856/reactions"
    },
    "updated_at": "2021-03-31T19:28:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/811375856",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
