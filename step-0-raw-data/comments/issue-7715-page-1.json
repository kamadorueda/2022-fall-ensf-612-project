[
  {
    "author_association": "COLLABORATOR",
    "body": "The parameter is not documented well :-)",
    "created_at": "2018-09-06T06:26:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-418979329",
    "id": 418979329,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODk3OTMyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418979329/reactions"
    },
    "updated_at": "2018-09-06T06:26:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/418979329",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I, personally, don't have a problem with it. I know Get-Content always returns an array of strings (at least for text files), so 'raw' to me means just the raw text, without any splitting.\r\n",
    "created_at": "2018-09-06T14:39:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419118341",
    "id": 419118341,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTExODM0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419118341/reactions"
    },
    "updated_at": "2018-09-06T14:39:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419118341",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2271740?v=4",
      "events_url": "https://api.github.com/users/MartinSGill/events{/privacy}",
      "followers_url": "https://api.github.com/users/MartinSGill/followers",
      "following_url": "https://api.github.com/users/MartinSGill/following{/other_user}",
      "gists_url": "https://api.github.com/users/MartinSGill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MartinSGill",
      "id": 2271740,
      "login": "MartinSGill",
      "node_id": "MDQ6VXNlcjIyNzE3NDA=",
      "organizations_url": "https://api.github.com/users/MartinSGill/orgs",
      "received_events_url": "https://api.github.com/users/MartinSGill/received_events",
      "repos_url": "https://api.github.com/users/MartinSGill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MartinSGill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MartinSGill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MartinSGill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov : Good point, but that's a separate issue:\r\n\r\nThe parameter description _in the context of the filesystem-provider-specific help topic_ is passable, but can be improved: https://github.com/PowerShell/PowerShell-Docs/issues/2697\r\n\r\nIn the _provider-independent_ help topic - the one that's discoverable far more easily - the generic description is downright misleading:\r\n\r\n> This parameter is not supported by any providers that are installed with PowerShell.\r\n\r\nHowever, that, and the difficulty in locating the _provider-specific_ help topics, are  fundamental, structural problems not specific to `-Raw` that will go away (hopefully soon), according to https://github.com/PowerShell/PowerShell-Docs/issues/1101#issuecomment-419122240:\r\n\r\n> Yeah, the provider-specific help is a work-in-progress. Long story but we are working on it. The goal is to wrap all of that content into the provider-affected cmdlets and get rid of the provider-specific docs.\r\n",
    "created_at": "2018-09-06T14:53:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419124307",
    "id": 419124307,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTEyNDMwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419124307/reactions"
    },
    "updated_at": "2018-09-06T14:54:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419124307",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@MartinSGill:\r\n\r\nThe typical connotation of _raw_ in the context of files is _uninterpreted_ (undecoded) data (\"raw bytes\").\r\n(As such, you could argue that `-Raw` should be an alias of `-AsByteStream`, which is the closest thing PowerShell has to passing bytes through.)\r\n\r\nBy contrast, `-Raw` _does_ perform interpretation / decoding, namely decoding the file's bytes to _strings_ based on the file's assumed or explicitly specified character encoding, just as _without_ `-Raw`.\r\n\r\nThe only thing that `-Raw` changes is the _partitioning_ of the data read, so that is what the switch name should reflect, hence my suggestion `-Whole`",
    "created_at": "2018-09-06T16:07:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419151208",
    "id": 419151208,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE1MTIwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419151208/reactions"
    },
    "updated_at": "2018-09-06T16:13:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419151208",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 \"Raw\" in this context means, \"undecorated\", \"not cooked\", etc. This is the parameter that the PowerShell team has chosen for this purpose. We could have chosen a different parameter but we did not. Some people will complain that it doesn't mean the right thing to them. That's fine. No matter what we choose, this will always be the case because different people have different perspectives. In PowerShell we try to choose a single term and apply it consistently so that, even if it does not seem intuitive to a person, they only have to learn it once. Sometimes we choose a sub-optimal term but we live with it because you should only have to learn something once.  Very rarely, we try and \"fix\" things like we did with `$_` and `$PSItem`. This sounded good because new users didn't \"get\" `$_`. So we added `$PSItem` as being easier to understand. The feedback we received from people who teach PowerShell is that rather than helping, having to teach two terms made it worse/more confusing for people trying to learn PowerShell.",
    "created_at": "2018-09-06T21:16:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419244014",
    "id": 419244014,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI0NDAxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419244014/reactions"
    },
    "updated_at": "2018-09-06T21:16:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419244014",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay: \r\n\r\n> \"Raw\" in this context means, \"undecorated\", \"not cooked\", etc. This is the parameter that the PowerShell team has chosen for this purpose.\r\n\r\nThat would be fine, except, [as previously stated](https://github.com/PowerShell/PowerShell/issues/7713#issuecomment-419231976), _that is not what `-Raw` actually does_:\r\n\r\n* It still decorates its (one) output string.\r\n* All it does is change the _units_ of data being read from _lines_ (by default) to _the whole file_.\r\n\r\nIn other words: \r\n\r\n* The reality of the switch does not align with the stated purpose and this regrettable precedent prevents meaningful use of `-Raw` in other contexts in alignment with its true purpose.\r\n\r\n* One way of dealing with a misnomer is to provide a more sensibly named _alias_ and to _deprecate_ / _deemphasize_ the old name.\r\n\r\n  * In other words: The intent is for the new name to  _in effect supersede_ the old one, so the `$_` / `$PSItem` comparison doesn't apply (given that neither is deprecated).\r\n\r\n  * Yes, there will be confusion for a while, but over time the sensible name will (hopefully) prevail.\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2018-09-06T21:28:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419247159",
    "id": 419247159,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI0NzE1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419247159/reactions"
    },
    "updated_at": "2018-09-06T21:41:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419247159",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> The reality of the switch does not align with the stated purpose and this regrettable precedent prevents meaningful use of -Raw in other contexts in alignment with its true purpose.\r\n\r\nAs I said, people will have different opinions on how whatever term we choose should be interpreted. Breaking the text into strings can be viewed as \"cooking\"  and thus `-Raw` should return a single string.\r\n\r\n> One way of dealing with a misnomer is to provide a more sensibly named alias and to deprecated / deemphasize the old name.\r\n\r\nWe've never actually deprecated anything and aren't likely to do so anytime soon.",
    "created_at": "2018-09-06T22:16:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419258836",
    "id": 419258836,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI1ODgzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419258836/reactions"
    },
    "updated_at": "2018-09-06T22:16:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419258836",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> We've never actually deprecated anything and aren't likely to do so anytime soon.\r\n\r\n[That genie is already out of the bottle](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/new-modulemanifest?view=powershell-6):\r\n\r\n> `-RootModule`\r\n> [...]\r\n> In Windows PowerShell 2.0, this key was called `ModuleToProcess`. \r\n\r\n---\r\n\r\n\r\n> As I said, people will have different opinions on how whatever term we choose should be interpreted. \r\n\r\nYou yourself noticed the problem with `-Raw` int the context of #7537: https://github.com/PowerShell/PowerShell/issues/7537#issuecomment-413461691\r\n\r\n> We added `-Raw` a long while back to address the perf issue but it doesn't really do the right thing. \r\n\r\nSince this discussion has now broadened in scope, let me reiterate and expand on what I proposed as an aside in #7713:\r\n\r\n* Retire the [skunked](https://en.wikipedia.org/wiki/Skunked_term) `-Raw`, as proposed by this issue.\r\n\r\n* Introduce a general-purpose `-Bare` switch with the following, cross-cmdlet semantics: \r\n\r\nOutput \"bare\" objects that are:\r\n  * either: _undecorated_ (have no ETS properties added to them, as added by `Get-Content`, for instance (#7537) and as a possible solution to #5797)\r\n * or:  _not wrapped in helper instances of another type_ (such as matching text lines getting wrapped in `MatchInfo` instances by `Select-String` (#7713))\r\n\r\n\r\n",
    "created_at": "2018-09-07T01:17:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419289843",
    "id": 419289843,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTI4OTg0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419289843/reactions"
    },
    "updated_at": "2018-09-07T01:17:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419289843",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "We have too many such discussions without a conclusion. \r\nI think PowerShell Committee can consider this - should we replace `-Raw` with `-Whole` (as alias) or Won't fix?",
    "created_at": "2018-09-07T05:58:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419331738",
    "id": 419331738,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTMzMTczOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419331738/reactions"
    },
    "updated_at": "2018-09-07T06:14:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419331738",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: To be clear: `-Bare`  is _not_ the right (alias) name for the current `-Raw` switch. As proposed in the OP, something like `-Whole` would make sense.\r\n\r\nDeprecating `-Raw` in favor of something more descriptive such as `-Whole` would clear the way for use of `-Bare`  with the semantics described above, and `-Bare` would then become a _new_ switch in the context of `Get-Content`, for requesting undecorated lines (strings without ETS properties), as suggested in #7537\r\n",
    "created_at": "2018-09-07T06:10:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419333615",
    "id": 419333615,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTMzMzYxNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419333615/reactions"
    },
    "updated_at": "2018-09-07T06:10:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419333615",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0  \r\n\r\n> That genie is already out of the bottle:\r\n>\r\n>> -RootModule\r\n>> [...]\r\n>> In Windows PowerShell 2.0, this key was called ModuleToProcess.\r\n\r\nAnd yet it's still there in version 6, both as a parameter alias and mentioned in the .psd1 file:\r\n```powershell\r\n# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess\r\n# NestedModules = @()\r\n```\r\nDeprecated implies \"don't use, will be removed at some future time\". We don't do this. What we do is deemphasize things.\r\n\r\nIn this specific case, \"RootModule\" is semantically much stronger than \"ModuleToProcess\". There is a clear semantic advantage in using one term over the other whereas `-Base` and `-Raw` - are almost synonyms (at least in this context).\r\n \r\n> You yourself noticed the problem with -Raw int the\r\n\r\nYes :-) I had intended/expected that `-Raw` should write a stream of undecorated strings into the pipeline however the developer who actually implemented it chose a different interpretation.\r\n\r\n> Deprecating -Raw in favor of something more descriptive such as -Whole would clear the way for use of -Bare with the semantics described above, and -Bare \r\n\r\nAgain, `-Raw` isn't going away so you'd have a cmdlet with both `-Raw` and `-Bare` which is pretty confusing (unless you make one an alias of the other in which case the semantic doesn't change.).  Also the current `-Raw` semantic can be \"fixed\" by adding `-Stream` as in `Out-String -Stream` so you'd do `gc -raw -stream foo.txt`.\r\n\r\n@iSazonov  The committee doesn't need to be involved in a parameter change but if we do want to propose a new normative  _pattern_, it should go through the RFC process.",
    "created_at": "2018-09-07T18:01:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419519724",
    "id": 419519724,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTUxOTcyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419519724/reactions"
    },
    "updated_at": "2018-09-07T18:01:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419519724",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I would be in favour of leaving `-Raw` as an alias and changing the name to `-Bare`\r\n\r\nI'd potentially be in favour of using `-Bytes` as a switch to specify to retrieve the bytes in the file per line, which could operate hand in hand with a `-Whole` switch to read the bytes of the entire file (or just flat out always read all bytes in the file indiscriminately).",
    "created_at": "2018-09-07T18:35:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419528365",
    "id": 419528365,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTUyODM2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419528365/reactions"
    },
    "updated_at": "2018-09-07T18:35:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419528365",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> @iSazonov The committee doesn't need to be involved in a parameter change but if we do want to propose a new normative pattern, it should go through the RFC process.\r\n\r\n@BrucePay We have dozens of useful discussions without a conclusion. As a result, these discussions remain useless. This conclusion can only be made by experts like you. And they are all on the PowerShell committee :-)",
    "created_at": "2018-09-08T19:28:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419667254",
    "id": 419667254,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY2NzI1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419667254/reactions"
    },
    "updated_at": "2018-09-08T19:28:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419667254",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay:\r\n\r\n> We don't do this. What we do is deemphasize things.\r\n\r\nUnderstood - we were just using different words: **Deemphasizing was exactly what I was proposing in this case**, which, in addition to _documenting_ the better name prominently, would also require making `-Raw` the _alias_ and `-Bare` the new parameter name proper, so that the syntax diagrams show the new name.\r\n\r\n> `-Base` and `-Raw` - are almost synonyms (at least in this context).\r\n\r\nThe advantage here lies not in finding a more descriptive name (though I do think that that `-Bare` is preferable), but to allow implementing the _originally intended_ functionality _without breaking backward compatibility_:\r\n\r\nThat is, `-Raw`, and `-Bare` can now _coexist_:\r\n\r\n* `-Raw` solely to preserve backward compatibility.\r\n\r\n* `-Bare` to now implement what `-Raw` was initially _meant_ to implement, but didn't: \r\n   * output an array of _undecorated_ lines\r\n   * or, if `-Whole` (the artist formerly known as `-Raw`) is also specified, a _single_ undecorated string.\r\n\r\nAnd since `-Bare` hasn't been used before, we're now free to use it as a general pattern across all cmdlets where undecorated / not-wrapped-in-a-helper-type output is desired.\r\n\r\nAs for candidate cmdlets: \r\n\r\n* `-Bare` to effect _undecorated_ output:\r\n    * `Get-Command`, as discussed here\r\n    * As a potential solution for  the `ConvertTo-Json` problem described in #5797\r\n\r\n* `-Bare` to omit _helper wrapper types_:\r\n   * `Select-String`, as discussed in #7713 \r\n   * `Compare-Object` is another candidate (omitting the `[pscustomobject]` wrappers (which `-PassThru` already does _and_ passing the input objects through _undecorated_.\r\n\r\nAnd I wouldn't be surprised if other cmdlets are candidates too (I haven't performed a systematic analysis).",
    "created_at": "2018-09-09T13:50:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419717278",
    "id": 419717278,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTcxNzI3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419717278/reactions"
    },
    "updated_at": "2018-09-09T13:50:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419717278",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@vexx32:\r\n\r\nWe already have `-AsByteStream` (which used to be `-Encoding Byte` and still is in Windows PowerShell), and by default it already does read the entire file (`-Whole` is implied, if you will).\r\n\r\nWhile you can't read bytes _line by line_, doing so is probably not the typical use case for reading bytes.\r\n\r\nYou can, however, specify how many bytes to read with `-TotalCount` and/or partition bytes into sub-arrays with `-ReadCount`.\r\n",
    "created_at": "2018-09-09T13:59:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-419717895",
    "id": 419717895,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTcxNzg5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419717895/reactions"
    },
    "updated_at": "2018-09-09T14:00:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/419717895",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee reviewed this.  The current use of `-Raw` is acceptable and therefore no reason to make the proposed change.  We would support a proposal to add a type parameter for streaming line-by-line w/o annotations although we did not come to agreement on the naming.  `-Bare` is not different enough from `-Raw` to communicate functional differences.",
    "created_at": "2018-09-19T22:27:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-422979413",
    "id": 422979413,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk3OTQxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/422979413/reactions"
    },
    "updated_at": "2018-09-19T22:27:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/422979413",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT \r\n\r\n> `-Bare` is not different enough from `-Raw` to communicate functional differences.\r\n\r\nAgreed - but that's precisely why I suggested introducing `-Whole` and de-emphasizing `-Raw`.\r\n\r\n`-Bare` wouldn't just benefit `Get-Content`, but, as I've proposed above, could become a _general pattern_ for all cmdlets where undecorated / unwrapped output is desirable on an opt-in basis.",
    "created_at": "2018-09-19T22:50:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-422984180",
    "id": 422984180,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjk4NDE4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/422984180/reactions"
    },
    "updated_at": "2018-09-19T22:50:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/422984180",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 It make sense to move the Bare proposal in new issue. It would be a new common parameter.",
    "created_at": "2018-09-20T09:36:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-423113702",
    "id": 423113702,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzExMzcwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423113702/reactions"
    },
    "updated_at": "2018-09-20T09:36:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/423113702",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Good idea, @iSazonov  - please see #7855",
    "created_at": "2018-09-24T16:31:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7715#issuecomment-424039049",
    "id": 424039049,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7715",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDAzOTA0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424039049/reactions"
    },
    "updated_at": "2018-09-24T16:31:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424039049",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
