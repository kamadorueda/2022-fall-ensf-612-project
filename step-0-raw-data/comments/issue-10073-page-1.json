[
  {
    "author_association": "MEMBER",
    "body": "This should probably be marked as an experimental feature.",
    "created_at": "2019-07-07T17:47:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509018247",
    "id": 509018247,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTAxODI0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509018247/reactions"
    },
    "updated_at": "2019-07-07T17:47:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509018247",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2644648?v=4",
      "events_url": "https://api.github.com/users/TylerLeonhardt/events{/privacy}",
      "followers_url": "https://api.github.com/users/TylerLeonhardt/followers",
      "following_url": "https://api.github.com/users/TylerLeonhardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TylerLeonhardt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TylerLeonhardt",
      "id": 2644648,
      "login": "TylerLeonhardt",
      "node_id": "MDQ6VXNlcjI2NDQ2NDg=",
      "organizations_url": "https://api.github.com/users/TylerLeonhardt/orgs",
      "received_events_url": "https://api.github.com/users/TylerLeonhardt/received_events",
      "repos_url": "https://api.github.com/users/TylerLeonhardt/repos",
      "site_admin": true,
      "starred_url": "https://api.github.com/users/TylerLeonhardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TylerLeonhardt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TylerLeonhardt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "- I fear that if it is an experimental feature, it will not get much test coverage or usage. Usage will be limited to people can write scripts that run on v7 only anyway.\r\n- Editor syntax highlighting and code analysis in VS-Code will be cumbersome because one would need to enable the experimental feature just for viewing the code (which might be the code from another repo). Figuring out the cause of this, will not be clear to most people (the parser gives a `UnrecognizedToken` error : `Unrecognized token in source text.`).\r\n- We still have a few previews to go until PS 7 goes RTM and the code change is a very subtle addition without explicitly altering current behaviour, therefore I see it as low risk anyway.",
    "created_at": "2019-07-07T20:51:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509029854",
    "id": 509029854,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTAyOTg1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509029854/reactions"
    },
    "updated_at": "2019-07-07T20:51:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509029854",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'd also like it marked as experimental. Experimental isn't just about risk. It's about acceptance of syntax, workflow, etc., and most importantly, it lets users know that the design of this feature is not yet complete.\r\n\r\nAs expressed [here](https://github.com/PowerShell/PowerShell-RFC/issues/209) I think `@@` and `@$` are really bad additions to the PowerShell syntax, and proposed what I think are better alternatives to each of those.",
    "created_at": "2019-07-07T21:38:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509032779",
    "id": 509032779,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTAzMjc3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509032779/reactions"
    },
    "updated_at": "2019-07-07T21:38:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509032779",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also, experimental does not mean it's not going to make it into v7 either. It simply means we're experimenting with some syntax/commands/etc. and want to be able to allow the broader community kick the tires on those things before we sign-off on them as supported.",
    "created_at": "2019-07-07T21:39:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509032872",
    "id": 509032872,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTAzMjg3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509032872/reactions"
    },
    "updated_at": "2019-07-07T21:39:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509032872",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@KirkMunro is correct that Experimental means that the design can change and would not be a breaking change.  ",
    "created_at": "2019-07-08T15:40:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509278564",
    "id": 509278564,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTI3ODU2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509278564/reactions"
    },
    "updated_at": "2019-07-08T15:40:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509278564",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Ok, we have 3 changes here:\r\n- Adding the new entry to the `TokenKind` enum and the new HashTableAst property: as far I understand the `ExperimentalFeature` implementation does not allow to exclude those additions, for the property the best I can do is return false if the feature flag is off\r\n- Usage of the added TokenKind in the Parser and Tokenizer. What should the parser do if the feature is not enabled? Should they throw explicitly if usage of the new `TokenKind` is detected or just be a no-op?\r\n- Compiler (runtime): Usage of `ExperimentalFeature` is clear.\r\n\r\nHappy to add the experimental feature fences around those section after the first review approves the current format.",
    "created_at": "2019-07-08T16:27:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509296743",
    "id": 509296743,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTI5Njc0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509296743/reactions"
    },
    "updated_at": "2019-07-08T17:22:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509296743",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@daxian-dbw can probably supply advice here on proper Experimental Feature usage.",
    "created_at": "2019-07-08T16:46:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-509303266",
    "id": 509303266,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwOTMwMzI2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509303266/reactions"
    },
    "updated_at": "2019-07-08T16:46:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/509303266",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2644648?v=4",
      "events_url": "https://api.github.com/users/TylerLeonhardt/events{/privacy}",
      "followers_url": "https://api.github.com/users/TylerLeonhardt/followers",
      "following_url": "https://api.github.com/users/TylerLeonhardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TylerLeonhardt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TylerLeonhardt",
      "id": 2644648,
      "login": "TylerLeonhardt",
      "node_id": "MDQ6VXNlcjI2NDQ2NDg=",
      "organizations_url": "https://api.github.com/users/TylerLeonhardt/orgs",
      "received_events_url": "https://api.github.com/users/TylerLeonhardt/received_events",
      "repos_url": "https://api.github.com/users/TylerLeonhardt/repos",
      "site_admin": true,
      "starred_url": "https://api.github.com/users/TylerLeonhardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TylerLeonhardt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TylerLeonhardt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rjmholt @lzybkr I've reacted to all the comments and implemented changes: I've changed it to perform a look-ahead so that it correctly recognises `@{{` only as `AtAtCurly`.\r\nI am aware that implementing the experimental feature and more complex tests are still outstanding but would like to get feedback or sign off on the current design implementation before doing that at the end of this PR. In terms of future timeline I'd like to keep this PR as minimal as possible. For example, at the moment people already use splatting despite that lack of tab completion or being able to inline it. The aim of this PR is to add only the in-lining capability to get this into PS 7, which is the most important, minimum viable aspect IMHO. Any hints on how to implement tab completion later would be appreciated though and I could potentially look at doing them later.",
    "created_at": "2019-09-01T21:49:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-526955605",
    "id": 526955605,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjk1NTYwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/526955605/reactions"
    },
    "updated_at": "2019-09-02T11:23:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/526955605",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "If possible, I'd like this design/functionality revisited by the committee. It only simplifies one scenario that would have previously required line continuation characters, and with poorly designed syntax. More effort in a design that is more respectful to how parameters are normally used while considering other line continuation scenarios would be appreciated here. This new syntax isn't sugar by any means...it's just sour.",
    "created_at": "2019-09-02T01:04:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-526969790",
    "id": 526969790,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjk2OTc5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/526969790/reactions"
    },
    "updated_at": "2019-09-02T01:04:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/526969790",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "As far as I understand the need for the additional @ character in `@@{` is due to the fact that we do want to differentiate from the case of a hashtable being passed as an (unnamed) parameter, thus the design avoids introducing a breaking change. Apart from using a different character or character set I cannot think of a better way to deal with it.\r\nI'd be happy adapting to a slightly different syntax or if you can think of a totally different approach that is better but in this case make a concrete proposal please (because this is the hardest part). With that in mind, I'd appreciate if we can make a timely decision so that a minimum viable implementation of the syntax can potentially ship in 7.0 (pending feedback). Although we've already agreed to a syntax, I'd be happy to revise but we'd need to be relatively quick, therefore some concrete proposals would help. At the end, personally I'd rather have something than nothing in 7.0. I don't find the current syntax especially bad, when using splatting with a variable one needs to do `@$` so the additional @ makes even logical sense to me.",
    "created_at": "2019-09-02T11:18:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-527110484",
    "id": 527110484,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzExMDQ4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527110484/reactions"
    },
    "updated_at": "2019-09-02T11:19:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527110484",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I'd be happy adapting to a slightly different syntax or if you can think of a totally different approach that is better but in this case make a concrete proposal please (because this is the hardest part).\r\n\r\nI've already made that proposal in [PowerShell/PowerShell-RFC #179](https://github.com/PowerShell/PowerShell-RFC/pull/179), which proposes using `@` as an indicator that you want PowerShell to stop treating newlines as statement terminators until it encounters a statement terminator or a blank line. Some folks have expressed that they don't like the lack of a closing sigil with that, which is why [this alternative proposal was very recently added](https://github.com/PowerShell/PowerShell-RFC/blob/d7f3899abd789ad1fd487185ddf97195f7185806/1-Draft/RFCNNNN-Multi-Line-Continuation.md#enclosures-instead-of-a-sigil), which suggests that `` @` `` and `` `@ `` could be enclosures to enable multi-line parsing of the current statement.\r\n\r\nThe key advantage to those proposals compared with inline splatting is simple: they tell the parser how to treat newlines and leading or trailing whitespace when it comes to terminating statements, allowing users to format their code in a way that suits them better, while preserving basic PowerShell syntax. Inline splatting, on the other hand, only takes parameters into consideration, and completely changes how you would have to enter them to span a command across multiple lines without using backticks.",
    "created_at": "2019-09-03T14:18:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-527479274",
    "id": 527479274,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQ3OTI3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527479274/reactions"
    },
    "updated_at": "2019-09-03T14:18:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/527479274",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PoshChan  Rerun failures",
    "created_at": "2019-09-21T19:22:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533823902",
    "id": 533823902,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzgyMzkwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533823902/reactions"
    },
    "updated_at": "2019-09-21T19:22:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533823902",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@bergmeister, all requests start with the magic word: `Please`\n\n<details>\n<summary>Commands available in this repo for you:\n</summary>\n<ul><li>\n<code>retry &lt;target&gt;</code> this will attempt to retry only the failed jobs for the target pipeline, <code>restart</code> can be used in place of <code>retry</code>\n</li>\n<li>\n<code>rebuild &lt;target&gt;</code> this will perform a complete rebuild of the target pipeline, <code>rerun</code> can be used in place of <code>rebuild</code> Supported values for &lt;target&gt; which can be a comma separated list are: <code>static</code>,<code>windows</code>,<code>macos</code>,<code>linux</code>,<code>all</code>\n</li>\n<li>\n<code>get failures</code> this will attempt to get the latest failures for all of the target pipelines\n</li>\n<li>\n<code>remind me in &lt;value&gt; &lt;units&gt;</code> this will create a reminder that will be posted after the specified duration &lt;value&gt; is a number, and &lt;units&gt; can be <code>minutes</code>, <code>hours</code>, or <code>days</code> (singular or plural)\n</li>\n\n</ul>\n</details>\n\n",
    "created_at": "2019-09-21T19:23:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533823928",
    "id": 533823928,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzgyMzkyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 1,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533823928/reactions"
    },
    "updated_at": "2019-09-21T19:23:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533823928",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PoshChan Please retry Windows",
    "created_at": "2019-09-21T19:24:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533823977",
    "id": 533823977,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzgyMzk3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533823977/reactions"
    },
    "updated_at": "2019-09-21T19:24:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533823977",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@bergmeister, successfully started retry of `PowerShell-CI-Windows`",
    "created_at": "2019-09-21T19:24:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533824012",
    "id": 533824012,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzgyNDAxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533824012/reactions"
    },
    "updated_at": "2019-09-21T19:24:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533824012",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PoshChan  Please retry Linux",
    "created_at": "2019-09-22T18:44:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533907200",
    "id": 533907200,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzkwNzIwMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533907200/reactions"
    },
    "updated_at": "2019-09-22T18:44:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533907200",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@bergmeister, successfully started retry of `PowerShell-CI-Linux`",
    "created_at": "2019-09-22T18:44:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533907222",
    "id": 533907222,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzkwNzIyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533907222/reactions"
    },
    "updated_at": "2019-09-22T18:44:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533907222",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Everyone, especially @rjmholt @lzybkr  :\r\nI've made the following changes and would consider the PR ready for merge now and would like to get feedback. I've updated the PR summary, please re-read it. What I've done after the first review:\r\n- Add the experimental feature `PSGeneralizedSplatting`, which makes sure no `AtAt` token gets produced if the feature is not enabled and safe-guard other changed areas\r\n- Change the `AtAtCurly` token to `AtAt` only (`@@`) and perform look-ahead in the tokenizer for a following `{` in order to mark it as a token of `AtAt` `TokenKind`.\r\n- Add a semantic check to make sure the usage of it is restricted only to be the arguments of a `CommandAst`. The AST does not differentiate between a cmdlet or native command but splatting does not make any sense in this case anyway\r\n- Added more positive and negative tests",
    "created_at": "2019-09-22T19:15:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-533909472",
    "id": 533909472,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzkwOTQ3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533909472/reactions"
    },
    "updated_at": "2019-09-23T06:13:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/533909472",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I thought I suggested previously that there shouldn't be a `AtAt` token if this is truly generalized splatting.\r\n\r\nInstead, `@` is like an operator that is applied to any expression, so for example, `@ @{}` (note the whitespace) generates a UnaryExpressionAst with the child HashtableAst.",
    "created_at": "2019-10-03T19:15:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-538085941",
    "id": 538085941,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODA4NTk0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538085941/reactions"
    },
    "updated_at": "2019-10-03T19:15:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538085941",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I thought I suggested previously that there shouldn't be a `AtAt` token if this is truly generalized splatting.\r\n> \r\n> Instead, `@` is like an operator that is applied to any expression, so for example, `@ @{}` (note the whitespace) generates a UnaryExpressionAst with the child HashtableAst.\r\n\r\nThat approach could prevent other uses of `@` without risking breaking changes though, right? What are the benefits of having `@` be an unary operator for any expression vs having `@@{` as a token to open inline splatting?\r\n\r\nI'm still hoping we'll drop this approach and move forward with `` @` `` and `` `@ `` as enclosures for multi-line continuation, but to even build that as experimental, I worry that a unary `@` operator would complicate things.",
    "created_at": "2019-10-04T12:10:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-538371002",
    "id": 538371002,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODM3MTAwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538371002/reactions"
    },
    "updated_at": "2019-10-04T12:10:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538371002",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Instead, @ is like an operator that is applied to any expression, so for example, @ @{} (note the whitespace) generates a UnaryExpressionAst with the child HashtableAst\r\n\r\nYeah that makes sense to me.\r\n\r\n@bergmeister I'm thinking that will change a few things in the PR:\r\n\r\n- The tokenizer should look for an `At` token. It will need to look ahead to make sure it's not seeing `@(` or `@{`\r\n- That token will need to be recognised in the current place we look for splatting, but should call expression rule underneath it I'm guessing, and generate a `SplatExpressionAst` around the expression\r\n- That AST will mean we need new visitor methods on ICustomAstVisitor2 and AstVisitor2, with a default implementation on ICustomAstVisitor2\r\n- Instead of trying to go through and create constructors for each expression type that makes sense as a splat, it's probably easiest to just have a `SplatExpressionAst` take an `ExpressionAst` as a child and add a semantic check to ensure there's nothing strange there. Although it might also be worth it to make it a syntactic error -- don't have a strong feeling on that one.\r\n- Then in the compiler under `VisitCommand` you probably want something like:\r\n\r\n    ```csharp\r\n    ...\r\n    \r\n    if (splatTest is SplatExpressionAst splatExpression)\r\n    {\r\n        splatted = true;\r\n    }\r\n    else if (splatTest is VariableExpressionAst variableExpression)\r\n    {\r\n        splatted = variableExpression.Splatted;\r\n    }\r\n    \r\n    ...\r\n    ```\r\n\r\n    And `VisitSplatExpression` would probably just strip off the splat and visit the expression underneath.",
    "created_at": "2019-10-04T17:27:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-538489170",
    "id": 538489170,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODQ4OTE3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538489170/reactions"
    },
    "updated_at": "2019-10-04T17:36:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538489170",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rjmholt @lzybkr \r\nI've changed the token to be just an `At` token as suggested, which I agree with is a good idea as it will keep it generic and avoid future complications of assigning certain expressions like `@@{` or `@$` to a certain token, especially since there is already a `SplattedVariable` token that will be a tad awkward to deal with in future implementations of more features of generalized splatting....\r\n\r\nHowever, I disagree trying to create something where one can have a whitespace after the `At` token not only because there is no value to the user for that, but also because it unnecessarily complicates it and was also not part of the spec per RFC. I'd like to keep the implementation to be minimum viable.\r\nThe current solution of having the `Splatted` property on the `HashTableAst` fits neatly into the existing structure and allows to lift the property to an `ExpressionAst` for future implementations of other features of generalized splatting like e.g. `Get-Item @$var` or `Get-Item @$(Get-GetItemArgument)`.\r\nIf you still disagree with me, please elaborate more why having an AST of it's own (proposed by Rob) would be useful and how it would fitinto existing syntax like `Get-Item @var` (which generates a `SplattedVariable` token ) without the risk of breaking things.\r\n\r\nThe current implementation has the advantage that it only adds to the code without having to touch the existing logic. I am happy to adapt the PR further but it needs more detailed reasoning. Whilst the idea of having the `At` token generate an `UnaryExpressionAst` with the `HashtableAst` sounds good from a high level, I don't see how it fits into the low level design/implementation, which still has to deal with already existing syntax (which we want to touch as little as possible to avoid regressions). Or maybe I just need a hint as to where you'd image the search for the `At` token to be planted in `Parser.cs` to generate the `UnaryExpressionAst` whilst keeping  things working in the same way.",
    "created_at": "2019-10-06T12:14:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-538741288",
    "id": 538741288,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODc0MTI4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538741288/reactions"
    },
    "updated_at": "2019-10-06T19:03:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538741288",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This issue has changes that could potentially change syntax. Please consider adding this feature to [EditorSyntax](https://github.com/PowerShell/EditorSyntax) which is used for syntax highlighting in GitHub, Visual Studio Code, Atom, Sublime Text, and many more locations.\r\n\r\nConsistent syntax highlighting is very important for the language and a feature isn't \"complete\" until syntax highlighting is what is expected.\r\n\r\nIf you can't contribute to [EditorSyntax](https://github.com/PowerShell/EditorSyntax), at least open an issue to track the work - however, please note, that no one is actively working on the repo and so the work will likely not get done in a timely manner.\r\n\r\nWe hope that you consider contributing to [EditorSyntax](https://github.com/PowerShell/EditorSyntax).\r\n\r\n(note this is copy/pasted text for any change that looks like it could impact EditorSyntax - and will be a bot in the future)",
    "created_at": "2019-10-12T14:33:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-541330287",
    "id": 541330287,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTMzMDI4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541330287/reactions"
    },
    "updated_at": "2019-10-12T14:33:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/541330287",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2644648?v=4",
      "events_url": "https://api.github.com/users/TylerLeonhardt/events{/privacy}",
      "followers_url": "https://api.github.com/users/TylerLeonhardt/followers",
      "following_url": "https://api.github.com/users/TylerLeonhardt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TylerLeonhardt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/TylerLeonhardt",
      "id": 2644648,
      "login": "TylerLeonhardt",
      "node_id": "MDQ6VXNlcjI2NDQ2NDg=",
      "organizations_url": "https://api.github.com/users/TylerLeonhardt/orgs",
      "received_events_url": "https://api.github.com/users/TylerLeonhardt/received_events",
      "repos_url": "https://api.github.com/users/TylerLeonhardt/repos",
      "site_admin": true,
      "starred_url": "https://api.github.com/users/TylerLeonhardt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TylerLeonhardt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/TylerLeonhardt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I need to call out something about this PR that still doesn't sit right with me.\r\n\r\nBased on my understanding this PR is designed to solve one specific issue: being able to use inline splatting of a hashtable. Does it also add support the following?\r\n\r\n1. Inline splatting of an array?\r\n1. Inline splatting of a hashtable that is in a parameter of an object or behind an invocation of a command?\r\n\r\nEven if this PR supports the first scenario (via `@@(...)`) and the second scenario (via `@$(...)`), this syntax still doesn't feel like the right solution for this problem.\r\n\r\nI suggested it before (during the original RFC if I recall correctly), but I'll bring it up again: why use this syntax instead of a common `-splat` parameter? The `-splat` parameter is respectful of PowerShell's \"way\", it helps advance learning/discovery (it says \"splat\", so that gives you something to work with when you search for help/docs), and it could even have a special-case alias of `@` if we wanted so that users could use `-@` (special case because today PowerShell does not recognize `@` as a parameter token, but we could allow it for this specific scenario if we wanted to).\r\n\r\nThat's almost the syntax that you have been pushing forward here, but supporting splatting of any array or hashtable whether it is provided as a literal value, or comes from a parameter, method, or command invocation. The only difference is you'd have a space between `-@/-splat` and the actual hashtable, which I think is also a good thing.",
    "created_at": "2019-10-23T10:40:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-545382488",
    "id": 545382488,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTM4MjQ4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545382488/reactions"
    },
    "updated_at": "2019-10-23T10:40:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545382488",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@TylerLeonhardt  I've created the following tracking issue for EditorSyntax:\r\nhttps://github.com/PowerShell/EditorSyntax/issues/188\r\n@KirkMunro  Yes, it only implements inline splatting of a hashtable. This is the only feature that I want and it is a minimum, viable feature IMHO, your use cases are unfortunately not of interest to me but you could add them afterwards if you wanted to because I only use the `@` operator now.",
    "created_at": "2019-10-28T11:23:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-546903202",
    "id": 546903202,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjkwMzIwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546903202/reactions"
    },
    "updated_at": "2019-10-28T12:00:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546903202",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SteveL-MSFT \r\nCan you please bring up this PR with  @PowerShell/powershell-committee to make a decision whether the committee wants this feature to be part of the next preview, which is the last point of being able to get features in. I have addressed comments and implemented a minimum viable version that is open for extension so that other features that the PS teams or the community wants can be added to it without having to refactor it.\r\nIt's been nearly a month ago since the last feedback of the PowerShell team on this.\r\n\r\nCurrently this PR implements inline splatting of a hashtable, which is a subset of the generalized splatting RFC, however, I do not plan to implement more features as this is the minimum viable implementation of the only feature that I want. Please let me know if that is deemed OK or if you'd require tab completion for this feature as well (currently there is no tab completion for traditional inline splatting, hence why I see it as an additional, optional, nice to have feature). If tab completion is required, I might try to add it but I want to have approval first that the PS wants this for PS7 and that the PS team is OK with only adding the inline splatting aspect of generalized splatting.",
    "created_at": "2019-10-28T11:34:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-546906695",
    "id": 546906695,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjkwNjY5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546906695/reactions"
    },
    "updated_at": "2019-10-28T18:38:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546906695",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "For consideration by anyone reviewing this PR and the @PowerShell/powershell-committee, please have a look at PR #10984 as well, which supports inline splatting as well as other scenarios requested in the original RFC via a `-splat` common parameter.\r\n\r\ncc: @SteveL-MSFT ",
    "created_at": "2019-11-04T17:03:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-549450574",
    "id": 549450574,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ1MDU3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/549450574/reactions"
    },
    "updated_at": "2019-11-04T17:04:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/549450574",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, I do not have any objections against your implementation approach.\r\nAt the end the committee should make a decision which implementation they favour or if they want a mix of them, I am open to any solution that gets inline splatting into ps 7.\r\n\r\nI have addressed the recent review requests and also stated that apart from optional tab completion (if requested) that I see my implementation as a complete, viable feature of one of the RFC goals and that I will not implement other features described in the RFC as this would be unnecessary scope increase for me.",
    "created_at": "2019-11-04T18:29:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-549486151",
    "id": 549486151,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0OTQ4NjE1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/549486151/reactions"
    },
    "updated_at": "2019-11-04T18:33:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/549486151",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "NONE",
    "body": "This pull request has been automatically marked as Review Needed because it has been there has not been any activity for **7 days**.\nMainainer, Please provide feedback and/or mark it as `Waiting on Author`",
    "created_at": "2020-05-27T02:03:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-634381552",
    "id": 634381552,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDM4MTU1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/634381552/reactions"
    },
    "updated_at": "2020-05-27T02:03:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/634381552",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "There are two PRs that are implementing the same RFC - [RFC002 ](https://github.com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0002-Generalized-Splatting.md). \r\n\r\nI request @PowerShell/powershell-committee to guide on which of the implementations should be accepted.\r\n\r\nThe other PR with the implementation is: https://github.com/PowerShell/PowerShell/pull/10984",
    "created_at": "2020-05-28T18:58:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-635535128",
    "id": 635535128,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTUzNTEyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/635535128/reactions"
    },
    "updated_at": "2020-05-28T18:58:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/635535128",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12820925?v=4",
      "events_url": "https://api.github.com/users/adityapatwardhan/events{/privacy}",
      "followers_url": "https://api.github.com/users/adityapatwardhan/followers",
      "following_url": "https://api.github.com/users/adityapatwardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/adityapatwardhan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/adityapatwardhan",
      "id": 12820925,
      "login": "adityapatwardhan",
      "node_id": "MDQ6VXNlcjEyODIwOTI1",
      "organizations_url": "https://api.github.com/users/adityapatwardhan/orgs",
      "received_events_url": "https://api.github.com/users/adityapatwardhan/received_events",
      "repos_url": "https://api.github.com/users/adityapatwardhan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/adityapatwardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adityapatwardhan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/adityapatwardhan"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It should be said that both PRs do not implement all the features in the RFC, just a subset of it that are the most important ones for me and the other author, which I think is OK in terms of being minimum, viable.\r\nAlso: This PR follows the `@@` syntax that was agreed in the RFC exactly, the other PR proposes a different approach via common parameters.\r\n\r\nI'd be happy as long as either of the 2 PRs get accepted. When deciding between the 2 PRs, I'd like the @PowerShell/powershell-committee to also consider what is best in terms of follow up PRs if other people contribute e.g. the remaining features in the RFC or tab completion for the inline-splatted arguments.",
    "created_at": "2020-05-28T20:10:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-635574318",
    "id": 635574318,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU3NDMxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/635574318/reactions"
    },
    "updated_at": "2020-05-28T20:11:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/635574318",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "We in the @PowerShell/powershell-committee are going to holistically review this vs. #10984 next week in our RFC meeting. This one seems to match the RFC we approved (at least skimming through), while @KirkMunro's does not, but we want to also consider the `-splat` parameter as a possibility. \r\n\r\nThat being said, we did review the original RFC0002 and its feedback *very* extensively before accepting. ",
    "created_at": "2020-06-03T22:50:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-638501603",
    "id": 638501603,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODUwMTYwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/638501603/reactions"
    },
    "updated_at": "2020-06-03T22:50:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/638501603",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "NONE",
    "body": "I like -splat, only because @@{ feels so visually jarring and so much like a typo. ",
    "created_at": "2020-06-10T04:47:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-641718011",
    "id": 641718011,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTcxODAxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641718011/reactions"
    },
    "updated_at": "2020-06-10T04:47:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641718011",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12396330?v=4",
      "events_url": "https://api.github.com/users/codykonior/events{/privacy}",
      "followers_url": "https://api.github.com/users/codykonior/followers",
      "following_url": "https://api.github.com/users/codykonior/following{/other_user}",
      "gists_url": "https://api.github.com/users/codykonior/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/codykonior",
      "id": 12396330,
      "login": "codykonior",
      "node_id": "MDQ6VXNlcjEyMzk2MzMw",
      "organizations_url": "https://api.github.com/users/codykonior/orgs",
      "received_events_url": "https://api.github.com/users/codykonior/received_events",
      "repos_url": "https://api.github.com/users/codykonior/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/codykonior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codykonior/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/codykonior"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Personally, I don't like either very much. `-Splat` feels out of place / could use a better name, perhaps. `@@{ ... }` as you say, feels more like a typo than useful syntax, though its brevity is nice.\r\n\r\nI don't have a compelling alternative, but I wish I did.",
    "created_at": "2020-06-10T04:52:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-641719447",
    "id": 641719447,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTcxOTQ0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641719447/reactions"
    },
    "updated_at": "2020-06-10T04:52:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641719447",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "I prefer `@@` since that would be more intuitive how splatting was done prior. Since there is an RFC that was approved for using `@@` then a PR that closest match that RFC should be merged. If there is anything more to be gained by instead use `-splat` that would need to be explained in another RFC. IMHO, until then the `-splat` PR can be closed.\r\n\r\nIt would be very strange to merge a PR that contradict an approved RFC without having another RFC to back it. 🤔 ",
    "created_at": "2020-06-10T13:05:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-641992927",
    "id": 641992927,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTk5MjkyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641992927/reactions"
    },
    "updated_at": "2020-06-10T13:05:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641992927",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7189721?v=4",
      "events_url": "https://api.github.com/users/johlju/events{/privacy}",
      "followers_url": "https://api.github.com/users/johlju/followers",
      "following_url": "https://api.github.com/users/johlju/following{/other_user}",
      "gists_url": "https://api.github.com/users/johlju/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/johlju",
      "id": 7189721,
      "login": "johlju",
      "node_id": "MDQ6VXNlcjcxODk3MjE=",
      "organizations_url": "https://api.github.com/users/johlju/orgs",
      "received_events_url": "https://api.github.com/users/johlju/received_events",
      "repos_url": "https://api.github.com/users/johlju/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/johlju/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/johlju/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/johlju"
    }
  },
  {
    "author_association": "NONE",
    "body": "People on Twitter literally requested that we weigh in on what we’d prefer, so that’s what we’ve done. ",
    "created_at": "2020-06-10T13:22:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642005418",
    "id": 642005418,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjAwNTQxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642005418/reactions"
    },
    "updated_at": "2020-06-10T13:22:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642005418",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12396330?v=4",
      "events_url": "https://api.github.com/users/codykonior/events{/privacy}",
      "followers_url": "https://api.github.com/users/codykonior/followers",
      "following_url": "https://api.github.com/users/codykonior/following{/other_user}",
      "gists_url": "https://api.github.com/users/codykonior/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/codykonior",
      "id": 12396330,
      "login": "codykonior",
      "node_id": "MDQ6VXNlcjEyMzk2MzMw",
      "organizations_url": "https://api.github.com/users/codykonior/orgs",
      "received_events_url": "https://api.github.com/users/codykonior/received_events",
      "repos_url": "https://api.github.com/users/codykonior/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/codykonior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codykonior/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/codykonior"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I prefer `@@{...}` as well. I'd loathe seeing more ubiquitous parameters added. There are already plenty I have to wade through in completion lists.  I think there should be a **very high bar** for any new ubiquitous parameters.  To me `@@{...}` makes sense because I use the splat operator `@` to splat a hashtable. ",
    "created_at": "2020-06-10T17:06:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642141334",
    "id": 642141334,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjE0MTMzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642141334/reactions"
    },
    "updated_at": "2020-06-10T17:06:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642141334",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The one real criticism I have for `@@{ ... }` as a syntax is that it is likely to be prone to typos, and if you happen to be using hashtables as actual parameters the difference between `@{ ... }` and `@@{ ... }` is a _very_ easy mistake to make.",
    "created_at": "2020-06-10T17:15:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642145861",
    "id": 642145861,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjE0NTg2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642145861/reactions"
    },
    "updated_at": "2020-06-10T17:15:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642145861",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I like -splat, only because @@{ feels so visually jarring and so much like a typo.\r\n\r\nI *dislike* @@{ for the same reason; this is starting to look very Perl-like; very mysterious and very un-PowerShell.  My humble opinion is that -splat is the better way.\r\n\r\n(Throwing in my knee-jerk reaction after seeing this brought up on Twitter)",
    "created_at": "2020-06-10T18:57:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642196442",
    "id": 642196442,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjE5NjQ0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642196442/reactions"
    },
    "updated_at": "2020-06-10T18:57:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642196442",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11849185?v=4",
      "events_url": "https://api.github.com/users/ChrisWarwick/events{/privacy}",
      "followers_url": "https://api.github.com/users/ChrisWarwick/followers",
      "following_url": "https://api.github.com/users/ChrisWarwick/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisWarwick/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ChrisWarwick",
      "id": 11849185,
      "login": "ChrisWarwick",
      "node_id": "MDQ6VXNlcjExODQ5MTg1",
      "organizations_url": "https://api.github.com/users/ChrisWarwick/orgs",
      "received_events_url": "https://api.github.com/users/ChrisWarwick/received_events",
      "repos_url": "https://api.github.com/users/ChrisWarwick/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ChrisWarwick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisWarwick/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ChrisWarwick"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "`@@{ }` also is very intuitive to me. `@` is already the splat operator, we're just making it also accept a hastable expression `@{ }`.\r\n\r\nAn extra parameter, that _magically affects other parameters_ is a lot harder to wrap my head around. It is also less clear to me in terms of precedence - i.e. what if you provide some parameters but also the `-Splat` parameter in different order. Currently the order of named parameters in PowerShell doesn't matter and that is a great invariant. It wouldn't be clear to me anymore whether that is the case or not with a `-Splat` parameter.\r\n\r\nI see the point of saying \"explicit, spelled out is better than a symbol\" but `@` _is already_ the splat operator. Consistency in language design is important. And the meaning of the word \"splat\" really is not obvious to newcomers either.",
    "created_at": "2020-06-10T19:15:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642205001",
    "id": 642205001,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjIwNTAwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642205001/reactions"
    },
    "updated_at": "2020-06-10T19:17:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642205001",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Currently the order of named parameters in PowerShell doesn't matter and that is a great invariant\r\n\r\nA very good point, and something my knee-jerk reaction hadn't considered. \r\n\r\nI still shudder at the proposed syntax. I get the point the you and Keith make about @ being the splatting operator already (so splatting a hashtable follows). I also imagine that the actual real-world use may mean that beginners aren't heavily impacted. I guess I'm just subliminally recalling those occasions when I opened a Perl script *that I'd written* and wondered if I'd been stoned at the time. It's the aesthetics rather than the basic lexicography. \r\n",
    "created_at": "2020-06-10T19:34:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642214190",
    "id": 642214190,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjIxNDE5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642214190/reactions"
    },
    "updated_at": "2020-06-10T19:34:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642214190",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11849185?v=4",
      "events_url": "https://api.github.com/users/ChrisWarwick/events{/privacy}",
      "followers_url": "https://api.github.com/users/ChrisWarwick/followers",
      "following_url": "https://api.github.com/users/ChrisWarwick/following{/other_user}",
      "gists_url": "https://api.github.com/users/ChrisWarwick/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ChrisWarwick",
      "id": 11849185,
      "login": "ChrisWarwick",
      "node_id": "MDQ6VXNlcjExODQ5MTg1",
      "organizations_url": "https://api.github.com/users/ChrisWarwick/orgs",
      "received_events_url": "https://api.github.com/users/ChrisWarwick/received_events",
      "repos_url": "https://api.github.com/users/ChrisWarwick/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ChrisWarwick/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ChrisWarwick/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ChrisWarwick"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@jamesbru mentioned briefly during the weekly PowerLunch community chat a possibility that I like a little more; `Command-Name -@ @{ ... }` (he can correct me if I misunderstood his idea in any way ^^)\r\n\r\nIt's a nice medium between this implementation and `-splat`, doesn't occlude an otherwise potentially valid parameter name, and keeps most of the look of this implementation. It may be a little more complicated to work into parsing, however, since it would need to branch off from the usual command parameter parsing (`-@` is not currently parsed as a valid parameter, but _is_ considered a valid positional argument currently.)",
    "created_at": "2020-06-10T20:45:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642248208",
    "id": 642248208,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjI0ODIwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642248208/reactions"
    },
    "updated_at": "2020-06-10T20:45:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642248208",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I prefer `@@{ ... }` -- it's more intuitive to me. ",
    "created_at": "2020-06-11T01:33:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642352623",
    "id": 642352623,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjM1MjYyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642352623/reactions"
    },
    "updated_at": "2020-06-11T01:33:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642352623",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1844001?v=4",
      "events_url": "https://api.github.com/users/oising/events{/privacy}",
      "followers_url": "https://api.github.com/users/oising/followers",
      "following_url": "https://api.github.com/users/oising/following{/other_user}",
      "gists_url": "https://api.github.com/users/oising/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/oising",
      "id": 1844001,
      "login": "oising",
      "node_id": "MDQ6VXNlcjE4NDQwMDE=",
      "organizations_url": "https://api.github.com/users/oising/orgs",
      "received_events_url": "https://api.github.com/users/oising/received_events",
      "repos_url": "https://api.github.com/users/oising/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/oising/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oising/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/oising"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I have to admit that `-@` has the elegance of only applying to commands, so we don't have to think about what `@@{ ... }` means when not being passed to a command as a parameter.\r\n\r\nHowever, I think my personal preference is for a splat sigil or operator:\r\n\r\n- Ubiquitous parameters that do special strange things conflate syntax and parameter value passing too much for my liking\r\n- We already have `@var`, which doesn't square well with `-@`; the different sigil implies to me that the shape of the peg has changed, whereas the `-@` implies that the shape of the hole has. My mental schema of splatting is now inconsistent juggling both at once\r\n- We also support multiple splatting today (example below). This makes it harder for `-@`, since currently PowerShell does not allow duplicate parameter names.\r\n\r\n```powershell\r\n> $x = 1,2,3\r\n> $y = @{ d = 'a'; e = 'b' }\r\n> $z = @{ f = 'Duck'; g = 'Banana' }\r\n> function Test($a, $b, $c, $d, $e, $f, $g) { $a; $b; $c; $d; $e; $f; $g }\r\n> Test @x @y @z\r\n1\r\n2\r\n3\r\na\r\nb\r\nDuck\r\nBanana\r\n```",
    "created_at": "2020-06-11T01:45:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642355794",
    "id": 642355794,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjM1NTc5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642355794/reactions"
    },
    "updated_at": "2020-06-11T01:45:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642355794",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt `-@` is actually never parsed as a parameter name currently, so it would need changes to parsing as it is, there shouldn't be any additional issues compared to implementing `@@{...}`. It parses as a positional value only at the moment. If anything, it can easily take a shortcut out of the parameter parsing mode since `-@` is already an invalid parameter name. 🙂 \r\n\r\nIn my opinion `-@` would be nicer & potentially clearer, but I understand everyone has their own preferences. ^^",
    "created_at": "2020-06-11T01:50:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642357043",
    "id": 642357043,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjM1NzA0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642357043/reactions"
    },
    "updated_at": "2020-06-11T01:52:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642357043",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> -@ is actually never parsed as a parameter name currently\r\n\r\nYeah I get that, saw above you said it currently parses as a bareword literal. But my concerns are both more and less technical than that:\r\n\r\n- Changing parsing would need to be done either in the parser (probably the wrong place) or the parameter binder (more likely), and that would be difficult to implement correctly.\r\n- More importantly, irrespective of how the implementation treats it, the language is a human/computer interaction interface, and the question in my mind is how users who are used to PowerShell will parse it. It looks like any other parameter, just with a strange name. But to what extent will it obey the existing parameter conventions? I think the fact we would need a very different code path to deal with it is a warning sign that it would probably open up a number of cases where what users expect and what it does differ.",
    "created_at": "2020-06-11T01:58:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-642359220",
    "id": 642359220,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjM1OTIyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642359220/reactions"
    },
    "updated_at": "2020-06-11T01:58:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642359220",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> We also support multiple splatting today (example below). This makes it harder for -@, since currently PowerShell does not allow duplicate parameter names.\r\n\r\n@rjmholt That wouldn't be an issue if -@ accepted an array, like the -splat PR already does (IIRC -- it's been a while).",
    "created_at": "2020-06-12T21:33:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-643492135",
    "id": 643492135,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzQ5MjEzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643492135/reactions"
    },
    "updated_at": "2020-06-12T21:33:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643492135",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also this discussion goes a little further than simply the syntactical differences between `@@{...}` and `-splat @{}`.\r\n\r\nThe latter also supports splatting properties or method results, such as:\r\n\r\n```powershell\r\nfunction Do-This {\r\n    [CmdletBinding()]\r\n    param(\r\n        [string]$Value\r\n    )\r\n    $sb = {\r\n        # $PSBoundParameters is empty in this child scope, but $PSCmdlet.MyInvocation.BoundParameters is not\r\n        Invoke-Something -splat $PSCmdlet.MyInvocation.BoundParameters\r\n    }\r\n    & $sb\r\n}\r\n```\r\n\r\nIn general, the `-splat` syntax supports more options, and if we accept `-@` as an alias, replace `-splat` with `-@`, or just leave it as `-splat`, I feel we're making something that is much better for the non-developer and less experienced population of PowerShell scripters.\r\n\r\nAlso related, for splatting properties or method results, there is a separate PR (#11003) that supports doing that with the normal splat operator that we all use now (e.g. `Invoke-Something @PSCmdlet.MyInvocation.BoundParameters`). It's been so long I forgot that I had that other PR open independent of the `-splat` PR. Just calling that out to raise some awareness for anyone reading this PR discussion about the options that are available.",
    "created_at": "2020-06-12T21:39:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-643494126",
    "id": 643494126,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzQ5NDEyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643494126/reactions"
    },
    "updated_at": "2020-06-14T15:24:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643494126",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PoshChan please retry macos",
    "created_at": "2020-06-12T22:53:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-643513126",
    "id": 643513126,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzUxMzEyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643513126/reactions"
    },
    "updated_at": "2020-06-12T22:53:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643513126",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9250262?v=4",
      "events_url": "https://api.github.com/users/bergmeister/events{/privacy}",
      "followers_url": "https://api.github.com/users/bergmeister/followers",
      "following_url": "https://api.github.com/users/bergmeister/following{/other_user}",
      "gists_url": "https://api.github.com/users/bergmeister/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bergmeister",
      "id": 9250262,
      "login": "bergmeister",
      "node_id": "MDQ6VXNlcjkyNTAyNjI=",
      "organizations_url": "https://api.github.com/users/bergmeister/orgs",
      "received_events_url": "https://api.github.com/users/bergmeister/received_events",
      "repos_url": "https://api.github.com/users/bergmeister/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bergmeister/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bergmeister/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bergmeister"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@bergmeister, did not find matching build context: `PowerShell-CI-macOS`; allowed contexts: PowerShell-CI-SSH",
    "created_at": "2020-06-12T22:54:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-643513317",
    "id": 643513317,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzUxMzMxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 1,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643513317/reactions"
    },
    "updated_at": "2020-06-12T22:54:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/643513317",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/47263765?v=4",
      "events_url": "https://api.github.com/users/PoshChan/events{/privacy}",
      "followers_url": "https://api.github.com/users/PoshChan/followers",
      "following_url": "https://api.github.com/users/PoshChan/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoshChan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PoshChan",
      "id": 47263765,
      "login": "PoshChan",
      "node_id": "MDQ6VXNlcjQ3MjYzNzY1",
      "organizations_url": "https://api.github.com/users/PoshChan/orgs",
      "received_events_url": "https://api.github.com/users/PoshChan/received_events",
      "repos_url": "https://api.github.com/users/PoshChan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PoshChan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoshChan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PoshChan"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@PowerShell/powershell-committee discussed this in context of [RFC0002](https://github.com/PowerShell/PowerShell-RFC/blob/master/2-Draft-Accepted/RFC0002-Generalized-Splatting.md) where we decided that we would withdraw RFC0002 with the exception of fixing the issue to allow explicit parameters to override a splatted hashtable and discuss named parameters for .NET method invocation as a separate issue.  So in light of that, we will be closing this PR as discussed with @bergmeister ",
    "created_at": "2020-07-22T22:43:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-662733873",
    "id": 662733873,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjczMzg3Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/662733873/reactions"
    },
    "updated_at": "2020-07-22T22:43:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/662733873",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "no -splat, no -@, no @@ yet, will there be anything like that in the future? It seems like all approaches to improve splatting and thus usability are declined. Is there anything else in the work?",
    "created_at": "2021-05-26T13:16:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/10073#issuecomment-848761281",
    "id": 848761281,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10073",
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0ODc2MTI4MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 2,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/848761281/reactions"
    },
    "updated_at": "2021-05-26T13:16:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/848761281",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1927076?v=4",
      "events_url": "https://api.github.com/users/SeidChr/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeidChr/followers",
      "following_url": "https://api.github.com/users/SeidChr/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeidChr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeidChr",
      "id": 1927076,
      "login": "SeidChr",
      "node_id": "MDQ6VXNlcjE5MjcwNzY=",
      "organizations_url": "https://api.github.com/users/SeidChr/orgs",
      "received_events_url": "https://api.github.com/users/SeidChr/received_events",
      "repos_url": "https://api.github.com/users/SeidChr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeidChr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeidChr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeidChr"
    }
  }
]
