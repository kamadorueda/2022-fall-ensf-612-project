[
  {
    "author_association": "COLLABORATOR",
    "body": "> A better way to support this - which shouldn't break existing code - would be to use accept an _array_ of such values:\r\n> \r\n> ```powershell\r\n> # WISHFUL THINKING\r\n> New-Variable foo bar -Option ReadOnly, AllScope\r\n> ```\r\n\r\nDid you try that? Seems to work for me:\r\n\r\n```powershell\r\nNew-Variable foo bar -Option ReadOnly, AllScope\r\n(Get-Variable foo).Options\r\n# ReadOnly, AllScope\r\n```",
    "created_at": "2021-03-17T18:16:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15057#issuecomment-801304730",
    "id": 801304730,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTMwNDczMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801304730/reactions"
    },
    "updated_at": "2021-03-17T18:16:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801304730",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience, well I'll be...\r\n\r\nThanks, trying that hadn't even _occurred_ to me, given the type of the parameter.\r\n\r\nBut now I see that casting an array of strings directly to an `enum` in PowerShell is directly supported:\r\n\r\n```powershell\r\nPS> [System.Management.Automation.ScopedItemOptions] ('ReadOnly', 'AllScope')\r\nReadOnly, AllScope\r\n```\r\n\r\nThat is, `[System.Management.Automation.ScopedItemOptions] ('ReadOnly', 'AllScope')` is equivalent to `[System.Management.Automation.ScopedItemOptions] 'ReadOnly, AllScope'` and `[System.Management.Automation.ScopedItemOptions]::ReadOnly -bor  [System.Management.Automation.ScopedItemOptions]::AllScope`\r\n\r\nSo many ways to herd enums. TIL.\r\n\r\nStill, given how non-obvious this us from looking at the syntax diagram and without knowing the intricacies of these conversions, we should still consider making the parameter array-valued.\r\n",
    "created_at": "2021-03-17T18:29:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15057#issuecomment-801314563",
    "id": 801314563,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTMxNDU2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801314563/reactions"
    },
    "updated_at": "2021-03-17T18:29:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801314563",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience, I'm closing this for now, because I think the issue here is a more fundamental UI / help-system issue that I have to get a better handle on first:\r\n\r\n* Currently, nothing in the syntax diagrams indicates when a parameter happens to be a `Flags` enum and that _combinations_ are therefore automatically accepted.\r\n\r\n* `Get-ChildItem`, by using a _plural_ in its `-Attributes` parameter name, helps this a little.\r\n\r\nA simple solution would be to establish a convention to consistently use _plurals_ in parameter names that are `Flags`-enum-typed.\r\n\r\nIn the case at hand, an `-Option` could be to rename to `-Options` without breaking anyone.\r\n\r\nSeparately/additionally, syntax diagrams, when they show the individual enumeration values with `Get-Help`, could indicate `Flag` enums, along the lines of the following (borrowing metachar. `+` from regexes):\r\n\r\n```\r\n... [-Options {None | ReadOnly | Constant | Private | AllScope | Unspecified}+]\r\n```\r\n\r\n\r\n",
    "created_at": "2021-03-17T18:45:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/15057#issuecomment-801324701",
    "id": 801324701,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/15057",
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMTMyNDcwMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801324701/reactions"
    },
    "updated_at": "2021-03-17T18:47:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/801324701",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
