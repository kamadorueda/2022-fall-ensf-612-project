[
  {
    "author_association": "NONE",
    "body": "I've made some progress, but the behavior is still odd...\r\n\r\n```powershell\r\nusing module Module.psm1\r\n\r\nImport-Module Module.psm1 -Force;\r\n\r\n[hashtable]$arguments = @{\r\n  \"Databases\" = @(\r\n      [CosmosDbDatabase]::new(\"Database1\", $true, 4000),\r\n      [CosmosDbDatabase]::new(\"Database2\", $false, 400)\r\n  );\r\n};\r\n\r\nTrace-Command -Name ParameterBinding -Expression { Invoke-MyFunction @arguments} -PSHost;\r\n```\r\n\r\nyields:\r\n\r\n```none\r\nDEBUG: 2020-11-24 20:17:16.4799 ParameterBinding Information: 0 :     BIND arg [CosmosDbDatabase[]] to parameter [Databases]\r\nDEBUG: 2020-11-24 20:17:16.4799 ParameterBinding Information: 0 :         Executing DATA GENERATION metadata: [System.Management.Automation.ArgumentTypeConverterAttribute]\r\nDEBUG: 2020-11-24 20:17:16.4802 ParameterBinding Information: 0 :             ERROR: DATA GENERATION: Cannot convert the \"CosmosDbDatabase\" value of type \"CosmosDbDatabase\" to type \"CosmosDbDatabase\".\r\n```\r\nIs this bind failure expected ?",
    "created_at": "2020-11-24T19:19:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733181657",
    "id": 733181657,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzE4MTY1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733181657/reactions"
    },
    "updated_at": "2020-11-24T19:19:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733181657",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1357057?v=4",
      "events_url": "https://api.github.com/users/mmisztal1980/events{/privacy}",
      "followers_url": "https://api.github.com/users/mmisztal1980/followers",
      "following_url": "https://api.github.com/users/mmisztal1980/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmisztal1980/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mmisztal1980",
      "id": 1357057,
      "login": "mmisztal1980",
      "node_id": "MDQ6VXNlcjEzNTcwNTc=",
      "organizations_url": "https://api.github.com/users/mmisztal1980/orgs",
      "received_events_url": "https://api.github.com/users/mmisztal1980/received_events",
      "repos_url": "https://api.github.com/users/mmisztal1980/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mmisztal1980/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmisztal1980/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mmisztal1980"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Does your example repro the problem for you? I can't get it to error.\r\n\r\nAnyway, my guess without repro is that it's related this these lines:\r\n\r\n```powershell\r\nusing module Module.psm1\r\n\r\nImport-Module Module.psm1 -Force\r\n```\r\n\r\nTry taking out the `Import-Module` line.  There are some circumstances where you could be creating two instances of the module, importing the types from the first, and importing the commands from the second.  That shouldn't really happen outside of design time though.",
    "created_at": "2020-11-24T20:26:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733214772",
    "id": 733214772,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzIxNDc3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733214772/reactions"
    },
    "updated_at": "2020-11-24T20:26:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733214772",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SeeminglyScience I think you've hit the nail in the head. It started to work.\r\n\r\nI recall that I've added the `Import-Module` in order to reload changes I've made during development - I don't think the same effect is possible with `using module` - is it?",
    "created_at": "2020-11-24T22:07:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733260972",
    "id": 733260972,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzI2MDk3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733260972/reactions"
    },
    "updated_at": "2020-11-24T22:07:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733260972",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1357057?v=4",
      "events_url": "https://api.github.com/users/mmisztal1980/events{/privacy}",
      "followers_url": "https://api.github.com/users/mmisztal1980/followers",
      "following_url": "https://api.github.com/users/mmisztal1980/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmisztal1980/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mmisztal1980",
      "id": 1357057,
      "login": "mmisztal1980",
      "node_id": "MDQ6VXNlcjEzNTcwNTc=",
      "organizations_url": "https://api.github.com/users/mmisztal1980/orgs",
      "received_events_url": "https://api.github.com/users/mmisztal1980/received_events",
      "repos_url": "https://api.github.com/users/mmisztal1980/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mmisztal1980/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmisztal1980/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mmisztal1980"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mmisztal1980 Yeah unfortunately you can't.  Even with `Import-Module -Force` it's not super consistent in whether it actually loads the new types.  For now the best workflow is a fresh session.\r\n\r\nI do something like this:\r\n\r\n```powershell\r\nPS> cd to/project/directory\r\nPS> pwsh # enter nested shell\r\nPS> PS> & ./script.ps1\r\nPS> PS> exit\r\nPS> pwsh # hit up arrow\r\n# repeat\r\n```",
    "created_at": "2020-11-25T00:54:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733394419",
    "id": 733394419,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzM5NDQxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733394419/reactions"
    },
    "updated_at": "2020-11-25T00:55:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733394419",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Can we please re-activate this Issue? I came to github today to find-and-upvote or file an Issue for this exact problem. I also believe it's due to the \"Import-Module [...] **-Force**\" to reload the module. And just like re-executing `Add-Type` for a snippet of C# code that has not changed, reloading a module that uses classes should also continue to work.\r\n\r\nThis does *not* only come up during development scenarios. For example, I have a module that auto-updates itself, and then instructs the end user to run \"Import-Module [...] -Force\" to pick up the changes.",
    "created_at": "2020-11-25T21:14:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733948713",
    "id": 733948713,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzk0ODcxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733948713/reactions"
    },
    "updated_at": "2020-11-25T21:14:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733948713",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I should also note that key to the repro is touching the file where the class is defined (before re-importing the module). You don't have to change the class definition; just add some whitespace somewhere else in the file. Which makes me think that the logic out there for deciding whether to generate a new runtime type for the class is making its decision based on whether the containing file has changed or not, but could do better by looking at just the extent where the class is defined.",
    "created_at": "2020-11-25T21:26:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733953138",
    "id": 733953138,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzk1MzEzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733953138/reactions"
    },
    "updated_at": "2020-11-25T21:26:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733953138",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Here is solid repro code:\r\n\r\n```powershell\r\nmkdir Repro_gh_14250 | Out-Null\r\npushd Repro_gh_14250\r\nNew-ModuleManifest -Path .\\Repro.psd1 -RootModule Repro.psm1\r\n\r\n@'\r\n$script:data = [ordered] @{\r\n    First = @(\"Primo\", 123)\r\n    Second = @(\"Secundo\", 456)\r\n}\r\n\r\nclass ReproType\r\n{\r\n    [string] $Name\r\n    [int] $Number\r\n}\r\n\r\n$TheList = @()\r\nforeach( $key in $script:data.Keys )\r\n{\r\n    $newThing = [ReproType]::new()\r\n    $newThing.Name = $script:data[ $key ][ 0 ]\r\n    $newThing.Number = $script:data[ $key ][ 1 ]\r\n\r\n    $TheList += $newThing\r\n}\r\n\r\nfunction Get-TheList\r\n{\r\n    [CmdletBinding()]\r\n    param()\r\n\r\n    process { return $TheList }\r\n}\r\n'@ > Stuff1.ps1\r\n\r\n@'\r\nfunction Show-TheList\r\n{\r\n    [CmdletBinding()]\r\n    param( [ReproType[]] $TheItems )\r\n\r\n    process\r\n    {\r\n        foreach( $item in $TheItems )\r\n        {\r\n            Write-Host $item.Name -Fore Cyan -NoNewline\r\n            Write-Host \": \" -NoNewline\r\n            Write-Host $item.Number -Fore Yellow\r\n        }\r\n    }\r\n}\r\n\r\nfunction Repro\r\n{\r\n    [CmdletBinding()]\r\n    param()\r\n\r\n    $stuff = @( Get-TheList )\r\n    Show-TheList $stuff\r\n}\r\n'@ > Stuff2.ps1\r\n\r\n@'\r\n\r\n. \"$PSScriptRoot\\Stuff1.ps1\"\r\n. \"$PSScriptRoot\\Stuff2.ps1\"\r\n\r\n'@ > Repro.psm1\r\n\r\nipmo .\\Repro.psd1 -Force\r\nRepro\r\n'# nothing' >> .\\Stuff1.ps1\r\nipmo .\\Repro.psd1 -Force\r\nRepro    # EXPECTED: it works. ACTUAL: Cannot process argument transformation on parameter 'TheItems'. Cannot convert the \"ReproType\" value of type \"ReproType\" to type \"ReproType\".\r\n```",
    "created_at": "2020-11-25T23:01:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733982888",
    "id": 733982888,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzk4Mjg4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733982888/reactions"
    },
    "updated_at": "2020-11-25T23:01:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733982888",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jazzdelightsme what does `Trace-Command -Name ParameterBinding -Expression { Invoke-MyFunction @arguments} -PSHost;` tell you?",
    "created_at": "2020-11-25T23:09:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733985106",
    "id": 733985106,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzk4NTEwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733985106/reactions"
    },
    "updated_at": "2020-11-25T23:09:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733985106",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1357057?v=4",
      "events_url": "https://api.github.com/users/mmisztal1980/events{/privacy}",
      "followers_url": "https://api.github.com/users/mmisztal1980/followers",
      "following_url": "https://api.github.com/users/mmisztal1980/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmisztal1980/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mmisztal1980",
      "id": 1357057,
      "login": "mmisztal1980",
      "node_id": "MDQ6VXNlcjEzNTcwNTc=",
      "organizations_url": "https://api.github.com/users/mmisztal1980/orgs",
      "received_events_url": "https://api.github.com/users/mmisztal1980/received_events",
      "repos_url": "https://api.github.com/users/mmisztal1980/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mmisztal1980/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmisztal1980/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mmisztal1980"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I think it is basically what is expected (given the bug). For my repro code, the trace command should be:\r\n\r\n```powershell\r\nTrace-Command -Name ParameterBinding -Expression { Repro } -PSHost\r\n```\r\n\r\nThe relevant snippet of output:\r\n\r\n```none\r\nBIND POSITIONAL cmd line args [Show-TheList]\r\n    BIND arg [System.Object[]] to parameter [TheItems]\r\n        Executing DATA GENERATION metadata: [System.Management.Automation.ArgumentTypeConverterAttribute]\r\n            result returned from DATA GENERATION: System.Object[]\r\n        Binding collection parameter TheItems: argument type [Object[]], parameter type [ReproType[]], collection type Array, element type [ReproType], no coerceElementType\r\n        Arg is IList with 2 elements\r\n        Creating array with element type [ReproType] and 2 elements\r\n        Argument type System.Object[] is IList\r\n        COERCION REQUIRED: Did not attempt to coerce collection element from type ReproType to type ReproType\r\n        BIND arg [System.Object[]] to param [TheItems] SKIPPED\r\n    BIND arg [System.Object[]] to parameter [TheItems]\r\n        Executing DATA GENERATION metadata: [System.Management.Automation.ArgumentTypeConverterAttribute]\r\n            ERROR: DATA GENERATION: Cannot convert the \"ReproType\" value of type \"ReproType\" to type \"ReproType\".\r\n```",
    "created_at": "2020-11-25T23:17:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733986978",
    "id": 733986978,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzk4Njk3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733986978/reactions"
    },
    "updated_at": "2020-11-25T23:17:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733986978",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "NONE",
    "body": "@jazzdelightsme I think I know what's going on:\r\n\r\n```powershell\r\n$stuff = @( Get-TheList )\r\n```\r\n\r\nreplace with \r\n\r\n```powershell\r\n$stuff = [ReproType[]]( Get-TheList )\r\n```\r\n\r\nAnd see what `Trace-Command` gives you",
    "created_at": "2020-11-26T00:07:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-733999922",
    "id": 733999922,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMzk5OTkyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733999922/reactions"
    },
    "updated_at": "2020-11-26T00:07:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/733999922",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1357057?v=4",
      "events_url": "https://api.github.com/users/mmisztal1980/events{/privacy}",
      "followers_url": "https://api.github.com/users/mmisztal1980/followers",
      "following_url": "https://api.github.com/users/mmisztal1980/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmisztal1980/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mmisztal1980",
      "id": 1357057,
      "login": "mmisztal1980",
      "node_id": "MDQ6VXNlcjEzNTcwNTc=",
      "organizations_url": "https://api.github.com/users/mmisztal1980/orgs",
      "received_events_url": "https://api.github.com/users/mmisztal1980/received_events",
      "repos_url": "https://api.github.com/users/mmisztal1980/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mmisztal1980/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmisztal1980/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mmisztal1980"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that makes the \"cannot convert\" error happen earlier, before parameter binding. But of course it doesn't matter whether I hit the problem during parameter binding or just trying to manually cast; I think it should work.",
    "created_at": "2020-11-26T00:12:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-734002305",
    "id": 734002305,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDAwMjMwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/734002305/reactions"
    },
    "updated_at": "2020-11-26T00:12:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/734002305",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thing is the `@` character causes the array to be cast to `[Object[]]` irregardless of types within :)",
    "created_at": "2020-11-26T00:24:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-734005322",
    "id": 734005322,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDAwNTMyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/734005322/reactions"
    },
    "updated_at": "2020-11-26T00:24:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/734005322",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1357057?v=4",
      "events_url": "https://api.github.com/users/mmisztal1980/events{/privacy}",
      "followers_url": "https://api.github.com/users/mmisztal1980/followers",
      "following_url": "https://api.github.com/users/mmisztal1980/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmisztal1980/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mmisztal1980",
      "id": 1357057,
      "login": "mmisztal1980",
      "node_id": "MDQ6VXNlcjEzNTcwNTc=",
      "organizations_url": "https://api.github.com/users/mmisztal1980/orgs",
      "received_events_url": "https://api.github.com/users/mmisztal1980/received_events",
      "repos_url": "https://api.github.com/users/mmisztal1980/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mmisztal1980/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmisztal1980/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mmisztal1980"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "With or without the `@`, I get the \"cannot convert\" error, so I am confused why you bring it up.",
    "created_at": "2020-11-26T00:34:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-734007750",
    "id": 734007750,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNDAwNzc1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/734007750/reactions"
    },
    "updated_at": "2020-11-26T00:34:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/734007750",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  },
  {
    "author_association": "NONE",
    "body": "I haven't tested your code sample, but as I'm also developing classes inside modules, I have seen similar confusing errors as you have reported. (I'm actually in the process of trying to find a work-around for a class issue, hence me perusing the PowerShell issues. I noticed this one and thought I should give my 2 pence worth, so just bear with me)\r\n\r\nThere are some really important notes you should bear in mind when it comes to classes in PowerShell.\r\n\r\n1) Unlike functions, once a class is defined in a PS session it can NOT be modified. This is a real problem that I hope the PS team will resolve one day. The only way to fix the issue is to restart your session then re-do your import. But let's say you have some Pester tests that imort the module under development. This will work the first time in one way, but if you modify the c;lass defintion and thn re-run the tests, the class definition will not change and you get errors very similar to the one you have reported and that I have experienced. Restart the session and you should pick up the new class definition. This is a problem because it implies that every time you re-run these tests, you first need to restart the session (which clearly is very onerous on the developer).\r\n\r\n2) If the module you are developing is imported in your profile, then if you start making changes to the classes in the module, you will run into the same problem as 1) above except that restarting the session will no longer fix the issue. Remove the import from the profile (note there is another VSC specific session file: *Microsoft.VSCode_profile*) and leave the import to the Pester unit test, eg:\r\n\r\n```powershell\r\n  BeforeAll {\r\n    InModuleScope ModuleUnderTest {\r\n      Get-Module ModuleUnderTest | Remove-Module -Force\r\n      Import-Module .\\Output\\ModuleUnderTest\\ModuleUnderTest.psm1 `\r\n        -ErrorAction 'stop' -DisableNameChecking\r\n    }\r\n  }\r\n```\r\n\r\n3) You need to be very careful how you structure your powershell code if it contains classes. In your example (*CosmosDbDatabase *), with the function Invoke-MyFunction, this will work ok as long as they reside in the SAME file.\r\n\r\nIf Invoke-MyFunction is defined inside a different file to CosmosDbDatabase then the line containing the parameter definition:\r\n\r\n> [CosmosDbDatabase[]]$Databases\r\n\r\nwill not work; the type CosmosDbDatabase can't be resolved unless there is a using module <ModuleUnderTest> statement at the top of the file. But a common pattern for constructing powershell modules is to have a build stage that concatenates all sources into the .psm file, which means you can't use the using module technique, unless your build stage has some logic in it to strip out alll using statements before combining them into the psm file,, then injecting the required using statements at the top of the file. (PS: the using statements inside the original source files would stop VSC from reporting errors in the text editor, but need to be injected into the top of the psm file as stated already)\r\n\r\nA technique I've had to start using is to create a new module containing only the classes. (for the purposes of this discussion, lets call this new class module *CosmosDbDatabaseClass* and the client code which contains Invoke-MyFunction resides in module *CosmosDbDatabaseClient*). (By the way, I am not suggestting you have 1 class per module, that clearly is ridiculous, I'm just explaining the technique). The purpose of CosmosDbDatabaseClass module is to contain only the class definitions and develop this module independently. Then CosmosDbDatabaseClient module has a dependency on CosmosDbDatabaseClass module. With this new arrangemnt in place, now what you can do is have CosmosDbDatabaseClient have a _using module CosmosDbDatabaseClass_ statement in its psm1 file, and you can safely declare variables of type CosmosDbDatabase or CosmosDbDatabase[] ok. This won't fix the issue of classes not being able to be modified inside the current session, but you can declare variables to be of that class type. I'm not that happy about having to extract out my class code like this, but at least it allows me to use class references easily.\r\n\r\nIt looks like you and others are aware of the issue of class definition requiring a session restart, but I thought I would contribute, sharing my experience may help to find a way forward. Of course, the best way forward would be for The PS team to fix this class issue once and for all, but I'm sure they would have done so already if it was easy and not breaking existing code. However, because of the real problems of classes in modules, I would hope that the PS team would at some stage make a breaking change, because the status quo is almost intolerable and (arguably it is already in a broken state) needs a resolution to avert extravagent work arounds.\r\n\r\nPS: I have found a way to start a new powershell session without having to close the current host window:\r\n\r\n> Invoke-Command { & \"pwsh\" } -NoNewScope\r\n\r\nBut this does not close the current session. This could end up with a whole stack of powershell sessions, when what we'd prefer is to close the currnt session and start a new one. I have submitted a feature request #14536.\r\n\r\n\r\n\r\n",
    "created_at": "2021-01-03T20:27:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-753671461",
    "id": 753671461,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1MzY3MTQ2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753671461/reactions"
    },
    "updated_at": "2021-01-04T11:08:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/753671461",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
      "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
      "followers_url": "https://api.github.com/users/plastikfan/followers",
      "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
      "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/plastikfan",
      "id": 49785914,
      "login": "plastikfan",
      "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
      "organizations_url": "https://api.github.com/users/plastikfan/orgs",
      "received_events_url": "https://api.github.com/users/plastikfan/received_events",
      "repos_url": "https://api.github.com/users/plastikfan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/plastikfan"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> 1. Unlike functions, once a class is defined in a PS session it can NOT be modified.\r\n\r\nIt's a little bit more complicated than that.  They *can* be modified (well sort of, a new type is generated and type resolution is changed to point to the new version) if they weren't imported using `using module X`.  For example, if the class is used purely for internal module logic and not exposed as a public API, `Import-Module X -Force` will work in most cases. The new module session state will point to the new class just like expected.\r\n\r\nOn the subject of adding a `using module X -Force`, the complication there is that it's a *parse* time concept.  There are a lot of bits in the compiler where the type is currently cached that would need to be invalidated.  That's not impossible, but getting that to work right is a large work item.\r\n\r\nAnother problem that would need to be solved is subclasses. Lets say you have these files:\r\n\r\n```powershell\r\n# ModuleX.psm1\r\nclass Foo { }\r\n```\r\n\r\n```powershell\r\n# Bar.ps1\r\nusing module ModuleX\r\nclass Bar : Foo { }\r\n```\r\n\r\n```powershell\r\n# Bar2.ps1\r\nusing module ModuleX -Force\r\nclass Bar2 : Foo { }\r\n```\r\n\r\n```powershell\r\n# Main.ps1\r\n. ./Bar.ps1\r\n. ./Bar2.ps1\r\n\r\nUpdate-Module ModuleX\r\n. ./Bar2.ps1\r\n```\r\n\r\nAfter the last line of `Main.ps1`, what does `Bar` inherit now? Is the type recreated because `Bar2.ps1` has `-Force`? Or are they just now incompatible with each other?  What if the new version has breaking changes that `Bar2.ps1` expects, but `Bar.ps1` doesn't?",
    "created_at": "2021-01-04T15:01:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-754026076",
    "id": 754026076,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDAyNjA3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/754026076/reactions"
    },
    "updated_at": "2021-01-04T15:01:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/754026076",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "Its a shame that these details are not widely known and documented. This article: [About Classes](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_classes?view=powershell-7.1) is woefully deficient and this article [About Using](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_using?view=powershell-7.1) has only a small entry relating to classes.\r\n",
    "created_at": "2021-01-04T18:13:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-754131139",
    "id": 754131139,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDEzMTEzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/754131139/reactions"
    },
    "updated_at": "2021-01-04T18:13:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/754131139",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
      "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
      "followers_url": "https://api.github.com/users/plastikfan/followers",
      "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
      "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/plastikfan",
      "id": 49785914,
      "login": "plastikfan",
      "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
      "organizations_url": "https://api.github.com/users/plastikfan/orgs",
      "received_events_url": "https://api.github.com/users/plastikfan/received_events",
      "repos_url": "https://api.github.com/users/plastikfan/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/plastikfan"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mmisztal1980 Why close this Issue?",
    "created_at": "2021-01-21T20:21:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/14250#issuecomment-764912853",
    "id": 764912853,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/14250",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDkxMjg1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/764912853/reactions"
    },
    "updated_at": "2021-01-21T20:21:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/764912853",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
      "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
      "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
      "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
      "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jazzdelightsme",
      "id": 771085,
      "login": "jazzdelightsme",
      "node_id": "MDQ6VXNlcjc3MTA4NQ==",
      "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
      "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
      "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jazzdelightsme"
    }
  }
]
