[
  {
    "author_association": "NONE",
    "body": "It always puzzled me that this is also allowed\r\n```\r\nfunction test {\r\n\r\nparam (\r\n    ${foo bar}\r\n    )\r\n\r\n    $PSBoundParameters\r\n}\r\n```\r\n\r\nthe parameter can be passed by position\r\n```\r\n> test 1\r\n\r\nKey     Value\r\n---     -----\r\nfoo bar     1\r\n```\r\n\r\nbut tab completion builds `test -foo bar `   where `-foo` is sufficient to identify the parameter and `bar`  will become its value. \r\n\r\nYou just know that out in the world someone who always passes parameters by position has a param block\r\n`param ($1, $2, $3 )`  to write things very close to old style batch files.   Tightening up rules for parameter names will break those. So we may be stuck allowing people to pick stupid names, but relying on them not to do so  \r\n\r\n ",
    "created_at": "2022-07-26T10:02:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17767#issuecomment-1195277188",
    "id": 1195277188,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17767",
    "node_id": "IC_kwDOAvT7bc5HPnuE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1195277188/reactions"
    },
    "updated_at": "2022-07-26T10:02:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1195277188",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> `${foo bar}`\r\n\r\nYou just need to call it correctly (I'm kidding): `` test -foo` bar hi `` \r\nAs a bonus, such a parameter doesn't require an argument anymore: `` test -foo` bar `` (quiet no-op).\r\n\r\nWell, I'd say that at least preventing something like `${foo bar}` at parse time is a prime candidate for a bucket 3 change - as is #17519 in my estimation (even though it has already been declined for fear of breaking things, but I think that fear is unfounded).\r\n\r\nFair point about the possibility of `param ($1, $2, $3)` - perhaps someone is willing to look at real-world scripts to see how common that is.\r\n\r\nIn general, this kind of permissiveness in naming that has only downsides appears to be a recurring theme - I'm reminded of #14025.\r\n\r\nIf something must not be broken, a PSScriptAnalyzer rule is the next best thing.\r\n",
    "created_at": "2022-07-26T12:58:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17767#issuecomment-1195449677",
    "id": 1195449677,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17767",
    "node_id": "IC_kwDOAvT7bc5HQR1N",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1195449677/reactions"
    },
    "updated_at": "2022-07-26T12:58:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1195449677",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Definitely should be a script analyzer rule if nothing else. \r\nI doubt if the the `param ($1, $2, $3)` is common - even in batch files converted to PowerShell scripts, because I think people would tend to use `$args`  but the original Murphy's law had it that if can be done wrongly, someone will do that,  so if the syntax allows it, the script that _relies_ on it is out there somewhere - as I say, probably not common, but I'd guess more likely to break than #17519 ",
    "created_at": "2022-07-27T08:17:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17767#issuecomment-1196408233",
    "id": 1196408233,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17767",
    "node_id": "IC_kwDOAvT7bc5HT72p",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1196408233/reactions"
    },
    "updated_at": "2022-07-27T08:17:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1196408233",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  }
]
