[
  {
    "author_association": "NONE",
    "body": "So. You know that thing in PowerShell where you have small composable cmdlets ? And you put two or more together to get the result you want.  It's value is absolutely tiny \r\n\r\n`10,11,15  | % {Invoke-History -Id $_ }`",
    "created_at": "2020-04-25T11:57:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619368296",
    "id": 619368296,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM2ODI5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 1,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619368296/reactions"
    },
    "updated_at": "2020-04-25T11:57:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619368296",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "NONE",
    "body": "> So. You know that thing in PowerShell where you have small composable cmdlets ? And you put two or more together to get the result you want. It's value is absolutely tiny\r\n> \r\n> `10,11,15 | % {Invoke-History -Id $_ }`\r\n\r\nThat's what I did, obviously. \r\n\r\n `$list | foreach {  Do-something -target  $_ }  `   is a work round for a poorly designed command i.e. one that does not support the pipeline when it _could_, and is not, itself, composable.   \r\nThere is nothing wrong with code which says \r\n```\r\n$x = Command1\r\nCommand2 -Target $x \r\n```\r\nBut one should be able to write `Command1 | command2`  that's  one of the founding principles of the language. Similarly there is nothing wrong with \r\n```\r\nCommand -Target item1\r\nCommand -Target item2\r\nCommand -Target item3\r\n```\r\nif that is how one chooses to write it. But `Command -Target item1, item2, item3 ` should be supported. Commands which don't work that way are the aberrations: that shouldn't need explaining. \r\n\r\nSimilarly the principle is not to build sorting or formatting or exporting into commands which are part of the language. Especially when they are simple to add as a functions being `X  <params> | Y <params> ` ",
    "created_at": "2020-04-25T14:56:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619391634",
    "id": 619391634,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM5MTYzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619391634/reactions"
    },
    "updated_at": "2020-04-25T14:56:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619391634",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": " _one should be able to write Command1 | command2 that's one of the founding principles of the language_\r\n\r\nput two or more cmdlet together to get the result you want..its thee principle of this language\r\n\r\n_Especially when they are simple to add as a functions being X <params> | Y <params>_\r\n\r\nyes i am with you  but  with _invoke-history_  It's value is absolutely tiny",
    "created_at": "2020-04-25T15:31:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619396774",
    "id": 619396774,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTM5Njc3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619396774/reactions"
    },
    "updated_at": "2020-04-25T15:32:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619396774",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36144546?v=4",
      "events_url": "https://api.github.com/users/p0W3RH311/events{/privacy}",
      "followers_url": "https://api.github.com/users/p0W3RH311/followers",
      "following_url": "https://api.github.com/users/p0W3RH311/following{/other_user}",
      "gists_url": "https://api.github.com/users/p0W3RH311/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/p0W3RH311",
      "id": 36144546,
      "login": "p0W3RH311",
      "node_id": "MDQ6VXNlcjM2MTQ0NTQ2",
      "organizations_url": "https://api.github.com/users/p0W3RH311/orgs",
      "received_events_url": "https://api.github.com/users/p0W3RH311/received_events",
      "repos_url": "https://api.github.com/users/p0W3RH311/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/p0W3RH311/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/p0W3RH311/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/p0W3RH311"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Let's not get off topic and bring other discussions that aren't really related to the issue at hand, please. :blush: \r\n\r\nI don't see any reason that Invoke-History _shouldn't_ take pipeline input. It's a fairly straightforward thing to add in the design of a command, and while it might be used by everyone, it does make the command more versatile for a wider variety of use cases.\r\n\r\nI'm gonna mark this up for grabs for now, it's not a massive or breaking change. :+1: ",
    "created_at": "2020-04-25T16:02:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619401121",
    "id": 619401121,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQwMTEyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619401121/reactions"
    },
    "updated_at": "2020-04-25T16:02:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619401121",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "\r\n> yes i am with you but with _invoke-history_ It's value is absolutely tiny\r\n\r\nActually I agree. In another thread I've just been saying \"we've got this far without this\".\r\nIt's one of a small number which have this failing. (Start is another). It's like the door that has squeaked for years and no one oils it, and everyone accepts it. And the harm / value from fixing it is tiny. But eventually someone needs to say \"For pity's sake someone oil that door\". \r\n    \r\n ",
    "created_at": "2020-04-25T16:02:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619401142",
    "id": 619401142,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQwMTE0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619401142/reactions"
    },
    "updated_at": "2020-04-25T16:02:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619401142",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32 \r\n\r\n> I don't see any reason that Invoke-History shouldn't take pipeline input.\r\n\r\nIf you read the examples below, you will see that was intentional at design time.\r\nMaybe add a _confirm_ parameter if there is more than two to invoke, will be more secure.\r\n\r\n```\r\nPS > Get-History -Id 1,2,3 | Invoke-History\r\nInvoke-History: Cannot process multiple history commands. You can only run a single command by using Invoke-History.\r\n\r\nPS > Invoke-History -Id 1,2\r\nInvoke-History: Cannot convert 'System.Object[]' to the type 'System.String' required by parameter 'Id'. Specified method is not supported.\r\n```",
    "created_at": "2020-04-25T21:37:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619444017",
    "id": 619444017,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ0NDAxNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619444017/reactions"
    },
    "updated_at": "2020-04-25T21:37:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619444017",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The latter is just a binding exception; you'll get similar results if you provide an array for any string parameter.\r\n\r\nAs for the former, sure, it may have been intentional. Without having spoken to the designer of the original command, I can't speak to their intent, though. As has already been mentioned in this issue, you can work around this with a simple `ForEach-Object`, so I'm not sure it makes a lot of sense in terms of its efficacy.",
    "created_at": "2020-04-25T21:40:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619444421",
    "id": 619444421,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ0NDQyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619444421/reactions"
    },
    "updated_at": "2020-04-25T21:40:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619444421",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "There is also weird behaviour with the pipeline :\r\n```\r\nPS C:\\Users\\Flavien> \"foo\"\r\nfoo\r\nPS C:\\Users\\Flavien> 1 | Invoke-History\r\nInvoke-History: The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.\r\n\"foo\"\r\nfoo\r\n```",
    "created_at": "2020-04-25T21:41:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619444540",
    "id": 619444540,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTQ0NDU0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619444540/reactions"
    },
    "updated_at": "2020-04-25T21:41:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619444540",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6187529?v=4",
      "events_url": "https://api.github.com/users/fMichaleczek/events{/privacy}",
      "followers_url": "https://api.github.com/users/fMichaleczek/followers",
      "following_url": "https://api.github.com/users/fMichaleczek/following{/other_user}",
      "gists_url": "https://api.github.com/users/fMichaleczek/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/fMichaleczek",
      "id": 6187529,
      "login": "fMichaleczek",
      "node_id": "MDQ6VXNlcjYxODc1Mjk=",
      "organizations_url": "https://api.github.com/users/fMichaleczek/orgs",
      "received_events_url": "https://api.github.com/users/fMichaleczek/received_events",
      "repos_url": "https://api.github.com/users/fMichaleczek/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/fMichaleczek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fMichaleczek/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/fMichaleczek"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "FYI - The history command was very minimally designed and implemented in version 1. Basically we wanted to at least be able to do `r N` to  rerun command N. This was inspired by the ksh functionality that we were used to and we (I) figured we'd add more functionality to the commands over time. In fact that didn't happen and most of the work went into interactive editing (PSReadLine).  So there's a ton of [functionality](https://www.digitalocean.com/community/tutorials/how-to-use-bash-history-commands-and-expansions-on-a-linux-vps)  that could be added if people are interested. And, given that this is a user-productivity thing, I don't think the usual minimalism principles necessarily apply. ",
    "created_at": "2020-04-26T20:17:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-619618853",
    "id": 619618853,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTYxODg1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619618853/reactions"
    },
    "updated_at": "2020-04-26T20:17:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/619618853",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Further on the minimalism thing. Functionality should be designed as a set of composable commands but once that's done, you can selectively add \"accelerators\" for high-use (typically interactive) cases. This includes things like command and parameter aliases, type accelerator and extra options on cmdlets for scenarios that are used a lot (e.g. the `-file` and `-directory` parameters on `Get-ChildItem`.) Does that make sense?",
    "created_at": "2020-04-28T20:33:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-620839306",
    "id": 620839306,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDgzOTMwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620839306/reactions"
    },
    "updated_at": "2020-04-28T20:33:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/620839306",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/50499275?v=4",
      "events_url": "https://api.github.com/users/bpayette/events{/privacy}",
      "followers_url": "https://api.github.com/users/bpayette/followers",
      "following_url": "https://api.github.com/users/bpayette/following{/other_user}",
      "gists_url": "https://api.github.com/users/bpayette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/bpayette",
      "id": 50499275,
      "login": "bpayette",
      "node_id": "MDQ6VXNlcjUwNDk5Mjc1",
      "organizations_url": "https://api.github.com/users/bpayette/orgs",
      "received_events_url": "https://api.github.com/users/bpayette/received_events",
      "repos_url": "https://api.github.com/users/bpayette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/bpayette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bpayette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/bpayette"
    }
  },
  {
    "author_association": "NONE",
    "body": "@BrucePay  - yes, it's a very good way of putting what I think I knew. ",
    "created_at": "2020-04-29T13:12:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/12488#issuecomment-621195159",
    "id": 621195159,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/12488",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMTE5NTE1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621195159/reactions"
    },
    "updated_at": "2020-04-29T13:12:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/621195159",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  }
]
