[
  {
    "author_association": "COLLABORATOR",
    "body": "This is essentially the problem described in #4003. The current expected behavior is for an affinitized scriptblock to be executed in the runspace where it was created. This can only happen if the runspace is otherwise idle so the invocation is posted as an event to be invoked when the runspace becomes available. That said, it's no longer clear that this is the desired behavior. Some history: PSObject affinity was introduced in V1 so that objects returned from the runspace to the calling code could be evaluated by the calling code directly. PSObject affinity included script methods which included scriptblocks. In V2, I added an explicit affinity to scriptblocks so that invoking a scriptblock returned from a _module_  (i.e. a function exported from a module) would execute in the module context. So scriptblocks are tied to modules which are tied to runspaces thus it makes sense to do this cross runspace invocation. However for concurrent operation, this semantic doesn't work since execution ends up serializing on the invoking runspace. This is one of the areas I'm investigating for #6716.",
    "created_at": "2018-08-24T19:49:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7626#issuecomment-415864493",
    "id": 415864493,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7626",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTg2NDQ5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/415864493/reactions"
    },
    "updated_at": "2018-08-24T19:49:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/415864493",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  }
]
