[
  {
    "author_association": "COLLABORATOR",
    "body": "Well, it isn't a loop.\r\nYou are using foreach-object cmdlet in a pipeline.\r\n\r\nIf `continue` should be valid there, it should also be valid in\r\n```\r\n& {\r\n   if($a -eq 0){\r\n       continue\r\n   }\r\n}\r\n```\r\nAnd that is not obviously correct.",
    "created_at": "2017-05-30T14:29:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-304896319",
    "id": 304896319,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg5NjMxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304896319/reactions"
    },
    "updated_at": "2017-05-30T14:29:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304896319",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "`break` and `continue` work dynamically - meaning the `break`/`continue` statement searches for an appropriate loop to break from at runtime.  For example:\r\n\r\n```powershell\r\nfunction foo {\r\n    break outer # No loop in this function!\r\n}\r\n:outer foreach ($i in 1..100) {\r\n    $i\r\n    foreach ($j in 100..1000) {\r\n        foo\r\n    }\r\n}\r\n```\r\n\r\nThis will output a single number, breaking out of the outer loop.\r\n\r\nThe unfortunate thing is that `break` sort of works as people expect with `ForEach-Object`, but in my opinion, it's sort of an accident that falls out from the implementation.\r\n\r\nUnder the covers, the `break` turns into an exception (always V2 or earlier, V3 onwards if not lexically within a loop statement), the exception is always silent (because you don't really want to think of `break` as an exception, so it's silent even if we don't find a matching loop.",
    "created_at": "2017-05-30T16:53:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-304940545",
    "id": 304940545,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk0MDU0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304940545/reactions"
    },
    "updated_at": "2017-05-30T16:53:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304940545",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Cool, and **really** unexpected :)\r\n",
    "created_at": "2017-05-30T19:16:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-304979624",
    "id": 304979624,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk3OTYyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304979624/reactions"
    },
    "updated_at": "2017-05-30T19:16:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304979624",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3505151?v=4",
      "events_url": "https://api.github.com/users/powercode/events{/privacy}",
      "followers_url": "https://api.github.com/users/powercode/followers",
      "following_url": "https://api.github.com/users/powercode/following{/other_user}",
      "gists_url": "https://api.github.com/users/powercode/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/powercode",
      "id": 3505151,
      "login": "powercode",
      "node_id": "MDQ6VXNlcjM1MDUxNTE=",
      "organizations_url": "https://api.github.com/users/powercode/orgs",
      "received_events_url": "https://api.github.com/users/powercode/received_events",
      "repos_url": "https://api.github.com/users/powercode/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/powercode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/powercode/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/powercode"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@rdbartram:\r\n\r\nIn a `%` (`ForEach-Object`) script block in a pipeline, `return` is the equivalent of `continue`:\r\n\r\n```powershell\r\n> @(\"1\",\"2\",\"3\") | % { if($_ -ne \"2\") { return }; $_ }\r\n2\r\n```\r\n\r\nYou can think of a script block as an (anonymous) function, so you can always `return` from it to proceed to the next object in the pipeline.\r\n\r\nHowever, there is currently _no_ analog to `break` for prematurely _exiting_ a  pipeline.\r\n\r\nOvercoming this limitation is the subject of #3821.\r\n\r\nUsing the behavior described by @lzybkr, you can use the following (cumbersome) workaround:\r\n\r\n```powershell\r\n# Exit the pipeline after the first 2 items.\r\ndo {\r\n  @(\"1\",\"2\",\"3\") | % { $_; if($_ -eq \"2\") { break } }\r\n} while ($false)  # dummy loop to break out of\r\n```\r\n\r\nNote that you don't need the dummy loop on the _command line_, but if you neglected to use it in a _script_, it would break out of whatever enclosing loop there is, if any.  \r\nIf there is none, the _entire script_ is exited.\r\n",
    "created_at": "2017-05-30T20:02:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-304991572",
    "id": 304991572,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDk5MTU3Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304991572/reactions"
    },
    "updated_at": "2018-03-17T18:05:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/304991572",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks for all your inputs. I didn't even consider using return. It's good to know that another issue has been raised regarding this though and hopefully someone can add this little improvement to the language. thanks",
    "created_at": "2017-05-30T22:07:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-305022761",
    "id": 305022761,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTAyMjc2MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305022761/reactions"
    },
    "updated_at": "2017-05-30T22:07:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305022761",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16256546?v=4",
      "events_url": "https://api.github.com/users/rdbartram/events{/privacy}",
      "followers_url": "https://api.github.com/users/rdbartram/followers",
      "following_url": "https://api.github.com/users/rdbartram/following{/other_user}",
      "gists_url": "https://api.github.com/users/rdbartram/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rdbartram",
      "id": 16256546,
      "login": "rdbartram",
      "node_id": "MDQ6VXNlcjE2MjU2NTQ2",
      "organizations_url": "https://api.github.com/users/rdbartram/orgs",
      "received_events_url": "https://api.github.com/users/rdbartram/received_events",
      "repos_url": "https://api.github.com/users/rdbartram/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rdbartram/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rdbartram/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rdbartram"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "It's possible somebody is relying on the existing semantics, so changing that might not be a good idea.\r\n\r\nI've considered a strict mode error when `break` or `continue` is used in a way that turns into the non-local goto - the error message could suggest alternatives like `return`.",
    "created_at": "2017-05-31T01:45:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-305058532",
    "id": 305058532,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA1ODUzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305058532/reactions"
    },
    "updated_at": "2017-05-31T01:45:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305058532",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I've considered a strict mode error when break or continue is used in a way that turns into the non-local goto \r\n\r\n@lzybkr Might also be good to have a PSSA rule for that - if it doesn't already exist.\r\n\r\ncc @kapilmb \r\n",
    "created_at": "2017-05-31T01:54:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-305059750",
    "id": 305059750,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTA1OTc1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305059750/reactions"
    },
    "updated_at": "2017-05-31T01:54:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305059750",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "You should regard this as Linq ForEach or JavaScript forEach(...). What you feed to `ForEach-Object` cmdlet is a `ScriptBlock` (`delegate` or `function`). Just as you won't\r\n\r\n```csharp\r\nSomeCollection.ForEach((x) =>\r\n{\r\n    if (x != 2) continue;\r\n    ResultCollection.Add(x);\r\n});\r\n```\r\n\r\nYou don't `continue` or `break` in a bare `ScriptBlock`. The scope is isolated.",
    "created_at": "2017-05-31T12:27:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-305174284",
    "id": 305174284,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE3NDI4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305174284/reactions"
    },
    "updated_at": "2017-05-31T12:27:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/305174284",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm a little late to the party looking at the date (I came past this thread while looking for something else), but thought I might throw this in for the benefit of those on future expeditions...\r\n\r\nMy suggestion would be to look past the more terse lingual subtext (C#-like constructs) and use the pipeline in a more \"intent-wise fashion\" = i.e. \"script-like\"; I have found personally that while PS is sitting on .NET - not everything translates smoothly in the interpreter to a C# equivalent. So sometimes stepping back and \"saying the same thing differently\" can help expedite. \r\n\r\n@(\"1\",\"2\",\"3\") | ?{$_ -notmatch \"2\"} | out-host\r\n\r\nThis outputs 1 and 3 as expected (in response to the original \"questioned\" construct); and in this case, -ne works as well if preferred over the Regex equivalent shown in the example. \r\n",
    "created_at": "2018-12-11T14:00:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-446211963",
    "id": 446211963,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjIxMTk2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446211963/reactions"
    },
    "updated_at": "2018-12-11T14:00:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446211963",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/36541992?v=4",
      "events_url": "https://api.github.com/users/RobR14/events{/privacy}",
      "followers_url": "https://api.github.com/users/RobR14/followers",
      "following_url": "https://api.github.com/users/RobR14/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobR14/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/RobR14",
      "id": 36541992,
      "login": "RobR14",
      "node_id": "MDQ6VXNlcjM2NTQxOTky",
      "organizations_url": "https://api.github.com/users/RobR14/orgs",
      "received_events_url": "https://api.github.com/users/RobR14/received_events",
      "repos_url": "https://api.github.com/users/RobR14/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/RobR14/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobR14/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/RobR14"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Is it worth discussing whether behaviour of keywords like `continue` and `break` should be scope-restricted? After all, currently they literally _cannot_ be handled whatsoever as several folks here have stated. \r\n\r\nThis is... unsettling, that calling a function from a module you've just downloaded could conceivably halt all running scripts right up to the global level, with _no possible way_ of being able to account for it. This is what actual terminating errors are _for_ in PowerShell, and we're (sensibly) given ways to handle them appropriately. \r\n\r\n`break` and `continue` are the exception (badum/tss) here, and I don't think it's in a good way. Wouldn't it make a _lot_ more sense for it to simply terminate the parent script block, function, or script -- but only the immediate level of execution? Searching beyond the parent function, script block, or script for something to break seems rife for exploitability and just generally breaking an awful lot of code that would and should otherwise be perfectly capable of handling similar terminating errors. 😦 ",
    "created_at": "2018-12-11T17:11:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/3879#issuecomment-446282831",
    "id": 446282831,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/3879",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI4MjgzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446282831/reactions"
    },
    "updated_at": "2018-12-11T17:11:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/446282831",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  }
]
