[
  {
    "author_association": "COLLABORATOR",
    "body": "Just as an FYI Runspace is a bit of a misleading term to use here. Actual Runspaces can definitely have an interactive host associated that can be used as you would interactively. For example I have a runspace pool that will run my scripts and each of those can access `$host` and it's various methods.\r\n\r\n```powershell\r\n$rp = [RunspaceFactory]::CreateRunspacePool(1, 4, $host)\r\n$rp.Open()\r\n1..4 | ForEach-Object -Parallel {\r\n    $ps = [PowerShell]::Create()\r\n    $ps.RunspacePool = $using:rp\r\n    $ps.AddScript('$host.UI.WriteLine(\"$($args[0])\" * 10)').AddArgument($_) | Out-Null\r\n    $ps.Invoke()\r\n}\r\n$rp.Dispose()\r\n```\r\n\r\nThe problem you are facing here is that `ForEach-Object -Parallel` (what I'm assuming what you mean by Runspaces) is that PowerShell does not associate a PSHost with each pipeline run. It's a simple enough hack to get it working though\r\n\r\n```powershell\r\n1..4 | ForEach-Object -Parallel {\r\n    $psHost = $using:host\r\n    $psHost.UI.WriteLine(\"$_\" * 10)\r\n}\r\n````\r\n\r\nIt won't enable cmdlets like `Read-Host` to work as is but you can still do the raw calls through the passed in `$host` instance from the parent. Asking for input in parallel is going to be dicey though as the input will most likely clobber each other causing problems. If you do want to do this you will need some sort of lock around the calls to ensure they are only running 1 at a time. You hack essentially does the same thing as the caller is running synchronously and is responding to each input request as they come in. An example of what I mean by using a lock.\r\n\r\n```powershell\r\n$lock = [System.Threading.SemaphoreSlim]::new(1)\r\n1..4 | ForEach-Object -Parallel {\r\n    $psHost = $using:host\r\n    $lock = $using:lock\r\n\r\n    $lock.Wait()\r\n    try {\r\n        $psHost.UI.WriteLine(\"Tell me something for $_\")\r\n        \"{0} - {1}\" -f $_, $psHost.UI.ReadLine()\r\n    }\r\n    finally {\r\n        $lock.Release() | Out-Null\r\n    }\r\n}\r\n```\r\n\r\nAt a guess this concurrency is part of the reason why the host isn't associated with a parallel pipeline.",
    "created_at": "2022-03-24T05:58:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17058#issuecomment-1077261470",
    "id": 1077261470,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17058",
    "node_id": "IC_kwDOAvT7bc5ANbSe",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1077261470/reactions"
    },
    "updated_at": "2022-03-24T06:02:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1077261470",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/8462645?v=4",
      "events_url": "https://api.github.com/users/jborean93/events{/privacy}",
      "followers_url": "https://api.github.com/users/jborean93/followers",
      "following_url": "https://api.github.com/users/jborean93/following{/other_user}",
      "gists_url": "https://api.github.com/users/jborean93/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jborean93",
      "id": 8462645,
      "login": "jborean93",
      "node_id": "MDQ6VXNlcjg0NjI2NDU=",
      "organizations_url": "https://api.github.com/users/jborean93/orgs",
      "received_events_url": "https://api.github.com/users/jborean93/received_events",
      "repos_url": "https://api.github.com/users/jborean93/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jborean93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jborean93/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jborean93"
    }
  },
  {
    "author_association": "NONE",
    "body": "Thanks, that makes sense. The reason why I mostly focused on `% -Parallel` is that getting a script running inside a runspace to behave \"normally\" (mainly, having live, interleaved output streams and correctly propagated exceptions) seems quite non-trivial (happy to be proven wrong), while these issues are already solved for `% -Parallel`.\r\n\r\nFor some reason, it didn't occur to me that I can use `$using:Host` inside the runspace. I'm only running a single script at a time, so this approach should be OK, and I can write a good-enough polyfill for `Read-Host`, which should be enough.\r\n\r\nBtw, I didn't ask in the original message, but is there a more \"officially supported\" / intended way to run a script in a fresh environment (e.g. no loaded modules, no global variables from calling session,...), while preserving most features of direct execution (interactivity, non-serialized types, low overhead,...)? All proposed solutions work, but they still seem like a bit of a misuse of both jobs and runspaces, so I'm curious if there's a better way. :)",
    "created_at": "2022-03-24T15:42:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17058#issuecomment-1077770497",
    "id": 1077770497,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17058",
    "node_id": "IC_kwDOAvT7bc5APXkB",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1077770497/reactions"
    },
    "updated_at": "2022-03-24T15:45:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1077770497",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6414091?v=4",
      "events_url": "https://api.github.com/users/MatejKafka/events{/privacy}",
      "followers_url": "https://api.github.com/users/MatejKafka/followers",
      "following_url": "https://api.github.com/users/MatejKafka/following{/other_user}",
      "gists_url": "https://api.github.com/users/MatejKafka/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MatejKafka",
      "id": 6414091,
      "login": "MatejKafka",
      "node_id": "MDQ6VXNlcjY0MTQwOTE=",
      "organizations_url": "https://api.github.com/users/MatejKafka/orgs",
      "received_events_url": "https://api.github.com/users/MatejKafka/received_events",
      "repos_url": "https://api.github.com/users/MatejKafka/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MatejKafka/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MatejKafka/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MatejKafka"
    }
  }
]
