[
  {
    "author_association": "NONE",
    "body": "Other (hopefully) useful info:\r\n\r\n- This happens in Powershell 5.1 as well.\r\n\r\n- Found a bug report [here](https://windowsserver.uservoice.com/forums/301869-powershell/suggestions/15447528-bug-copy-item-tosession-does-not-copy-the-first) from July 2016 which seems to describe the same issue.\r\n\r\n- Happens with the `-Recurse`, `-Container`, and `-Force` parameters provided as well.\r\n\r\n- Also happens with the `Move-Item` command",
    "created_at": "2018-06-05T20:48:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-394854959",
    "id": 394854959,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg1NDk1OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394854959/reactions"
    },
    "updated_at": "2018-06-06T12:47:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394854959",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9092204?v=4",
      "events_url": "https://api.github.com/users/huffstler/events{/privacy}",
      "followers_url": "https://api.github.com/users/huffstler/followers",
      "following_url": "https://api.github.com/users/huffstler/following{/other_user}",
      "gists_url": "https://api.github.com/users/huffstler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/huffstler",
      "id": 9092204,
      "login": "huffstler",
      "node_id": "MDQ6VXNlcjkwOTIyMDQ=",
      "organizations_url": "https://api.github.com/users/huffstler/orgs",
      "received_events_url": "https://api.github.com/users/huffstler/received_events",
      "repos_url": "https://api.github.com/users/huffstler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/huffstler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huffstler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/huffstler"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "The SO answer you link to links back to #2934, but the latter is about inconsistent behavior, because the behavior depends on whether the target directory already exists or not.\r\n\r\nThe question comes down to this: If you do\r\n\r\n```powershell\r\nCopy-Item -Recurse <source-dir-path> <dest-dir-path>\r\n```\r\n\r\nshould you end up with (a) `<dest-dir-path>/<contents-of-source-dir>` or (b) `<dest-dir-path>/<source-dir-name>/<contents-of-source-dir>`?\r\n\r\nCurrently, you get (a) if `<dest-dir-path>` didn't previously exist, and (b) if it did, and that inconsistency is problematic.\r\n\r\nIt sounds like you're saying that (b) is the behavior you expect - and at this point I'm unclear on what the right answer is:\r\n\r\n* `xcopy /S` on Windows seemingly always does (a)\r\n* `cp -R` on Unix actually exhibits the same inconsistency as `Copy-Item -Recurse` ",
    "created_at": "2018-06-06T02:58:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-394924576",
    "id": 394924576,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDkyNDU3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394924576/reactions"
    },
    "updated_at": "2019-10-04T20:27:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/394924576",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "My mistake on the SO link, you're correct that isn't relevant to this bug report. I've removed it from the second comment.\r\n\r\nMy problem is: assuming `<dest-dir-path>` *doesn't* already exist; if there are multiple sub directories in `<source-dir-path>` (lets assume `foo` and `bar`) both `Copy-Item` and `Move-Item` will take the contents of `bar` and put them in the root of `<dest-dir-path>` *without* copying the `bar` folder as well.\r\n\r\nYou should be able to see a \"graphical\" representation of what I described in the example at the top as well I think. I expect `doom.txt` to be copied to the folder `a` but instead it is dropped into the root (`C:\\tmp\\dest`) and the folder `a` is never copied over.",
    "created_at": "2018-06-06T12:45:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-395055363",
    "id": 395055363,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTA1NTM2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395055363/reactions"
    },
    "updated_at": "2018-06-06T12:45:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395055363",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9092204?v=4",
      "events_url": "https://api.github.com/users/huffstler/events{/privacy}",
      "followers_url": "https://api.github.com/users/huffstler/followers",
      "following_url": "https://api.github.com/users/huffstler/following{/other_user}",
      "gists_url": "https://api.github.com/users/huffstler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/huffstler",
      "id": 9092204,
      "login": "huffstler",
      "node_id": "MDQ6VXNlcjkwOTIyMDQ=",
      "organizations_url": "https://api.github.com/users/huffstler/orgs",
      "received_events_url": "https://api.github.com/users/huffstler/received_events",
      "repos_url": "https://api.github.com/users/huffstler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/huffstler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huffstler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/huffstler"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@huffstler: \r\n\r\nYes, but that is the same problem as #2934, just in the context of a larger command:\r\n\r\n* When subdir. `a` is being copied, `$b` doesn't exist yet, so `a`'s content is being copied _directly_ into `$b` (behavior (a) above).\r\n\r\n* By the time subdir. `b` is copied, `$b` already exists, and that's when the inconsistency kicks in: `b`'s content is copied to `$b/b` (behavior (b) above).\r\n\r\nTherefore, if you run the command again, you do get the desired behavior.\r\n\r\nGiven the current behavior, you can work around the problem as follows:\r\n\r\n```powershell\r\nGet-ChildItem -Path $a |\r\n  ForEach-Object { New-Item -Force -Type Directory $b } { \r\n   Copy-Item -Recurse -Path $_.FullName -Destination $b\r\n  }\r\n```\r\n\r\nBut the larger question is whether this inconsistency should be resolved toward behavior (a) or behavior (b).\r\n\r\nYou clearly expected (a), but others may have different expectations, based on `xcopy`.\r\n\r\nFrankly, I was baffled to find the same inconsistency as with `Copy-Item -Recurse` in the Unix world (`cp -R`).\r\n\r\nThe only way **to currently get predictable behavior** is to:\r\n\r\n* Ensure that the target dir. already exists.\r\n\r\n* Then, depending on whether you want behavior (a) or (b):\r\n\r\n  * To get behavior (a): Explicitly target the *content* of the source directory:\r\n\r\n     * `Copy-Item -Recurse -Force $a/* $b`\r\n\r\n     * Note the need for `-Force`, which is needed to ensure that _hidden_ items are copied too.\r\n\r\n        * With `cp` on Unix, you can more simply just `$a/.`, but that doesn't work in PowerShell.\r\n\r\n  * To get behavior (b): No further action needed.\r\n\r\n---\r\n\r\nIf a change is made, it will be a _breaking_ one.\r\n\r\nThe alternative is to merely _document_ the behavior and live with it, but I personally find that unsatisfactory.\r\n\r\n---\r\n\r\nUnless you disagree with my analysis, I suggest closing this issue as a duplicate of #2934; I'll migrate my findings there.",
    "created_at": "2018-06-06T15:30:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-395111414",
    "id": 395111414,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTExMTQxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395111414/reactions"
    },
    "updated_at": "2019-10-04T20:27:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395111414",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "I experimented a little and found that \"Unix\" (I'm using cygwin) `cp -R` achieves *almost* the same result as `Copy-Item.`\r\n\r\nExample:\r\n``` bash\r\n$ pwd\r\n~/tmp\r\n\r\n# Contents\r\n# a\r\n# a\\boo\r\n# a\\boo\\c.d\r\n# a\\doom.txt\r\n# a\\foo\r\n# a\\foo\\a.b\r\n\r\n# z is a directory and doesn't exist yet.\r\ncp -R a z\r\n\r\n# contents of z\r\n# z\r\n# z\\boo\r\n# z\\boo\\c.d\r\n# z\\doom\r\n# z\\foo\r\n# z\\foo\\a.b\r\n\r\n```\r\nIf another `cp` command is given, you will see directory `a` appear inside of `z`, but that's not the point of this comment.\r\n\r\nIn this scenario, you'll see that although the directory did not exist before the copy, the contents of `boo` and the structure of the directory are persisted. I still agree with your analysis, I only wanted to point out the slight differences between the two scenarios. (That `cp` is \"less-wrong\" than `Copy-Item`)",
    "created_at": "2018-06-06T17:26:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-395149157",
    "id": 395149157,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE0OTE1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395149157/reactions"
    },
    "updated_at": "2018-06-06T17:49:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395149157",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/9092204?v=4",
      "events_url": "https://api.github.com/users/huffstler/events{/privacy}",
      "followers_url": "https://api.github.com/users/huffstler/followers",
      "following_url": "https://api.github.com/users/huffstler/following{/other_user}",
      "gists_url": "https://api.github.com/users/huffstler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/huffstler",
      "id": 9092204,
      "login": "huffstler",
      "node_id": "MDQ6VXNlcjkwOTIyMDQ=",
      "organizations_url": "https://api.github.com/users/huffstler/orgs",
      "received_events_url": "https://api.github.com/users/huffstler/received_events",
      "repos_url": "https://api.github.com/users/huffstler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/huffstler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/huffstler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/huffstler"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@huffstler: Good point; yes, there is an additional bug, which I've only a couple of hours ago recorded in #7010 - and which I now realize is a variation of yours. ",
    "created_at": "2018-06-06T17:30:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-395150458",
    "id": 395150458,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE1MDQ1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395150458/reactions"
    },
    "updated_at": "2018-06-06T17:30:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/395150458",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I encounter the same problem when I want to copy the subfolder structure of a source folder to an existing target folder",
    "created_at": "2018-09-12T10:24:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-420595584",
    "id": 420595584,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDU5NTU4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420595584/reactions"
    },
    "updated_at": "2018-09-12T10:24:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420595584",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3004057?v=4",
      "events_url": "https://api.github.com/users/chucklu/events{/privacy}",
      "followers_url": "https://api.github.com/users/chucklu/followers",
      "following_url": "https://api.github.com/users/chucklu/following{/other_user}",
      "gists_url": "https://api.github.com/users/chucklu/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/chucklu",
      "id": 3004057,
      "login": "chucklu",
      "node_id": "MDQ6VXNlcjMwMDQwNTc=",
      "organizations_url": "https://api.github.com/users/chucklu/orgs",
      "received_events_url": "https://api.github.com/users/chucklu/received_events",
      "repos_url": "https://api.github.com/users/chucklu/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/chucklu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chucklu/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/chucklu"
    }
  },
  {
    "author_association": "NONE",
    "body": "> \r\n> \r\n> I experimented a little and found that \"Unix\" (I'm using cygwin) `cp -R` achieves _almost_ the same result as `Copy-Item.`\r\n> \r\n> Example:\r\n> \r\n> ```shell\r\n> $ pwd\r\n> ~/tmp\r\n> \r\n> # Contents\r\n> # a\r\n> # a\\boo\r\n> # a\\boo\\c.d\r\n> # a\\doom.txt\r\n> # a\\foo\r\n> # a\\foo\\a.b\r\n> \r\n> # z is a directory and doesn't exist yet.\r\n> cp -R a z\r\n> \r\n> # contents of z\r\n> # z\r\n> # z\\boo\r\n> # z\\boo\\c.d\r\n> # z\\doom\r\n> # z\\foo\r\n> # z\\foo\\a.b\r\n> ```\r\n> \r\n> If another `cp` command is given, you will see directory `a` appear inside of `z`, but that's not the point of this comment.\r\n> \r\n> In this scenario, you'll see that although the directory did not exist before the copy, the contents of `boo` and the structure of the directory are persisted. I still agree with your analysis, I only wanted to point out the slight differences between the two scenarios. (That `cp` is \"less-wrong\" than `Copy-Item`)\r\n\r\nWell, in UNIX world you can always do `cp -R a/ z`.\r\nTrailing slashes are important.",
    "created_at": "2019-10-01T14:07:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-537053020",
    "id": 537053020,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzA1MzAyMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537053020/reactions"
    },
    "updated_at": "2019-10-01T14:07:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/537053020",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32162201?v=4",
      "events_url": "https://api.github.com/users/army1349/events{/privacy}",
      "followers_url": "https://api.github.com/users/army1349/followers",
      "following_url": "https://api.github.com/users/army1349/following{/other_user}",
      "gists_url": "https://api.github.com/users/army1349/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/army1349",
      "id": 32162201,
      "login": "army1349",
      "node_id": "MDQ6VXNlcjMyMTYyMjAx",
      "organizations_url": "https://api.github.com/users/army1349/orgs",
      "received_events_url": "https://api.github.com/users/army1349/received_events",
      "repos_url": "https://api.github.com/users/army1349/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/army1349/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/army1349/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/army1349"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@army1349: \r\n\r\nUnfortunately, it's too late to introduce such semantics to PowerShell, because it would be a breaking change.\r\n\r\nAside from that:\r\n\r\nWhile `cp -R a/ b` indeed consistently copies the _contents_ of directory `a` to directory `b`, whether or not `b` previously existed:\r\n\r\n* it is only _BSD_ `cp` (as also used on macOS) that behaves this way, _not_ the (more common, on all Linux platforms) _GNU_ `cp`.\r\n\r\n* Even BSD `cp`, however, does _not_ apply the same logic to the _destination_ directory argument: `cp -R a b/` is effectively the same as `cp -R a b`, with the ambiguity discussed; that is, you cannot force a copy of `a` to be placed _inside_ `b` if `b` doesn't exist yet.\r\n",
    "created_at": "2019-10-04T20:36:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7005#issuecomment-538550965",
    "id": 538550965,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7005",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODU1MDk2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538550965/reactions"
    },
    "updated_at": "2019-10-04T20:39:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/538550965",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
