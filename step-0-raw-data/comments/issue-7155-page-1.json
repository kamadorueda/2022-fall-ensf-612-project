[
  {
    "author_association": "COLLABORATOR",
    "body": "Seems we discussed this enhancement previously and have an opened Issue.",
    "created_at": "2018-06-24T07:01:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7155#issuecomment-399734508",
    "id": 399734508,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7155",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTczNDUwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399734508/reactions"
    },
    "updated_at": "2018-06-24T07:02:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399734508",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@iSazonov Do you have a reference to that issue?  Do you mean #6673?  #6673 seems to be about reliably cleaning up a resource to which a function has a handle.  This issue is about not being able to reliably obtain that handle in the first place.",
    "created_at": "2018-06-24T15:21:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7155#issuecomment-399764448",
    "id": 399764448,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7155",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTc2NDQ0OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399764448/reactions"
    },
    "updated_at": "2018-06-24T15:21:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/399764448",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iSazonov This a different issue than adding a dispose clause to functions.\r\n@alx9r No - there is currently no mechanism to block `Stop()`. Is this an actual problem you are hitting or is it theoretical only?  Remember, when you hit `Stop`, the state of the system is essentially unknown. Partially written files will still be there, processes that have started won't be stopped, etc. But the gc *will* (eventually) clean up and dispose allocated objects. If it's *really* important that this object gets disposed immediately, you could alter `New-C` to take care of this case. Something like:\r\n```powershell\r\nfunction New-C {\r\n    try {\r\n        $returned = $false\r\n        $c = [c]::new() # this IDisposable gets created\r\n\r\n        sleep 5         # stop occurs here\r\n\r\n        $c                # this never gets returns\r\n        $returned = $true\r\n    }\r\n    finally {\r\n        # gets cleaned up here...\r\n        if (-not $returned -and $c)\r\n        {\r\n            Write-Host \"Disposing c\"\r\n            $c.Dispose()\r\n        }\r\n    }\r\n}\r\n```\r\nAll that said, handling ctrl-C/SIGINT was in plan for V1. The `trap` statement was supposed to be able to handle  ctrl-c and decide if execution should proceed (`continue`) or terminate (`break`). (Note - it would trap the signal but explicit calls to `.Stop()` would go through). However this was never implemented and in all the time since it hasn't really been raised as an issue. Of course we now have a broader audience so perhaps we should reconsider adding it. (and `bash` has it)",
    "created_at": "2018-06-26T18:58:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7155#issuecomment-400425730",
    "id": 400425730,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7155",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQyNTczMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400425730/reactions"
    },
    "updated_at": "2018-06-26T18:58:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400425730",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "NONE",
    "body": "@BrucePay \r\n\r\n> Is this an actual problem you are hitting or is it theoretical only?\r\n\r\nThe general problem of incomplete cleanup on `.Stop()` and ctrl-C is something I battle at least daily.  I've found it requires unusual diligence to craft PowerShell commands and tests such that they reliably avert meaningless results caused by vestigial state.  I think it's too early to say, though, whether this particular vulnerability of cleanup to the `.Stop()` signal will significantly slow the inner development loop on my projects.\r\n\r\n>...you could alter New-C to take care of this case.\r\n\r\nIs `$c = [c]::new()` atomic when subject to `.Stop()` or ctrl-C?",
    "created_at": "2018-06-26T23:30:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7155#issuecomment-400494899",
    "id": 400494899,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7155",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQ5NDg5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400494899/reactions"
    },
    "updated_at": "2018-06-26T23:30:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400494899",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "`Stop()` is implemented by having the runtime check the `Stopping` flag in a bunch of places. Any long-running operation should check but we don't check for every operation as that would be too much overhead. I don't believe we check it for assignment statements (but I'd have to check the code). \r\n\r\n> The general problem of incomplete cleanup on .Stop() and ctrl-C is something I battle at least daily.\r\n\r\nI'm curious about what you're going that is causing such problems. And have you considered using DSC which has a declarative state model? ",
    "created_at": "2018-06-27T00:32:26Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7155#issuecomment-400505479",
    "id": 400505479,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7155",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDUwNTQ3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400505479/reactions"
    },
    "updated_at": "2018-06-27T00:32:26Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/400505479",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  }
]
