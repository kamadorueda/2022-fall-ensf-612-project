[
  {
    "author_association": "COLLABORATOR",
    "body": "It is a platform default:\r\nhttps://source.dot.net/#System.Console/System/Console.cs,a570cd79bd33ceab\r\nhttps://source.dot.net/#System.Console/System/ConsolePal.Windows.cs,c997db0e94f0d1cc\r\nhttps://source.dot.net/#System.Console/Common/Interop/Windows/Interop.GetConsoleOutputCP.cs,f028312cfc964730\r\n\r\nSo we need do `[console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding` at PowerShell Core startup. @mklement0  Right fix for all platforms and Windows versions (Windows 7?) ?\r\n\r\n",
    "created_at": "2018-08-27T05:22:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-416117369",
    "id": 416117369,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjExNzM2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416117369/reactions"
    },
    "updated_at": "2018-08-27T05:22:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416117369",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the sleuthing, @iSazonov.\r\n\r\nYes, I think the fix is also appropriate for Windows 7:\r\n\r\nWhile you're more likely to run into problems with standard console programs there that can even _break_ with UTF-8 input, I think it's more important for PowerShell Core to exhibit consistent encoding behavior and to support modern, cross-platform utilities that natively speak UTF-8 by default.\r\n\r\n\r\n",
    "created_at": "2018-08-28T16:43:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-416657507",
    "id": 416657507,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjY1NzUwNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416657507/reactions"
    },
    "updated_at": "2018-08-28T16:43:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416657507",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: Forgot to clarify: It is only the right fix for _Windows_ - on Unix-like platforms the CoreFx default should be used, as discussed in #7634 (even though there's a CoreFx fix pending).\r\n\r\n",
    "created_at": "2018-08-28T21:13:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-416742668",
    "id": 416742668,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc0MjY2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416742668/reactions"
    },
    "updated_at": "2019-01-27T22:29:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416742668",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I hope @JamesWTruher could comment. I think he considered this in time writing and implementing  Encoding RFC.",
    "created_at": "2018-08-29T06:29:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-416839797",
    "id": 416839797,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjgzOTc5Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416839797/reactions"
    },
    "updated_at": "2018-08-29T06:29:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/416839797",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Since Windows 7 EOL and community are migrating to Windows 10 it seems a time to switch a console default to UTF8 on WIndows.\r\n\r\n/cc @SteveL-MSFT ",
    "created_at": "2020-03-12T09:08:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-598080704",
    "id": 598080704,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5ODA4MDcwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 5,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 5,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/598080704/reactions"
    },
    "updated_at": "2020-03-12T09:09:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/598080704",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "@nu8, are you using Windows PowerShell? In PowerShell Core, the default encoding for `Get-Content` on files has been `UTF8NoBOM` since <https://github.com/PowerShell/PowerShell/pull/5080>.",
    "created_at": "2020-06-06T15:42:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640079864",
    "id": 640079864,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDA3OTg2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640079864/reactions"
    },
    "updated_at": "2020-06-06T15:42:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640079864",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/46201428?v=4",
      "events_url": "https://api.github.com/users/KalleOlaviNiemitalo/events{/privacy}",
      "followers_url": "https://api.github.com/users/KalleOlaviNiemitalo/followers",
      "following_url": "https://api.github.com/users/KalleOlaviNiemitalo/following{/other_user}",
      "gists_url": "https://api.github.com/users/KalleOlaviNiemitalo/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KalleOlaviNiemitalo",
      "id": 46201428,
      "login": "KalleOlaviNiemitalo",
      "node_id": "MDQ6VXNlcjQ2MjAxNDI4",
      "organizations_url": "https://api.github.com/users/KalleOlaviNiemitalo/orgs",
      "received_events_url": "https://api.github.com/users/KalleOlaviNiemitalo/received_events",
      "repos_url": "https://api.github.com/users/KalleOlaviNiemitalo/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KalleOlaviNiemitalo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KalleOlaviNiemitalo/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KalleOlaviNiemitalo"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@nu8, your problem is unrelated to the active OEM code page, and it is what @KalleOlaviNiemitalo states: if you have a _BOM-less_ UTF-8 file, _Windows PowerShell_ interprets it as ANSI-encoded.\r\n\r\nThe OEM code page only matters with respect to _external programs_, and only if their output is captured or redirected.\r\n\r\nFurthermore, to make the `[console]::InputEncoding = [console]::OutputEncoding = ...` solution complete in _Windows PowerShell_ (not needed in Core), you must also set `$OutputEncoding` to `[System.Text.UTF8Encoding]::new()`, so as to make PowerShell also use UTF-8 when piping data _to_ an external program:\r\n\r\n```powershell\r\n$OutputEncoding = [console]::InputEncoding =\r\n                  [console]::OutputEncoding =\r\n                  [System.Text.UTF8Encoding]::new()\r\n```\r\n\r\nWhile your registry-based way of setting the OEM code page to UTF-8 (`65001`) obviates the need for setting `[console]::InputEncoding` and `[console]::OutputEncoding`, in _Windows PowerShell_ the need for setting `$OutputEncoding` remains.\r\n\r\nIn _PowerShell Core_, the registry-based approach is sufficient (except for possibly switching to a font with more complete Unicode support).\r\n\r\nNote that the registry-based approach is the (potentially programmatic) equivalent of the [aforementioned GUI method](https://stackoverflow.com/a/57134096/45375) (via Control Panel, `intl.cpl`, tab `Administrative`, `Change system locale...`); as previously noted, this is still labeled as `Beta:` as of Windows 10 release 1909, though I suspect it will work fine as long as you use only modern command-line utilities.\r\n",
    "created_at": "2020-06-06T16:48:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640088223",
    "id": 640088223,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDA4ODIyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640088223/reactions"
    },
    "updated_at": "2020-06-07T16:26:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640088223",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'm talking about external programs, because that is what this issue is about, and it is what the `[console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding` workaround is for.\r\n\r\n`Get-Content` is indeed not an external program, which is why I pointed out that your problem is indeed unrelated to this issue (in the remainder of my response I've merely provided more context to your attempt to solve the original, external-program-related issue). \r\n\r\nI've also explained the reason for your unrelated `Get-Content` problem.\r\nTo spell out the solution: you must create your UTF-8 files _with a BOM_ in order for _Windows PowerShell_ to recognize them as UTF-8-encoded; for more information, see [this Stack Overflow answer](https://stackoverflow.com/a/40098904/45375).\r\n\r\nIf you have further questions, I suggest you use the following community resources: \r\n* The [Slack](https://join.slack.com/t/powershell/shared_invite/enQtMzA3MDcxNTM5MTkxLTBmMWIyNzhkYzVjNGRiOTgxZmFlN2E0ZmVmOWU5NDczNTY2NDFhZjFlZTM1MTZiMWIzZDcwMGYzNjQ3YTRkNWM) and [Discord](https://discordapp.com/invite/AtzXnJM) community chat forums (they seamless talk to each other).\r\n* Q&A site [StackOverflow.com](https://stackoverflow.com/questions/tagged/powershell) and the [PowerShell.org](https://powershell.org/forums/) forum.",
    "created_at": "2020-06-06T17:10:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640091102",
    "id": 640091102,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDA5MTEwMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640091102/reactions"
    },
    "updated_at": "2020-06-07T16:25:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640091102",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@nu8 \r\n\r\nYes, of course you can always use `-Encoding` explicitly to specify the source encoding (which is ignored if a BOM indicates a different encoding, as an aside). \r\n\r\nMy intent was to show you how to create UTF-8-encoded files that Windows PowerShell recognizes as such _by default_.\r\nThe previously linked [SO answer](https://stackoverflow.com/a/40098904/45375) also demonstrates how you can use the `$PSDefaultParameterValues` hash table to _preset_ defaults (`$PSDefaultParameterValues['*:Encoding'] = 'utf8'`), though that needs careful managing to ensure that it only applies where you want it  to.\r\n\r\nChanging the legacy system locale (language for non-Unicode programs) to `65001` does _not_ help with that, because it doesn't change the _ANSI_ code page (only the _OEM_ code page): Even after making that change, with `chcp` then reporting `65001`, `(Get-Culture).TextInfo.ANSICodePage` continues to report the culture-appropriate code page, e.g., `1252` on US-English systems, so `Get-Content a.txt` will continue to misinterpret your file in Windows PowerShell.\r\n\r\nWhile there _is_ an `ACP` registry value that controls the ANSI code page - just like `OEMCP` controls the OEM code page - using the GUI method changes only  the `OEMCP` value - for good reasons, I suspect.\r\nI personally wouldn't even attempt to set `ACP` to `65001` - I don't think that is supported, and I suspect it'll either wreak havoc or will be ignored.\r\n\r\nTo summarize:\r\n\r\n* This issue is about _external (console) programs_ in _console windows_, as clearly mentioned in the body of the OP, and as explained later; it is about making PowerShell Core's UTF-8 support _complete_ by also using UTF-8 consistently when communicating with external console programs. PowerShell-native commands already do consistently default to UTF-8.\r\n\r\n* Your `Get-Content` problem is unrelated; it only surfaces in Windows PowerShell, and it is only related to the system's active _ANSI_ code page and how PowerShell - which is internally UTF-16-based (.NET strings) - interprets content read from _files_; the behavior is independent of the PowerShell host application (whether it is a console or not).\r\n\r\n* Please generally note that this repo is for reporting PowerShell _Core_ issues only - for _Windows PowerShell_ issues, use the [UserVoice forum](https://windowsserver.uservoice.com/forums/301869-powershell).",
    "created_at": "2020-06-06T18:28:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640100132",
    "id": 640100132,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDEwMDEzMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640100132/reactions"
    },
    "updated_at": "2020-06-07T16:25:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640100132",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> You should probably stop suggesting people use BOM\r\n\r\nI've suggested a BOM to _work around_ an issue with the _legacy_ shell _Windows PowerShell_.\r\nYes, avoiding a BOM is the better approach, especially in cross-platform code, and, fortunately, _PowerShell Core_ now defaults to UTF-8.\r\n\r\n(For _cross-edition_ PowerShell source code, UTF-8 _with BOM_ continues to be your only option if the source code contains (runtime-relevant) non-ASCII characters.)\r\n\r\n> Locale has to do with Language, not code page.\r\n\r\nIn Windows, locales _imply_ code pages. In the GUI, you pick a language (+ region/country), which makes the code pages associated with the chosen locale the active ones.\r\n\r\n> So I don't see what the point would be in changing an ANSI code page, as we are\r\ndealing with Unicode here.\r\n\r\nMy point was that just as you're changing the OEM code page to `65001` (UTF-8), you may be tempted to set the ANSI code page to this value in order to change `Get-Content`'s default (see below) - but that  isn't supported.\r\n\r\n> Get-Content a.txt works just fine after making the Registry change I\r\nsuggested.\r\n\r\nMuch to my surprise, this is indeed the case - even though the ANSI code page _isn't_ changed by your registry approach (or via `intl.cpl`).\r\n\r\n**I therefore recommend against setting the OEM code page to `65001` _system-wide_ if you're using _Windows PowerShell_**, because you'll break any existing code that was written based on the assumption that `Get-Content` defaults to the active ANSI code page.\r\n\r\nIn other words: **all (by definition BOM-less) ANSI-encoded files (which is historically common on Windows) will then be misinterpreted as UTF-8** by `Get-Content` (in the absence of `-Encoding`).\r\nSimilarly, `Set-Content` would then create BOM-less UTF-8 files rather than ANSI files by default.\r\n\r\nIf you use the workaround suggested in the OP, you won't have that problem (but you'll need to use something like `$PSDefaultParameterValues['*:Encoding'] = 'utf8'` for _your_ code to default to UTF-8.)\r\n\r\nOf course, **if you're willing to assume that you'll only ever come across BOM-less files that are UTF-8-encoded (rather than ANSI-encoded) and that no (third-party) code ever runs that relies on ANSI being the default**, your approach would work.\r\n\r\n(It is a separate issue that it is currently needlessly difficult to read ANSI-encoded files in _PowerShell Core_, because the `-Encoding` parameter supports no `ANSI` value - see #6562).\r\n\r\n> Then the title should reflect that.\r\n\r\nhoo boy.\r\n\r\n",
    "created_at": "2020-06-06T20:01:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640111084",
    "id": 640111084,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDExMTA4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640111084/reactions"
    },
    "updated_at": "2020-06-07T16:25:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640111084",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "> I mean really, how common is that going to be?\r\n\r\nThe first commandment of _Windows PowerShell_ has always been: _backward compatibility_.\r\n(That commandment is fraying around the edges in _PowerShell [Core]_.)\r\n\r\nYour solution breaks backward compatibility, and I pointed out how.\r\n\r\n---\r\n\r\n> I notice you didnt give a single example\r\n> perhaps you can point out some high profile ANSI files that are included with Windows, or some that I am likely to come across online?\r\n> Yes, I am willing to do that\r\n\r\nhoo boy.\r\n\r\nLet me remind you again: This repo is for questions about _PowerShell [Core]_, not _Windows PowerShell_.\r\n\r\nYour concerns are a non-issue in PowerShell [Core], which strikes me as a good reason to switch to it. If there's something holding you back - such as the startup-performance issue you linked to (#6443) - I suggest you focus on solving that.\r\n",
    "created_at": "2020-06-06T21:30:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640120650",
    "id": 640120650,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDEyMDY1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640120650/reactions"
    },
    "updated_at": "2020-06-07T16:25:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640120650",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Let me try to summarize, now that we (hopefully) have the full picture:\r\n\r\n<sup>I've hidden my previous comments in favor of this one, @nu8  - I encourage you to do the same, as appropriate. This comment also corrects my incorrect earlier claim that you cannot set the ANSI code page to `65001`.</sup>\r\n\r\nThis issue is about making UTF-8 support in PowerShell on Windows _complete_, by making sure that PowerShell also uses UTF-8 when communicating with _external programs_ (the built-in cmdlets already default to UTF-8, invariably so), which requires setting `[console]::InputEncoding` and `[console]::OutputEncoding` to (BOM-less) UTF-8 (possibly indirectly).\r\n\r\n---\r\n\r\nCurrently, in the absence of PowerShell doing that itself, there are two **workarounds**:\r\n\r\n### Option 1: Put the  following statement in your `$PROFILE`:\r\n\r\n```powershell\r\n# In *Windows PowerShell*, prepend `$OutputEncoding = `\r\n[console]::InputEncoding = [console]::OutputEncoding = [System.Text.UTF8Encoding]::new()\r\n```\r\n\r\nPros and cons:\r\n* Doesn't require administrative privileges and takes effect in new windows without the need for a reboot.\r\n* Requires modifying `$PROFILE`\r\n* Is bypassed if the CLI is used as `pwsh -noprofile ...`\r\n\r\nNote: In Windows PowerShell, you must prepend `$OutputEncoding = ` to the above command,  in order to also make Windows PowerShell send UTF-8 _to_ external programs. (In PowerShell [Core], this preference variably commendably defaults to (BOM-less) UTF-8.) \r\n\r\n---\r\n\r\n### Option 2: Change the active code pages to `65001` _system-wide_ (W10+):\r\n\r\n* GUI method: via `intl.cpl` (Control Panel), tab `Administrative`, `Change system locale...`); as previously noted, this is still labeled as `Beta:` as of Windows 10 release 1909, though I suspect it will work fine as long as you use only modern command-line utilities.\r\n\r\n* Equivalent programmatic method, based on [@nu8's approach](https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640081037):\r\n\r\n```powershell\r\n# Requires ELEVATION and a REBOOT\r\n'ACP', 'OEMCP', 'MACCP' | Set-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Nls\\CodePage -Name { $_ } 65001\r\n# Restart-Computer\r\n```\r\n\r\nPros and cons:\r\n\r\n* Due to a **.NET bug** still present in  the .NET version underlying PowerShell Core 7.1.0-preview.3, **`[console]::InputEncoding` and `[console]::OutputEncoding`  are mistakenly set to UTF-8 encoding _with BOM_**, which causes **follow-on bugs**; notably, it **breaks `Start-Job`** in PowerShell. See https://github.com/dotnet/runtime/issues/28929. Option 1 above doesn't have this problem.\r\n\r\n   * Curiously, by contrast, the `[System.Text.Encoding]::Default` encoding that reflects the active ANSI code page contains a _BOM-less_ UTF-8 encoding after the system-wide change (see below).\r\n\r\n   * Note that the bug can also manifest without the system-wide change, namely if you manually run `chcp 65001` from `cmd.exe`, for instance, _before_ invoking PowerShell (running `chcp` from _inside_ PowerShell isn't supported and requires Option 1 instead).\r\n\r\n* Requires administrative privileges and a reboot.\r\n\r\n* **Takes effect _system-wide_**: it applies to all console / Windows Terminal windows, notably including those running `cmd.exe`\r\n\r\n* **Invariably also uses UTF-8 as the _ANSI_ code page** (not just the _OEM_ code page), as reflected in `[System.Text.Encoding]::Default` (note that this also applies if you set _only_ the `OEMCP` registry value to `65001`; `(Get-Culture).TextInfo.ANSICodePage`, by contrast, continues to report the locale-appropriate code page, e.g. `1252`).\r\n  * **If you're (also) running _Windows PowerShell_, this means that the setting invariably makes _Windows PowerShell_'s  _ANSI_-encoding-default cmdlets default to UTF-8**, notably `Get-Content` and `Set-Content`, which, **depending on your backward-compatibility needs**:\r\n      * may be **desirable** for consistent UTF-8 use across both PowerShell editions.\r\n        * Note: short of placing `$PSDefaultParameterValues['*:Encoding'] = 'utf8'` in your `$PROFILE`, this is the only way to get Windows PowerShell to consistently default to UTF-8.\r\nCuriously, the system-wide change causes Windows PowerShell to then create _BOM-less_ UTF-8 files by default with `Set-Content`, something that cannot otherwise achieved, except with direct use of .NET.\r\n     * may be **undesired**, if you have **existing code that uses `Get-Content` and `Set-Content` without `-Encoding` and you need to process BOM-less files that are ANSI- rather than UTF-8-encoded**.\r\n  * Also, in _Windows PowerShell_ only, you must additionally still run\r\n`$OutputEncoding = [System.Text.Utf8Encoding]::new()` (via `$PROFILE`) in order to also make Windows PowerShell send UTF-8 _to_ external programs.\r\n\r\n---\r\n\r\nA note on **file encoding**:\r\n\r\nIf making _Windows PowerShell_ too default to UTF-8 via the system-wide change is not an option, **BOM-less UTF-8 files** will only be read correctly under one of the following conditions:\r\n\r\n* you use `-Encoding Utf8` with file-handling cmdlets.\r\n* you convert your BOM-less UTF-8 files to have a BOM\r\n  * such files can be problematic in cross-platform use; on Unix-like platforms, a UTF-8 BOM can be misinterpreted as data\r\n  * conversely, if you write PowerShell code that contains (runtime-relevant) non-ASCII characters and needs to run in both editions, saving your source code files as UTF-8 _with BOM_ is a must (though you could also use UTF-16).\r\n\r\n* you preset the default encoding via `$PSDefaultParameterValues['*:Encoding'] = 'utf8'`, but you'll have to _scope_ this setting if you don't want _all_ code to use these defaults.\r\n\r\nNote that Windows PowerShell - curiously, _except_ if the system-wide change is made - only ever creates UTF-8 files _with BOM_ (whereas PowerShell [Core] defaults to _BOM-less_ UTF-8 and has an `-Encoding utf8BOM` opt-in); direct use of .NET is required to work around that - see [this SO answer](https://stackoverflow.com/a/34969243/45375).\r\n",
    "created_at": "2020-06-07T16:24:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-640243647",
    "id": 640243647,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDI0MzY0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640243647/reactions"
    },
    "updated_at": "2020-06-07T17:22:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/640243647",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@StevenPenny: \r\n\r\nPlease note that this repo is for _PowerShell [Core] v6+_ issues only.\r\n\r\n* Generally, if you think you found a bug in _Windows PowerShell_, you can report it [here](https://windowsserver.uservoice.com/forums/301869-powershell).\r\n\r\n* Specifically, however, your comment suggests a misconception about the issues involved here - perhaps [this Stack Overflow post](https://stackoverflow.com/a/40098904/45375) will help for conceptual background and [this one](https://stackoverflow.com/a/65192064/45375) points to workarounds and even contains a solution for Windows PowerShell, assuming you're wiling to change to UTF-8 _system-wide_.",
    "created_at": "2020-12-08T01:47:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-740306137",
    "id": 740306137,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MDMwNjEzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/740306137/reactions"
    },
    "updated_at": "2020-12-08T12:57:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/740306137",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "#### Is it a good idea to implement this *inside* PowerShell?\r\n\r\nChanging the encoding inside `pwsh` **also changes the code page**, which also affects:\r\n   * The language of Windows console applications like `CMD.EXE`\r\n   * The default encoding assumed when opening a file without BOM.\r\n\r\nThose changes remain after `pwsh` ends, until the console is closed.\r\nIn other words: if running PWSH changes the encoding, it will impact the console session permanently:\r\n\r\n![image](https://user-images.githubusercontent.com/3901474/160692070-384dd9c7-813c-472c-8d5a-78b88194e373.png)\r\n\r\nSo, (unless there is a way to decouple the encoding and the codepage... Why are they [coupled in first place?](https://github.com/dotnet/runtime/blob/6019cdace12ec9bc5117e515b9a6fccfd5708bde/src/libraries/System.Console/src/System/Console.cs#L94))  should the current code page by changed by a console app? I don't think so. \r\n\r\nIMO, it either should be a system-wide setting, or a setting in WindowsTerminal / ConHost. Not a responsibility of a console app or a shell... \r\n\r\n",
    "created_at": "2022-03-29T19:52:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7233#issuecomment-1082312210",
    "id": 1082312210,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7233",
    "node_id": "IC_kwDOAvT7bc5AgsYS",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1082312210/reactions"
    },
    "updated_at": "2022-03-29T19:54:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1082312210",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3901474?v=4",
      "events_url": "https://api.github.com/users/gerardog/events{/privacy}",
      "followers_url": "https://api.github.com/users/gerardog/followers",
      "following_url": "https://api.github.com/users/gerardog/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerardog/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/gerardog",
      "id": 3901474,
      "login": "gerardog",
      "node_id": "MDQ6VXNlcjM5MDE0NzQ=",
      "organizations_url": "https://api.github.com/users/gerardog/orgs",
      "received_events_url": "https://api.github.com/users/gerardog/received_events",
      "repos_url": "https://api.github.com/users/gerardog/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/gerardog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerardog/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/gerardog"
    }
  }
]
