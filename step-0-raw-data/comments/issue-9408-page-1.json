[
  {
    "author_association": "COLLABORATOR",
    "body": "If I understand right we do binding for every input object. In the case the proposal is too narrow.  _I would consider improving the performance of pipelines as a whole._ For example, we could do the binding once for collections of objects of the same type (that is actually a general case). This can be implemented in several ways.",
    "created_at": "2019-04-19T09:50:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-484833150",
    "id": 484833150,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDgzMzE1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484833150/reactions"
    },
    "updated_at": "2019-04-19T09:50:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484833150",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@isazonov that may be an effective way to improve the overall speed of pipelines, but that kind of solution may have its own drawbacks, especially as it's not always possible to guarantee that the same type of object will always be sent down a pipeline.\r\n\r\nIt is possibly worth investigating, but I think that should go in its own issue. :)",
    "created_at": "2019-04-19T10:26:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-484843612",
    "id": 484843612,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDg0MzYxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484843612/reactions"
    },
    "updated_at": "2019-04-19T10:26:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484843612",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> If I understand right we do binding for every input object.\r\n\r\nOnly for `InputObject`, none of these parameters accept input.  Binding is only done once for named/positional parameters:\r\n\r\n```powershell\r\nPS> Trace-Command -Name ParameterBinding -PSHost { 0, 1 | ForEach-Object { $_ } }\r\n\r\nDEBUG: ParameterBinding Information: 0 : BIND NAMED cmd line args [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 : BIND POSITIONAL cmd line args [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 :     BIND arg [ $_ ] to parameter [Process]\r\nDEBUG: ParameterBinding Information: 0 :         Binding collection parameter Process: argument type [ScriptBlock], parameter type\r\n[System.Management.Automation.ScriptBlock[]], collection type Array, element type [System.Management.Automation.ScriptBlock], no\r\ncoerceElementType\r\nDEBUG: ParameterBinding Information: 0 :         Creating array with element type [System.Management.Automation.ScriptBlock] and 1 elements\r\nDEBUG: ParameterBinding Information: 0 :         Argument type ScriptBlock is not IList, treating this as scalar\r\nDEBUG: ParameterBinding Information: 0 :         Adding scalar element of type ScriptBlock to array position 0\r\nDEBUG: ParameterBinding Information: 0 :         BIND arg [System.Management.Automation.ScriptBlock[]] to param [Process] SUCCESSFUL\r\nDEBUG: ParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 : CALLING BeginProcessing\r\nDEBUG: ParameterBinding Information: 0 : BIND PIPELINE object to parameters: [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 :     PIPELINE object TYPE = [System.Int32]\r\nDEBUG: ParameterBinding Information: 0 :     RESTORING pipeline parameter's original values\r\nDEBUG: ParameterBinding Information: 0 :     Parameter [InputObject] PIPELINE INPUT ValueFromPipeline NO COERCION\r\nDEBUG: ParameterBinding Information: 0 :     BIND arg [0] to parameter [InputObject]\r\nDEBUG: ParameterBinding Information: 0 :         BIND arg [0] to param [InputObject] SUCCESSFUL\r\nDEBUG: ParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 : BIND PIPELINE object to parameters: [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 :     PIPELINE object TYPE = [System.Int32]\r\nDEBUG: ParameterBinding Information: 0 :     RESTORING pipeline parameter's original values\r\nDEBUG: ParameterBinding Information: 0 :     Parameter [InputObject] PIPELINE INPUT ValueFromPipeline NO COERCION\r\nDEBUG: ParameterBinding Information: 0 :     BIND arg [1] to parameter [InputObject]\r\nDEBUG: ParameterBinding Information: 0 :         BIND arg [1] to param [InputObject] SUCCESSFUL\r\nDEBUG: ParameterBinding Information: 0 : MANDATORY PARAMETER CHECK on cmdlet [ForEach-Object]\r\nDEBUG: ParameterBinding Information: 0 : CALLING EndProcessing\r\n```",
    "created_at": "2019-04-19T11:54:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-484870691",
    "id": 484870691,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDg3MDY5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484870691/reactions"
    },
    "updated_at": "2019-04-19T11:54:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484870691",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I fully agree that the current syntax is confusing, and that the utility of multiple `-Process` blocks is questionable.\r\n\r\nCan't speak to how much performance would improve due to such a cleanup, but `ForEach-Object` could definitely use a speed boost;  related in that respect: #7700\r\n\r\n",
    "created_at": "2019-04-19T15:22:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-484929631",
    "id": 484929631,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDkyOTYzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484929631/reactions"
    },
    "updated_at": "2019-04-19T15:22:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484929631",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Oh yeah, I only didn't mention that in this issue because I remembered there was another issue for that one.\r\n\r\nThe logic for member resolution in ForEach-Object is really in need of some love there. I skimmed through that, and about 1/3rd of it is giant block comments, and the rest of it (which is at least three to four times as long as the scriptblock-handling code) could really use a rewrite. \r\n\r\nProbably I'd look to have those done in separate PRs, though. 😄 ",
    "created_at": "2019-04-19T16:06:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-484943274",
    "id": 484943274,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NDk0MzI3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484943274/reactions"
    },
    "updated_at": "2019-04-19T16:06:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/484943274",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @vexx32 - can you please post these insights also at #7700?",
    "created_at": "2019-04-20T12:40:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-485111246",
    "id": 485111246,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTExMTI0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485111246/reactions"
    },
    "updated_at": "2019-04-20T12:40:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485111246",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "But the point of `ForEach-Object` is syntax and flexibility, not speed.\r\n\r\nIt doesn't really _do_ anything, except invoke code with pipeline inputs, so while you're obviously right that you can do _almost_ all of the things it can do with less parameters (or even without a cmdlet at all, using the call `&` or dot `.` operator) ... the syntax for that is extremely nasty. You might want to mug someone with it...\r\n\r\nHere's a trivial example you cannot do with a `ForEach-Object` that only takes three blocks:\r\n\r\n```PowerShell\r\n$userProvidedScript = { if($_ -eq 5) { Write-Error \"TWO\" -ea silentlycontinue } }\r\n$validationScript = { if (!$?) { Write-Host \"The user provided script did not work with ${_}\" } }\r\n\r\n1..10 | ForEach-Object $null,\r\n$UserProvidedScript, \r\n$validationScript, \r\n$null\r\n```\r\n\r\nAutomatic variables are (re)set between each scriptblock, so `$PSItem` and the other automatic variables like `$?` are (re)set, but otherwise, all the blocks share scope. You can set variables in one, read them in another, and always trust that `$_` or `$input` or `$PSItem` will be what came in from the pipeline...\r\n\r\nAnyway. My point is: you're talking about breaking backward compatibility (of a feature which granted, may be rarely used) on the hypothetical that you can make it faster. \r\n\r\nEven if you were saying that you've made it 2x faster, and this is the down-side, I think I'd still be saying: maybe that should be a new command - it's not worth breaking this one (which has been like this for 12 years) to make it _slightly_ faster, when there are so many ways to write things that are **much, much faster**.\r\n\r\nHow about, instead, we make the (exponentially faster, and less complex) `&` call operator and the dot-source operator take three scriptblocks instead of just one as an alternative syntax (i.e. `& {} {} {}` could be the same as ` &{ begin{} process{} end{} }`)\r\n\r\nHeck, how about we just make `&` be a `filter` instead of a `function`, where the default block is the `process` block. Problem solved, at 5-10x speed",
    "created_at": "2019-04-22T04:02:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9408#issuecomment-485318214",
    "id": 485318214,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTMxODIxNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485318214/reactions"
    },
    "updated_at": "2019-04-22T04:17:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/485318214",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
      "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
      "followers_url": "https://api.github.com/users/Jaykul/followers",
      "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
      "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Jaykul",
      "id": 192942,
      "login": "Jaykul",
      "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
      "organizations_url": "https://api.github.com/users/Jaykul/orgs",
      "received_events_url": "https://api.github.com/users/Jaykul/received_events",
      "repos_url": "https://api.github.com/users/Jaykul/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Jaykul"
    }
  }
]
