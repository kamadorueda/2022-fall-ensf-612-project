[
  {
    "author_association": "NONE",
    "body": "PowerShell uses .NET wildcards so `**`  is the same as `*` or `****`  - it doesn't have a special meaning of \"recurse\"  when dealing with the file system.  The file system and registry providers both treat `*/*`  - as all items \"1 level down the tree\" and `*/*/*` as \"All items 2 levels down\" and so on - the Certificate Store provider will allow `dir */*` but not `dir */*/*`  \r\n\r\n `**/*`  will be processed differently depending on the command being run\r\n\r\nIf you are running pwsh on linux and execute ` ls **/*`   the `ls` executable does the same thing with `**/*` as it would when run from bash   - both pass the parameter on as literal text\r\nIf you are running pwsh on windows and run a native windows command in most cases it will use a parameter rather than a special path to request recursion and will probably error if given `**\\*` - as it would from cmd or a port of bash running on Windows (or even from wsl launching a windows command).  Again the parameter is literal text.    \r\nPowerShell commands will typically have a `-Recurse` switch and/or accept file objects from the pipeline so the typical route  is to use `Get-ChildItem` (or one of its aliases `dir` /`gci`) with the options to get exactly the required files and/or directories as objects and pipe them into a command which does something with files. \r\n\r\nSince you don't say what you'd do with magic paths elsewhere it's not really possible to give a \"do it this way\" command line.\r\n\r\n\r\n\r\n",
    "created_at": "2022-05-16T10:12:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1127482775",
    "id": 1127482775,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DNAWX",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1127482775/reactions"
    },
    "updated_at": "2022-05-16T11:08:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1127482775",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> PowerShell uses .NET wildcards so `**` is the same as `*` or `****` - it doesn't have a special meaning of \"recurse\" when dealing with the file system. The file system and registry providers both treat `*/*` - as all items \"1 level down the tree\" and `*/*/*` as \"All items 2 levels down\" and so on - the Certificate Store provider will allow `dir */*` but not `dir */*/*`\r\n> \r\n> `**/*` will be processed differently depending on the command being run\r\n> \r\n> If you are running pwsh on linux and execute ` ls **/*` the `ls` executable does the same thing with `**/*` as it would when run from bash - both pass the parameter on as literal text If you are running pwsh on windows and run a native windows command in most cases it will use a parameter rather than a special path to request recursion and will probably error if given `**\\*` - as it would from cmd or a port of bash running on Windows (or even from wsl launching a windows command). Again the parameter is literal text. PowerShell commands will typically have a `-Recurse` switch and/or accept file objects from the pipeline so the typical route is to use `Get-ChildItem` (or one of its aliases `dir` /`gci`) with the options to get exactly the required files and/or directories as objects and pipe them into a command which does something with files.\r\n> \r\n> Since you don't say what you'd do with magic paths elsewhere it's not really possible to give a \"do it this way\" command line.\r\n\r\nI'm using a video player.  I want to be able to play all of the files in a specific folder with all of the files from its subdirectories as well. In bash I'd do ```<video_player_binary> <folder_path>/**/*``` with globstar option enabled to achieve this. In powershell I can't do this.\r\n\r\nOr maybe my video player is parsing the **/*? Is this what you mean?\r\n\r\nAlso  I'm pretty sure bash does not pass '**/*' literally. It expands the glob pattern on the command line before passing it to the executable.",
    "created_at": "2022-05-16T17:13:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1127926463",
    "id": 1127926463,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DOsq_",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1127926463/reactions"
    },
    "updated_at": "2022-05-16T17:41:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1127926463",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/97008719?v=4",
      "events_url": "https://api.github.com/users/cerealXDD/events{/privacy}",
      "followers_url": "https://api.github.com/users/cerealXDD/followers",
      "following_url": "https://api.github.com/users/cerealXDD/following{/other_user}",
      "gists_url": "https://api.github.com/users/cerealXDD/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cerealXDD",
      "id": 97008719,
      "login": "cerealXDD",
      "node_id": "U_kgDOBcg8Tw",
      "organizations_url": "https://api.github.com/users/cerealXDD/orgs",
      "received_events_url": "https://api.github.com/users/cerealXDD/received_events",
      "repos_url": "https://api.github.com/users/cerealXDD/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cerealXDD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cerealXDD/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cerealXDD"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@cerealXDD Can you try `<video_player_binary> (dir /home/daxian/**/* | % FullName)` and see if that works?",
    "created_at": "2022-05-16T17:48:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1127961952",
    "id": 1127961952,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DO1Vg",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1127961952/reactions"
    },
    "updated_at": "2022-05-16T17:48:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1127961952",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "NONE",
    "body": "> I'm using a video player. I want to be able to play all of the files in a specific folder with all of the files from its subdirectories as well. In bash I'd do `<video_player_binary> <folder_path>/**/*` with globstar option enabled to achieve this. In powershell I can't do this.\r\n> \r\n> Or maybe my video player is parsing the **/*? Is this what you mean?\r\n\r\nThat's what I believe, yes. As I understand it bash can do the work to translate mydir/**/* to a set of filenames, but for `video_player_binary> <folder_path>/**/*`  that path isn't being expanded and is just passed as a string.    \r\n\r\nIf I'm wrong, and you do need to run `video_player_binary path1 path2 path3 ` where the paths are put there by the shell     \r\n `(gci -r  path_to_dir -File).FullName`  or `(gci -r  path_to_dir -File| % fullname)` will do that for you. \r\n\r\n@daxian-dbw  `dir **/*` is all equivalent to  `dir */*` in effect `dir -recurse -depth 1 *` if it needs \"any depth\" it will need to be `-recurse` instead.  \r\n\r\n ",
    "created_at": "2022-05-16T18:42:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1128012084",
    "id": 1128012084,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DPBk0",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128012084/reactions"
    },
    "updated_at": "2022-05-16T18:42:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128012084",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @cerealXDD Can you try `<video_player_binary> (dir /home/daxian/**/* | % FullName)` and see if that works?\r\n\r\nIt doesn't work. I get this error :\r\n\r\n```\r\nProgram '<binary>' failed to run: The filename or extension is too longAt line:1 char:1\r\n+ <binary> (dir <dir>/**/* | % FullName)\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~.\r\nAt line:1 char:1\r\n+ <binary> (dir <dir> | % FullName)\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ResourceUnavailable: (:) [], ApplicationFailedException\r\n    + FullyQualifiedErrorId : NativeCommandFailed\r\n```",
    "created_at": "2022-05-16T19:17:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1128043701",
    "id": 1128043701,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DPJS1",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128043701/reactions"
    },
    "updated_at": "2022-05-16T19:26:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128043701",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/97008719?v=4",
      "events_url": "https://api.github.com/users/cerealXDD/events{/privacy}",
      "followers_url": "https://api.github.com/users/cerealXDD/followers",
      "following_url": "https://api.github.com/users/cerealXDD/following{/other_user}",
      "gists_url": "https://api.github.com/users/cerealXDD/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cerealXDD",
      "id": 97008719,
      "login": "cerealXDD",
      "node_id": "U_kgDOBcg8Tw",
      "organizations_url": "https://api.github.com/users/cerealXDD/orgs",
      "received_events_url": "https://api.github.com/users/cerealXDD/received_events",
      "repos_url": "https://api.github.com/users/cerealXDD/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cerealXDD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cerealXDD/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cerealXDD"
    }
  },
  {
    "author_association": "NONE",
    "body": "> > I'm using a video player. I want to be able to play all of the files in a specific folder with all of the files from its subdirectories as well. In bash I'd do `<video_player_binary> <folder_path>/**/*` with globstar option enabled to achieve this. In powershell I can't do this.\r\n> > Or maybe my video player is parsing the **/*? Is this what you mean?\r\n> \r\n> That's what I believe, yes. As I understand it bash can do the work to translate mydir/**/* to a set of filenames, but for `video_player_binary> <folder_path>/**/*` that path isn't being expanded and is just passed as a string.\r\n> \r\n> If I'm wrong, and you do need to run `video_player_binary path1 path2 path3 ` where the paths are put there by the shell `(gci -r path_to_dir -File).FullName` or `(gci -r path_to_dir -File| % fullname)` will do that for you.\r\n> \r\n> @daxian-dbw `dir **/*` is all equivalent to `dir */*` in effect `dir -recurse -depth 1 *` if it needs \"any depth\" it will need to be `-recurse` instead.\r\n\r\nOk, `(gci -r path_to_dir -File).FullName` works, but only for paths without spaces or special characters. When special characters are involved I get the error in the above post.",
    "created_at": "2022-05-16T19:25:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1128050062",
    "id": 1128050062,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DPK2O",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128050062/reactions"
    },
    "updated_at": "2022-05-16T19:27:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128050062",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/97008719?v=4",
      "events_url": "https://api.github.com/users/cerealXDD/events{/privacy}",
      "followers_url": "https://api.github.com/users/cerealXDD/followers",
      "following_url": "https://api.github.com/users/cerealXDD/following{/other_user}",
      "gists_url": "https://api.github.com/users/cerealXDD/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cerealXDD",
      "id": 97008719,
      "login": "cerealXDD",
      "node_id": "U_kgDOBcg8Tw",
      "organizations_url": "https://api.github.com/users/cerealXDD/orgs",
      "received_events_url": "https://api.github.com/users/cerealXDD/received_events",
      "repos_url": "https://api.github.com/users/cerealXDD/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cerealXDD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cerealXDD/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cerealXDD"
    }
  },
  {
    "author_association": "NONE",
    "body": "Not sure what the cause is :  this works for me ... \r\n\r\n```\r\n> $env:editor\r\nC:\\Program Files\\Notepad++\\notepad++.exe\r\n> & $env:Editor  (gci  'C:\\Program Files\\PowerShell\\Modules\\Microsoft.PowerShell.Crescendo\\*.ps1' -File -Recurse ).fullname\r\n\r\n```\r\nNotice when I do \"gci\"  and the path has spaces. etc _that_ needs quotes round the path, but the file names I'm pushing into notepad++ don't need quotes - if I put quotes round them I can error that says the path \"'C:\\....'\" isn't valid or \"\"c:\\...\"\" if I use double quotes. But if I force an error by omitting the quotes the error message says \r\n\r\nIf   `<binary>  \"<problem file path>\"` doesn't work from the PowerShell prompt, we need to look at how the app wants the path to be written . But if it does can you try \r\n```\r\n$x = \"<problem file path>\"\r\n<binary> $x \r\n```\r\nand  if that works \r\n```\r\n<binary> @($x  ,$x) \r\n```\r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2022-05-17T09:19:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1128629076",
    "id": 1128629076,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DRYNU",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128629076/reactions"
    },
    "updated_at": "2022-05-17T09:19:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1128629076",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Not sure what the cause is : this works for me ...\r\n> \r\n> ```\r\n> > $env:editor\r\n> C:\\Program Files\\Notepad++\\notepad++.exe\r\n> > & $env:Editor  (gci  'C:\\Program Files\\PowerShell\\Modules\\Microsoft.PowerShell.Crescendo\\*.ps1' -File -Recurse ).fullname\r\n> ```\r\n> \r\n> Notice when I do \"gci\" and the path has spaces. etc _that_ needs quotes round the path, but the file names I'm pushing into notepad++ don't need quotes - if I put quotes round them I can error that says the path \"'C:....'\" isn't valid or \"\"c:...\"\" if I use double quotes. But if I force an error by omitting the quotes the error message says\r\n> \r\n> If `<binary> \"<problem file path>\"` doesn't work from the PowerShell prompt, we need to look at how the app wants the path to be written . But if it does can you try\r\n> \r\n> ```\r\n> $x = \"<problem file path>\"\r\n> <binary> $x \r\n> ```\r\n> \r\n> and if that works\r\n> \r\n> ```\r\n> <binary> @($x  ,$x) \r\n> ```\r\n\r\nOk, I figured out the cause. The folder I'm passing has about 1000 files. It will print all the files if I do an echo, but not when I use the video player. I'm not sure how to get around this.",
    "created_at": "2022-05-20T16:33:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17347#issuecomment-1133103236",
    "id": 1133103236,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17347",
    "node_id": "IC_kwDOAvT7bc5DiciE",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1133103236/reactions"
    },
    "updated_at": "2022-05-20T16:33:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1133103236",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/97008719?v=4",
      "events_url": "https://api.github.com/users/cerealXDD/events{/privacy}",
      "followers_url": "https://api.github.com/users/cerealXDD/followers",
      "following_url": "https://api.github.com/users/cerealXDD/following{/other_user}",
      "gists_url": "https://api.github.com/users/cerealXDD/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/cerealXDD",
      "id": 97008719,
      "login": "cerealXDD",
      "node_id": "U_kgDOBcg8Tw",
      "organizations_url": "https://api.github.com/users/cerealXDD/orgs",
      "received_events_url": "https://api.github.com/users/cerealXDD/received_events",
      "repos_url": "https://api.github.com/users/cerealXDD/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/cerealXDD/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cerealXDD/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/cerealXDD"
    }
  }
]
