[
  {
    "author_association": "NONE",
    "body": "I think it should be based on the parse ast, and not the execution ast.\r\n\r\n```powershell\r\nFunction A()\r\n{\r\n   $foo = $bar  # strict error\r\n}\r\n\r\nFunction B()\r\n{\r\n  [CmdletBinding()]\r\n  [Strict()]\r\n  Param([Switch] $Condition)\r\n\r\n  $foo = \"hello\"\r\n  A()  # no error, despite bar being undefined, because A is not strict\r\n  if ($Condition) {\r\n    [Strict(Enabled = $false)]\r\n    $foo = $baz  # no error\r\n  }\r\n\r\n  if ($foo) {\r\n    $bar = $world  # error because strictness inherited from parent ast/parse scope\r\n  }\r\n}\r\n```\r\n\r\nBut it might be possible to runtime opt-in to strictness:\r\n\r\n```powershell\r\n# NAUSEA WARNING: THE FOLLOW IS JUST CHEESY PSEUDO CODE\r\n[Strict(Enabled = (Get-PSCallStack)[1].Strictness)]\r\n```\r\n",
    "created_at": "2019-03-26T18:57:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9228#issuecomment-476799267",
    "id": 476799267,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9228",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc5OTI2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476799267/reactions"
    },
    "updated_at": "2019-03-26T19:05:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476799267",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/323009?v=4",
      "events_url": "https://api.github.com/users/kfsone/events{/privacy}",
      "followers_url": "https://api.github.com/users/kfsone/followers",
      "following_url": "https://api.github.com/users/kfsone/following{/other_user}",
      "gists_url": "https://api.github.com/users/kfsone/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kfsone",
      "id": 323009,
      "login": "kfsone",
      "node_id": "MDQ6VXNlcjMyMzAwOQ==",
      "organizations_url": "https://api.github.com/users/kfsone/orgs",
      "received_events_url": "https://api.github.com/users/kfsone/received_events",
      "repos_url": "https://api.github.com/users/kfsone/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kfsone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kfsone/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kfsone"
    }
  },
  {
    "author_association": "NONE",
    "body": "Not quite *that* dynamic, it should probably have a fairly simple constraint that it ought to reference a value somewhere, e.g. for testing you might want:\r\n\r\n```powershell\r\nFunction A()\r\n{\r\n  [Strict(Enabled=$module:WantStrict)]\r\n  return $bar\r\n}\r\n\r\nFunction Setup-Mock\r\n{\r\n  Write-Host \"Mocks mocked\"\r\n}\r\n\r\n$module:WantStrict = $false\r\n\r\nSetup-Mock\r\nA()  # fine\r\n\r\n$module:WantStrict = $true\r\nA()  # error\r\n\r\n",
    "created_at": "2019-03-26T19:01:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9228#issuecomment-476800729",
    "id": 476800729,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9228",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgwMDcyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476800729/reactions"
    },
    "updated_at": "2019-03-26T19:02:02Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476800729",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/323009?v=4",
      "events_url": "https://api.github.com/users/kfsone/events{/privacy}",
      "followers_url": "https://api.github.com/users/kfsone/followers",
      "following_url": "https://api.github.com/users/kfsone/following{/other_user}",
      "gists_url": "https://api.github.com/users/kfsone/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kfsone",
      "id": 323009,
      "login": "kfsone",
      "node_id": "MDQ6VXNlcjMyMzAwOQ==",
      "organizations_url": "https://api.github.com/users/kfsone/orgs",
      "received_events_url": "https://api.github.com/users/kfsone/received_events",
      "repos_url": "https://api.github.com/users/kfsone/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kfsone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kfsone/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kfsone"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "I'm not sure I follow the initial example you have there? It looks like you might be mixing up the A()/B()  function calls? I'm not sure. ðŸ˜„ \r\n\r\nI'm also not really sure a dynamic value for strict mode is the best idea. ðŸ˜‹ ",
    "created_at": "2019-03-26T19:03:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9228#issuecomment-476801724",
    "id": 476801724,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9228",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgwMTcyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476801724/reactions"
    },
    "updated_at": "2019-03-26T19:03:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476801724",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "@vexx32 Fixed the A/B and see the follow up reply - some dynamism has some appeal but I agree it shouldn't be an up-front requirement.",
    "created_at": "2019-03-26T19:04:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9228#issuecomment-476802216",
    "id": 476802216,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9228",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgwMjIxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476802216/reactions"
    },
    "updated_at": "2019-03-26T19:04:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476802216",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/323009?v=4",
      "events_url": "https://api.github.com/users/kfsone/events{/privacy}",
      "followers_url": "https://api.github.com/users/kfsone/followers",
      "following_url": "https://api.github.com/users/kfsone/following{/other_user}",
      "gists_url": "https://api.github.com/users/kfsone/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kfsone",
      "id": 323009,
      "login": "kfsone",
      "node_id": "MDQ6VXNlcjMyMzAwOQ==",
      "organizations_url": "https://api.github.com/users/kfsone/orgs",
      "received_events_url": "https://api.github.com/users/kfsone/received_events",
      "repos_url": "https://api.github.com/users/kfsone/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kfsone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kfsone/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kfsone"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm also thinking that this allows:\r\n\r\n```powershell\r\nFunction AStrict($codeblock)\r\n{\r\n  [Strict()]\r\n  Invoke-Command -ea continue $codeblock\r\n}\r\n\r\nFunction AFree($codeblock)\r\n{\r\n  [Strict(Enabled=$false)]  # Note: this is a subtle nuance\r\n  Invoke-Command -ea continue $codeblock\r\n}\r\n\r\n$freecode = { $foo = $bar }   # definition legal, execution invalid in strict\r\n$strictcode = { [Strict] $foo = $bar }\r\n\r\nInvoke-Command $freecode  # no error\r\nInvoke-Command -ea cont $strictcode # error\r\n\r\n[Strict()]\r\n{\r\n  Invoke-Command $freecode  # no error, the code itself wasn't tagged strict\r\n  Invoke-Command $strict_code -ea continue # error\r\n}\r\n\r\nAStrict $freecode # no error\r\nAStrict $strictcode # error\r\nAFree $freecode  # no error\r\nAFree $strictcode  # error even though AFree explicitly says Strict(Enabled=$false)\r\n```\r\n",
    "created_at": "2019-03-26T19:10:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9228#issuecomment-476804350",
    "id": 476804350,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9228",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgwNDM1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476804350/reactions"
    },
    "updated_at": "2019-03-26T19:11:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476804350",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/323009?v=4",
      "events_url": "https://api.github.com/users/kfsone/events{/privacy}",
      "followers_url": "https://api.github.com/users/kfsone/followers",
      "following_url": "https://api.github.com/users/kfsone/following{/other_user}",
      "gists_url": "https://api.github.com/users/kfsone/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kfsone",
      "id": 323009,
      "login": "kfsone",
      "node_id": "MDQ6VXNlcjMyMzAwOQ==",
      "organizations_url": "https://api.github.com/users/kfsone/orgs",
      "received_events_url": "https://api.github.com/users/kfsone/received_events",
      "repos_url": "https://api.github.com/users/kfsone/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kfsone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kfsone/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kfsone"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yeah, a better alternative to dynamic `strict` that has better precedent would be some form of ErrorAction handling..\r\n```powershell\r\n$StrictPreference = [System.Management.Automation.ActionPreference].SilentlyContinue\r\nSetup-Mock\r\n$StrictPreference = [System.Management.Automation.ActionPreference].DieInAFire\r\n```",
    "created_at": "2019-03-26T19:15:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9228#issuecomment-476806599",
    "id": 476806599,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9228",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgwNjU5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476806599/reactions"
    },
    "updated_at": "2019-03-26T19:16:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476806599",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/323009?v=4",
      "events_url": "https://api.github.com/users/kfsone/events{/privacy}",
      "followers_url": "https://api.github.com/users/kfsone/followers",
      "following_url": "https://api.github.com/users/kfsone/following{/other_user}",
      "gists_url": "https://api.github.com/users/kfsone/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/kfsone",
      "id": 323009,
      "login": "kfsone",
      "node_id": "MDQ6VXNlcjMyMzAwOQ==",
      "organizations_url": "https://api.github.com/users/kfsone/orgs",
      "received_events_url": "https://api.github.com/users/kfsone/received_events",
      "repos_url": "https://api.github.com/users/kfsone/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/kfsone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kfsone/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/kfsone"
    }
  }
]
