[
  {
    "author_association": "COLLABORATOR",
    "body": "@AikenBM It was a compromise read either raw or smart with W3C standard support. The standard uses '#' as special char at first position in header. Our conclusion was that following to the standard is better, users would need workarounds only for edge cases like you share.\r\nYou can see the code here:\r\nhttps://github.com/PowerShell/PowerShell/blob/master/src/Microsoft.PowerShell.Commands.Utility/commands/utility/CsvCommands.cs#L1285-L1314\r\n\r\n> Unfortunately, I do not currently have access to a system where I can install PowerShell 7.0 previews to test on.\r\n\r\nYou can download zip file from the site and install 7.0 Preview side-by-side.",
    "created_at": "2019-06-21T10:47:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9955#issuecomment-504382544",
    "id": 504382544,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDM4MjU0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504382544/reactions"
    },
    "updated_at": "2019-06-21T10:47:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/504382544",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @AikenBM It was a compromise read either raw or smart with W3C standard support. The standard uses '#' as special char at first position in header. Our conclusion was that following to the standard is better, users would need workarounds only for edge cases like you share.\r\n\r\nBy that I presume you mean the [Model for Tabular Data and Metadata](https://www.w3.org/TR/tabular-data-model/) on the [Web and the Metadata Vocabulary for Tabular Data](https://www.w3.org/TR/tabular-metadata/). The second is necessary, because that's the only document I can find that refers to `#` being the default character. The first one for general tabular data and to which the metadata recommendation refers to, says [the default comment character is null](https://www.w3.org/TR/2015/REC-tabular-data-model-20151217/#parsing), while [the metadata recommendation seems to say that the value should be user-configurable](https://www.w3.org/TR/tabular-metadata/#dialect-descriptions) with a default value of `#`. I'm just skimming, though, so I may be misreading things. I'd also point out that both documents repeatedly state that they *are not* attempting define any CSV standard (RFC4180 does that), but instead trying to describe how CSV data are actually used.\r\n\r\nHowever, let's set aside entirely any argument over the W3C standard and [RFC4180](https://tools.ietf.org/html/rfc4180). The problem is that even if I accept that the `#` is in widespread use as a comment character, **the commands are _still_ not consistent with that rule**. \r\n\r\nFirst I state my understanding of the rule: In a CSV format file, the leading character of `#` indicates a comment row which must be ignored by the parser.\r\n\r\nLet's take these two CSV sets of data:\r\n\r\n```powershell\r\n$CommentLine1 = @'\r\n#,2,3\r\nA,B,C\r\n4,5,6\r\n'@\r\n\r\n$CommentLine2 = @'\r\nA,B,C\r\n#,2,3\r\n4,5,6\r\n'@\r\n```\r\n\r\nThe above two variables with CSV data should be parsed identically in any circumstance. The `#` indicates a header, so the parser should always ignore those lines. That's not the case. \r\n\r\n```powershell\r\nPS C:\\> # Comment Line 1\r\nPS C:\\> $CommentLine1 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n4 5 6\r\n\r\n\r\nPS C:\\> # Comment Line 1 - Split\r\nPS C:\\> -split $CommentLine1 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n4 5 6\r\n\r\n\r\nPS C:\\> # Comment Line 2\r\nPS C:\\> $CommentLine2 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n# 2 3\r\n4 5 6\r\n\r\n\r\nPS C:\\> # No Quotes Comment Line 2 - Split\r\nPS C:\\> -split $CommentLine2 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n4 5 6\r\n```\r\n\r\nSee how the third example with a comment on line 2 and no `-split` isn't consistent with the others?\r\n\r\nAlso note that it's this third example that indicates how Import-Csv will handle the data:\r\n\r\n```powershell\r\nPS C:\\> $CommentLine2 | Set-Content ~\\test.csv\r\nPS C:\\> Import-Csv ~\\test.csv\r\n\r\nA B C\r\n- - -\r\n# 2 3\r\n4 5 6\r\n```\r\n\r\nIt's different again if you try it with quoted CSV data:\r\n\r\n```powershell\r\n$QuotedCommentLine1 = @'\r\n\"#\",\"2\",\"3\"\r\n\"A\",\"B\",\"C\"\r\n\"4\",\"5\",\"6\"\r\n'@\r\n\r\n$QuotedCommentLine2 = @'\r\n\"A\",\"B\",\"C\"\r\n\"#\",\"2\",\"3\"\r\n\"4\",\"5\",\"6\"\r\n'@\r\n```\r\n\r\nFirst, I think it's important to note that, by my understanding of the rule, _neither_ of the above sets of CSV data have any comments. The first character of the line is _not_ `#`. It's `\"`. I am going to take some convincing to think that it's appropriate to treat a quoted escape character as the escape character. You'll note that when `ConvertTo-Csv -IncludeTypeInformation` is specified or `Export-Csv -IncludeTypeInformation` is specified, the type information line is _not_ quoted.\r\n\r\nHere's the output:\r\n\r\n```powershell\r\nPS C:\\> # Quoted Comment Line 1\r\nPS C:\\> $QuotedCommentLine1 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n4 5 6\r\n\r\n\r\nPS C:\\> # Quoted Comment Line 1 - Split\r\nPS C:\\> -split $QuotedCommentLine1 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n4 5 6\r\n\r\n\r\nPS C:\\> # Quoted Comment Line 2\r\nPS C:\\> $QuotedCommentLine2 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n# 2 3\r\n4 5 6\r\n\r\n\r\nPS C:\\> # Quoted Comment Line 2 - Split\r\nPS C:\\> -split $QuotedCommentLine2 | ConvertFrom-Csv\r\n\r\nA B C\r\n- - -\r\n# 2 3\r\n4 5 6\r\n```\r\n\r\nHere, the system behaves completely differently if the comment is on the first line instead of on the second line. This makes no sense at all. First of all, there are no comments in this CSV data. Second of all, even if they _were_ comments, why is a comment on line 1 treated differently than a comment on line 2? Further, this behavior is totally inconsistent with the behavior of the non-quoted data! For reference, `Import-Csv` behaves identically here.\r\n\r\nWhat I believe needs to happen is:\r\n\r\n1. There needs to be consistency of operation in how these commands parse the data.\r\n2. There should be a way to set or ignore the comment character, per the W3C recommendations.\r\n\r\n> > Unfortunately, I do not currently have access to a system where I can install PowerShell 7.0 previews to test on.\r\n> \r\n> You can download zip file from the site and install 7.0 Preview side-by-side.\r\n\r\nYou don't understand. I currently have access to two different systems: A Windows 10 Enterprise workstation and a Windows 10 Enterprise laptop both owned by my organization. I am allowed to install software on these systems, but I am prohibited from installing preview or beta software of any kind without approval. I would have to check, but I'm fairly certain I'm not allowed to install Hyper-V or other virtualization software to circumvent these policies. My personally owned workstations are currently 1,200 miles away and powered off, and they will be until the end of August.\r\n\r\nWhen I say I have no access to  a system I can test on, I mean I have no access to a system I can test on!\r\n",
    "created_at": "2019-06-24T22:30:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9955#issuecomment-505205803",
    "id": 505205803,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTIwNTgwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/505205803/reactions"
    },
    "updated_at": "2019-06-24T22:30:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/505205803",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/31443007?v=4",
      "events_url": "https://api.github.com/users/AikenBM/events{/privacy}",
      "followers_url": "https://api.github.com/users/AikenBM/followers",
      "following_url": "https://api.github.com/users/AikenBM/following{/other_user}",
      "gists_url": "https://api.github.com/users/AikenBM/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/AikenBM",
      "id": 31443007,
      "login": "AikenBM",
      "node_id": "MDQ6VXNlcjMxNDQzMDA3",
      "organizations_url": "https://api.github.com/users/AikenBM/orgs",
      "received_events_url": "https://api.github.com/users/AikenBM/received_events",
      "repos_url": "https://api.github.com/users/AikenBM/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/AikenBM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AikenBM/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/AikenBM"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@AikenBM Thanks for your investigations! As I commented above it is an expected behavior for the edge case. No need complicate the parser (we want to keep it fastest) until we get an important business case (like Aparche, ISS, or nginx will start writing logs of this format).",
    "created_at": "2019-06-25T07:42:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9955#issuecomment-505327127",
    "id": 505327127,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTMyNzEyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/505327127/reactions"
    },
    "updated_at": "2019-06-25T07:42:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/505327127",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm surprised this was rejected as \"By Design\".  The behavior has changed from previous versions (such as 5.1.18362.145), not documented anywhere that I've found, other than this bug report and Stack Overflow post, and a potential breaking change for many. \r\n\r\nAs @AikenBM suggested, a quoted \"#\" is not a line starting with #, so shouldn't be treated as a comment, and yet is being done so. I've got plenty of CSV files that use a \"#\" to represent a record number.  This will mean changes required to read the file, either by loading the whole file and replacing the # with something else, or changing the export.\r\n\r\nAs a side note, the code appears to have explicit definition to handle the W3C Common log format, but only the \"#Fields:\" directive, when the guidance suggests there is also Version, Software, Start-Date, End-Date, Date, and Remark.",
    "created_at": "2019-10-18T21:47:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9955#issuecomment-543965954",
    "id": 543965954,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk2NTk1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543965954/reactions"
    },
    "updated_at": "2019-10-18T21:47:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543965954",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3899160?v=4",
      "events_url": "https://api.github.com/users/jangliss/events{/privacy}",
      "followers_url": "https://api.github.com/users/jangliss/followers",
      "following_url": "https://api.github.com/users/jangliss/following{/other_user}",
      "gists_url": "https://api.github.com/users/jangliss/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jangliss",
      "id": 3899160,
      "login": "jangliss",
      "node_id": "MDQ6VXNlcjM4OTkxNjA=",
      "organizations_url": "https://api.github.com/users/jangliss/orgs",
      "received_events_url": "https://api.github.com/users/jangliss/received_events",
      "repos_url": "https://api.github.com/users/jangliss/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jangliss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jangliss/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jangliss"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  I've got plenty of CSV files that use a \"#\" to represent a record number.\r\n\r\nWhat is source of the files?",
    "created_at": "2019-10-19T08:04:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/9955#issuecomment-544113167",
    "id": 544113167,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/9955",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDExMzE2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/544113167/reactions"
    },
    "updated_at": "2019-10-19T08:04:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/544113167",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  }
]
