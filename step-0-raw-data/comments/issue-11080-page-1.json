[
  {
    "author_association": "COLLABORATOR",
    "body": "You should use ArgumentList to send arguments",
    "created_at": "2019-11-15T12:25:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-554340733",
    "id": 554340733,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDM0MDczMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554340733/reactions"
    },
    "updated_at": "2019-11-15T12:25:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554340733",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@iUnknwn `$input` is an enumerator.  After the first time you use it the enumeration is completed so when you call it the second time it is empty.  Use `$_` or `$PSItem` instead, or the `ArgumentList` parameter as @iSazonov suggested.\r\n\r\nIf you really want to stick with `$input` you could call `$input.Reset()` between uses, but the other options will better serve your use case.",
    "created_at": "2019-11-15T12:47:14Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-554346557",
    "id": 554346557,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDM0NjU1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554346557/reactions"
    },
    "updated_at": "2019-11-15T13:50:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554346557",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "This looks like a potential documentation bug for Start-ThreadJob then, since `ArgumentList` clearly says it's only to be used with a script file (not a script block). I'll open a new issue.\r\n\r\nManually manipulating the iterator works, as does using ArgumentList. However, it doesn't look like `$PSItem` is populated in the script block. Is this expected?\r\n\r\n```\r\n$job = Start-ThreadJob -InputObject $inputObj -ScriptBlock {\r\n    echo $PSItem #outputs nothing\r\n    $PSItem.p.WaitForExit() #fails with null valued expression\r\n    $PSItem.tcs.SetResult($true) #fails with null valued expression.\r\n}\r\n```",
    "created_at": "2019-11-15T20:21:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-554513465",
    "id": 554513465,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDUxMzQ2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554513465/reactions"
    },
    "updated_at": "2019-11-15T20:21:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554513465",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1129122?v=4",
      "events_url": "https://api.github.com/users/iUnknwn/events{/privacy}",
      "followers_url": "https://api.github.com/users/iUnknwn/followers",
      "following_url": "https://api.github.com/users/iUnknwn/following{/other_user}",
      "gists_url": "https://api.github.com/users/iUnknwn/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iUnknwn",
      "id": 1129122,
      "login": "iUnknwn",
      "node_id": "MDQ6VXNlcjExMjkxMjI=",
      "organizations_url": "https://api.github.com/users/iUnknwn/orgs",
      "received_events_url": "https://api.github.com/users/iUnknwn/received_events",
      "repos_url": "https://api.github.com/users/iUnknwn/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iUnknwn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iUnknwn/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iUnknwn"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": ">  However, it doesn't look like $PSItem is populated in the script block. Is this expected?\r\n\r\n@PaulHigin Is it by-design?",
    "created_at": "2019-11-16T10:58:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-554626566",
    "id": 554626566,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDYyNjU2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554626566/reactions"
    },
    "updated_at": "2019-11-16T10:58:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554626566",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov, I think it is; the documentation even states for the `-InputObject` parameter:\r\n\r\n> In the value of the ScriptBlock parameter, use the `$Input` automatic variable to represent the input objects.\r\n\r\nWhile something like `1, 2 | Start-ThreadJob { ... }` (implicit `-InputObject` use) _looks like_ a per-input-object script-block-invocation scenario such as `1, 2 | ForEach-Object { $_ + 1 }` (`$_` being short for `$PSItem`), it isn't:\r\n\r\nIn the  `Start-ThreadJob` scenario (as with `Start-Job`, the CLI, and `Invoke-Command` - with or without remoting), the script block is only invoked _once_, in  a different runspace (which is in a different thread in the same process for `Start-ThreadJob`, and in a different process for the other scenarios); it is like invoking the script block with `& ` without input from a pipeline in the target runspace, and in a stand-alone invocation such as `& { $PSItem }`  `$PSItem` isn't defined.\r\n\r\nInstead, such an invoked-once script block needs to use a _nested_ pipeline with explicit use of `$Input` in order to access and enumerate the input objects (or move through the iterator manually, but that's obviously cumbersome).\r\n\r\nTo adapt the example above:\r\n\r\n```powershell\r\nPS> 1, 2 | Start-ThreadJob { $input | ForEach-Object { $_ + 1 } } | Receive-Job -Wait -AutoRemove\r\n3\r\n4\r\n```\r\n\r\n@SeeminglyScience: Curiously, calling `$input.Reset()` in these scenarios _fails_, unlike with intra-runspace use of `$input`; in the cross-runspace scenarios, the type of `$input` seems to change from `System.Collections.ArrayList+ArrayListEnumeratorSimple` to `System.Management.Automation.Runspaces.PipelineReader<object>` (the object returned from the internal `.GetReadEnumerator()` method).\r\n\r\nThis smells like a bug, right?\r\n\r\nRepro (Windows, using \"loopback remoting\"):\r\n\r\n```powershell\r\n1, 2 | Invoke-Command -ComputerName . { $input; $input.reset() }\r\n1\r\n2\r\nException calling \"Reset\" with \"0\" argument(s): \"Specified method is not supported.\"\r\n```\r\n\r\n",
    "created_at": "2019-11-17T19:49:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-554779550",
    "id": 554779550,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDc3OTU1MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554779550/reactions"
    },
    "updated_at": "2019-11-17T19:49:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554779550",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> I think it is;\r\n\r\n@mklement0 In the case PowerShell shouldn't be silent and throw on $PSItem, yes?",
    "created_at": "2019-11-18T03:08:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-554831816",
    "id": 554831816,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NDgzMTgxNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554831816/reactions"
    },
    "updated_at": "2019-11-18T03:08:05Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/554831816",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just like with local use, it does complain, but only with `Set-StrictMode -Version 1` or higher (note that, curiously, `$PSItem` is  translated to `$_` in the error message):\r\n\r\n```powershell\r\nPS> 1, 2 | Invoke-Command { Set-StrictMode -Version 1; $PSItem } -ComputerName .\r\nThe variable '$_' cannot be retrieved because it has not been set\r\n```\r\n\r\n---\r\n\r\nTaking a step back:\r\n\r\nWhile documented, the current behavior is both non-obvious and cumbersome.\r\n\r\nPiping objects in job / remoting scenarios isn't common, but perhaps that's owed to the above.\r\n\r\nEspecially in the context of the CLI the behavior is unexpected, as I've pointed out in #9497\r\n\r\nHowever, changing the behavior for script blocks passed to jobs and remoting commands to per-input-object invocation with `$_` / `$PSItem` bound would be a breaking change, because `$Input` would then turn into an effective alias of `$_` instead of representing _all_ input:\r\n\r\n```powershell\r\n# Currently: 1 invocation, explicit use of $input, which represents all input.\r\nPS>  1, 2 | Invoke-Command -ComputerName . { $input | % { '!' + $_ } }\r\n!1\r\n!2\r\n```\r\n\r\nIf we changed to per-input-object execution, we could more conveniently write:\r\n\r\n```powershell\r\n# With the change: 2 invocations, $_ usable.\r\nPS>  1, 2 | Invoke-Command -ComputerName . { '!' + $_ }\r\n!1\r\n!2\r\n```\r\n\r\nHowever, the semantics of `$input` would change:\r\n\r\n```powershell\r\n# Currently: 1 invocation, explicit use of $input, which represents all input.\r\nPS>  1, 2 | Invoke-Command -ComputerName . { $input | % { '!' + $_ }; 'after' }\r\n!1\r\n!2\r\nafter\r\n```\r\n\r\nWith per-input-object execution, you'd get:\r\n\r\n```powershell\r\n# With the change: 2 invocations, and $input is now the same as $_\r\nPS>  1, 2 | Invoke-Command -ComputerName . { $input | % { '!' + $_ }; 'after' }\r\n!1\r\nafter\r\n!2\r\nafter\r\n```\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2019-11-18T16:36:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-555098767",
    "id": 555098767,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTA5ODc2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/555098767/reactions"
    },
    "updated_at": "2019-11-18T16:39:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/555098767",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2020-05-09T00:00:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11080#issuecomment-626068779",
    "id": 626068779,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11080",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjA2ODc3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/626068779/reactions"
    },
    "updated_at": "2020-05-09T00:00:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/626068779",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
