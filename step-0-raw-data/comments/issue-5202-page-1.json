[
  {
    "author_association": "NONE",
    "body": "FWIW this can be worked around using [a somewhat cumbersome pair of functions](https://github.com/alx9r/BootstraPS/blob/30bf72d6cd1605c3aaedf610374810262972c94f/BootstraPS.psm1#L66-L119).  With the fix applied, a function looks something like this:\r\n\r\n```PowerShell\r\nfunction f\r\n{\r\n    param\r\n    (\r\n         # bunch of pipeline parameters\r\n    )\r\n   begin\r\n    {\r\n        $CommandLineParameters = $PSBoundParameters | BeginFixPSBoundParameters\r\n    }\r\n    process\r\n    {\r\n        $BoundParameters = $CommandLineParameters | ProcessFixPSBoundParameters $PSBoundParameters\r\n        # use @BoundParameters instead of @PSBoundParameters in the process block\r\n    }\r\n}\r\n```\r\n\r\nYou can find a [real-world example here](https://github.com/alx9r/BootstraPS/blob/30bf72d6cd1605c3aaedf610374810262972c94f/BootstraPS.psm1#L2822-L2879).",
    "created_at": "2017-11-20T00:06:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5202#issuecomment-345561913",
    "id": 345561913,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5202",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTU2MTkxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/345561913/reactions"
    },
    "updated_at": "2017-11-20T00:06:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/345561913",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11237922?v=4",
      "events_url": "https://api.github.com/users/alx9r/events{/privacy}",
      "followers_url": "https://api.github.com/users/alx9r/followers",
      "following_url": "https://api.github.com/users/alx9r/following{/other_user}",
      "gists_url": "https://api.github.com/users/alx9r/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/alx9r",
      "id": 11237922,
      "login": "alx9r",
      "node_id": "MDQ6VXNlcjExMjM3OTIy",
      "organizations_url": "https://api.github.com/users/alx9r/orgs",
      "received_events_url": "https://api.github.com/users/alx9r/received_events",
      "repos_url": "https://api.github.com/users/alx9r/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/alx9r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alx9r/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/alx9r"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just ran into this one too and was able to duplicate in v6.0.2 and v6.1.0-preview.4.  \r\n\r\n# Additional Context\r\n\r\n* I am **only** able to duplicate this issue if multiple ParameterSets are utilized from the pipeline input object set.\r\n* I am **not** able to duplicate this issue when the same ParameterSet is utilized for all pipeline input objects.\r\n* I can duplicate this issue with pipeline input defined by either property name, by value, or a combination thereof.\r\n* I can duplicate this issue with parameters set to standard types such as `[string]` or `[int]`, not just custom classes.\r\n* The first time a parameter is invoked in the pipeline, all subsequent calls to `$PSBoundParameters` list that parameter with that value, regardless of whether that same parameter was actually bound or not, or set to a different value. \r\n\r\n# Environments\r\n\r\n```powershell\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.0.2\r\nPSEdition                      Core\r\nGitCommitId                    v6.0.2\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n\r\n```powershell\r\n$PSVersionTable\r\n\r\nName                           Value\r\n----                           -----\r\nPSVersion                      6.1.0-preview.4\r\nPSEdition                      Core\r\nGitCommitId                    6.1.0-preview.4\r\nOS                             Microsoft Windows 10.0.17134\r\nPlatform                       Win32NT\r\nPSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}\r\nPSRemotingProtocolVersion      2.3\r\nSerializationVersion           1.1.0.1\r\nWSManStackVersion              3.0\r\n```\r\n",
    "created_at": "2018-08-11T23:07:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5202#issuecomment-412307357",
    "id": 412307357,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5202",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMwNzM1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412307357/reactions"
    },
    "updated_at": "2018-08-11T23:07:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/412307357",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11078689?v=4",
      "events_url": "https://api.github.com/users/tlindsay42/events{/privacy}",
      "followers_url": "https://api.github.com/users/tlindsay42/followers",
      "following_url": "https://api.github.com/users/tlindsay42/following{/other_user}",
      "gists_url": "https://api.github.com/users/tlindsay42/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/tlindsay42",
      "id": 11078689,
      "login": "tlindsay42",
      "node_id": "MDQ6VXNlcjExMDc4Njg5",
      "organizations_url": "https://api.github.com/users/tlindsay42/orgs",
      "received_events_url": "https://api.github.com/users/tlindsay42/received_events",
      "repos_url": "https://api.github.com/users/tlindsay42/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/tlindsay42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tlindsay42/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/tlindsay42"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I just ran into this one when piping objects that had different properties into a function. This caused the values from the first object to show up in the PSBoundParameters of the second object.\r\n\r\nHere is an example that reproduces the issue:\r\n\r\n    $list = @(\r\n        [pscustomobject]@{\r\n            Name='first';\r\n            MaximumVersion='1.1.1'\r\n        },\r\n        [pscustomobject]@{\r\n            Name='second';\r\n            MinimumVersion='2.2.2'\r\n        }\r\n    )\r\n    function pipetest\r\n    {\r\n        [cmdletbinding()]\r\n        param(\r\n            [Parameter(ValueFromPipelineByPropertyName=$true,\r\n                    Position=0)]\r\n            [ValidateNotNullOrEmpty()]\r\n            [string]\r\n            $Name,\r\n\r\n            [Parameter(ValueFromPipelineByPropertyName=$true)]\r\n            [ValidateNotNull()]\r\n            [string]\r\n            $MinimumVersion,\r\n\r\n            [Parameter(ValueFromPipelineByPropertyName=$true)]\r\n            [ValidateNotNull()]\r\n            [string]\r\n            $MaximumVersion\r\n        )\r\n        process\r\n        {\r\n            Write-Verbose -Verbose ('Parameters        name [{0}] min [{1}] max [{2}]' -f $Name, $MinimumVersion,$MaximumVersion)\r\n            Write-Verbose -Verbose ('PSBoundParameters name [{0}] min [{1}] max [{2}]' -f $PSBoundParameters.Name, $PSBoundParameters.MinimumVersion,$PSBoundParameters.MaximumVersion)\r\n        }\r\n    }\r\n\r\n    $list | pipetest\r\n\r\nIn this example, I have 2 objects where one specifies a min version and the other specifies the max version. The verbose output show both the raw parameters and the `$psboundparameters`\r\n\r\n    VERBOSE: Parameters        name [first] min [] max [1.1.1]\r\n    VERBOSE: PSBoundParameters name [first] min [] max [1.1.1]\r\n    VERBOSE: Parameters        name [second] min [2.2.2] max []\r\n    VERBOSE: PSBoundParameters name [second] min [2.2.2] max [1.1.1]\r\n\r\nThe second object looks like it has a max version if you look at the PSBoundParameters but this is a carry over value from the first object. \r\n\r\nI ran into this issue when trying to pipe a list of module into `Find-Module` and getting validation errors on the version numbers.",
    "created_at": "2019-03-06T10:34:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5202#issuecomment-470056892",
    "id": 470056892,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5202",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDA1Njg5Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/470056892/reactions"
    },
    "updated_at": "2019-03-06T10:34:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/470056892",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7864621?v=4",
      "events_url": "https://api.github.com/users/KevinMarquette/events{/privacy}",
      "followers_url": "https://api.github.com/users/KevinMarquette/followers",
      "following_url": "https://api.github.com/users/KevinMarquette/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinMarquette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KevinMarquette",
      "id": 7864621,
      "login": "KevinMarquette",
      "node_id": "MDQ6VXNlcjc4NjQ2MjE=",
      "organizations_url": "https://api.github.com/users/KevinMarquette/orgs",
      "received_events_url": "https://api.github.com/users/KevinMarquette/received_events",
      "repos_url": "https://api.github.com/users/KevinMarquette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KevinMarquette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinMarquette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KevinMarquette"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It looks like the same $PSBoundParameters dictionary is reused over and over for each loop of the process block. So changes to the dictionary will persist if a parameter is not overridden.\r\n\r\nIf you return the psboundparameters out of a function, you can see that they are all a reference to the same thing.\r\n\r\n    function pipetest2\r\n    {\r\n        [cmdletbinding()]\r\n        param(\r\n            [Parameter(ValueFromPipelineByPropertyName)]\r\n            $Name,\r\n            [Parameter(ValueFromPipelineByPropertyName)]\r\n            $MinimumVersion,\r\n            [Parameter(ValueFromPipelineByPropertyName)]\r\n            $MaximumVersion\r\n        )\r\n        process\r\n        {\r\n            $PSBoundParameters\r\n        }\r\n    }\r\n    $output = $list | pipetest2\r\n    $output[0] -eq $output[1]\r\n",
    "created_at": "2019-03-07T00:28:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/5202#issuecomment-470332688",
    "id": 470332688,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/5202",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDMzMjY4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/470332688/reactions"
    },
    "updated_at": "2019-03-07T00:28:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/470332688",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7864621?v=4",
      "events_url": "https://api.github.com/users/KevinMarquette/events{/privacy}",
      "followers_url": "https://api.github.com/users/KevinMarquette/followers",
      "following_url": "https://api.github.com/users/KevinMarquette/following{/other_user}",
      "gists_url": "https://api.github.com/users/KevinMarquette/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KevinMarquette",
      "id": 7864621,
      "login": "KevinMarquette",
      "node_id": "MDQ6VXNlcjc4NjQ2MjE=",
      "organizations_url": "https://api.github.com/users/KevinMarquette/orgs",
      "received_events_url": "https://api.github.com/users/KevinMarquette/received_events",
      "repos_url": "https://api.github.com/users/KevinMarquette/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KevinMarquette/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KevinMarquette/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KevinMarquette"
    }
  }
]
