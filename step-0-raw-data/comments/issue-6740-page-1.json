[
  {
    "author_association": "NONE",
    "body": "I'm with @lzybkr on the way to implement this -- use an `if` to check effective configuration.\r\n\r\nIt's noticeable that currently, if you do the following:\r\n\r\n```powershell\r\nFunction Test-Information\r\n{\r\n[CmdletBinding()] Param ()\r\nProcess { Write-Information $InformationPreference }\r\n}\r\n$a = ''\r\nTest-Information -InformationVariable a\r\nWrite-Host $a\r\n```\r\n\r\nYou will get `SilentlyContinue`, so simply checking whether `InformationPreference` is not `SilentlyContinue` **does not suffice**. I would suggest `$PSCmdlet.ShouldWriteInformation` and friends to check if there is someone receiving the output. People can choose to use that only if formatting is \"expensive\".\r\n\r\nIt is also noticeable that, if the message output procedure has any side effects, they will for sure manifest themselves under current implementation, and for once (whether or not it is `SilentlyContinue`, whether or not it is directed to a variable). Documentation on the new paradigm should warn programmers of side effects.",
    "created_at": "2018-05-01T03:11:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/6740#issuecomment-385589256",
    "id": 385589256,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/6740",
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTU4OTI1Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385589256/reactions"
    },
    "updated_at": "2018-05-01T03:11:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/385589256",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/4462444?v=4",
      "events_url": "https://api.github.com/users/GeeLaw/events{/privacy}",
      "followers_url": "https://api.github.com/users/GeeLaw/followers",
      "following_url": "https://api.github.com/users/GeeLaw/following{/other_user}",
      "gists_url": "https://api.github.com/users/GeeLaw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/GeeLaw",
      "id": 4462444,
      "login": "GeeLaw",
      "node_id": "MDQ6VXNlcjQ0NjI0NDQ=",
      "organizations_url": "https://api.github.com/users/GeeLaw/orgs",
      "received_events_url": "https://api.github.com/users/GeeLaw/received_events",
      "repos_url": "https://api.github.com/users/GeeLaw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/GeeLaw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GeeLaw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/GeeLaw"
    }
  }
]
