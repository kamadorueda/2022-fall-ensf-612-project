[
  {
    "author_association": "MEMBER",
    "body": "I believe we implemented 'using assembly' specifically for this use case\n",
    "created_at": "2016-10-28T18:56:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-257000804",
    "id": 257000804,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzAwMDgwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/257000804/reactions"
    },
    "updated_at": "2016-10-28T18:56:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/257000804",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "According to @lzybkr, `using assembly` is meant for this, but it has not been implemented for this use case yet. ",
    "created_at": "2017-02-16T00:42:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-280191563",
    "id": 280191563,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDE5MTU2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/280191563/reactions"
    },
    "updated_at": "2017-02-16T00:42:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/280191563",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1255187?v=4",
      "events_url": "https://api.github.com/users/joeyaiello/events{/privacy}",
      "followers_url": "https://api.github.com/users/joeyaiello/followers",
      "following_url": "https://api.github.com/users/joeyaiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/joeyaiello/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/joeyaiello",
      "id": 1255187,
      "login": "joeyaiello",
      "node_id": "MDQ6VXNlcjEyNTUxODc=",
      "organizations_url": "https://api.github.com/users/joeyaiello/orgs",
      "received_events_url": "https://api.github.com/users/joeyaiello/received_events",
      "repos_url": "https://api.github.com/users/joeyaiello/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/joeyaiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joeyaiello/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/joeyaiello"
    }
  },
  {
    "author_association": "NONE",
    "body": "Same problem here in DSC resource (classes are recomended way to implement them, I heard)\r\n\r\nI have tried to \"Add-Type -AssemblyName System.IO.Compression.FileSystem\" before class definition and inside class method and also \"using namespace System.IO.Compression\" before defining the class, but none of these worked.\r\n\r\nA workaround was to dot-source an external script file in class method where Add-Type worked as usual.",
    "created_at": "2018-10-09T16:17:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-428256393",
    "id": 428256393,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODI1NjM5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428256393/reactions"
    },
    "updated_at": "2018-10-09T16:17:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428256393",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/923742?v=4",
      "events_url": "https://api.github.com/users/dpurge/events{/privacy}",
      "followers_url": "https://api.github.com/users/dpurge/followers",
      "following_url": "https://api.github.com/users/dpurge/following{/other_user}",
      "gists_url": "https://api.github.com/users/dpurge/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dpurge",
      "id": 923742,
      "login": "dpurge",
      "node_id": "MDQ6VXNlcjkyMzc0Mg==",
      "organizations_url": "https://api.github.com/users/dpurge/orgs",
      "received_events_url": "https://api.github.com/users/dpurge/received_events",
      "repos_url": "https://api.github.com/users/dpurge/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dpurge/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dpurge/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dpurge"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@dpurge Yes the PowerShell class has to be parsed after the type is added. So having the class in the same file as the `Add-Type` won't work (because the whole file, including the class, is read before the `Add-Type` is executed).\r\n\r\nPutting the class into an external file will work because it delays reading the class until script execution time.\r\n\r\nSee also: https://github.com/PowerShell/PowerShell/issues/6652.\r\n\r\nTo fix this particular issue, the plan is to allow `using assembly`, which will read DLL metadata safely (i.e. without loading it) at parse-time. However this is a large work item.",
    "created_at": "2018-10-09T18:25:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-428299006",
    "id": 428299006,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODI5OTAwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428299006/reactions"
    },
    "updated_at": "2018-10-09T18:25:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/428299006",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt correct me if I'm wrong, but my understanding is that in order for this to work then at least the following would need to be done:\r\n\r\n1. Classes would need to be defined with `MetadataBuilder` instead of the `System.Reflection.Emit` API's\r\n1. Not yet loaded assemblies specified by `using assembly` would need to be analyzed via a `MetadataReader` *if* classes are defined in the file\r\n\r\nHas there been any discussion on if this would even be accepted as a contribution?  As you know, code that utilizes those API's would be exponentially more complex than the current code.\r\n\r\nI'd like to take on at some point if no one beats me to it, but I'm unsure if it would be considered worth maintaining.",
    "created_at": "2019-05-22T12:24:55Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-494779944",
    "id": 494779944,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDc3OTk0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494779944/reactions"
    },
    "updated_at": "2019-05-22T12:24:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494779944",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@SeeminglyScience - Using `MetadataReader` was my original plan when I introduced `using assembly` - I even wanted to use it for command analysis to avoid loading assemblies.\r\n\r\nI can't comment on `MetadataBuilder`. I thought `Reflection.Emit` was up to the task, but I could easily be mistaken. One important aspect of defining types though - it should ideally be done in a collectible assembly.",
    "created_at": "2019-05-22T17:33:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-494897391",
    "id": 494897391,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDg5NzM5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494897391/reactions"
    },
    "updated_at": "2019-05-22T17:33:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494897391",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> Using `MetadataReader` was my original plan when I introduced `using assembly` - I even wanted to use it for command analysis to avoid loading assemblies.\r\n\r\nYes! I've been on and off working on a metadata only version of `CmdletInfo` for that 🙂 \r\n\r\n> I can't comment on `MetadataBuilder`. I thought `Reflection.Emit` was up to the task, but I could easily be mistaken.\r\n\r\nIt is as long as we can load the assembly prior to actually defining the type which should be doable.  Now that I think about it, I think I started down that path because I wanted the exceptions `TypeBuilder.CreateType()` throws, but at parse time.  `MetadataBuilder` doesn't really do any validation though, so any of that logic would need to be written from scratch utilizing `MetadataReader` anyway.\r\n\r\n> One important aspect of defining types though - it should ideally be done in a collectible assembly.\r\n\r\nAh yeah, `MetadataBuilder` is out then.  I thought they weren't collectible for some reason.\r\n\r\nShould be a lot less complicated with just `MetadataReader` then.  Thanks @lzybkr!",
    "created_at": "2019-05-22T18:34:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-494914987",
    "id": 494914987,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDkxNDk4Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494914987/reactions"
    },
    "updated_at": "2019-05-22T18:34:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/494914987",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Just while I'm compiling some information in this area on this...\r\n\r\nHere's where `using assembly` is acted on:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/7d5c86949f2468cc9320ece7234607f52590b3fb/src/System.Management.Automation/engine/parser/Compiler.cs#L2701\r\n\r\nHere's where that `LoadAssembly()` call goes:\r\n\r\nhttps://github.com/PowerShell/PowerShell/blob/7d5c86949f2468cc9320ece7234607f52590b3fb/src/System.Management.Automation/engine/parser/Compiler.cs#L2761-L2799",
    "created_at": "2020-01-29T01:01:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/2074#issuecomment-579545537",
    "id": 579545537,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/2074",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU0NTUzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/579545537/reactions"
    },
    "updated_at": "2020-01-29T01:01:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/579545537",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  }
]
