[
  {
    "author_association": "NONE",
    "body": "`Key` does not work too (but `Name` \"mystically\" does)\r\n```\r\n@{a=1;b=2}.GetEnumerator().key\r\n```",
    "created_at": "2022-08-26T15:51:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17973#issuecomment-1228662608",
    "id": 1228662608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17973",
    "node_id": "IC_kwDOAvT7bc5JO-dQ",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228662608/reactions"
    },
    "updated_at": "2022-08-26T15:51:18Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228662608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17237559?v=4",
      "events_url": "https://api.github.com/users/scriptingstudio/events{/privacy}",
      "followers_url": "https://api.github.com/users/scriptingstudio/followers",
      "following_url": "https://api.github.com/users/scriptingstudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/scriptingstudio/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scriptingstudio",
      "id": 17237559,
      "login": "scriptingstudio",
      "node_id": "MDQ6VXNlcjE3MjM3NTU5",
      "organizations_url": "https://api.github.com/users/scriptingstudio/orgs",
      "received_events_url": "https://api.github.com/users/scriptingstudio/received_events",
      "repos_url": "https://api.github.com/users/scriptingstudio/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scriptingstudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scriptingstudio/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scriptingstudio"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "TBH, I would say expected behavior is both should not work. `GetEnumerator()` should return a .NET enumerable IIRC, which has neither `Name` nor `Value` properties, but iterates over object which do. The reason wrapping into array works is that PowerShell arrays are special case which effectively translate `.Value` into `| Where-Object 'Value'`",
    "created_at": "2022-08-26T18:20:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17973#issuecomment-1228789229",
    "id": 1228789229,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17973",
    "node_id": "IC_kwDOAvT7bc5JPdXt",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228789229/reactions"
    },
    "updated_at": "2022-08-26T18:20:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228789229",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26599495?v=4",
      "events_url": "https://api.github.com/users/dkaszews/events{/privacy}",
      "followers_url": "https://api.github.com/users/dkaszews/followers",
      "following_url": "https://api.github.com/users/dkaszews/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkaszews/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dkaszews",
      "id": 26599495,
      "login": "dkaszews",
      "node_id": "MDQ6VXNlcjI2NTk5NDk1",
      "organizations_url": "https://api.github.com/users/dkaszews/orgs",
      "received_events_url": "https://api.github.com/users/dkaszews/received_events",
      "repos_url": "https://api.github.com/users/dkaszews/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dkaszews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkaszews/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dkaszews"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Technically, `.GetEnumerator()` returns an enumeraTOR, not an enumerABLE.\r\n\r\nHowever, given that the following _do_ work, one would expect `@{a=1;b=2}.GetEnumerator().Value` to work too, consistently (that it works with `.Name` magic is presumably a happy accident; it is an _alias_ property of  the type-native `.Key` property):\r\n\r\n```powershell\r\n# This *should* be the equivalent of @{a=1;b=2}.GetEnumerator().Value\r\n@{a=1;b=2}.GetEnumerator() | ForEach-Object Value # OK\r\n\r\n@{a=1;b=2}.GetEnumerator().ForEach('Value'`) # OK\r\n```\r\n\r\nThe reason that `@(...)` works is that it forces enumeration of the enumeraTOR and collects the results in an array, which itself is an enumerABLE, on which member-access enumeration works as expected. (`(...)` would _not_ do that).\r\n",
    "created_at": "2022-08-26T19:53:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17973#issuecomment-1228874255",
    "id": 1228874255,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17973",
    "node_id": "IC_kwDOAvT7bc5JPyIP",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228874255/reactions"
    },
    "updated_at": "2022-08-26T19:53:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228874255",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@mklement0 Thanks for correction, I always get those two mixed up.\r\n\r\nCan somebody check please what happens in `StrictMode`? From the output I cannot see whether it is an empty collection or null from missing property.\r\n\r\nBTW, is there something like `Format-Debug` which prints type of each variable and does not flatten collections? Would be really useful to verify cases like this, distinguish null from empty collection from empty string etc. I sometimes use `Get-Member` for that but it also prints functions so is quite noisy. ",
    "created_at": "2022-08-26T20:26:56Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17973#issuecomment-1228914966",
    "id": 1228914966,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17973",
    "node_id": "IC_kwDOAvT7bc5JP8EW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228914966/reactions"
    },
    "updated_at": "2022-08-26T20:26:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228914966",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/26599495?v=4",
      "events_url": "https://api.github.com/users/dkaszews/events{/privacy}",
      "followers_url": "https://api.github.com/users/dkaszews/followers",
      "following_url": "https://api.github.com/users/dkaszews/following{/other_user}",
      "gists_url": "https://api.github.com/users/dkaszews/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/dkaszews",
      "id": 26599495,
      "login": "dkaszews",
      "node_id": "MDQ6VXNlcjI2NTk5NDk1",
      "organizations_url": "https://api.github.com/users/dkaszews/orgs",
      "received_events_url": "https://api.github.com/users/dkaszews/received_events",
      "repos_url": "https://api.github.com/users/dkaszews/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/dkaszews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dkaszews/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/dkaszews"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "It seems that `$null` is returned, as you would get with a _nonexistent_ property (with strict mode turned off).\r\n\r\nThe fact that `Set-StrictMode -Version 2; @{a=1;b=2}.GetEnumerator().Value` does _not_ complain - it recognizes the property as existing on all enumerated items, yet returns `$null` instead of the values - suggests that the intent is for ` @{a=1;b=2}.GetEnumerator().Value` to work and that we're simply dealing with a bug.\r\n\r\nAnother indication: It works fine with `.GetEnumerator()` called on an _array_: `('a', 'bc').GetEnumerator().Length`\r\n",
    "created_at": "2022-08-26T20:47:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/17973#issuecomment-1228934234",
    "id": 1228934234,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/17973",
    "node_id": "IC_kwDOAvT7bc5JQAxa",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228934234/reactions"
    },
    "updated_at": "2022-08-26T20:47:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1228934234",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
