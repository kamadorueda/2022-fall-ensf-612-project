[
  {
    "author_association": "COLLABORATOR",
    "body": "Perhaps it is a side effect of script compile cache. /cc @vexx32 @SeeminglyScience ",
    "created_at": "2022-02-26T07:59:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16926#issuecomment-1051789846",
    "id": 1051789846,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16926",
    "node_id": "IC_kwDOAvT7bc4-sQoW",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1051789846/reactions"
    },
    "updated_at": "2022-02-26T07:59:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1051789846",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yeah seems like an issue with the COM binder. It's probably not setting a binding restriction based on argument type. /cc @daxian-dbw ",
    "created_at": "2022-02-26T21:35:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16926#issuecomment-1052650954",
    "id": 1052650954,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16926",
    "node_id": "IC_kwDOAvT7bc4-vi3K",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1052650954/reactions"
    },
    "updated_at": "2022-02-26T21:35:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1052650954",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "PowerShell uses the same COM binder from C#, so this is likely an issue with the C# COM binder. It would be nice to reproduce the issue in C# with `dynamic` keyword, and then open an issue in dotnet/runtime repo.\r\n\r\nFWIW, it's not a regression -- Windows PowerShell 5.1 has the same failure because it also uses the C# COM binder.\r\nPowerShell's COM adapter seems working fine in this case:\r\n```\r\nfunction fn([switch]$Resolve) {\r\n    $WorkingDirectory = if ($Resolve) {Resolve-Path \".\"} else {\".\"}\r\n    $Shell = (New-Object -ComObject \"WScript.Shell\")\r\n    # the shortcut is not actually created\r\n    $Shortcut = $Shell.CreateShortcut(\"C:\\shortcut.lnk\")\r\n\r\n    ## setting the property through COM adapter.\r\n    $Shortcut.psobject.properties[\"WorkingDirectory\"].Value = $WorkingDirectory\r\n}\r\n```",
    "created_at": "2022-02-27T15:30:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16926#issuecomment-1053589625",
    "id": 1053589625,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16926",
    "node_id": "IC_kwDOAvT7bc4-zIB5",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1053589625/reactions"
    },
    "updated_at": "2022-02-27T15:30:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1053589625",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Set Issue-Bug so that we don't lost this.",
    "created_at": "2022-02-27T18:12:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16926#issuecomment-1053635574",
    "id": 1053635574,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16926",
    "node_id": "IC_kwDOAvT7bc4-zTP2",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1053635574/reactions"
    },
    "updated_at": "2022-02-27T18:12:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1053635574",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@daxian-dbw I think we just need to add the argument type to binding restrictions. Here's the code generated by the binder for when the argument is string. Note, the `if` statement around it is the binding restrictions:\r\n\r\n```csharp\r\nif ((instance is IDispatchComObject) &&\r\n    (((IDispatchComObject)instance).ComTypeDesc == Fake.Const<ComTypeDesc>(\"_defaultToString<ComTypeDesc>\")))\r\n{\r\n    return \r\n    {\r\n        int dispId = DispId;\r\n        dispParams.rgvarg = UnsafeMethods.ConvertVariantByrefToPtr(ref paramVariants.Element0);\r\n        dispParams.cArgs = 1;\r\n        dispParams.cNamedArgs = 1;\r\n        int propertyPutDispId = -3;\r\n        dispParams.rgdispidNamedArgs = UnsafeMethods.ConvertInt32ByrefToPtr(ref propertyPutDispId);\r\n        IDispatch dispatchObject = ((IDispatchComObject)instance).DispatchObject;\r\n        IntPtr dispatchPointer = Marshal.GetIDispatchForObject(dispatchObject);\r\n        try\r\n        {\r\n            ExcepInfo excepInfo;\r\n            uint argErr;\r\n            paramVariants.Element0.AsBstr = (string)value;\r\n            int hresult = UnsafeMethods.IDispatchInvoke(\r\n                dispatchPointer,\r\n                dispId,\r\n                INVOKEKIND.INVOKE_PROPERTYPUT,\r\n                ref dispParams,\r\n                out invokeResult,\r\n                out excepInfo,\r\n                out argErr);\r\n            ComRuntimeHelpers.CheckThrowException(\r\n                hresult,\r\n                ref excepInfo,\r\n                Fake.Const<ComMethodDesc>(\"_defaultToString<ComMethodDesc>\"),\r\n                new object[]\r\n                {\r\n                    ((IDispatchComObject)instance).DispatchObject as object,\r\n                    value as object\r\n                },\r\n                argErr);\r\n            returnValue = invokeResult.ToObject();\r\n        }\r\n        finally\r\n        {\r\n            UnsafeMethods.IUnknownRelease(dispatchPointer);\r\n            paramVariants.Element0.Clear();\r\n            invokeResult.Clear();\r\n        }\r\n\r\n        return AutomationNull.Value;\r\n\r\n        return (object)value;\r\n    };\r\n}\r\n```\r\n\r\nIf the binding restrictions included the property value type we'd it would trigger an update at the call site. I'm not 100% sure this would be considered an issue in C# as even in dynamic they require their casts to be a little bit more explicit. Hmm it might be though, I'll see if I can whip up a repro in a console app.\r\n\r\nAlso for completion, here's what the binder generates if `PathInfo` is the first binding for the call site:\r\n\r\n```csharp\r\nif ((instance is IDispatchComObject) &&\r\n    (((IDispatchComObject)instance).ComTypeDesc == Fake.Const<ComTypeDesc>(\"_defaultToString<ComTypeDesc>\")))\r\n{\r\n    return \r\n    {\r\n        int dispId = DispId;\r\n        dispParams.rgvarg = UnsafeMethods.ConvertVariantByrefToPtr(ref paramVariants.Element0);\r\n        dispParams.cArgs = 1;\r\n        dispParams.cNamedArgs = 1;\r\n        int propertyPutDispId = -3;\r\n        dispParams.rgdispidNamedArgs = UnsafeMethods.ConvertInt32ByrefToPtr(ref propertyPutDispId);\r\n        IDispatch dispatchObject = ((IDispatchComObject)instance).DispatchObject;\r\n        IntPtr dispatchPointer = Marshal.GetIDispatchForObject(dispatchObject);\r\n        try\r\n        {\r\n            ExcepInfo excepInfo;\r\n            uint argErr;\r\n            paramVariants.Element0.AsVariant = value;\r\n            int hresult = UnsafeMethods.IDispatchInvoke(\r\n                dispatchPointer,\r\n                dispId,\r\n                INVOKEKIND.INVOKE_PROPERTYPUT,\r\n                ref dispParams,\r\n                out invokeResult,\r\n                out excepInfo,\r\n                out argErr);\r\n            ComRuntimeHelpers.CheckThrowException(\r\n                hresult,\r\n                ref excepInfo,\r\n                Fake.Const<ComMethodDesc>(\"_defaultToString<ComMethodDesc>\"),\r\n                new object[]\r\n                {\r\n                    ((IDispatchComObject)instance).DispatchObject as object,\r\n                    value as object\r\n                },\r\n                argErr);\r\n            returnValue = invokeResult.ToObject();\r\n        }\r\n        finally\r\n        {\r\n            UnsafeMethods.IUnknownRelease(dispatchPointer);\r\n            paramVariants.Element0.Clear();\r\n            invokeResult.Clear();\r\n        }\r\n\r\n        return AutomationNull.Value;\r\n\r\n        return (object)value;\r\n    };\r\n}\r\n```",
    "created_at": "2022-02-28T14:40:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16926#issuecomment-1054325197",
    "id": 1054325197,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16926",
    "node_id": "IC_kwDOAvT7bc4-17nN",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1054325197/reactions"
    },
    "updated_at": "2022-02-28T14:40:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/1054325197",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  }
]
