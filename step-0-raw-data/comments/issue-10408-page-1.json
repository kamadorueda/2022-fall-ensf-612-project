[
  {
    "author_association": "MEMBER",
    "body": "cc @BrucePay @JamesWTruher ",
    "created_at": "2019-08-22T20:12:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-524059205",
    "id": 524059205,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDA1OTIwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524059205/reactions"
    },
    "updated_at": "2019-08-22T20:12:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524059205",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Of all the 10 types listed above, one question keeps coming back to me: why `System.Management.Automation.ScriptBlock`?\r\n\r\nI understand why script blocks would have a custom format, so that you could see their contents as string by default. But what I don't understand is why the custom `scriptblock` format would be configured with `outOfBand: true`.\r\n\r\nAll of the other 9 types are related to non-standard output stream information, where you want the data to be shown using the custom format so that it can render properly even when in the middle of other data being output by a script or function. That makes sense, and it looks we can preserve that behavior while allowing stored objects of those types to be formatted the way users want them formatted. But `scriptblock` is the oddball in this set of types, so if you can share details or background explaining why it's configured with `outOfBand: true`, that would be useful information to know.",
    "created_at": "2019-08-23T01:27:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-524137136",
    "id": 524137136,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDEzNzEzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524137136/reactions"
    },
    "updated_at": "2019-08-23T01:27:29Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524137136",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "FYI, I have opened PR #10430 early as a work in progress to solicit feedback on the approach I've started taking to resolve this issue in an expected way.\r\n\r\nIt would only be breaking if someone was piping some data of these types that was captured from standard output to a `Format-*` command without `-Force` and then converting that to string with `Out-String` and doing something with the string, but that's an obscure scenario.\r\n\r\nInitial tests with this approach have been very positive.",
    "created_at": "2019-08-23T01:45:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-524140229",
    "id": 524140229,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDE0MDIyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524140229/reactions"
    },
    "updated_at": "2019-08-23T15:18:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524140229",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@KirkMunro How are you thinking about handling this? OutOfBand is required so that error, etc. objects and can be mixed in a stream with other objects and everything gets rendered correctly and efficiently.",
    "created_at": "2019-08-27T20:44:28Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525475237",
    "id": 525475237,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ3NTIzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525475237/reactions"
    },
    "updated_at": "2019-08-27T20:44:28Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525475237",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Does that really apply when you're piping to a `Format-*` command? Typically that'll be `Format-Table` or `Format-List` in a lot of cases, and if you have an error object in that same output stream as other things... I'd still want the `Format-*` command to, well, do its job. That's why it's being passed to a format command in the first place; if I wanted errors to still render as errors, I'd leave them in the error stream?\r\n\r\nIf it's in a stream with other things, it's probably been deliberately put there to some extent, since error objects typically don't end up in the output stream on their own. 🙂 ",
    "created_at": "2019-08-27T20:48:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525476770",
    "id": 525476770,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ3Njc3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525476770/reactions"
    },
    "updated_at": "2019-08-27T20:50:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525476770",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay If you have a look at PR #10430 you'll see how I was going to handle it. I'd like to clean up that code a little and add Pester tests, but it already deals with this the best way I could come up with so far, which is to check the stream that an out of band object comes from.\r\n\r\nTesting with that makes me feel confident that it's the right solution. Out of band objects in the standard output stream respect `Format-*` cmdlets, while those in error, warning, etc.streams use their persistent default output.\r\n\r\nOne thing I was considering as well was to remove the out of band flag for `scriptblock` unless someone identifies why it needs a persistent out of band format. That one doesn't make much sense to me.",
    "created_at": "2019-08-27T21:52:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525497942",
    "id": 525497942,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ5Nzk0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525497942/reactions"
    },
    "updated_at": "2019-08-27T21:54:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525497942",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I think I'd be annoyed if the formatting depended on the stream. That would make redirection via `2>&1` quite surprising IMO.\r\n\r\nI'd always assumed `outOfBand` was designed to ignore the ambient format for a heterogeneous collection of objects, e.g.\r\n\r\n```powershell\r\n& { ps -Id $pid; $error[0]; ps -Id $pid } | Format-Table\r\n```\r\n\r\nIf my assumption is correct, I do wonder if `outOfBand` even needs to exist. I can imagine some heuristics would be sufficient to give the same capability of `outOfBand` - I mean it should be obvious that certain formats simply don't make sense for random types.",
    "created_at": "2019-08-28T00:51:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525538357",
    "id": 525538357,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUzODM1Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525538357/reactions"
    },
    "updated_at": "2019-08-28T00:51:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525538357",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Tbh I'd be _expecting_ redirecting errors to standard output to change their display. Why would it still show up as an error (doubly so if I'm passing it to a Format-* cmdlet) when I've asked it to mosey on over to the standard output stream? That request by its very nature is saying \"put all the errors in my output stream\" and is probably being done because I want to look at the object, not the red-on-black formatting?",
    "created_at": "2019-08-28T00:54:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525539162",
    "id": 525539162,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTUzOTE2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525539162/reactions"
    },
    "updated_at": "2019-08-28T00:54:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525539162",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Think of log files - the text won't be red obviously, but why should the text be formatted differently?",
    "created_at": "2019-08-28T01:29:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525545979",
    "id": 525545979,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU0NTk3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525545979/reactions"
    },
    "updated_at": "2019-08-28T01:29:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525545979",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I'll need to check tomorrow, but I believe my PR still respects OOB persistent formatting, even with redirection in play. I'll need to double check when I'm back in my office tomorrow though.",
    "created_at": "2019-08-28T01:42:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525548328",
    "id": 525548328,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU0ODMyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525548328/reactions"
    },
    "updated_at": "2019-08-28T01:42:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525548328",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also @lzybkr outOfBand is hard-coded for the 10 types listed above, and set dynamically for others based on the current format shape, IIRC. That seems to back up your suspicion, but what happens if you Invoke a command and pipe that to `Format-Table`, and the command generates an error and no output. Without a format shape in use, and without outOfBand on ErrorRecord, the error would be formatted as a table, which wouldn't be great for end users.",
    "created_at": "2019-08-28T01:48:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525549622",
    "id": 525549622,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTU0OTYyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525549622/reactions"
    },
    "updated_at": "2019-08-28T01:48:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525549622",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just to confirm, as I suggested yesterday, by checking which stream the object came from (which is different from the stream that the object will be rendered in it seems), any persistent, hard-coded `outOfBand` formats are still respected when redirection is in play in my PR.\r\n\r\n@vexx32 Redirection shouldn't change formatting of non-standard output messages IMHO, for the reasons already identified by @lzybkr, such as capturing output into a log file, which is the main intent of redirection anyway. If you want to capture errors to look at them in a specific way, you wouldn't want to do that as part of a single command because PowerShell formatting doesn't handle incompatible heterogeneous types very well for anything but `Format-List` (which is the format it falls back to when it discovers an object that is not a value type or a string that doesn't support the current view). Instead you should use `-ErrorVariable` to capture errors in a command so that you can format them a certain way independent of the command you invoked that produced those errors.",
    "created_at": "2019-08-28T19:07:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525880947",
    "id": 525880947,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTg4MDk0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525880947/reactions"
    },
    "updated_at": "2019-08-28T19:12:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525880947",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Further testing shows that using `outOfBand` on `scriptblock` tightens up the formatting. Without it, you end up with an extra leading and trailing blank line. I think that's the only advantage to having OOB on the `scriptblock` type, so I'll be leaving it there.",
    "created_at": "2019-08-28T23:10:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-525956684",
    "id": 525956684,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTk1NjY4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525956684/reactions"
    },
    "updated_at": "2019-08-28T23:10:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/525956684",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I finished writing up a bunch of Pester tests for out of band formatting and added them to the PR today. With that and the earlier refactoring work complete, it's now ready for review, so if you're inclined to want to have a closer look at this and share feedback on what I've done, please visit #10430 and take a look.",
    "created_at": "2019-09-10T17:01:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10408#issuecomment-530029443",
    "id": 530029443,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10408",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDAyOTQ0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/530029443/reactions"
    },
    "updated_at": "2019-09-10T17:01:38Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/530029443",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3515485?v=4",
      "events_url": "https://api.github.com/users/KirkMunro/events{/privacy}",
      "followers_url": "https://api.github.com/users/KirkMunro/followers",
      "following_url": "https://api.github.com/users/KirkMunro/following{/other_user}",
      "gists_url": "https://api.github.com/users/KirkMunro/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/KirkMunro",
      "id": 3515485,
      "login": "KirkMunro",
      "node_id": "MDQ6VXNlcjM1MTU0ODU=",
      "organizations_url": "https://api.github.com/users/KirkMunro/orgs",
      "received_events_url": "https://api.github.com/users/KirkMunro/received_events",
      "repos_url": "https://api.github.com/users/KirkMunro/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/KirkMunro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/KirkMunro/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/KirkMunro"
    }
  }
]
