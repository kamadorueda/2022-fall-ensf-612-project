[
  {
    "author_association": "NONE",
    "body": ":tada:`v7.0.0-rc.3` has been released which incorporates this pull request.:tada:\n\nHandy links:\n* [Release Notes](https://github.com/PowerShell/PowerShell/releases/tag/v7.0.0-rc.3)\n",
    "created_at": "2020-02-21T23:55:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-589885599",
    "id": 589885599,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4OTg4NTU5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/589885599/reactions"
    },
    "updated_at": "2020-02-21T23:55:24Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/589885599",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  },
  {
    "author_association": "NONE",
    "body": "This PR prevents PowerShell from finding types in assemblies loaded from memory using\r\n```\r\n[System.Reflection.Assembly]::Load($bytes)\r\n```\r\nThis has worked in PowerShell 5.1, and PowerShell 7 up to rc2 but doesn't work in rc3.\r\n\r\nA workaround for PowerShell 7 rc3 is to use \r\n```\r\n# $ms is a MemoryStream containing the assembly bytes above\r\n[System.Runtime.Loader.AssemblyLoadContext]::Default.LoadFromStream($ms)\r\n```\r\nHowever the above code is not compatible with PowerShell 5.1 as the type doesn't exist.",
    "created_at": "2020-03-03T22:36:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594206975",
    "id": 594206975,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIwNjk3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 1,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594206975/reactions"
    },
    "updated_at": "2020-03-03T22:36:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594206975",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16790181?v=4",
      "events_url": "https://api.github.com/users/stevenebutler/events{/privacy}",
      "followers_url": "https://api.github.com/users/stevenebutler/followers",
      "following_url": "https://api.github.com/users/stevenebutler/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenebutler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stevenebutler",
      "id": 16790181,
      "login": "stevenebutler",
      "node_id": "MDQ6VXNlcjE2NzkwMTgx",
      "organizations_url": "https://api.github.com/users/stevenebutler/orgs",
      "received_events_url": "https://api.github.com/users/stevenebutler/received_events",
      "repos_url": "https://api.github.com/users/stevenebutler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stevenebutler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenebutler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stevenebutler"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Are you able to expand on your scenario for using that API? I haven't seen any use cases in .NET Framework for loading an assembly from bytes other than to get around assembly resolution issues, which .NET Core has effectively resolved with the addition of assembly load contexts.\r\n\r\nReally this change is us catching up to deeper changes in .NET assembly handling, and given that these changes have occurred in the platform and something fundamentally different is happening (i.e. the loaded assembly really isn't in the current load context), it's probably appropriate to handle the loading differently on different platforms:\r\n\r\n```powershell\r\nif ($PSVersionTable.PSVersion.Major -ge 7)\r\n{\r\n    $ms = ...\r\n    [System.Runtime.Loader.AssemblyLoadContext]::Default.LoadFromStream($ms)\r\n}\r\nelse\r\n{\r\n    [System.Reflection.Assembly]::Load($bytes)\r\n}\r\n```",
    "created_at": "2020-03-03T22:53:48Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594213255",
    "id": 594213255,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIxMzI1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594213255/reactions"
    },
    "updated_at": "2020-03-03T22:53:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594213255",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "The core use case is when you don't want the DLL to be locked on the file system in Windows, preventing rebuilds/reinstalls etc.\r\n\r\nI typically load my more complex DLLs using add-type, but I have a native interop DLL that checks file locking status on startup and handles upgrading of assemblies and native DLLs by inspecting the install folder for locked files. I don't want loading this DLL to also cause file locking so I load it from memory - it has no external dependencies so this works fine.\r\n\r\nI used something like the above code, but I tested for the presence of the AssemblyLoadContext type, rather than tying it to the PSVersion.",
    "created_at": "2020-03-03T23:04:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594216922",
    "id": 594216922,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIxNjkyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594216922/reactions"
    },
    "updated_at": "2020-03-03T23:09:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594216922",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16790181?v=4",
      "events_url": "https://api.github.com/users/stevenebutler/events{/privacy}",
      "followers_url": "https://api.github.com/users/stevenebutler/followers",
      "following_url": "https://api.github.com/users/stevenebutler/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenebutler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stevenebutler",
      "id": 16790181,
      "login": "stevenebutler",
      "node_id": "MDQ6VXNlcjE2NzkwMTgx",
      "organizations_url": "https://api.github.com/users/stevenebutler/orgs",
      "received_events_url": "https://api.github.com/users/stevenebutler/received_events",
      "repos_url": "https://api.github.com/users/stevenebutler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stevenebutler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenebutler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stevenebutler"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> The core use case is when you don't want the DLL to be locked on the file system in Windows\r\n\r\nYes, this is something an ALC can solve today, since they [can be collectible/unloadable](https://docs.microsoft.com/en-us/dotnet/standard/assembly/unloadability). Meaning the strategy for handling the problem will probably change significantly moving into the future.\r\n\r\nWe've been discussing how best to support this going forward and there's no simple solution available by default in PowerShell yet, but it's certainly an area of interest.",
    "created_at": "2020-03-03T23:41:59Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594228633",
    "id": 594228633,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIyODYzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594228633/reactions"
    },
    "updated_at": "2020-03-03T23:41:59Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594228633",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "I don't think being able to unload from a specific PowerShell will solve my issue, which is users may have multiple PowerShell windows open, each of which would have locked the DLLs when they upgrade. I currently resolve it by checking for locked files and creating a new sequence number folder for the new version of DLLs on upgrade, which is what the in-memory DLL helps with.\r\n\r\nMost of my users are on PS 5.1 as well, but I'm on both.",
    "created_at": "2020-03-03T23:46:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594230049",
    "id": 594230049,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDIzMDA0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594230049/reactions"
    },
    "updated_at": "2020-03-03T23:50:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594230049",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16790181?v=4",
      "events_url": "https://api.github.com/users/stevenebutler/events{/privacy}",
      "followers_url": "https://api.github.com/users/stevenebutler/followers",
      "following_url": "https://api.github.com/users/stevenebutler/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenebutler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stevenebutler",
      "id": 16790181,
      "login": "stevenebutler",
      "node_id": "MDQ6VXNlcjE2NzkwMTgx",
      "organizations_url": "https://api.github.com/users/stevenebutler/orgs",
      "received_events_url": "https://api.github.com/users/stevenebutler/received_events",
      "repos_url": "https://api.github.com/users/stevenebutler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stevenebutler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenebutler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stevenebutler"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@stevenebutler Please open new issue with _repo steps_.\r\n\r\n> \\[System.Reflection.Assembly]::Load($bytes)\r\n\r\nIt is not PowerShell, it is .Net Core method. You could create simple C# application and check with different .Net Core 3 versions.",
    "created_at": "2020-03-04T12:39:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594496533",
    "id": 594496533,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDQ5NjUzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594496533/reactions"
    },
    "updated_at": "2020-03-04T12:44:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594496533",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> It is not PowerShell, it is .Net Core method.\r\n\r\nThe preliminary issue is that PowerShell stopped resolving types outside the default ALC with the changes in this PR.\r\n\r\nHowever, Assembly.Load effectively made a breaking change first, since it loads byte assemblies into an anonymous ALC.\r\n\r\nGiven that ALCs are designed partially to replace AppDomains, I think not resolving from them is the right way to go (and I should note that fully qualified names still work).",
    "created_at": "2020-03-04T14:13:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594547117",
    "id": 594547117,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDU0NzExNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594547117/reactions"
    },
    "updated_at": "2020-03-04T14:13:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594547117",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@rjmholt Thanks! In the case I see another additional problem https://source.dot.net/#System.Private.CoreLib/Assembly.cs,242\n\n<blockquote><div><strong><a href=\"https://source.dot.net/#System.Private.CoreLib/Assembly.cs,242\">Source Browser</a></strong></div></blockquote>",
    "created_at": "2020-03-04T15:48:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-594616523",
    "id": 594616523,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NDYxNjUyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594616523/reactions"
    },
    "updated_at": "2020-03-04T15:48:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/594616523",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm not sure I want to create an issue for this as I understand this area is changing and PowerShell has to adapt. It's obviously a change in behaviour that may break existing code, so I wanted to let people know how they could adapt. I am happy with the change I have made and don't have any issues with it now.\r\n\r\nIn case anyone does feel strongly about this and wants to raise an issue with a repro, the below pester test will repro the issue (fail) on PowerShell 7.0.0 rc3 (and release), but will pass on versions prior.\r\n\r\nFor completeness, I have included a second test that shows how to load types from memory in PowerShell, which passes on PowerShell 7.0.0rc3 and above..\r\n\r\n```powershell\r\nimport-module Pester\r\n\r\nDescribe \"PowerShell C# type visibility\" {\r\n    It \"[Assembly]::Load(`$bytes) types are visible to PowerShell\" {\r\n    \r\n        $testdll = \"$env:TEMP/visibility.dll\"\r\n        if (test-path $testdll) {\r\n            remove-item $testdll -force\r\n        }\r\n        Add-Type @\"\r\npublic class Visibility {\r\n    public static string Test = \"Found\";\r\n}\r\n\"@ -Language CSharp -OutputAssembly $testdll\r\n        $bytes = [System.IO.File]::ReadAllBytes($testdll)\r\n        [System.Reflection.Assembly]::Load($bytes)\r\n\r\n        [Visibility]::Test | should be \"Found\"\r\n\r\n    }\r\n    It \"System.Runtime.Loader.AssemblyLoadContext]::Default.LoadFromStream(`$memoryStream) types are visible to PowerShell\" {\r\n    \r\n        $testdll = \"$env:TEMP/visibility2.dll\"\r\n        if (test-path $testdll) {\r\n            remove-item $testdll -force\r\n        }\r\n        Add-Type @\"\r\npublic class Visibility2 {\r\n    public static string Test = \"Found\";\r\n}\r\n\"@ -Language CSharp -OutputAssembly $testdll\r\n        $bytes = [System.IO.File]::ReadAllBytes($testdll)\r\n\r\n        $ms = new-object System.IO.MemoryStream\r\n        try {\r\n            $ms.Write($bytes, 0, $bytes.Length)\r\n            $ms.Seek(0, [System.IO.SeekOrigin]::Begin)\r\n\r\n\r\n            # This will fail on Windows PowerShell 5.1\r\n            [System.Runtime.Loader.AssemblyLoadContext]::Default.LoadFromStream($ms)\r\n        }\r\n        finally {\r\n            $ms.Dispose()\r\n        }\r\n        [Visibility2]::Test | should be \"Found\"\r\n\r\n    }\r\n}\r\n```\r\n\r\nOutput on 7.0.0 rc3:\r\n```\r\nDescribing PowerShell C# type visibilty\r\n [-] [Assembly]::Load($bytes) types are visible to PowerShell 119ms\r\n   RuntimeException: Unable to find type [Visibility].\r\n   at <ScriptBlock>, C:\\dev\\repro-AssemblyLoad.ps1: line 18\r\n [+] System.Runtime.Loader.AssemblyLoadContext]::Default.LoadFromStream($memoryStream) types are visible to PowerShell 147ms \r\n```",
    "created_at": "2020-03-05T10:56:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-595166526",
    "id": 595166526,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NTE2NjUyNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/595166526/reactions"
    },
    "updated_at": "2020-03-05T11:05:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/595166526",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16790181?v=4",
      "events_url": "https://api.github.com/users/stevenebutler/events{/privacy}",
      "followers_url": "https://api.github.com/users/stevenebutler/followers",
      "following_url": "https://api.github.com/users/stevenebutler/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevenebutler/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/stevenebutler",
      "id": 16790181,
      "login": "stevenebutler",
      "node_id": "MDQ6VXNlcjE2NzkwMTgx",
      "organizations_url": "https://api.github.com/users/stevenebutler/orgs",
      "received_events_url": "https://api.github.com/users/stevenebutler/received_events",
      "repos_url": "https://api.github.com/users/stevenebutler/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/stevenebutler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevenebutler/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/stevenebutler"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@stevenebutler In cast you don't know yet, #12052 is tracking the issue you reported, and the PR #12203 was submitted to fix it.",
    "created_at": "2020-03-26T17:02:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/pull/11088#issuecomment-604550074",
    "id": 604550074,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11088",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDU1MDA3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604550074/reactions"
    },
    "updated_at": "2020-03-26T17:02:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/604550074",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  }
]
