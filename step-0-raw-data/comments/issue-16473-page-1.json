[
  {
    "author_association": "NONE",
    "body": "your help output shows \r\n\r\n```\r\n-Datastore <StorageResource>\r\n        Accept pipeline input?       true (ByValue)\r\n-VMHost <IVMHost>\r\n        Accept pipeline input?       true (ByValue)\r\n```\r\n\r\nSo PowerShell will try to assign the object in the pipeline to both of them. \r\nParameter typing is \"Attempt to cast to\" not \"Must already be\", so it looks like the piped object  can be converted to an IVMHost.     \r\n\r\nWhat does [Test.Models.IVMHost]$Data[0] give ?  \r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2021-11-15T13:00:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16473#issuecomment-968886604",
    "id": 968886604,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16473",
    "node_id": "IC_kwDOAvT7bc45wAlM",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/968886604/reactions"
    },
    "updated_at": "2021-11-15T13:00:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/968886604",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> your help output shows\r\n> \r\n> ```\r\n> -Datastore <StorageResource>\r\n>         Accept pipeline input?       true (ByValue)\r\n> -VMHost <IVMHost>\r\n>         Accept pipeline input?       true (ByValue)\r\n> ```\r\n> \r\n> So PowerShell will try to assign the object in the pipeline to both of them. Parameter typing is \"Attempt to cast to\" not \"Must already be\", so it looks like the piped object can be converted to an IVMHost.\r\n> \r\n> What does [Test.Models.IVMHost]$Data[0] give ?\r\n\r\n- The [Test.Models.IVMHost]$Data[0] command cannot be executed\r\n- Datastore and VMHost are c# objects. I used the [autorest](https://github.com/Azure/autorest.powershell/blob/main/docs/readme.md) framework to generate c# code to make powershell commands.\r\n- Datastore object properties include Id, Name, CapacityGb, and FreeSpaceGb\r\n- VMHost object contains attributes Id, Name, ManagementIP, and Description\r\n- My hope is in the execution $data | new - vm command, after new - vm only receive corresponding Datastore object without receiving VMhost object. I looked at the documentation and set byValue to match the type the pipe passed in. \r\n- Is powershell always trying to match a type, rather than having to match a type?\r\n\r\n",
    "created_at": "2021-11-16T02:31:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16473#issuecomment-969709119",
    "id": 969709119,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16473",
    "node_id": "IC_kwDOAvT7bc45zJY_",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/969709119/reactions"
    },
    "updated_at": "2021-11-16T02:33:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/969709119",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/29625229?v=4",
      "events_url": "https://api.github.com/users/Odland/events{/privacy}",
      "followers_url": "https://api.github.com/users/Odland/followers",
      "following_url": "https://api.github.com/users/Odland/following{/other_user}",
      "gists_url": "https://api.github.com/users/Odland/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/Odland",
      "id": 29625229,
      "login": "Odland",
      "node_id": "MDQ6VXNlcjI5NjI1MjI5",
      "organizations_url": "https://api.github.com/users/Odland/orgs",
      "received_events_url": "https://api.github.com/users/Odland/received_events",
      "repos_url": "https://api.github.com/users/Odland/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/Odland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Odland/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/Odland"
    }
  },
  {
    "author_association": "NONE",
    "body": "Ah. Autorest claims another victim. \r\n\r\nLast point first. PowerShell as an interpreted scripting language tries to flatten out types as far as it possibly can, so a lot of places where C# would want you explicitly do \"tostring\" or process an expression to get a boolean PowerShell will just sort it  out: e.g. in PowerShell `2 * '5' ` is 10 but `'2' * 5` is 22222, and if you expect rigid typing everywhere that can be a culture shock.\r\n\r\nWhen you decorate a PowerShell parameter with a type it is saying \"cast whatever you get here as type X\".  You can code validation for parameters which says \"throw an error if it is not a...\" but that won't help for the pipeline case. \r\n\r\nNow autorest...  IIRC it makes an API call with `Invoke-RestMethod` , which returns a `PSCustomObject` with a bunch of properties. It defines types for the responses, and converts the PSCustomObjects to those \r\nso it will build you something like  this \r\n```\r\nFunction Get-VMhost  {\r\nparam ($whatever_api_takes)\r\n$customObject =    invoke-restmethod -url  blah/vmhost?params\r\n$VMhostobject =  [vmhost]::new($customobject)\r\nreturn $vmhostobject  \r\n}\r\n```\r\nThe constructor for VM host does something like this\r\n```\r\nforeach ($property in $DestinationObject.psobject.properties)  {\r\n   if ($SourceObject.psobject.properties -contains $property) {$DestinationObject.$property = $SourceObject.$property}\r\n} \r\n```\r\nIt ignores anything returned by the API which wasn't part of the object definition but it also means if you ask for \r\n`[vmhost]::new($Anything_with_an_id)` \r\nYou'll get a VM host object with a nonsensical ID.  **I think that is what is happening to you**\r\n\r\nThe way around this is to avoid\r\n```\r\nparam (\r\n  [parameter(valueFromPipeline)]\r\n  [type-X] $X,\r\n\r\n  [parameter(valueFromPipeline)]\r\n  [type-Y] $Y\r\n)\r\n```\r\nWhen a `type-X` can be cast to a `type-Y` instead,  have \r\n```\r\nParam (\r\n $X ,\r\n\r\n $Y,\r\n\r\n[param(valueFromPipeline)]\r\n$InputObject\r\n)\r\nif     ($InputObject -is [type x]) {$x = $InputObject}\r\nelseIf ($InputObject -is [type y]) {$y = $InputObject}\r\n\r\nif     ($x {looks like a name}) {$x = (Get-TypeX-ByName $x).id}\r\nelseif ($x -is [Type-X]}) {$x = $x.id}\r\nelseif ($x {doesn't look like an ID} )  {Error}\r\netc.\r\n```\r\nDo not type X and Y because (a) you'll get things cast when it is stupid to do so and (b) it forces people to provide input in a way which was the shortest way for you to code, not in the form they want. The last bit ensures whether X was piped, was passed as a variable holding an object, or a string holding a name it always becomes the ID of what you want it to be.  Don't make people write  \r\n```\r\nProcess-Widget -widget (Get-Widget -name \"Mine\").id\r\n```\r\nInstead of\r\n```\r\nProcess-Widget $w\r\n``` \r\nor \r\n```\r\nProcess-Widget mine\r\n```",
    "created_at": "2021-11-16T12:37:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16473#issuecomment-970231476",
    "id": 970231476,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16473",
    "node_id": "IC_kwDOAvT7bc451I60",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/970231476/reactions"
    },
    "updated_at": "2021-11-16T12:37:12Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/970231476",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "This issue has been marked as answered and has not had any activity for **1 day**. It has been closed for housekeeping purposes.",
    "created_at": "2021-11-19T00:00:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/16473#issuecomment-973488806",
    "id": 973488806,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/16473",
    "node_id": "IC_kwDOAvT7bc46BkKm",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/973488806/reactions"
    },
    "updated_at": "2021-11-19T00:00:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/973488806",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/in/26612?v=4",
      "events_url": "https://api.github.com/users/msftbot%5Bbot%5D/events{/privacy}",
      "followers_url": "https://api.github.com/users/msftbot%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/msftbot%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/msftbot%5Bbot%5D/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/apps/msftbot",
      "id": 48340428,
      "login": "msftbot[bot]",
      "node_id": "MDM6Qm90NDgzNDA0Mjg=",
      "organizations_url": "https://api.github.com/users/msftbot%5Bbot%5D/orgs",
      "received_events_url": "https://api.github.com/users/msftbot%5Bbot%5D/received_events",
      "repos_url": "https://api.github.com/users/msftbot%5Bbot%5D/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/msftbot%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/msftbot%5Bbot%5D/subscriptions",
      "type": "Bot",
      "url": "https://api.github.com/users/msftbot%5Bbot%5D"
    }
  }
]
