[
  {
    "author_association": "CONTRIBUTOR",
    "body": ">Note that the accidental reference equality only happens if the source type and the cast type are identical.\r\n\r\nIt not necessary to be identical due to array covariance in .NET:\r\n```powershell\r\n$a = [string[]]@()\r\n$b = @([object[]]$a)\r\n[object]::ReferenceEquals($a, $b)\r\n```",
    "created_at": "2017-07-18T14:42:08Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316086069",
    "id": 316086069,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjA4NjA2OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316086069/reactions"
    },
    "updated_at": "2017-07-18T14:42:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316086069",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17184058?v=4",
      "events_url": "https://api.github.com/users/PetSerAl/events{/privacy}",
      "followers_url": "https://api.github.com/users/PetSerAl/followers",
      "following_url": "https://api.github.com/users/PetSerAl/following{/other_user}",
      "gists_url": "https://api.github.com/users/PetSerAl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PetSerAl",
      "id": 17184058,
      "login": "PetSerAl",
      "node_id": "MDQ6VXNlcjE3MTg0MDU4",
      "organizations_url": "https://api.github.com/users/PetSerAl/orgs",
      "received_events_url": "https://api.github.com/users/PetSerAl/received_events",
      "repos_url": "https://api.github.com/users/PetSerAl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PetSerAl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PetSerAl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PetSerAl"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@PetSerAl: Thanks for the correction; I've fixed the original post.",
    "created_at": "2017-07-18T15:15:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316096840",
    "id": 316096840,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjA5Njg0MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316096840/reactions"
    },
    "updated_at": "2017-07-18T15:15:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316096840",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "Moving the discussions about this issue from #4257. Starting from [this comment](https://github.com/PowerShell/PowerShell/issues/4257#issuecomment-315898564)\r\n\r\n**From @mklement0**:\r\n\r\nGiven the potentially problematic behavior of something like @([int[]] (1, 2)) (the only case where @() doesn't output an [object[]] array), is it worth creating a new issue for that?\r\n\r\nIt's hard to imagine that anyone would have relied on that behavior, and eliminating it makes for a more predictable environment.",
    "created_at": "2017-07-18T16:31:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316120909",
    "id": 316120909,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMDkwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316120909/reactions"
    },
    "updated_at": "2017-07-18T16:35:14Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316120909",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "**From @daxian-dbw**:\r\n\r\n[Here is the code](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/parser/Compiler.cs#L5503) that handles this special case. In my understanding, this happens only in one of the following two conditions:\r\n\r\n- the expression is a `ConvertExpressionAst` or a ParenExpression that wraps a `ConvertExpressionAst`, and the convert-to type is an array.\r\n- the expression is an `ArrayLiteralAst` or a ParenExpression that wraps an `ArrayLiteralAst`.\r\n\r\nIn the first case, since the conversion is explicitly specified, it's very unlikely the resulting array will again be used as `object[]`. In the second case, the resulting array from `ArrayLiteralAst` is already `object[]` so it doesn't matter. Plus, altering this behavior would be a breaking change. Given the above, I prefer to not make a behavior change. But feel free to notify the PowerShell-Committee if you want a further discussion.",
    "created_at": "2017-07-18T16:31:57Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316121079",
    "id": 316121079,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMTA3OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121079/reactions"
    },
    "updated_at": "2017-07-18T16:31:57Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121079",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "**From @mklement0**:\r\n\r\nI can't imagine much existing code breaking, but, conversely, I can't imagine many people running into a problem with the current behavior in real-world scenarios, so, personally, I'm happy to leave it at that; perhaps @PetSerAl feels differently.",
    "created_at": "2017-07-18T16:32:27Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316121219",
    "id": 316121219,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMTIxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121219/reactions"
    },
    "updated_at": "2017-07-18T16:32:27Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121219",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "**From @PetSerAl**:\r\n\r\n@daxian-dbw, how about this:\r\n```powershell\r\n$a = 1..3\r\n$b = @([object[]]$a)\r\n[object]::ReferenceEquals($a, $b)\r\n$b[1] = 123\r\n$a[1]\r\n```\r\nNow `$b` is not copy of `$a` but is `$a`. Also if current behavior will be kept, is not [`ArrayExpressionAst.StaticType`](https://github.com/PowerShell/PowerShell/blob/master@{2017-07-18}/src/System.Management.Automation/engine/parser/ast.cs#L9493) should be adjusted to match current behavior?",
    "created_at": "2017-07-18T16:32:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316121354",
    "id": 316121354,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMTM1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121354/reactions"
    },
    "updated_at": "2017-07-18T16:32:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121354",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "**From @daxian-dbw**:\r\n\r\n> Now `$b` is not copy of `$a` but is `$a`\r\n\r\nYes, `$b` and `$a` point to the same array in this case. But I don't think the array expression in powershell language is defined to always return a new array object.\r\n\r\n> Is not ArrayExpressionAst.StaticType should be adjusted to match current behavior?\r\n\r\nGood catch. It is inconsistent and should be fixed. But IMHO, the fix should be to change `ArrayExpressionAst.StaticType` to always return `System.Array` (also a breaking change :)). `StaticType` is by definition not accurate, because sometimes the actual type can be known only at runtime, for example, `BinaryExpressionAst.StaticType` returns `System.Object` when it's `-bor`, and the actual type may vary at runtime.",
    "created_at": "2017-07-18T16:33:25Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316121484",
    "id": 316121484,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMTQ4NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121484/reactions"
    },
    "updated_at": "2017-07-18T16:33:25Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121484",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "**From @PetSerAl**:\r\n\r\n@daxian-dbw But where I can see that definition of array expression? Before now I always expect it to return new array object each time. I myself use `$b = @($a)` (without cast although) as array copy operator, and I really do not like if it stop copying array at some point in the future.",
    "created_at": "2017-07-18T16:33:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316121613",
    "id": 316121613,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMTYxMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121613/reactions"
    },
    "updated_at": "2017-07-18T16:33:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121613",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "**From @daxian-dbw**:\r\n\r\nYou can find the `Windows PowerShell Langauge Specification Version 3.0` [here](https://www.microsoft.com/en-us/download/details.aspx?id=36389). It hasn't been updated for a while, so new language features like DSC or PowerShell Class are not in it, but I believe the content in the specification should still apply to PowerShell 6.0.",
    "created_at": "2017-07-18T16:34:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316121770",
    "id": 316121770,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyMTc3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121770/reactions"
    },
    "updated_at": "2017-07-18T16:34:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316121770",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for moving the discussion, @daxian-dbw.\r\n\r\nThe migrated comment where I say that I'm happy to _not_ make a change is obsolete, however, as evidenced by my having created _this_ issue (the reference equality issue convinced me that a change is warranted).\r\n\r\n>  I don't think the array expression in powershell language is defined to always return a new array object.\r\n\r\nIt is certainly not _documented_ as such (in help topics `about_Arrays` and `about_Operators`), and you can argue that the copying is an _implementation detail_.\r\n\r\n<sup>As an side: `about_Arrays` states \"For more information about the array sub-expression operator,  see `about_Operators`\", but, if anything, `about_Operators` contains _less_ information.</sup>\r\n\r\nI we look at the _spec_, the message is muddled (from \"7.1.7\t@(…) operator\"; emphasis added):\r\n\r\n> any objects written to the pipeline as part of the evaluation **are collected** in an unconstrained 1-dimensional array, in order.\r\n\r\nThis certainly suggests creation of a _new_ array.\r\n\r\nIn the examples in the same chapter, the language is looser - though understandably so, given that in most cases PowerShell users needn't worry about reference equality:\r\n\r\n> $a = @(2,4,6)\t\t\t        # result is array of 3\r\n>  @($a)\t\t \t\t\t\t# result is **the same array** of 3 \r\n\r\nEither way, users may have come to rely on the copying behavior, either unwittingly or - as in @PetSerAl's case - intentionally, so the currently implemented optimization arguably constituted a [Bucket 2: Reasonable Grey Area](https://github.com/PowerShell/PowerShell/blob/master/docs/dev-process/breaking-change-contract.md#bucket-2-reasonable-grey-area) change back when it was introduced in PSv5.1 (which, from what I can tell, happened quietly).\r\n\r\n\r\n\r\n\r\n",
    "created_at": "2017-07-18T17:13:29Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316132743",
    "id": 316132743,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEzMjc0Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316132743/reactions"
    },
    "updated_at": "2017-07-18T17:14:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316132743",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The current behavior of @() is by design and has been so since V1 of PowerShell. The @() operator only guarantees that the result of the enclosed expression is an indexable collection. If the result is already a collection then it is returned unchanged. The primary purpose for the operator is to provide a way to ensure that the result of a pipeline execution is always an indexable collection. Somewhere along the way people got the idea that it was some kind of array literal but that has never been the case and was certainly not the intent.",
    "created_at": "2017-07-18T22:52:16Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316220967",
    "id": 316220967,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjIyMDk2Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316220967/reactions"
    },
    "updated_at": "2017-07-18T22:52:16Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316220967",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay: I thought that the initial post contained sufficient context, but let me try again:\r\n\r\nThe premise of this issue is that the behavior _did_ change in v5.1:\r\n\r\n   * To verify, compare the output from`@([int[]] (1, 2)).GetType().Name` in v5.1+ vs. v5-\r\n\r\nThe - speculative - conclusion was that the change in behavior was an optimization intended to _indulge_ the very misconception that you reference: the mistaken belief that `@(...)` is needed to construct an array.\r\n \r\n   * I'm sure that you or someone from your team can clarify.\r\n\r\nThis well-meaning optimization succeeded only _partially_:\r\n\r\n   * It works well for `,`-constructed arrays _not involving a cast_.  \r\nAs an aside: whether the misconception should have been _indulged_ - as opposed to _educating users_ - is a separate issue.\r\n\r\n  * It introduced _treacherous behavior_ for arrays constructed _via  a cast_, as demonstrated here.\r\n\r\nThis issue is a plea to _roll back the treacherous part of the optimization_.\r\n\r\n\r\n",
    "created_at": "2017-07-19T01:51:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316248874",
    "id": 316248874,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI0ODg3NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316248874/reactions"
    },
    "updated_at": "2017-07-19T01:53:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316248874",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Please clarify. If we change:\r\n```powershell\r\n$a = 1..3\r\n$b = @([object[]]$a)\r\n[object]::ReferenceEquals($a, $b)\r\n$b[1] = 123\r\n$a[1]\r\n```\r\n(here we have the same array)\r\nto:\r\n```powershell\r\n$a = 1..3\r\n$b = @($a)\r\n[object]::ReferenceEquals($a, $b)\r\n$b[1] = 123\r\n$a[1]\r\n```\r\n-- here we have a new array. Why? Is it related:\r\n>Also if current behavior will be kept, is not  ArrayExpressionAst.StaticType  should be adjusted to match current behavior?\r\n",
    "created_at": "2017-07-19T05:17:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316275360",
    "id": 316275360,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI3NTM2MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316275360/reactions"
    },
    "updated_at": "2017-07-19T05:20:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316275360",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@BrucePay v3 specification say:\r\n>The result is the (possibly empty) unconstrained 1-dimensional array.\r\n\r\nSo, it is not just some indexable collection. It guarantied to be an array (`[object[]]`).",
    "created_at": "2017-07-19T05:29:10Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316276951",
    "id": 316276951,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI3Njk1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316276951/reactions"
    },
    "updated_at": "2017-07-19T05:29:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316276951",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17184058?v=4",
      "events_url": "https://api.github.com/users/PetSerAl/events{/privacy}",
      "followers_url": "https://api.github.com/users/PetSerAl/followers",
      "following_url": "https://api.github.com/users/PetSerAl/following{/other_user}",
      "gists_url": "https://api.github.com/users/PetSerAl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PetSerAl",
      "id": 17184058,
      "login": "PetSerAl",
      "node_id": "MDQ6VXNlcjE3MTg0MDU4",
      "organizations_url": "https://api.github.com/users/PetSerAl/orgs",
      "received_events_url": "https://api.github.com/users/PetSerAl/received_events",
      "repos_url": "https://api.github.com/users/PetSerAl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PetSerAl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PetSerAl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PetSerAl"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "```powershell\r\n@([object[]]$null).GetType()\r\n```",
    "created_at": "2017-07-19T07:32:39Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316298082",
    "id": 316298082,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjI5ODA4Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316298082/reactions"
    },
    "updated_at": "2017-07-19T07:32:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316298082",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17184058?v=4",
      "events_url": "https://api.github.com/users/PetSerAl/events{/privacy}",
      "followers_url": "https://api.github.com/users/PetSerAl/followers",
      "following_url": "https://api.github.com/users/PetSerAl/following{/other_user}",
      "gists_url": "https://api.github.com/users/PetSerAl/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/PetSerAl",
      "id": 17184058,
      "login": "PetSerAl",
      "node_id": "MDQ6VXNlcjE3MTg0MDU4",
      "organizations_url": "https://api.github.com/users/PetSerAl/orgs",
      "received_events_url": "https://api.github.com/users/PetSerAl/received_events",
      "repos_url": "https://api.github.com/users/PetSerAl/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/PetSerAl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PetSerAl/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/PetSerAl"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "```powershell\r\n@([object[]]$null).GetType()\r\nYou cannot call a method on a null-valued expression.\r\nAt line:1 char:1\r\n+ @([object[]]$null).GetType()\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException\r\n    + FullyQualifiedErrorId : InvokeMethodOnNull\r\n```\r\n\r\nThis is a deal breaker and definitely needs to be fixed. And this one\r\n\r\n```powershell\r\n@([System.Collections.Generic.List[object]]$null)\r\nObject reference not set to an instance of an object.\r\nAt line:1 char:1\r\n+ @([System.Collections.Generic.List[object]]$null)\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : OperationStopped: (:) [], NullReferenceException\r\n    + FullyQualifiedErrorId : System.NullReferenceException\r\n```\r\n> So, it is not just some indexable collection. It guarantied to be an array ([object[]]).\r\n\r\n~~Maybe it should be `System.Array`, not necessarily `System.Object[]`. I think `ArrayExpressionAst.StaticType` should be changed to `System.Array`, but that would be a breaking change.~~\r\nNever mind, the spec says it's **unconstrained**, so should be `object[]`.",
    "created_at": "2017-07-19T15:27:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316423598",
    "id": 316423598,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQyMzU5OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316423598/reactions"
    },
    "updated_at": "2017-07-19T15:43:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316423598",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@daxian-dbw: \r\n\r\nGlad to hear it.\r\n\r\nRe `@([System.Collections.Generic.List[object]]$null)`, out of curiosity:  \r\nSince the cast involved here is not an _array_ cast, what is the cause of the problem? Is this related to the same optimization, and, if so, how?\r\n\r\n@iSazonov:\r\n\r\nMy understanding is limited, but I hope it's accurate enough to say that in your example - due to the presence of array cast `[object[]]` - the (problematic part of the) PSv5.1+ optimization effectively behaves as if `@(...)` hadn't been specified at all; in other words: `@([object[]]$a)` and `[object[]]$a` behave identically in your scenario, and `$b = [object[]]$a` simply copies the array reference (in other words `$b` and `$a` reference the same array).\r\n\r\n  * By contrast, with a purely `,` constructed array (no cast), this behavior is not problematic, because `,` creates an `[object[]]` instance that by definition has no independent existence outside of `@(...)`, and skipping the enumeration-and-repackaging step that `@(...)` normally entails actually speeds up legacy code that mistakenly uses `@()` to initialize array literals.\r\n\r\nA `@(...)` expression is parsed as type `ArrayExpressionAst` and `ArrayExpressionAst.StaticType`  - which was never changed - still indicates `[object[]]`, even though the problematic optimization introduced `@(...)` expressions whose type could be different (e.g., `@([int[]] (1, 2)).GetType().Name` yields `Int32[]`).",
    "created_at": "2017-07-19T16:53:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316448999",
    "id": 316448999,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQ0ODk5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316448999/reactions"
    },
    "updated_at": "2017-07-19T16:55:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316448999",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "> Re @([System.Collections.Generic.List[object]]$null), out of curiosity\r\n\r\nIt's resulted in by [the code here](https://github.com/PowerShell/PowerShell/blob/master/src/System.Management.Automation/engine/parser/Compiler.cs#L5508). A null check should be done.\r\n",
    "created_at": "2017-07-19T18:48:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316481075",
    "id": 316481075,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQ4MTA3NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316481075/reactions"
    },
    "updated_at": "2017-07-19T18:48:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316481075",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "It seems we should fix:\r\n```powershell\r\n$a = 1..3\r\n$b = $a\r\n[object]::ReferenceEquals($a, $b)\r\n\r\n$a = 1..3\r\n$b = @($a)\r\n[object]::ReferenceEquals($a, $b)\r\n\r\n```",
    "created_at": "2017-07-20T14:03:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316713309",
    "id": 316713309,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjcxMzMwOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316713309/reactions"
    },
    "updated_at": "2017-07-20T14:03:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316713309",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\nNo, that (still) works as intended: \r\n\r\n* The first statement creates another variable pointing to the same array.\r\n\r\n* The second statement creates a _new_ array, by enumerating the result of expression `$a` and packaging that as a new `[object[]]` array.\r\n\r\nThe latter behavior is in line with `@()`'s documented intent, and while the aspect of _always_ creating a _new_ array (effectively, a copy (shallow clone), if the input array is also `[object[]]`) is not explicitly stated, to me it is implied by the spec, has always worked that way, and people may have come to _rely_ on this behavior, as evidenced by @PetSerAl's habit of using `@()` as an array-cloning shortcut.\r\n",
    "created_at": "2017-07-20T14:13:24Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316716223",
    "id": 316716223,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjcxNjIyMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316716223/reactions"
    },
    "updated_at": "2017-07-20T15:24:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316716223",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Thanks for clarify.\r\nContinue 😄 \r\n```powershell\r\n$a = 1..3\r\n$b = @($a = 1..4;[object[]]$a)\r\n[object]::ReferenceEquals($a, $b)\r\n\r\n$a = 1..3\r\n$b = @([object[]]$a)\r\n[object]::ReferenceEquals($a, $b)\r\n\r\n```",
    "created_at": "2017-07-20T15:22:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-316738062",
    "id": 316738062,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjczODA2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316738062/reactions"
    },
    "updated_at": "2017-07-20T15:22:52Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/316738062",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@daxian-dbw Please clarify about \"Review - Committee\" label in the Issue.",
    "created_at": "2017-08-03T06:09:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-319877144",
    "id": 319877144,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTg3NzE0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319877144/reactions"
    },
    "updated_at": "2017-08-03T06:09:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319877144",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 @SteveL-MSFT \r\nAlso should we add \"Documentation Need\" label?",
    "created_at": "2017-08-03T06:10:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-319877335",
    "id": 319877335,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTg3NzMzNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319877335/reactions"
    },
    "updated_at": "2017-08-03T06:10:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319877335",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: I think that a mention in the release notes should be sufficient, given that the original optimization was never documented and many people probably never noticed it.",
    "created_at": "2017-08-03T12:53:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-319960312",
    "id": 319960312,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTk2MDMxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319960312/reactions"
    },
    "updated_at": "2017-08-03T12:53:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/319960312",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This has been a good discussion, but I need a summary here.  Is there anything that the committee still needs to review?  Since @daxian-dbw fixed some aspects of this discussion, I think the only thing left is a regression introduced by an optimization in 5.x?  If so, then I think `Documentation Needed` is sufficient.",
    "created_at": "2017-08-03T23:54:21Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320120131",
    "id": 320120131,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDEyMDEzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320120131/reactions"
    },
    "updated_at": "2017-08-03T23:54:21Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320120131",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "The thing that committee needed to review was this:\r\n\r\n> With PSv5.1, `@(...)` returns an array of a specific type in some scenarios, for example `@([int[]] (1, 2)).GetType().Name`. However, according to [PowerShell Language Specification Version 3.0](https://www.microsoft.com/en-us/download/details.aspx?id=36389), as quoted: \"_The result is the (possibly empty) unconstrained 1-dimensional array_\", `@(...)` should only return `object[]` array.\r\n\r\nThe PR #4296 addressed this, and Jason approved, so I assume the committee is fine with the change to make `@(...)` always return `object[]` array. If so, we can remove the `'Review Committee'` label.",
    "created_at": "2017-08-04T16:31:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320294004",
    "id": 320294004,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDI5NDAwNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320294004/reactions"
    },
    "updated_at": "2017-08-04T16:31:53Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320294004",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/127450?v=4",
      "events_url": "https://api.github.com/users/daxian-dbw/events{/privacy}",
      "followers_url": "https://api.github.com/users/daxian-dbw/followers",
      "following_url": "https://api.github.com/users/daxian-dbw/following{/other_user}",
      "gists_url": "https://api.github.com/users/daxian-dbw/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/daxian-dbw",
      "id": 127450,
      "login": "daxian-dbw",
      "node_id": "MDQ6VXNlcjEyNzQ1MA==",
      "organizations_url": "https://api.github.com/users/daxian-dbw/orgs",
      "received_events_url": "https://api.github.com/users/daxian-dbw/received_events",
      "repos_url": "https://api.github.com/users/daxian-dbw/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/daxian-dbw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daxian-dbw/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/daxian-dbw"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Just for future consideration, I'd like to address @lzybkr's comments on the linked PR:\r\n\r\n> I should add that the intent of @() is not to create a new array, but to ensure the result is an array, and not necessarily an object[].\r\n\r\nWhile I agree re the overall intent of `@()`, I feel that it is better to not contravene two likely user expectations (which happen to be consistent with what the 3.0 spec says):\r\n\r\n* that the array returned is unconstrained, i.e., of type `[object[]]`, i.e., a _regular_ PS array. (Most PowerShell users probably don't even think about array-element typing and probably expect arrays to be able to hold any mix of data types)\r\n\r\n* that  `@()` always returns a _new_ array, without having to worry about reference equality (which is probably not even on the radar of most PowerShell users).\r\n\r\n> In other words, I think we could be open to changing what the language specification says to allow for better performance.\r\n\r\nPassing strongly typed arrays through strikes me as a rare use case that I don't think warrants optimization, given that it would contravene the expectations above.\r\n\r\nBy contrast, optimizing the _typical_ use case is well worth considering: passing the `[object[]]` output of a _single command_ through (optimizing the `@()` away if the enclosed single command happens to return a `[object[]]` array already).\r\n\r\nI can't speak to the technical feasibility, but here's an example where the `@()` could be optimized away (without contravening the assumptions above), which makes a noticeable difference with large output sets:\r\n\r\n```powershell\r\n# Could be optimized to: Write-Output (1..10000000)\r\n# Currently, the output is collected and a new array is constructed.\r\n@(Write-Output (1..10000000))\r\n```\r\n",
    "created_at": "2017-08-04T22:17:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320365228",
    "id": 320365228,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDM2NTIyOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320365228/reactions"
    },
    "updated_at": "2018-05-05T03:08:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320365228",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Do you mean that it should return `true`?\r\n```powershell\r\n$a = 1..3\r\n$b = @($a)\r\n[object]::ReferenceEquals($a, $b)\r\n\r\ntrue\r\n```",
    "created_at": "2017-08-06T17:43:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320521310",
    "id": 320521310,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyMTMxMA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320521310/reactions"
    },
    "updated_at": "2017-08-06T17:43:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320521310",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov:\r\n\r\nNo, that's one of the user expectations I do _not_ want to contravene.\r\n\r\nConversely, if we _commit_ to _never_ optimizing `@()` away in this scenario, we can advertise that `@()`  applied to a _variable_ has a secondary use as a shallow-clone-any-array-or-collection-to-a-regular PS array operator (which it has been restored to with this PR).\r\n\r\nWhat I was suggesting is: make `@()` return a _new_ array _except_ in the following 2 scenarios - and no others - in which `@()` can be _optimized away_:\r\n\r\n* already implemented: an array literal _without a cast_; e.g., `@(1, 2, 3)`\r\n\r\n* suggested improvement: a single command that outputs an `[object[]]` array already; e.g., `@(Get-ChildItem -Recurse)`; of course, if a _scalar_ is situationally returned, it still needs to be wrapped in an (invariably new) array - that is the primary purpose of `@()`, after all.\r\n\r\nIn both scenarios reference equality is a moot point, given that no variable referencing a preexisting array is involved. (I suppose in roundabout ways a command's output could hypothetically reference an array stored in a PS variable, but I don't think we need to worry about that).\r\n\r\nThe first optimization is really just a _courtesy_ to improve the performance in cases where users mistakenly apply `@()` to (unconstrained) array literals, even though it is pointless.\r\n\r\nThe 2nd one is by far the most common use case for `@()`, if I were to guess, and many scripts could benefit from it. Again, I can't speak to technical feasibility / effort.\r\n\r\n\r\n\r\n",
    "created_at": "2017-08-06T18:35:30Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320524193",
    "id": 320524193,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUyNDE5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320524193/reactions"
    },
    "updated_at": "2017-08-06T18:42:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320524193",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@mklement0 Thanks for clarify.\r\n\r\nAbove I see Bruce and Jason said \"the intent of @() is not to create a new array\". I expect that behavior.\r\nWe need conclusion from @powershell-committee for this point too.\r\n",
    "created_at": "2017-08-07T04:03:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320563705",
    "id": 320563705,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU2MzcwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320563705/reactions"
    },
    "updated_at": "2017-08-07T04:03:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320563705",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@iSazonov: \r\n\r\nIndeed, array-cloning is not `@()`'s purpose, and maybe what I'm proposing is too convoluted (I like the conceptual simplicity of \"make this an array if it isn't; otherwise use it as-is\" - which guarantees neither cloning nor being unconstrained).\r\n\r\nMy thought was that since changing the always-create-a-new-array behavior would (a) break existing code and (b) applying `@()` to a _variable_ is an exotic use case to begin with, why not turn it into a documented virtue that gives us a convenient, PS-idiomatic way to clone arrays?\r\n\r\nHowever, my suggestion to optimize the `@(<single-command>)` use case is independent of the above, and strikes me as a worthwhile, given that it's probably the most common use of `@()` by far.  \r\nI should say that I've inferred that this use case is currently _not_ optimized solely from timing commands - I haven't looked at the source code.",
    "created_at": "2017-08-07T12:24:11Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/4280#issuecomment-320649342",
    "id": 320649342,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/4280",
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDY0OTM0Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320649342/reactions"
    },
    "updated_at": "2017-08-07T12:24:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/320649342",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
