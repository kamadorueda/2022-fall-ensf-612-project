[
  {
    "author_association": "COLLABORATOR",
    "body": "Should this be encoded into each `Out-*` cmdlet (actually thinking of set-clipboard here)?  Maybe there should be a single, intermediate cmdlet to strip VT seqs?  Maybe a switch on `Out-String`?",
    "created_at": "2019-10-16T21:38:53Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-542902734",
    "id": 542902734,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjkwMjczNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/542902734/reactions"
    },
    "updated_at": "2019-10-16T21:52:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/542902734",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@rkeithhill file redirection and clipboard are the two scenarios I'm thinking of",
    "created_at": "2019-10-16T21:57:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-542908566",
    "id": 542908566,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjkwODU2Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/542908566/reactions"
    },
    "updated_at": "2019-10-16T21:57:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/542908566",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "What's the solution when piping to non PS commands (e.g. | clip). \r\n\r\nReally.\r\n- Text output should be kept **clean.**  That's been a basic tenet of PowerShell from the start. \r\n- Hard-coding things to appear in the writer's favorite color should be strongly discouraged. The chosen color may be difficult to read for some people or in some configurations. (Treating the PSReadline colors  or $host.privateData as a \"theme\" is a better approach, these will likely have been customized to something which will work)   \r\n-  It is possible to tolerate prettification and \"reverse engineer\" back to clean text. However re-writing _individual_ PS commands to remove authors' decoration is a bad way to do it - all non PS commands would get \"dirty\" text, etc. \r\n\r\nIn some places color helps. (e.g. PSReadline color coding syntax; the parser error messages in the current preview) and in these cases the text is only going into the console to be consumed by human eyeball. If it goes anywhere else, mixing non-output (like VT sequences) with \"actual\" output and sending both to std-out is the path to madness. \r\n \r\n",
    "created_at": "2019-10-17T13:22:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543172471",
    "id": 543172471,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzE3MjQ3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543172471/reactions"
    },
    "updated_at": "2019-10-17T13:22:46Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543172471",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, @jhoneill.\r\n\r\nWe should consider taking a page out of the book of Unix utilities that provide colored output, such as (GNU) `grep`:\r\n\r\n* Do _not_ use VT sequences, _except_ when a cmdlet's \"stdout\" (success output stream) is connected to a _terminal_ (implicit output formatting) or a _formatting cmdlet_.\r\n   * That would require special-casing for `Out-File` and `Out-String`, however, given that they use the formatting system too.\r\n\r\n  * Coloring should be confined to the _formatting layer_ - ~~though that's probably not feasible in cases where selective coloring requires knowledge of the details of the output objects, such as in the case of `Select-String`.~~ (see [comment below](https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543368364))\r\n  \r\n  * ~~Therefore, the onus is on individual cmdlets that potentially provide VT sequences as part of their _data_ to suppress them when not (ultimately) printing to the screen (by default) and to respect a preference variable that controls the behavior (see next point).~~ (again, all coloring should happen as part of _formatting_)\r\n\r\n* Provide _categorical suppression of_ and _unconditional_  use of VT sequences via an _opt-in_ mechanism, as a preference variable and possibly a new common parameter (though that may be overkill, given that few cmdlets produce colored output).\r\n\r\n  * I also suggest naming the preference variable something like `$ColoringPreference`, with enumeration values `HostOnly` (default), `Always`, `Never`.\r\n\r\nIn other words: _By default_ you should only ever get VT sequences if you _print to the screen_.\r\n\r\n",
    "created_at": "2019-10-17T17:33:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543281608",
    "id": 543281608,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzI4MTYwOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543281608/reactions"
    },
    "updated_at": "2019-10-18T02:50:11Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543281608",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@jhoneill just to be clear, the colors are completely user configurable.\r\n\r\n@mklement0 limiting VT to screen output only makes sense, need to figure out how easy or hard it would be to do that",
    "created_at": "2019-10-17T18:18:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543299118",
    "id": 543299118,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzI5OTExOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543299118/reactions"
    },
    "updated_at": "2019-10-17T18:18:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543299118",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@mklement0  :-)  Select-string - or to be more correct, the matchinfo object - is something of a basket case, doing the formatting inside the ToString() method of the object, based on a private property set by select-string. That fails if the object is serialized (e.g. in remoting)  I put together a .format.ps1xml file for match info, which is the proper mechanism for this stuff ... \r\n\r\n![image](https://user-images.githubusercontent.com/16209593/67039042-7d95f700-f118-11e9-9c22-a03fc473859f.png)\r\n\r\n@SteveL-MSFT  when you say _completely_ could I change the colors for the labels in `get-error` to be magenta instead of green ? \r\n That bit of format-xml, shows that signalling that color is OK might lead to some nasty things being hard coded (please, no-one say you _like_ those colors !).  _But_ the script block in the formatting XML _could_ heed a preference variable and/or get values from \"themes\". AFAIK you can't use a script block for a label in the formatting XML so that route to colored labels won't work. \r\nBut _Labels_ in tables and lists should not change color from one command to another (one preference variable which applied to all of them ... perhaps).     \r\n\r\n\r\nBTW did you know that` get-formatData `doesn't work if the data was compiled, it only shows if data comes from a free-standing XML file (about_format.ps1xml still refers to the files which used to hold the bulk of the data)  and `update-formatData` updates the data part but not the labels - shall I open issues for those ? ",
    "created_at": "2019-10-17T21:24:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543368364",
    "id": 543368364,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzM2ODM2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543368364/reactions"
    },
    "updated_at": "2019-10-17T21:24:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543368364",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@jhoneill: Nice - confining the coloring to the formatting layer is definitely the right approach; does it perform acceptably?\r\n\r\nAs for `Get-FormatData`: the compiled formatting data does show in principle, but there's a bug / quirk with respect to certain types - see #4237; tl;dr: use `get-formatData -PowerShellVersion $PSVersionTable.PSVersion` to see everything.",
    "created_at": "2019-10-17T21:49:34Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543376165",
    "id": 543376165,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzM3NjE2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543376165/reactions"
    },
    "updated_at": "2019-10-17T21:49:34Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543376165",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@SteveL-MSFT - programs use `GetConsoleMode` on Windows or `isatty` on Linux to determine if stdout/stderr is going to a screen or not.",
    "created_at": "2019-10-17T22:46:04Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543392971",
    "id": 543392971,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzM5Mjk3MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543392971/reactions"
    },
    "updated_at": "2019-10-17T22:46:04Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543392971",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@jhoneill see `$Host.PrivateData` on colors that can be configured.  You can make it Magenta if you'd like.",
    "created_at": "2019-10-17T23:15:07Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543403029",
    "id": 543403029,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzQwMzAyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543403029/reactions"
    },
    "updated_at": "2019-10-17T23:15:07Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543403029",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT  FormatAccentColor is new.  \r\nUsing $host.private data / $host.ui.foregroundColor / $host.ui.foregroundColor / psreadline colors side-steps the problem of the user not getting on with the selected color. [Docs should explain hard coded colors: bad , \"theme\" colors: better] \r\nThen it's just a case of dealing with escape sequences. \r\n\r\nBTW if you set foreground color via $host and not in on the shell properties; then  if something sends \"`e[0\" it resets things to whatever the terminal says it should be and your setting is lost. I wondered if I could use  this for mischief ... \r\n![image](https://user-images.githubusercontent.com/16209593/67061191-7215f080-f157-11e9-8cf3-6677d2465c63.png)\r\n\r\nSo I've embedded an escape code in the user's description. I output the description and my foreground colour changes. Then it gets weird. Anything that formats the object as a table causes the terminal to revert to default colours as soon as that field is output. It didn't _change_ the colour because it was already changed, but the escape sequence cause the colour to change from the next column . If I use format-list it does what I'd expect, the colour changes from when the description is output and stays changed. \r\n![image](https://user-images.githubusercontent.com/16209593/67061535-86a6b880-f158-11e9-9216-2746ea93a8e8.png)\r\n \r\n\r\n\r\n\r\n\r\n@mklement0  Perf is not visibly different. And between daily builds tostring on matchinfo has gone back to normal and following your tip I can see it is calling  toEmphasizedString instead. ",
    "created_at": "2019-10-18T02:39:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543460490",
    "id": 543460490,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzQ2MDQ5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543460490/reactions"
    },
    "updated_at": "2019-10-18T02:39:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543460490",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@lzybkr actually, that won't help in this case as within the same pwsh interactive session, I believe the desire is to have colors when we know the output isn't being redirected or piped.  I believe scrubbing it in  Host APIs is the way to go.\r\n\r\n@jhoneill the reset code was added to fix another problem where a user would deliberately insert a VT code for their own coloring but when formatted as a table and is truncated, then it would bleed into other columns. \r\n\r\nI don't think it makes sense to invent a new markup in PS for VT codes as VT esc seq is that markup.  Coloring should be in formatting which it currently primarily is with the exception of `select-string` as pointed out (even this could be moved to formatting if someone wanted to spend the time to do it).  The concept of stripping VT codes is not optimal, but seems like the best approach to minimize complexity in formatters and the fact that they can't know where the output is going as that's handled much lower in the engine.",
    "created_at": "2019-10-18T14:12:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543766011",
    "id": 543766011,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzc2NjAxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543766011/reactions"
    },
    "updated_at": "2019-10-18T14:12:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543766011",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "**Additional** (@mklement0  re format xml). I checked what happens on Server 2012 R2 as that is in extended support until October 2023 , and its console host doesn't support escape sequences.  [Side note  I remember ANSI.SYS in DOS in c. 1989, but NT 3.1 to Windows 8.1 seemed to manage without it. It's weird having it back and it doesn't feel like an old friend]\r\nOn 2012 R2, the new formatting for parser errors, get-error, and select-string are all smart enough _not_ to send escape sequences to the console. My format XML isn't ; char 27 prints as a backward arrow, and the rest of the sequence prints to the screen. \r\n\r\nGenerically, code in a format.ps1XML needs to check  `$Host.ui.supportsVirtualTerminal `  & a preference variable, and select a \"theme\" color (not a hard coded author favorite) .  Really there should be some helper code for that, so you write `render($_.property,VerboseForeground)` or `render('Label',ReadLineEmphasis)`  and it should NOT send a \"reset terminal to default\" at the end but should check` $host.ui.rawui.data ` and set the foreground / background back to to those values (and turn off inverse or underline). \r\nFor Select-String to support -No emphasis _and_ work with formatting XML the Emphasis property for matchInfo objects needs to be public, and then the format-XML code can check it...  \r\n\r\nI think I can summarize my view after thinking way too much about it as  :\r\n\r\n1. Data is colorless. Unless what is being written targets eyeballs only, and the color makes things clearer (not nicer to to look at), don't do it.  The new parser error message is a case where color does make things clearer and (as an error which won't be caught and redirected) it's eyeballs only. That's the right use. Get-Error, if it needs color at all, uses it because the indents are ragged and the labels blend in with the values. The solution to this is to fix the layout, not color the labels. It's less \"eyeballs only\" we might ask someone to run get-error and put the results into a problem ticket... so this looks like the wrong use. Select-string benefits from the emphasis, especially when seeking a complicated regex. But it might be sent somewhere hence a need to manage it.       \r\n2. Where color is beneficial but adding it has downstream effects [it didn't _target_ downstream use, but users did that anyway], it is better to stop it at source than to strip it later. \r\n3. Using format data is better than hard coding formatting in cmdlets and their objects.\r\n4. What goes out as a PowerShell release will set a standard; so it needs to demonstrate good practice....  I think for something which \"does\" color **to make it into a release it should be  meaningful, optional, well behaved and consistently implemented** ",
    "created_at": "2019-10-18T16:35:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543826168",
    "id": 543826168,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgyNjE2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 3,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 3,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543826168/reactions"
    },
    "updated_at": "2019-10-18T16:35:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543826168",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @jhoneill the reset code was added to fix another problem where a user would deliberately insert a VT code for their own coloring but when formatted as a table and is truncated, then it would bleed into other columns.\r\n\r\nOne should probably do the same format-list ... but also it should reset to the foregroundColor in $host.ui not esc[0m which resets to the terminal default. \r\n\r\n> I don't think it makes sense to invent a new markup in PS for VT codes as VT esc seq is that markup. \r\nEven if you invented a new mark up, VT codes are still there, so people will still use them and you'll have two forms.   \r\n>Coloring should be in formatting which it currently primarily is with the exception of `select-string` as pointed out (even this could be moved to formatting if someone wanted to spend the time to do it). \r\nAgree ! I feel like I know enough to do it now :-) \r\n>The concept of stripping VT codes is not optimal, but seems like the best approach to minimize complexity in formatters and the fact that they can't know where the output is going as that's handled much lower in the engine.\r\n\r\nSee the comment above:  if it is done in the formatting and there is a standard \"format this\" which can does nothing if $colorPreference is \"None\" or the terminal doesn't support it;  sets colors, reverse field and underline, and reverts back to the the right colors instead of doing a terminal reset that would be good.  I might prototype that first ...\r\n\r\n ",
    "created_at": "2019-10-18T16:59:54Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543836522",
    "id": 543836522,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzgzNjUyMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543836522/reactions"
    },
    "updated_at": "2019-10-18T16:59:54Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543836522",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@SteveL-MSFT - Checking isatty/GetConsoleMode is necessary when PowerShell is invoked from another process, e.g. ADO or in a pipeline from a parent shell (bash/PowerShell/etc) process.\r\n\r\nMost CLIs also offer an option to override the isatty check and force colors. I know for certain ADO would like such an option so they can display the colors in CI builds in the same way that you see on the screen.",
    "created_at": "2019-10-18T18:49:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543884936",
    "id": 543884936,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg4NDkzNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543884936/reactions"
    },
    "updated_at": "2019-10-18T18:49:17Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543884936",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2148248?v=4",
      "events_url": "https://api.github.com/users/lzybkr/events{/privacy}",
      "followers_url": "https://api.github.com/users/lzybkr/followers",
      "following_url": "https://api.github.com/users/lzybkr/following{/other_user}",
      "gists_url": "https://api.github.com/users/lzybkr/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/lzybkr",
      "id": 2148248,
      "login": "lzybkr",
      "node_id": "MDQ6VXNlcjIxNDgyNDg=",
      "organizations_url": "https://api.github.com/users/lzybkr/orgs",
      "received_events_url": "https://api.github.com/users/lzybkr/received_events",
      "repos_url": "https://api.github.com/users/lzybkr/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/lzybkr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lzybkr/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/lzybkr"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "After some discussion with @JamesWTruher who has experience in this space, we're going to defer this to the next release.  What we really need is a platform solution where cmdlets/formatters can provide rendering attributes to text then the render can decide what to do with it.  In cases where text is passed in the pipeline, it would just be the text as the rendering attributes are a separate property.  Only renders that understand those attributes would render them as VT escape sequences (or other renderings as necessary).  For the developer experience, we discussed a StringBuilder type experience where in addition to Append(), you could Append(attribute) where attribute could be color, bold, underline, etc...  More thinking is needed on this which is why it won't make it into PS7, but something we can target for next release.",
    "created_at": "2019-10-18T20:25:32Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-543926695",
    "id": 543926695,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzkyNjY5NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543926695/reactions"
    },
    "updated_at": "2019-10-18T20:25:32Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/543926695",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "@SteveL-MSFT  I've just had an idea ... all the cases which I know of which use escape sequences check `$host.ui.SupportsVirtualTerminal`\r\n\r\nSo if that class had a method `DisableVirtualTerminal()` which caused supportsVT return false for the rest of the PowerShell session (and possibly .ResetVirtualTerminal which checked if it was supported and if so turned it back on)  that would meet the objective. Doesn't need a preference variable, can go in a script or profile ... not very hard  to implement... \r\n\r\n \r\n\r\n",
    "created_at": "2019-10-22T13:37:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-544965976",
    "id": 544965976,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk2NTk3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/544965976/reactions"
    },
    "updated_at": "2019-10-22T13:37:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/544965976",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@jhoneill implementation isn't really the concern but how to expose to users and how to expose to developers.  Exposing a method to change the value of `SupportsVirtualTerminal` is easy, but not discoverable for users.  Also, the general consensus is that users probably want VT for the interactive shell and output to the host (PSReadLine depends on some of this, for example), just not in the output going through the pipeline or redirected.",
    "created_at": "2019-10-22T16:23:40Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-545043345",
    "id": 545043345,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTA0MzM0NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545043345/reactions"
    },
    "updated_at": "2019-10-22T16:23:40Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545043345",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "The plus side is if developers check for` SupportsVirtualTerminal `(or use something which checks for them) they is nothing _they_ need to do. \r\nI think you're right it's only a few users who want _all_ VT off , _all_ the time. Toggling it  either side of a command so you can send non-formatted stuff somewhere, but retain syntax highlighting (for example) doesn't seem an outrageous overhead. You could have Reset-Color and Disable-Color cmdlets to wrap the changes to ` SupportsVirtualTerminal `  for discoverablity . \r\n\r\nAn alternative is to put a \"stripVT\" switch in Out-string to do a regex replace on \"\\e\\[\\d.*?m\" , but not sending is always better than stripping out. \r\n\r\nI understand the desire to have a really top solution for the next release. However, with Show-Markdown, Get-error and Select-String all sending VT and writers seeing it as an easy way to make stuff pretty , I don't think the need to stop VT going to the output stream will go away. The sooner those writers can be steered towards a good practice, the smaller the number of horrors that will need to be cleaned up.\r\n\r\n",
    "created_at": "2019-10-22T17:21:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-545066491",
    "id": 545066491,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTA2NjQ5MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545066491/reactions"
    },
    "updated_at": "2019-10-22T17:21:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545066491",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I expect we'll have this address in the release after PS7.  The current concept is to have separation of the text and attributes.  This makes it easy to pass both and only formatting (ideally) would use the attributes to do the rendering.  This also makes it transparent to everything else already in PowerShell as `ToString()` (for example) would just be the naked string sans VT.  The other benefit of separating the attributes is that the color palette can be customized.  So for some customers, they may want underlined text to be bold and underlined to make it easier to read.  This can all be customized.\r\n\r\nI also want it to be easier for developers writing new scripts/cmdlets to participate.  So instead of understanding and hardcoding VT codes, they can get an experience more like (note, class names are placeholders):\r\n\r\n```powershell\r\n$s = [PSStringBuilder]::new()\r\n$s.AppendAttribute('Red')\r\n$s.Append(\"This is in red,\")\r\n$s.AppendAttribute('Inverse','Bright','Green')\r\n$s.Append(\"this is not\")\r\n$s.AppendAttribute('Reset')\r\n$s.ToString()\r\n\r\n# this would be the plain text\r\n> This is in red, this is not\r\n\r\n$s.RenderString()\r\n\r\n# this would be the rendered version\r\n> .... well, you get the idea :)\r\n```",
    "created_at": "2019-10-22T21:01:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-545153262",
    "id": 545153262,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTE1MzI2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545153262/reactions"
    },
    "updated_at": "2019-10-22T21:01:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/545153262",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@lzybkr had a good suggestion to have a param on `pwsh` like `-color` with `always, auto, never` values.  Cmdlets can still use an api like above to declare attributes and the formatter can deal with whether to generate the VT or not.",
    "created_at": "2019-10-24T22:22:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-546126662",
    "id": 546126662,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjEyNjY2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546126662/reactions"
    },
    "updated_at": "2019-10-24T22:22:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546126662",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "> @lzybkr had a good suggestion to have a param on `pwsh` like `-color` with `always, auto, never` values. Cmdlets can still use an api like above to declare attributes and the formatter can deal with whether to generate the VT or not.\r\n\r\nIt is a good suggestion, it will solve the problem for a good proportion of cases. \r\nMy instinct says its a only small minority of cases where you'd be in a session and see you needed to turn off VT and starting a new session wouldn't work, but I don't know how to gauge it.",
    "created_at": "2019-10-25T11:25:45Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-546316255",
    "id": 546316255,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjMxNjI1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546316255/reactions"
    },
    "updated_at": "2019-10-25T11:25:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546316255",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "NONE",
    "body": "Just wanted to jump in and caution against this:\r\n\r\n> should reset to the foregroundColor in $host.ui \r\n\r\n`ForegroundColor`, barring some new version of .NET’s Console class that supports terminals that aren’t Windows well, will never be the right thing to use here. Terminals do not, broadly speaking, have an application-knowable foreground or background color in the general sense. Instead of saving/restoring the foreground color index, a compliant application should emit `\\e[39m` to tell the terminal to restore to _its_ default foreground color.\r\n\r\nEvery time a commandline application thinks it knows better than the terminal it’s connected to what the user wants on the screen, it is ill-formed. :smile:",
    "created_at": "2019-10-28T14:44:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-546979139",
    "id": 546979139,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Njk3OTEzOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546979139/reactions"
    },
    "updated_at": "2019-10-28T14:44:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/546979139",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/14316954?v=4",
      "events_url": "https://api.github.com/users/DHowett-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/DHowett-MSFT/followers",
      "following_url": "https://api.github.com/users/DHowett-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/DHowett-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/DHowett-MSFT",
      "id": 14316954,
      "login": "DHowett-MSFT",
      "node_id": "MDQ6VXNlcjE0MzE2OTU0",
      "organizations_url": "https://api.github.com/users/DHowett-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/DHowett-MSFT/received_events",
      "repos_url": "https://api.github.com/users/DHowett-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/DHowett-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DHowett-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/DHowett-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Just wanted to jump in and caution against this:\r\n> \r\n> > should reset to the foregroundColor in $host.ui\r\n> \r\n> `ForegroundColor`, barring some new version of .NET’s Console class that supports terminals that aren’t Windows well, will never be the right thing to use here. Terminals do not, broadly speaking, have an application-knowable foreground or background color in the general sense. Instead of saving/restoring the foreground color index, a compliant application should emit `\\e[39m` to tell the terminal to restore to _its_ default foreground color.\r\n> \r\n> Every time a commandline application thinks it knows better than the terminal it’s connected to what the user wants on the screen, it is ill-formed. 😄\r\n\r\nOn non-windows platforms [console] returns -1 for foreground and background colors. In that case 39m / 49m or 0m are the only option. \r\n\r\nIn 6.2.3 normal operation of Ps readline coloring the command line, or CLS over-ride anything the user sets via `[console]::foregroundcolor / backgroundColor` or `$host.ui.rawUI.foregroundColor/backgroundColor` and go back to terminal defaults. \r\nIn 7 preview 5 they don't.  A bit like unnecessary use of` cls/ clearhost` throwing away what the user has in the back-scroll buffer, ignoring programmatic changes to foreground / background and rebooting the terminal is, \"ill formed\". Or simply \"rude\". \r\n\r\nShould an issue **\"Select-String changes colors without permission\"**, which showed `[console]:foregroundColor` changed when it ran be accepted as a bug ?  Or would the response be \"You shouldn't switch foreground and background colours via $host or [system.console]\"   \r\nWhich begs the questions \"why are those settings writable ?\" and \"so randomly calling `[system.console]::resetcolor()` is OK then ?\"\r\n\r\n\r\n\r\n",
    "created_at": "2019-10-28T22:55:17Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-547180996",
    "id": 547180996,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NzE4MDk5Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/547180996/reactions"
    },
    "updated_at": "2019-10-29T00:44:55Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/547180996",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Re: https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-545153262\r\n\r\nA good idea to make it easy, but if this ends up being the route, allow use of VT codes for more advanced scenarios where we want full access to the 256 color table and other modifiers.",
    "created_at": "2019-12-07T10:57:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-562839963",
    "id": 562839963,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjgzOTk2Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/562839963/reactions"
    },
    "updated_at": "2019-12-07T10:57:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/562839963",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1532486?v=4",
      "events_url": "https://api.github.com/users/heaths/events{/privacy}",
      "followers_url": "https://api.github.com/users/heaths/followers",
      "following_url": "https://api.github.com/users/heaths/following{/other_user}",
      "gists_url": "https://api.github.com/users/heaths/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/heaths",
      "id": 1532486,
      "login": "heaths",
      "node_id": "MDQ6VXNlcjE1MzI0ODY=",
      "organizations_url": "https://api.github.com/users/heaths/orgs",
      "received_events_url": "https://api.github.com/users/heaths/received_events",
      "repos_url": "https://api.github.com/users/heaths/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/heaths/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/heaths/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/heaths"
    }
  },
  {
    "author_association": "MEMBER",
    "body": ".NET is building a new System.CommandLine library.  One of the areas they are covering is this problem of strings and decoration.  So for now, we'll work with them and adopt their solution.",
    "created_at": "2019-12-09T22:39:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-563472793",
    "id": 563472793,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzQ3Mjc5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563472793/reactions"
    },
    "updated_at": "2019-12-09T22:39:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/563472793",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "I played with System.CommandLine.Rendering library and it's suitable for PowerShell needs.  Here's an example in script:\r\n\r\n```powershell\r\nusing namespace System.CommandLine.Rendering\r\n\r\nadd-type -AssemblyName ./System.CommandLine.Rendering.dll\r\n\r\n$cs = [ContainerSpan]::new(\r\n    [StyleSpan]::UnderlinedOn(),\r\n    [ForegroundColorSpan]::RGB(128,0,128),\r\n    [BackgroundColorSpan]::Yellow(),\r\n    [ContentSpan]::new(\"hello\"),\r\n    [StyleSpan]::UnderlinedOff()\r\n    )\r\n\r\n$cs += [ForegroundColorSpan]::Rgb(225, 110, 132)\r\n$cs += [BackgroundColorSpan]::Reset()\r\n$cs += [ContentSpan]::new(\" there\")\r\n\r\n$sw = [System.IO.StringWriter]::new()\r\n$cs.WriteTo($sw, [OutputMode]::Ansi)\r\n$sw.ToString()\r\n```\r\n\r\nIntegrating this into PowerShell is pretty straightforward except for integrating with existing color maps.\r\n\r\nCurrently, a PSHost can expose some colors to use:\r\n\r\n```powershell\r\nPS> $Host.PrivateData\r\nFormatAccentColor       : Green\r\nErrorAccentColor        : Cyan\r\nErrorForegroundColor    : Red\r\nErrorBackgroundColor    : -1\r\nWarningForegroundColor  : Yellow\r\nWarningBackgroundColor  : -1\r\nDebugForegroundColor    : Yellow\r\nDebugBackgroundColor    : -1\r\nVerboseForegroundColor  : Yellow\r\nVerboseBackgroundColor  : -1\r\nProgressForegroundColor : Black\r\nProgressBackgroundColor : Yellow\r\n```\r\n\r\nThese are all of type `[System.ConsoleColor]` which isn't used by `System.Commandline.Rendering`.  Whereas `$Host` has separate foreground and background colors, those are now distinct types `ForegroundColorSpan` and `BackgroundColorSpan`.  These existing members will be retained for compatibility reasons (cmdlets or scripts may query for those values expecting them to exist and be populated), but would not be used by PowerShell formatting.\r\n\r\n## Proposal\r\n\r\nAdd new member to `PrivateData` called `Style`.  `Style` would contain properties of type `ContentSpan` for\r\n\r\n- FormatAccentStyle = [ForegroundColorSpan]::Green()\r\n- ErrorAccentStyle = [ForegroundColorSpan]::Cyan()\r\n- ErrorStyle = [ForegroundColorSpan]::Red()\r\n- WarningStyle = [ForegroundColorSpan]::Yellow() + [StyleSpan]::BoldOn()\r\n- DebugStyle = [ForegroundColorSpan]::Yellow()\r\n- VerboseStyle = [ForegroundColorSpan]::Yellow() + [StyleSpan]::StandoutOn()  // this results in italics\r\n- ProgressStyle = [ForegroundColorSpan]::Black() + [BackgroundColorSpan]::Yellow()\r\n\r\n## Preference variable\r\n\r\nA `$PSOutputMode` variable will allow custom control with default value of `[OutputMode]::Auto`\r\n\r\n## Selective output of ANSI\r\n\r\nWhen an object of type `[ContentSpan]` is written to the pipeline, it goes through rendering. \r\nIf `$PSOutputMode` is `[OutputMode]::Auto`, then `[OutputMode]::Plaintext` is used when:\r\n\r\n- redirecting output\r\n- piping output to a native command\r\n\r\notherwise, the value of `$PSOutputMode` is used as-is\r\n\r\n",
    "created_at": "2020-05-01T13:53:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-622397641",
    "id": 622397641,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjM5NzY0MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 2,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622397641/reactions"
    },
    "updated_at": "2020-05-02T00:23:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622397641",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@SteveL-MSFT - While this might be excellent for providing a way to easily attribute strings, I'm not sure how this helps the prime motivation. How do we know whether we should emit the escape sequence or not. The example for creating the escape sequences is done _a priori_ - it's the `WriteTo` method as `ansi` which has decided to add the attributes. How would this work in PowerShell?  Also, the logic for table creation in PS is done against the content of the field. Would the field include those ansi sequences? This would cause difficulties when calculating the column width. If not, how does the association of attributes survive the table creation logic?",
    "created_at": "2020-05-01T23:25:37Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-622609346",
    "id": 622609346,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjYwOTM0Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622609346/reactions"
    },
    "updated_at": "2020-05-01T23:25:37Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622609346",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10214008?v=4",
      "events_url": "https://api.github.com/users/JamesWTruher/events{/privacy}",
      "followers_url": "https://api.github.com/users/JamesWTruher/followers",
      "following_url": "https://api.github.com/users/JamesWTruher/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesWTruher/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JamesWTruher",
      "id": 10214008,
      "login": "JamesWTruher",
      "node_id": "MDQ6VXNlcjEwMjE0MDA4",
      "organizations_url": "https://api.github.com/users/JamesWTruher/orgs",
      "received_events_url": "https://api.github.com/users/JamesWTruher/received_events",
      "repos_url": "https://api.github.com/users/JamesWTruher/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JamesWTruher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesWTruher/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JamesWTruher"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@JamesWTruher In our code, we would `WriteTo()` a string, but setting the `OutputMode` parameter dictates if it'll include the ANSI escape sequences or not.  The rendering happens before calling the `PSHost` implementations of `Write*()` methods.",
    "created_at": "2020-05-01T23:48:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-622613752",
    "id": 622613752,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjYxMzc1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622613752/reactions"
    },
    "updated_at": "2020-05-01T23:51:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622613752",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "I must have a play with the sample, but this sounds _exactly_ what I've been asking for. \r\nThe one challenge is that code written to use it won't be compatible with older PS versions, but that's unavoidable.  \r\n",
    "created_at": "2020-05-02T09:49:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-622927806",
    "id": 622927806,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMjkyNzgwNg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622927806/reactions"
    },
    "updated_at": "2020-05-02T09:49:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/622927806",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Stronly agree with the point that all coloring should happen in the _formatting_ system, i.e. in Format.ps1xml files, _not_ by changing the _data_ to include VT sequences.\r\n\r\nThis is how I implemented it for multiple modules:\r\n\r\n- https://github.com/pcgeek86/PSGitHub#pretty-formatting\r\n- https://github.com/felixfbecker/PowerGit#how-to-use\r\n- https://github.com/sourcegraph/PSSourcegraph#sourcegraph-for-powershell\n\n<blockquote><img src=\"https://repository-images.githubusercontent.com/54005887/23c31280-a405-11ea-8c42-c684c4672bbb\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/pcgeek86/PSGitHub\">pcgeek86/PSGitHub</a></strong></div><div>This PowerShell module contains commands to manage GitHub through its REST API. - pcgeek86/PSGitHub</div></blockquote>\n<blockquote><img src=\"https://avatars3.githubusercontent.com/u/10532611?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/felixfbecker/PowerGit\">felixfbecker/PowerGit</a></strong></div><div>Git with the power of the PowerShell object pipeline. For macOS, Linux and Windows. - felixfbecker/PowerGit</div></blockquote>\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/3979584?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicons/favicon.svg\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/sourcegraph/PSSourcegraph\">sourcegraph/PSSourcegraph</a></strong></div><div>Sourcegraph for PowerShell. Contribute to sourcegraph/PSSourcegraph development by creating an account on GitHub.</div></blockquote>",
    "created_at": "2020-06-04T10:57:43Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-638777312",
    "id": 638777312,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODc3NzMxMg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/638777312/reactions"
    },
    "updated_at": "2020-06-04T10:57:45Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/638777312",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "Also I'd LOVE to have `System.CommandLine.Rendering` always available in PowerShell and being able to use it in Format.ps1xml files to ensure control sequences are always properly terminated etc. It would be nice to have some of the API also available through declarative XML in addition to at runtime through .NET.\r\n\r\nOne thing I'm a bit confused by is that the API is \r\n```powershell\r\n[StyleSpan]::UnderlinedOn()\r\n\"text\"\r\n[StyleSpan]::UnderlinedOff()\r\n```\r\nas opposed to\r\n```powershell\r\n[StyleSpan]::Underlined(\"text\")\r\n```\r\n\r\nwhich is how e.g. [`chalk`](https://github.com/chalk/chalk) works. The latter API seems a lot less foot-gunny as you cannot forget to turn underline off again.",
    "created_at": "2020-06-10T09:59:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-641895352",
    "id": 641895352,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MTg5NTM1Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641895352/reactions"
    },
    "updated_at": "2020-06-10T09:59:35Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/641895352",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/10532611?v=4",
      "events_url": "https://api.github.com/users/felixfbecker/events{/privacy}",
      "followers_url": "https://api.github.com/users/felixfbecker/followers",
      "following_url": "https://api.github.com/users/felixfbecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/felixfbecker/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/felixfbecker",
      "id": 10532611,
      "login": "felixfbecker",
      "node_id": "MDQ6VXNlcjEwNTMyNjEx",
      "organizations_url": "https://api.github.com/users/felixfbecker/orgs",
      "received_events_url": "https://api.github.com/users/felixfbecker/received_events",
      "repos_url": "https://api.github.com/users/felixfbecker/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/felixfbecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/felixfbecker/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/felixfbecker"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@felixfbecker the `System.CommandLine.Rendering` APIs are not considered done.  So feel free to open an issue in [their repo](https://github.com/dotnet/command-line-api).  What you're suggesting makes sense to me.",
    "created_at": "2020-06-11T19:50:51Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-642894453",
    "id": 642894453,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjg5NDQ1Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642894453/reactions"
    },
    "updated_at": "2020-06-11T19:50:51Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/642894453",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "This has been replaced by https://github.com/PowerShell/PowerShell/issues/13071",
    "created_at": "2020-07-01T01:13:01Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/10811#issuecomment-652129033",
    "id": 652129033,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/10811",
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjEyOTAzMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/652129033/reactions"
    },
    "updated_at": "2020-07-01T01:13:01Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/652129033",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  }
]
