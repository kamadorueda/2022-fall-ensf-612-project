[
  {
    "author_association": "NONE",
    "body": "I normally install module from within the pwsh console:\r\nInstall-Module -Scope CurrentUser -Name AWSPowerShell.NetCore -Force;\r\n\r\nThen, in Linux, I realized that you do 2 tabs (not once), in order to display the list of commands:\r\nGet-IAM (tab)+(tab)\r\n\r\nOn the issue with Get-IAMRoles and Get-IAMRole:\r\nGet-IAMRole is a Cmdlet.\r\nGet-IAMRoles is an Alias for Get-IAMRoleList.\r\n\r\nI tested this with WSL/Ubuntu,  Ubuntu 18/04, and CentOS 7.\r\n\r\n![aws_core_2018-09-11_14-08-04](https://user-images.githubusercontent.com/19892435/45379173-58f25600-b5cd-11e8-8232-1763c3f75488.jpg)\r\n\r\n![aws_core2_2018-09-11_14-08-04](https://user-images.githubusercontent.com/19892435/45379206-67d90880-b5cd-11e8-8ff7-5dde84038b1b.jpg)\r\n\r\nIt did work for me until I exited and went back to pwsh.\r\n\r\n![aws_core3_2018-09-11_14-08-04](https://user-images.githubusercontent.com/19892435/45379914-5abd1900-b5cf-11e8-9ba8-c325a8ea75d4.jpg)\r\n\r\n![aws_core4_2018-09-11_14-08-04](https://user-images.githubusercontent.com/19892435/45379922-63155400-b5cf-11e8-8457-225948777abe.jpg)\r\n\r\nI think this need to be reported to **AWS PowerShell** forum as I don't see any of the same behavior with other installed modules.\r\n\r\n:)\r\n",
    "created_at": "2018-09-11T18:36:09Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420376329",
    "id": 420376329,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM3NjMyOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420376329/reactions"
    },
    "updated_at": "2018-09-11T18:36:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420376329",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "NONE",
    "body": "Yes! That works but there's no need to do the import module. It's only happening with that particular command.  Remember that Get-IAMRole is an Alias and not a Cmdlet. \r\n\r\nI'm not seen this behavior on any other installed modules. \r\n\r\nSomething is not in Synch when auto-loading the AWS module. So. it's possible is in the AWS module and not PowerShell Core.\r\nI think this should be also address at the AWS PowerShell forum.\r\n\r\n",
    "created_at": "2018-09-11T19:28:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420394219",
    "id": 420394219,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM5NDIxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420394219/reactions"
    },
    "updated_at": "2018-09-11T19:28:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420394219",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/19892435?v=4",
      "events_url": "https://api.github.com/users/MaximoTrinidad/events{/privacy}",
      "followers_url": "https://api.github.com/users/MaximoTrinidad/followers",
      "following_url": "https://api.github.com/users/MaximoTrinidad/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaximoTrinidad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/MaximoTrinidad",
      "id": 19892435,
      "login": "MaximoTrinidad",
      "node_id": "MDQ6VXNlcjE5ODkyNDM1",
      "organizations_url": "https://api.github.com/users/MaximoTrinidad/orgs",
      "received_events_url": "https://api.github.com/users/MaximoTrinidad/received_events",
      "repos_url": "https://api.github.com/users/MaximoTrinidad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/MaximoTrinidad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaximoTrinidad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/MaximoTrinidad"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Try running \r\n```powershell\r\nGet-Module -ListAvailable -Refresh\r\n```\r\nThis will refresh the module analysis cache which is what the autoloader uses to figure out what modules to load for a given command.",
    "created_at": "2018-09-12T00:55:22Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420475054",
    "id": 420475054,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDQ3NTA1NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420475054/reactions"
    },
    "updated_at": "2018-09-12T00:55:22Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420475054",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/6876108?v=4",
      "events_url": "https://api.github.com/users/BrucePay/events{/privacy}",
      "followers_url": "https://api.github.com/users/BrucePay/followers",
      "following_url": "https://api.github.com/users/BrucePay/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrucePay/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/BrucePay",
      "id": 6876108,
      "login": "BrucePay",
      "node_id": "MDQ6VXNlcjY4NzYxMDg=",
      "organizations_url": "https://api.github.com/users/BrucePay/orgs",
      "received_events_url": "https://api.github.com/users/BrucePay/received_events",
      "repos_url": "https://api.github.com/users/BrucePay/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/BrucePay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrucePay/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/BrucePay"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "@sg21210 does importing the module in the console by itself raise any errors?",
    "created_at": "2018-09-12T04:34:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420509011",
    "id": 420509011,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDUwOTAxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420509011/reactions"
    },
    "updated_at": "2018-09-12T04:34:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420509011",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "I understand all your message. I've been using linux machine having powershell and AWS tool also.\r\nProblem occurred while making a new docker image based on linux.\r\n\r\nHere are some notes. \r\n- After explicitly importing module by Import-Module, it works!\r\n- But, after relaunching powershell, the shell does not import it again. Everytime I launch it, I should import it to use AWS tool.\r\n- When I type `Get-Module -ListAvailable` (even without `-Refresh` tag),\r\n```powershell\r\nPS /> Get-Module -ListAvailable\r\n\r\n\r\n    Directory: /root/.local/share/powershell/Modules\r\n\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nBinary     3.3.343.0  AWSPowerShell.NetCore               {Add-ASInstances, Add-CTTag, Add-DPTags, Add-DSIpRoutes...}\r\n\r\n\r\n    Directory: /opt/microsoft/powershell/6.0.4/Modules\r\n\r\n\r\nModuleType Version    Name                                ExportedCommands\r\n---------- -------    ----                                ----------------\r\nManifest   1.1.0.0    Microsoft.PowerShell.Archive        {Compress-Archive, Expand-Archive}\r\nManifest   3.0.0.0    Microsoft.PowerShell.Host           {Start-Transcript, Stop-Transcript}\r\nManifest   3.1.0.0    Microsoft.PowerShell.Management     {Add-Content, Clear-Content, Clear-ItemProperty, Join-Path...}\r\nManifest   3.0.0.0    Microsoft.PowerShell.Security       {Get-Credential, Get-ExecutionPolicy, Set-ExecutionPolicy, ConvertFrom-SecureString...}\r\nManifest   3.1.0.0    Microsoft.PowerShell.Utility        {Format-List, Format-Custom, Format-Table, Format-Wide...}\r\nScript     1.1.7.0    PackageManagement                   {Find-Package, Get-Package, Get-PackageProvider, Get-PackageSource...}\r\nScript     1.6.0      PowerShellGet                       {Install-Module, Find-Module, Save-Module, Update-Module...}\r\nScript     0.0        PSDesiredStateConfiguration         {CheckResourceFound, Set-NodeResourceSource, Test-NodeResourceSource, Update-ModuleVersion...}\r\nScript     1.2        PSReadLine                          {Get-PSReadlineKeyHandler, Set-PSReadlineKeyHandler, Remove-PSReadlineKeyHandler, Get-PSReadlineOption...}\r\n\r\n\r\nPS /> Copy-S3Object\r\nCopy-S3Object : The term 'Copy-S3Object' is not recognized as the name of a cmdlet, function, script file, or operable program.\r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again.\r\nAt line:1 char:1\r\n+ Copy-S3Object\r\n+ ~~~~~~~~~~~~~\r\n+ CategoryInfo          : ObjectNotFound: (Copy-S3Object:String) [], CommandNotFoundException\r\n+ FullyQualifiedErrorId : CommandNotFoundException\r\n```\r\n- Module is correct, because when I type `Get-Module -ListAvailable | Import-Module`, it also works.\r\n```powershell\r\nPS /> Get-Module -ListAvailable | Import-Module\r\nWARNING: The names of some imported commands from the module 'PSDesiredStateConfiguration' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.\r\nPS /> Copy-S3Object\r\n\r\ncmdlet Copy-S3Object at command pipeline position 1\r\nSupply values for the following parameters:\r\nBucketName:\r\n```",
    "created_at": "2018-09-12T09:07:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420571493",
    "id": 420571493,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDU3MTQ5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420571493/reactions"
    },
    "updated_at": "2018-09-12T09:08:10Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420571493",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3349143?v=4",
      "events_url": "https://api.github.com/users/sg21210/events{/privacy}",
      "followers_url": "https://api.github.com/users/sg21210/followers",
      "following_url": "https://api.github.com/users/sg21210/following{/other_user}",
      "gists_url": "https://api.github.com/users/sg21210/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sg21210",
      "id": 3349143,
      "login": "sg21210",
      "node_id": "MDQ6VXNlcjMzNDkxNDM=",
      "organizations_url": "https://api.github.com/users/sg21210/orgs",
      "received_events_url": "https://api.github.com/users/sg21210/received_events",
      "repos_url": "https://api.github.com/users/sg21210/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sg21210/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sg21210/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sg21210"
    }
  },
  {
    "author_association": "NONE",
    "body": "Same problem is also occurred in OS X, and Ubuntu user. I'll attach the screenshot of Ubuntu case. I'm wondering if this could be a newer-version powershell/OS/SDK problem.\r\n![screenshot from 2018-09-12 18-18-37](https://user-images.githubusercontent.com/3349143/45415381-81a34a00-b6b8-11e8-826b-d6cee9dc0119.png)\r\n",
    "created_at": "2018-09-12T09:21:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420575834",
    "id": 420575834,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDU3NTgzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420575834/reactions"
    },
    "updated_at": "2018-09-12T10:11:43Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420575834",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3349143?v=4",
      "events_url": "https://api.github.com/users/sg21210/events{/privacy}",
      "followers_url": "https://api.github.com/users/sg21210/followers",
      "following_url": "https://api.github.com/users/sg21210/following{/other_user}",
      "gists_url": "https://api.github.com/users/sg21210/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sg21210",
      "id": 3349143,
      "login": "sg21210",
      "node_id": "MDQ6VXNlcjMzNDkxNDM=",
      "organizations_url": "https://api.github.com/users/sg21210/orgs",
      "received_events_url": "https://api.github.com/users/sg21210/received_events",
      "repos_url": "https://api.github.com/users/sg21210/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sg21210/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sg21210/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sg21210"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "In their module manifest they only explicitly list aliases.  The `CmdletsToExport` field is a wildcard statement\r\n\r\n```raw\r\n# Cmdlets to export from this module\r\nCmdletsToExport = '*-*'\r\n```\r\n\r\nThey need to explicitly list exported cmdlets as well.",
    "created_at": "2018-09-13T12:48:31Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-420994385",
    "id": 420994385,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDk5NDM4NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420994385/reactions"
    },
    "updated_at": "2018-09-13T12:48:31Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/420994385",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "NONE",
    "body": "As noted above, this is caused by us (AWS) currently not explicitly listing the cmdlets in the module in the manifest. \r\n\r\nUntil a couple months ago we did in fact enumerate the cmdlet names in the manifest but had to switch to using wildcards when we went through 4000 cmdlets in the module. This caused the gallery publishing to reject the module as it limited modules to under 4000 cmdlets in the export statement. We considered listing only 'the most important' cmdlets but couldn't come up with a single list - every service seemed to be important to someone :-). In the face of this, switching back to wildcards and noting the issue in the release notes at the time seemed the best approach.\r\n\r\nNow, we realize 4000+ cmdlets is a lot - and the growth in service APIs since we shipped v1.0 has surprised us too. We have backlog plans to re-modularize to per-service modules but have not yet been able to schedule the work. \r\n\r\nInterestingly, reverting to wildcards actually improved the import time for the module too - which now that we have PowerShell support in Lambda we're not too keen on making worse either. Realistically I think a fix will need to wait until we can get the re-modularization work scheduled. I'll bring this discussion to the wider attention of the team here at AWS and see what we can do to bump the priority.",
    "created_at": "2018-09-26T23:52:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-424907458",
    "id": 424907458,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDkwNzQ1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424907458/reactions"
    },
    "updated_at": "2018-09-26T23:55:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424907458",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/2090449?v=4",
      "events_url": "https://api.github.com/users/steveataws/events{/privacy}",
      "followers_url": "https://api.github.com/users/steveataws/followers",
      "following_url": "https://api.github.com/users/steveataws/following{/other_user}",
      "gists_url": "https://api.github.com/users/steveataws/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/steveataws",
      "id": 2090449,
      "login": "steveataws",
      "node_id": "MDQ6VXNlcjIwOTA0NDk=",
      "organizations_url": "https://api.github.com/users/steveataws/orgs",
      "received_events_url": "https://api.github.com/users/steveataws/received_events",
      "repos_url": "https://api.github.com/users/steveataws/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/steveataws/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/steveataws/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/steveataws"
    }
  },
  {
    "author_association": "NONE",
    "body": "@steveataws Thank you. I didn't know the history so I couldn't understand what @SeeminglyScience mentioned above at first, but now I understand.\r\n\r\nHope to get fixed soon :)",
    "created_at": "2018-09-27T03:11:52Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-424944538",
    "id": 424944538,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk0NDUzOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424944538/reactions"
    },
    "updated_at": "2018-09-27T05:11:56Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424944538",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/3349143?v=4",
      "events_url": "https://api.github.com/users/sg21210/events{/privacy}",
      "followers_url": "https://api.github.com/users/sg21210/followers",
      "following_url": "https://api.github.com/users/sg21210/following{/other_user}",
      "gists_url": "https://api.github.com/users/sg21210/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/sg21210",
      "id": 3349143,
      "login": "sg21210",
      "node_id": "MDQ6VXNlcjMzNDkxNDM=",
      "organizations_url": "https://api.github.com/users/sg21210/orgs",
      "received_events_url": "https://api.github.com/users/sg21210/received_events",
      "repos_url": "https://api.github.com/users/sg21210/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/sg21210/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sg21210/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/sg21210"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Ah! Ok that all makes sense. Going to close as external resolution.",
    "created_at": "2018-09-27T03:59:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-424950921",
    "id": 424950921,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk1MDkyMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424950921/reactions"
    },
    "updated_at": "2018-09-27T03:59:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/424950921",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7009879?v=4",
      "events_url": "https://api.github.com/users/rjmholt/events{/privacy}",
      "followers_url": "https://api.github.com/users/rjmholt/followers",
      "following_url": "https://api.github.com/users/rjmholt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rjmholt/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rjmholt",
      "id": 7009879,
      "login": "rjmholt",
      "node_id": "MDQ6VXNlcjcwMDk4Nzk=",
      "organizations_url": "https://api.github.com/users/rjmholt/orgs",
      "received_events_url": "https://api.github.com/users/rjmholt/received_events",
      "repos_url": "https://api.github.com/users/rjmholt/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rjmholt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rjmholt/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rjmholt"
    }
  },
  {
    "author_association": "NONE",
    "body": "As a note for anyone accessing this in the future, you can run the following command and get access to the cmdlets (After installing the module):\r\n\r\n```PowerShell\r\nGet-Command -Module AWSPowerShell.NetCore | Out-Null\r\n```\r\n\r\nThe reason for the pipe into `Out-Null` is because (as noted above) there are more than 4000 exports.  This allowed me to access `Get-IAMAccessKey` from within the core environment.\r\n\r\nHope this helps anyone Googling this in the future!\r\n\r\n(Tagging @steveataws to bring this to his attention as a possible documentation improvement for the AWS team)",
    "created_at": "2018-11-14T16:11:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-438719024",
    "id": 438719024,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODcxOTAyNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 2,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/438719024/reactions"
    },
    "updated_at": "2018-11-15T13:21:30Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/438719024",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17338491?v=4",
      "events_url": "https://api.github.com/users/LazerFX/events{/privacy}",
      "followers_url": "https://api.github.com/users/LazerFX/followers",
      "following_url": "https://api.github.com/users/LazerFX/following{/other_user}",
      "gists_url": "https://api.github.com/users/LazerFX/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LazerFX",
      "id": 17338491,
      "login": "LazerFX",
      "node_id": "MDQ6VXNlcjE3MzM4NDkx",
      "organizations_url": "https://api.github.com/users/LazerFX/orgs",
      "received_events_url": "https://api.github.com/users/LazerFX/received_events",
      "repos_url": "https://api.github.com/users/LazerFX/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LazerFX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LazerFX/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LazerFX"
    }
  },
  {
    "author_association": "NONE",
    "body": "Not to bring a closed issue back into discussion, but why would you force the module import with `Get-Command` instead of just running `Import-Module AWSPowerShell.NetCore` @LazerFX ? I see zero value in that from a high-level and you're ultimately costing more by doing that if you're not going to utilize the output of `Get-Command`. That's literally what `Import-Module` is for",
    "created_at": "2019-03-25T18:18:50Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476319270",
    "id": 476319270,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjMxOTI3MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476319270/reactions"
    },
    "updated_at": "2019-03-25T18:18:50Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476319270",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12724445?v=4",
      "events_url": "https://api.github.com/users/scrthq/events{/privacy}",
      "followers_url": "https://api.github.com/users/scrthq/followers",
      "following_url": "https://api.github.com/users/scrthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/scrthq/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scrthq",
      "id": 12724445,
      "login": "scrthq",
      "node_id": "MDQ6VXNlcjEyNzI0NDQ1",
      "organizations_url": "https://api.github.com/users/scrthq/orgs",
      "received_events_url": "https://api.github.com/users/scrthq/received_events",
      "repos_url": "https://api.github.com/users/scrthq/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scrthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scrthq/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scrthq"
    }
  },
  {
    "author_association": "NONE",
    "body": "@scrthq Performance.  We have a small framework designed to run on a CI/CD platform... As we don't know which command is to be run, each has to ensure its own dependencies are captured... Calling get command is multiple times faster than get command, and enables the whole pipeline to run noticeably faster. If there's a better way, I'd love to know - not a PowerShell expert, simply a coder trying to keep up ;-)",
    "created_at": "2019-03-25T18:53:58Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476332078",
    "id": 476332078,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjMzMjA3OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476332078/reactions"
    },
    "updated_at": "2019-03-25T18:53:58Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476332078",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17338491?v=4",
      "events_url": "https://api.github.com/users/LazerFX/events{/privacy}",
      "followers_url": "https://api.github.com/users/LazerFX/followers",
      "following_url": "https://api.github.com/users/LazerFX/following{/other_user}",
      "gists_url": "https://api.github.com/users/LazerFX/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LazerFX",
      "id": 17338491,
      "login": "LazerFX",
      "node_id": "MDQ6VXNlcjE3MzM4NDkx",
      "organizations_url": "https://api.github.com/users/LazerFX/orgs",
      "received_events_url": "https://api.github.com/users/LazerFX/received_events",
      "repos_url": "https://api.github.com/users/LazerFX/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LazerFX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LazerFX/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LazerFX"
    }
  },
  {
    "author_association": "NONE",
    "body": "@LazerFX - the reason that `Get-Command -Module $module` works is because it's force importing the module underneath. You're effectively running `Import-Module $module; Get-Command -Module $module`, so if you don't need the output of `Get-Command`, then just simply run `Import-Module`.\r\n\r\nIn fact, running Import-Module is significantly faster than running Get-Command and piping to Out-Null due to no pipeline output that needs to subsequently be squashed:\r\n\r\n\r\n```powershell\r\n\"Get-Command time: {0}\" -f (Measure-Command {\r\n    pwsh -noprofile -C \"Get-Command -Module AWSPowerShell.NetCore | Out-Null\"\r\n}).ToString()\r\n\"Import-Module time: {0}\" -f (Measure-Command {\r\n    pwsh -noprofile -C \"Import-Mdule AWSPowerShell.NetCore\"\r\n}).ToString()\r\n\r\n# Output:\r\nGet-Command time: 00:00:06.7730225\r\nImport-Module time: 00:00:00.8841475\r\n```\r\n\r\n",
    "created_at": "2019-03-25T19:12:35Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476338519",
    "id": 476338519,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjMzODUxOQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476338519/reactions"
    },
    "updated_at": "2019-03-25T19:26:39Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476338519",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12724445?v=4",
      "events_url": "https://api.github.com/users/scrthq/events{/privacy}",
      "followers_url": "https://api.github.com/users/scrthq/followers",
      "following_url": "https://api.github.com/users/scrthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/scrthq/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scrthq",
      "id": 12724445,
      "login": "scrthq",
      "node_id": "MDQ6VXNlcjEyNzI0NDQ1",
      "organizations_url": "https://api.github.com/users/scrthq/orgs",
      "received_events_url": "https://api.github.com/users/scrthq/received_events",
      "repos_url": "https://api.github.com/users/scrthq/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scrthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scrthq/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scrthq"
    }
  },
  {
    "author_association": "NONE",
    "body": "That's weird, in Azure DevOps Pipelines, the time difference between import-module and get-command is significant, we trimmed nearly 1 minute off our runtime by using get-command. I don't profess to understand what's going on under the hood, and the results did seem odd, but we didn't have time to properly investigate (a speedup is a speedup). I'm a C# developer, and I'll freely admit PowerShell performance isn't something I've worked on a lot, so always happy to learn. We'll reinvestigate the performance once we've deployed the initial version, and see what we can do.",
    "created_at": "2019-03-25T19:47:00Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476350105",
    "id": 476350105,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjM1MDEwNQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476350105/reactions"
    },
    "updated_at": "2019-03-25T19:47:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476350105",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17338491?v=4",
      "events_url": "https://api.github.com/users/LazerFX/events{/privacy}",
      "followers_url": "https://api.github.com/users/LazerFX/followers",
      "following_url": "https://api.github.com/users/LazerFX/following{/other_user}",
      "gists_url": "https://api.github.com/users/LazerFX/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LazerFX",
      "id": 17338491,
      "login": "LazerFX",
      "node_id": "MDQ6VXNlcjE3MzM4NDkx",
      "organizations_url": "https://api.github.com/users/LazerFX/orgs",
      "received_events_url": "https://api.github.com/users/LazerFX/received_events",
      "repos_url": "https://api.github.com/users/LazerFX/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LazerFX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LazerFX/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LazerFX"
    }
  },
  {
    "author_association": "NONE",
    "body": "Very strange! Speedup is a speedup indeed, if that works in your environment, so I get that.\r\n\r\nI'd be curious how the following task script runs in Azure DevOps, will test shortly:\r\n\r\n```powershell\r\nswitch ($PSVersionTable.PSVersion.Major) {\r\n    6 {\r\n        $module = 'AWSPowerShell.NetCore'\r\n        $engine = 'pwsh'\r\n    }\r\n    default {\r\n        $module = 'AWSPowerShell'\r\n        $engine = 'powershell'\r\n    }\r\n}\r\nInstall-Module $module -Repository PSGallery -Force\r\n\"Get-Command time: {0}\" -f (Measure-Command {\r\n    & $engine -noprofile -C \"Get-Command -Module $module | Out-Null\"\r\n}).ToString()\r\n\"Import-Module time: {0}\" -f (Measure-Command {\r\n    & $engine -noprofile -C \"Import-Module $module\"\r\n}).ToString()\r\n```",
    "created_at": "2019-03-25T20:00:46Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476354727",
    "id": 476354727,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjM1NDcyNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476354727/reactions"
    },
    "updated_at": "2019-03-25T20:09:48Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476354727",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12724445?v=4",
      "events_url": "https://api.github.com/users/scrthq/events{/privacy}",
      "followers_url": "https://api.github.com/users/scrthq/followers",
      "following_url": "https://api.github.com/users/scrthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/scrthq/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scrthq",
      "id": 12724445,
      "login": "scrthq",
      "node_id": "MDQ6VXNlcjEyNzI0NDQ1",
      "organizations_url": "https://api.github.com/users/scrthq/orgs",
      "received_events_url": "https://api.github.com/users/scrthq/received_events",
      "repos_url": "https://api.github.com/users/scrthq/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scrthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scrthq/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scrthq"
    }
  },
  {
    "author_association": "NONE",
    "body": "@LazerFX ¯\\\\\\_(ツ)\\_/¯ - still getting better speed through Import-Module vs Get-Command in Azure Pipelines, both Windows PS and PS Core, for what it's worth:\r\n\r\n![image](https://user-images.githubusercontent.com/12724445/55027952-83898680-4fd4-11e9-95d2-36c982b9fec2.png)\r\n\r\n![image](https://user-images.githubusercontent.com/12724445/55027973-9308cf80-4fd4-11e9-82aa-2dd4c8ab13a7.png)\r\n",
    "created_at": "2019-03-26T19:37:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476814993",
    "id": 476814993,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjgxNDk5Mw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476814993/reactions"
    },
    "updated_at": "2019-03-26T19:37:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476814993",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12724445?v=4",
      "events_url": "https://api.github.com/users/scrthq/events{/privacy}",
      "followers_url": "https://api.github.com/users/scrthq/followers",
      "following_url": "https://api.github.com/users/scrthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/scrthq/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scrthq",
      "id": 12724445,
      "login": "scrthq",
      "node_id": "MDQ6VXNlcjEyNzI0NDQ1",
      "organizations_url": "https://api.github.com/users/scrthq/orgs",
      "received_events_url": "https://api.github.com/users/scrthq/received_events",
      "repos_url": "https://api.github.com/users/scrthq/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scrthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scrthq/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scrthq"
    }
  },
  {
    "author_association": "NONE",
    "body": "Very interesting. Time for us to re-evaluate, I think. Thanks for the details - I'm on holiday this week, but we'll certainly look into it.",
    "created_at": "2019-03-26T21:02:15Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-476851147",
    "id": 476851147,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njg1MTE0Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 1,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476851147/reactions"
    },
    "updated_at": "2019-03-26T21:02:15Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/476851147",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/17338491?v=4",
      "events_url": "https://api.github.com/users/LazerFX/events{/privacy}",
      "followers_url": "https://api.github.com/users/LazerFX/followers",
      "following_url": "https://api.github.com/users/LazerFX/following{/other_user}",
      "gists_url": "https://api.github.com/users/LazerFX/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/LazerFX",
      "id": 17338491,
      "login": "LazerFX",
      "node_id": "MDQ6VXNlcjE3MzM4NDkx",
      "organizations_url": "https://api.github.com/users/LazerFX/orgs",
      "received_events_url": "https://api.github.com/users/LazerFX/received_events",
      "repos_url": "https://api.github.com/users/LazerFX/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/LazerFX/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LazerFX/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/LazerFX"
    }
  },
  {
    "author_association": "NONE",
    "body": "I'm unable to get this to work even when running `Get-Command -Module AWSPowerShell.NetCore | Out-Null`.  I'm running pwsh in a CodeBuild image in AWS.   I'm getting this message: `The term 'Get-S3Bucket' is not recognized as the name of a cmdlet, function, script file, or operable program. \r\nCheck the spelling of the name, or if a path was included, verify that the path is correct and try again. `.  ",
    "created_at": "2019-08-24T19:36:03Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-524575399",
    "id": 524575399,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDU3NTM5OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524575399/reactions"
    },
    "updated_at": "2019-08-24T19:36:03Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524575399",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/805791?v=4",
      "events_url": "https://api.github.com/users/ryanpagel/events{/privacy}",
      "followers_url": "https://api.github.com/users/ryanpagel/followers",
      "following_url": "https://api.github.com/users/ryanpagel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanpagel/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ryanpagel",
      "id": 805791,
      "login": "ryanpagel",
      "node_id": "MDQ6VXNlcjgwNTc5MQ==",
      "organizations_url": "https://api.github.com/users/ryanpagel/orgs",
      "received_events_url": "https://api.github.com/users/ryanpagel/received_events",
      "repos_url": "https://api.github.com/users/ryanpagel/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ryanpagel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanpagel/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ryanpagel"
    }
  },
  {
    "author_association": "NONE",
    "body": "@ryanpagel - probably best to bring that up on the AWS repo for that module, since it's not explicitly a PowerShell issue/bug - https://github.com/aws/aws-tools-for-powershell\n\n<blockquote><img src=\"https://avatars2.githubusercontent.com/u/2232217?s=400&v=4\" width=\"48\" align=\"right\"><div><img src=\"https://github.githubassets.com/favicon.ico\" height=\"14\"> GitHub</div><div><strong><a href=\"https://github.com/aws/aws-tools-for-powershell\">aws/aws-tools-for-powershell</a></strong></div><div>The AWS Tools for PowerShell lets developers and administrators manage their AWS services from the PowerShell scripting environment. - aws/aws-tools-for-powershell</div></blockquote>",
    "created_at": "2019-08-25T05:39:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/7759#issuecomment-524602234",
    "id": 524602234,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/7759",
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDYwMjIzNA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524602234/reactions"
    },
    "updated_at": "2019-08-25T05:39:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/524602234",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/12724445?v=4",
      "events_url": "https://api.github.com/users/scrthq/events{/privacy}",
      "followers_url": "https://api.github.com/users/scrthq/followers",
      "following_url": "https://api.github.com/users/scrthq/following{/other_user}",
      "gists_url": "https://api.github.com/users/scrthq/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/scrthq",
      "id": 12724445,
      "login": "scrthq",
      "node_id": "MDQ6VXNlcjEyNzI0NDQ1",
      "organizations_url": "https://api.github.com/users/scrthq/orgs",
      "received_events_url": "https://api.github.com/users/scrthq/received_events",
      "repos_url": "https://api.github.com/users/scrthq/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/scrthq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scrthq/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/scrthq"
    }
  }
]
