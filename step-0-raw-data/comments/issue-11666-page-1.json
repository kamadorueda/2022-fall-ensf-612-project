[
  {
    "author_association": "COLLABORATOR",
    "body": "I think the design comes from the scenario - user has a script and wrap one line in the cmdlet to see the line impact.",
    "created_at": "2020-01-23T17:55:20Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11666#issuecomment-577795764",
    "id": 577795764,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11666",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzc5NTc2NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577795764/reactions"
    },
    "updated_at": "2020-01-23T17:55:20Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577795764",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/22290914?v=4",
      "events_url": "https://api.github.com/users/iSazonov/events{/privacy}",
      "followers_url": "https://api.github.com/users/iSazonov/followers",
      "following_url": "https://api.github.com/users/iSazonov/following{/other_user}",
      "gists_url": "https://api.github.com/users/iSazonov/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/iSazonov",
      "id": 22290914,
      "login": "iSazonov",
      "node_id": "MDQ6VXNlcjIyMjkwOTE0",
      "organizations_url": "https://api.github.com/users/iSazonov/orgs",
      "received_events_url": "https://api.github.com/users/iSazonov/received_events",
      "repos_url": "https://api.github.com/users/iSazonov/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/iSazonov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iSazonov/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/iSazonov"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "That's a good point, @iSazonov  - I hadn't considered that scenario, I was looking at it from the perspective of \"measure execution time of a self-contained piece of code\", which is how I personally use it.\r\n\r\nThat said, even dot-sourced use of `Measure-Command` is of limited use, given that it suppresses the script block's output.\r\n\r\nThat is, you can't just wrap an existing line in `Measure-Command` and _generally_ expect the script to function normally (except for the additional `[timespan]` output with the timing result).\r\n\r\nIt would be a different story, if `Measure-Command` passed output _through_ and instead used, say, the information stream to report the timing.\r\n\r\nThe question is what the backward-compatibility impact is, but I can see two distinct modes as being helpful:\r\n\r\n* _with_  a hypothetical `-PassThru` switch:\r\n   * dot-source the script block\r\n   * pass the output through\r\n   * output the timing result (`[timespan]`) via the information stream (where it can be retrieved as such via the `System.Management.Automation.InformationRecord`'s instances `.MessageData` property), or, perhaps with an always-on verbose message?\r\n\r\n* _without_ that switch:\r\n  * Like the current behavior, except that the script block will run in a _child_ scope.\r\n",
    "created_at": "2020-01-23T19:19:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11666#issuecomment-577833088",
    "id": 577833088,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11666",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzgzMzA4OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577833088/reactions"
    },
    "updated_at": "2020-01-23T19:19:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577833088",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "The scenarios where it'll actually impact the time aren't super common, and changing this won't exactly make `Measure-Command` particularly reliable.  I don't think the breaking change is worth it personally.",
    "created_at": "2020-01-23T19:32:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11666#issuecomment-577838837",
    "id": 577838837,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11666",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzgzODgzNw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577838837/reactions"
    },
    "updated_at": "2020-01-23T19:32:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577838837",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "@SeeminglyScience. Based on your clarification in  https://github.com/PowerShell/PowerShell/issues/11663#issuecomment-577799560, I agree that the performance impact shouldn't drive the decision (not least because https://github.com/PowerShell/PowerShell/issues/8911#issuecomment-464954324 outlines a potential remedy).\r\n\r\nThe - at least to me - potentially unexpected pollution of the caller's scope is more problematic, however.\r\n\r\nAt the very least, documenting the behavior is certainly called for - see https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5345\r\n\r\nAssuming a user is aware of the problem, they can always do `Measure-Command { & { $foo = 'hi' } }` to force running in a child scope, but, needless to say, that is awkward.\r\n\r\nSo at the second least, if you will, a `-NewScope` switch would be helpful.\r\n\r\nNote that this would be the _inverse_ of `Invoke-Command`'s behavior, which runs a script block in a child scope by default, and offers `-NoNewScope` as an opt-in for dot-sourcing - and that inversion is another reason why the current behavior is problematic (as are other inconsistencies in scoping behavior - see #7157)\r\n\r\n",
    "created_at": "2020-01-23T19:55:33Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11666#issuecomment-577847865",
    "id": 577847865,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11666",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzg0Nzg2NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577847865/reactions"
    },
    "updated_at": "2020-01-23T19:55:33Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577847865",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "> @SeeminglyScience. Based on your clarification in [#11663 (comment)](https://github.com/PowerShell/PowerShell/issues/11663#issuecomment-577799560), I agree that the performance impact shouldn't drive the decision (not least because [#8911 (comment)](https://github.com/PowerShell/PowerShell/issues/8911#issuecomment-464954324) outlines a potential remedy).\r\n> \r\n> The - at least to me - potentially unexpected pollution of the caller's scope is more problematic, however.\r\n\r\nEh, `Invoke-Command` is the only default one I know of that doesn't (assuming the invocation happens immediately and in the current process).\r\n> \r\n> At the very least, documenting the behavior is certainly called for - see [MicrosoftDocs/PowerShell-Docs#5345](https://github.com/MicrosoftDocs/PowerShell-Docs/issues/5345)\r\n\r\nDefinitely.\r\n\r\n> So at the second least, if you will, a `-NewScope` switch would be helpful.\r\n>\r\n> Note that this would be the _inverse_ of `Invoke-Command`'s behavior, which runs a script block in a child scope by default, and offers `-NoNewScope` as an opt-in for dot-sourcing - and that inversion is another reason why the current behavior is problematic (as are other inconsistencies in scoping behavior - see #7157)\r\n\r\nI think it's infrequently enough required that the slight awkwardness of wrapping the block isn't that big of a deal.  The `Invoke-Command` parameter makes sense because you can't undo creating a new scope through the language, like you can the inverse.",
    "created_at": "2020-01-23T20:11:36Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11666#issuecomment-577855077",
    "id": 577855077,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11666",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzg1NTA3Nw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577855077/reactions"
    },
    "updated_at": "2020-01-23T20:11:36Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577855077",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/24977523?v=4",
      "events_url": "https://api.github.com/users/SeeminglyScience/events{/privacy}",
      "followers_url": "https://api.github.com/users/SeeminglyScience/followers",
      "following_url": "https://api.github.com/users/SeeminglyScience/following{/other_user}",
      "gists_url": "https://api.github.com/users/SeeminglyScience/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SeeminglyScience",
      "id": 24977523,
      "login": "SeeminglyScience",
      "node_id": "MDQ6VXNlcjI0OTc3NTIz",
      "organizations_url": "https://api.github.com/users/SeeminglyScience/orgs",
      "received_events_url": "https://api.github.com/users/SeeminglyScience/received_events",
      "repos_url": "https://api.github.com/users/SeeminglyScience/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SeeminglyScience/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SeeminglyScience/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SeeminglyScience"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "I think the primary problem - at least to me - is that I do expect child-scoped invocation and no side effects.\r\n\r\nI see your point re `Invoke-Command` being the only one (and the technical necessity for it), still I think it's generally more sensible to default to invocation in a child scope, except in cases intimately connected to the caller's scope (`%`, `?`, calculated properties).\r\n\r\nFair enough, though.\r\n\r\nI've added the nested-block technique to the docs issue, and I'm closing this.\r\n\r\n\r\n\r\n",
    "created_at": "2020-01-23T20:46:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/11666#issuecomment-577869180",
    "id": 577869180,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/11666",
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Nzg2OTE4MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577869180/reactions"
    },
    "updated_at": "2020-01-23T20:46:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/577869180",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/588825?v=4",
      "events_url": "https://api.github.com/users/mklement0/events{/privacy}",
      "followers_url": "https://api.github.com/users/mklement0/followers",
      "following_url": "https://api.github.com/users/mklement0/following{/other_user}",
      "gists_url": "https://api.github.com/users/mklement0/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/mklement0",
      "id": 588825,
      "login": "mklement0",
      "node_id": "MDQ6VXNlcjU4ODgyNQ==",
      "organizations_url": "https://api.github.com/users/mklement0/orgs",
      "received_events_url": "https://api.github.com/users/mklement0/received_events",
      "repos_url": "https://api.github.com/users/mklement0/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/mklement0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mklement0/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/mklement0"
    }
  }
]
