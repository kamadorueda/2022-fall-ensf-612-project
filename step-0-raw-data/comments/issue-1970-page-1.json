[
  {
    "author_association": "COLLABORATOR",
    "body": "> if !(expr) { statements\\* } \n> if -not (expr) { statements\\* }\n\nI like Derp's idea at first blush.  It would apply to many more cases than just Test-Path.\n",
    "created_at": "2016-08-20T00:35:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-241166390",
    "id": 241166390,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE2NjM5MA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 6,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 6,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241166390/reactions"
    },
    "updated_at": "2016-08-20T00:35:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241166390",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/5177512?v=4",
      "events_url": "https://api.github.com/users/rkeithhill/events{/privacy}",
      "followers_url": "https://api.github.com/users/rkeithhill/followers",
      "following_url": "https://api.github.com/users/rkeithhill/following{/other_user}",
      "gists_url": "https://api.github.com/users/rkeithhill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/rkeithhill",
      "id": 5177512,
      "login": "rkeithhill",
      "node_id": "MDQ6VXNlcjUxNzc1MTI=",
      "organizations_url": "https://api.github.com/users/rkeithhill/orgs",
      "received_events_url": "https://api.github.com/users/rkeithhill/received_events",
      "repos_url": "https://api.github.com/users/rkeithhill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/rkeithhill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rkeithhill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/rkeithhill"
    }
  },
  {
    "author_association": "NONE",
    "body": "Combining them together, we'll have:\n\n``` powershell\nif -not (exist $path) { ... }\n```\n\nor if we get rid of the redundant dash:\n\n``` powershell\nif not (exist $path) { ... }\n```\n\nThe `exist` alias should work for any item, not just file paths, and never throw errors. Only return true or false.\n",
    "created_at": "2016-08-20T03:06:18Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-241175176",
    "id": 241175176,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE3NTE3Ng==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241175176/reactions"
    },
    "updated_at": "2016-08-20T05:50:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241175176",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/767147?v=4",
      "events_url": "https://api.github.com/users/omidkrad/events{/privacy}",
      "followers_url": "https://api.github.com/users/omidkrad/followers",
      "following_url": "https://api.github.com/users/omidkrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/omidkrad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/omidkrad",
      "id": 767147,
      "login": "omidkrad",
      "node_id": "MDQ6VXNlcjc2NzE0Nw==",
      "organizations_url": "https://api.github.com/users/omidkrad/orgs",
      "received_events_url": "https://api.github.com/users/omidkrad/received_events",
      "repos_url": "https://api.github.com/users/omidkrad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/omidkrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omidkrad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/omidkrad"
    }
  },
  {
    "author_association": "NONE",
    "body": "The dash for \n\n```\nif -not (expr) {}\n```\n\nwould likely remain. It's consistent with `switch -regex`, etc., for example (i.e. there's already precedent for having argument-like things for statements). When implemented the same, this would automatically allow you to shorten it as long as it remains unambiguous:\n\n```\nif -n (expr) {}\n```\n\nTechnically this doesn't save any keystrokes, though, but I think it stands out more than the version with `!`.\n\nAs for the aliases, I don't think they are needed by default. People are free to define them if they feel `Test-Path` is too complicated, but I know at least one PowerShell user who needs `Test-Path` maybe once a year, and pretty much never interactively. Then there is the whole issue whether it should be `exist` or `exists`.\n",
    "created_at": "2016-08-20T07:00:49Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-241184003",
    "id": 241184003,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE4NDAwMw==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241184003/reactions"
    },
    "updated_at": "2016-08-20T07:00:49Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241184003",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/1692688?v=4",
      "events_url": "https://api.github.com/users/ygra/events{/privacy}",
      "followers_url": "https://api.github.com/users/ygra/followers",
      "following_url": "https://api.github.com/users/ygra/following{/other_user}",
      "gists_url": "https://api.github.com/users/ygra/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/ygra",
      "id": 1692688,
      "login": "ygra",
      "node_id": "MDQ6VXNlcjE2OTI2ODg=",
      "organizations_url": "https://api.github.com/users/ygra/orgs",
      "received_events_url": "https://api.github.com/users/ygra/received_events",
      "repos_url": "https://api.github.com/users/ygra/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/ygra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ygra/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/ygra"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "`if -not (expr) { ... }` would indeed be consistent with the `switch` statement grammar.\n\nAn alternative would be to introduce a negated `if` statement like perl's `unless`:\n\n```\nunless (expr) { ... } else { ... }\n```\n",
    "created_at": "2016-08-20T12:31:06Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-241197662",
    "id": 241197662,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTE5NzY2Mg==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241197662/reactions"
    },
    "updated_at": "2016-08-20T12:31:06Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/241197662",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "MEMBER",
    "body": "@omidkrad , good idea, I suggest writing this up as an RFC (https://github.com/powershell/powershell-rfc)\n",
    "created_at": "2016-09-29T21:50:47Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-250601549",
    "id": 250601549,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDYwMTU0OQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/250601549/reactions"
    },
    "updated_at": "2016-09-29T21:50:47Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/250601549",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/11859881?v=4",
      "events_url": "https://api.github.com/users/SteveL-MSFT/events{/privacy}",
      "followers_url": "https://api.github.com/users/SteveL-MSFT/followers",
      "following_url": "https://api.github.com/users/SteveL-MSFT/following{/other_user}",
      "gists_url": "https://api.github.com/users/SteveL-MSFT/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/SteveL-MSFT",
      "id": 11859881,
      "login": "SteveL-MSFT",
      "node_id": "MDQ6VXNlcjExODU5ODgx",
      "organizations_url": "https://api.github.com/users/SteveL-MSFT/orgs",
      "received_events_url": "https://api.github.com/users/SteveL-MSFT/received_events",
      "repos_url": "https://api.github.com/users/SteveL-MSFT/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/SteveL-MSFT/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SteveL-MSFT/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/SteveL-MSFT"
    }
  },
  {
    "author_association": "NONE",
    "body": "Congrats on PowerShell 7 release. I wanted to bump this up to be noticed. This is basically two different suggestions:\r\n\r\n1. Support the \"if not\" syntax:\r\n    ```powershell\r\n    if !(expr) { statements* }\r\n    if -not (expr) { statements* }\r\n    ```\r\n\r\n2. Include the `exist` alias by default:\r\n   ```powershell\r\n   Set-Alias exist Test-Path -Option \"Constant, AllScope\"\r\n   ```\r\n\r\nWith these two we can do:\r\n```powershell\r\nif (exist $path) { ... }\r\nif !(exist $path) { ... }\r\nif -not (exist $path) { ... }\r\n```",
    "created_at": "2020-05-14T06:00:42Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-628405768",
    "id": 628405768,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODQwNTc2OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628405768/reactions"
    },
    "updated_at": "2020-05-14T06:00:42Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628405768",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/767147?v=4",
      "events_url": "https://api.github.com/users/omidkrad/events{/privacy}",
      "followers_url": "https://api.github.com/users/omidkrad/followers",
      "following_url": "https://api.github.com/users/omidkrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/omidkrad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/omidkrad",
      "id": 767147,
      "login": "omidkrad",
      "node_id": "MDQ6VXNlcjc2NzE0Nw==",
      "organizations_url": "https://api.github.com/users/omidkrad/orgs",
      "received_events_url": "https://api.github.com/users/omidkrad/received_events",
      "repos_url": "https://api.github.com/users/omidkrad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/omidkrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omidkrad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/omidkrad"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Personally I don't see a ton of value in adding that as a default alias, but maybe that's just me. 🙂 \r\n\r\nHowever, I do like the idea of an `if !(condition)` / `if -not (condition)` syntax to simplify negated conditions. Another possible option would be a different keyword, like `unless`, but I'd consider that probably a less clear alternative overall.",
    "created_at": "2020-05-14T11:27:44Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-628571151",
    "id": 628571151,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODU3MTE1MQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 2,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 2,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628571151/reactions"
    },
    "updated_at": "2020-05-14T11:27:44Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628571151",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "`if -not (){}` seems preferable to me:\r\n - Re-uses existing keyword\r\n - Self-explanatory\r\n - Straightforward to implement both in the parser and compiler\r\n - There's already precedence for statements with parameter-like switched (`switch` stmts)",
    "created_at": "2020-05-14T16:01:13Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-628730555",
    "id": 628730555,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODczMDU1NQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 4,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 4,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628730555/reactions"
    },
    "updated_at": "2020-05-14T16:01:13Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628730555",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/7413755?v=4",
      "events_url": "https://api.github.com/users/IISResetMe/events{/privacy}",
      "followers_url": "https://api.github.com/users/IISResetMe/followers",
      "following_url": "https://api.github.com/users/IISResetMe/following{/other_user}",
      "gists_url": "https://api.github.com/users/IISResetMe/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/IISResetMe",
      "id": 7413755,
      "login": "IISResetMe",
      "node_id": "MDQ6VXNlcjc0MTM3NTU=",
      "organizations_url": "https://api.github.com/users/IISResetMe/orgs",
      "received_events_url": "https://api.github.com/users/IISResetMe/received_events",
      "repos_url": "https://api.github.com/users/IISResetMe/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/IISResetMe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IISResetMe/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/IISResetMe"
    }
  },
  {
    "author_association": "NONE",
    "body": "I personally use the `not-exist` alias, because it avoids the need for extra parentheses which if missed will silently cause logic bugs. (see [first post 👆](#issue-172218230))",
    "created_at": "2020-05-15T00:13:41Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-628951494",
    "id": 628951494,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODk1MTQ5NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628951494/reactions"
    },
    "updated_at": "2020-05-15T00:13:41Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628951494",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/767147?v=4",
      "events_url": "https://api.github.com/users/omidkrad/events{/privacy}",
      "followers_url": "https://api.github.com/users/omidkrad/followers",
      "following_url": "https://api.github.com/users/omidkrad/following{/other_user}",
      "gists_url": "https://api.github.com/users/omidkrad/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/omidkrad",
      "id": 767147,
      "login": "omidkrad",
      "node_id": "MDQ6VXNlcjc2NzE0Nw==",
      "organizations_url": "https://api.github.com/users/omidkrad/orgs",
      "received_events_url": "https://api.github.com/users/omidkrad/received_events",
      "repos_url": "https://api.github.com/users/omidkrad/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/omidkrad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/omidkrad/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/omidkrad"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Yep, that's partly why we're considering ways to make them unnecessary.\r\n\r\nThere was a brief [Twitter thread](https://twitter.com/IISResetMe/status/1260998425027411968) that has a little more discussion on the matter; myself and a couple other folks voiced support for the `unless` keyword which we might want to consider a bit more here.\r\n\r\nIt is a new keyword, but IMO it's ultimately the clearest option. 🤷 ",
    "created_at": "2020-05-15T00:24:19Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-628954718",
    "id": 628954718,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODk1NDcxOA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 1,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 1,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628954718/reactions"
    },
    "updated_at": "2020-05-15T00:24:19Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/628954718",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "CONTRIBUTOR",
    "body": "While I don't see any reason both couldn't be implemented, if I had to choose one I vote for `unless` mostly because you could make an alias to emulate the same behavior on 5.1 and keep your code relatively backwards compatible simply, whereas `-not (expr)` won't be 5.1 compatible.\r\n\r\nFrom a usability standpoint though I like `-not (expr)` more, I find myself natively typing it all the time and then reminding myself I have to wrap it in parens :)",
    "created_at": "2020-05-15T16:14:05Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-629347831",
    "id": 629347831,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM0NzgzMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629347831/reactions"
    },
    "updated_at": "2020-05-15T16:15:00Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629347831",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/15258962?v=4",
      "events_url": "https://api.github.com/users/JustinGrote/events{/privacy}",
      "followers_url": "https://api.github.com/users/JustinGrote/followers",
      "following_url": "https://api.github.com/users/JustinGrote/following{/other_user}",
      "gists_url": "https://api.github.com/users/JustinGrote/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/JustinGrote",
      "id": 15258962,
      "login": "JustinGrote",
      "node_id": "MDQ6VXNlcjE1MjU4OTYy",
      "organizations_url": "https://api.github.com/users/JustinGrote/orgs",
      "received_events_url": "https://api.github.com/users/JustinGrote/received_events",
      "repos_url": "https://api.github.com/users/JustinGrote/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/JustinGrote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JustinGrote/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/JustinGrote"
    }
  },
  {
    "author_association": "NONE",
    "body": "I quite like Unless  it's like having while loops and do until loops; similar but convenient to have both.  One would expect to be able to use else, elseUnless and elseIf with it\r\n\r\nI would be more cautious about `if    not (something) {} ` because the next question will be why not  have  `if (something) and (something) {}`  with the `and` or `or` on the outside \r\nAnd it would mean `IF `was the only place where the `not` was \"outside\" without a - sign\r\nNo-one is proposing there should be \r\n`while not (something) `\r\nor `Where not { something} `\r\netc. \r\n\r\nI would avoid changing the general language pattern of  \"Execute all/some/none of what's between {} based on on what's between ()\" with minimal other switches (switch is IIRC special here)\r\n\r\n`ifnot` (no space) as alternative for unless would work.  ",
    "created_at": "2020-05-15T17:07:12Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-629374958",
    "id": 629374958,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM3NDk1OA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629374958/reactions"
    },
    "updated_at": "2020-05-15T17:12:08Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629374958",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  },
  {
    "author_association": "COLLABORATOR",
    "body": "Personally I don't see a lot of value for `else` or any variant thereof in combination for `unless`.\r\n\r\nIf you need that, it's probably more idiomatic to just use the `if/elseif/else` statements as is.\r\n\r\n```ps\r\nunless ($condition) { \r\n    Do-Things\r\n}\r\nelse {\r\n    Do-OtherThings\r\n}\r\n```\r\nis the same as\r\n```ps\r\nif ($condition) {\r\n    Do-OtherThings\r\n}\r\nelse {\r\n    Do-Things\r\n}\r\n```\r\n\r\nI don't really see how adding `else` / `elseUnless` or allowing them to be used in tandem with `unless` is especially valuable tbh.",
    "created_at": "2020-05-15T17:11:38Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-629376911",
    "id": 629376911,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM3NjkxMQ==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629376911/reactions"
    },
    "updated_at": "2020-05-15T17:12:09Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629376911",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
      "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
      "followers_url": "https://api.github.com/users/vexx32/followers",
      "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
      "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/vexx32",
      "id": 32407840,
      "login": "vexx32",
      "node_id": "MDQ6VXNlcjMyNDA3ODQw",
      "organizations_url": "https://api.github.com/users/vexx32/orgs",
      "received_events_url": "https://api.github.com/users/vexx32/received_events",
      "repos_url": "https://api.github.com/users/vexx32/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/vexx32"
    }
  },
  {
    "author_association": "NONE",
    "body": "> Personally I don't see a lot of value for `else` or any variant thereof in combination for `unless`.\r\n\r\n> I don't really see how adding `else` / `elseUnless` or allowing them to be used in tandem with `unless` is especially valuable tbh.\r\n\r\n\r\n(a) people will want it \r\n(b) your examples are semantically equivalent. \r\nHowever consider \r\n```\r\nGet-Object \r\nIf (Object is OK)  {\r\n\r\n200 lines of code\r\n\r\n}\r\nelse {report error} \r\n\r\n```\r\nBy the time someone looking at the code reads down to `report error` they have forgotten what the if statement was...  It's better, stylistically to write \r\n```\r\nGet-Object \r\nIf (Object is  not OK)  {report error}\r\nelse { \r\n\r\n200 lines of code\r\n\r\n}\r\n```\r\n\r\nIt's the same reason why we have `do {} while ()` or `repeat`... `until` loops (do something, then think about the condition for repeating it) but we don't have `do {} if ()`  there is nothing preventing that - but it would tax what we can hold on our mental stack for long than our 7 seconds of short term memory. \r\n\r\n\r\nMy only reservation about \r\n```\r\nGet-Object \r\nUnless (Object is OK)  {report error}\r\nelse { \r\n\r\n200 lines of code\r\n\r\n}\r\n```\r\nIs it suggests that error is usual and OK is the special case. ",
    "created_at": "2020-05-15T17:25:23Z",
    "html_url": "https://github.com/PowerShell/PowerShell/issues/1970#issuecomment-629383144",
    "id": 629383144,
    "issue_url": "https://api.github.com/repos/PowerShell/PowerShell/issues/1970",
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTM4MzE0NA==",
    "performed_via_github_app": null,
    "reactions": {
      "+1": 0,
      "-1": 0,
      "confused": 0,
      "eyes": 0,
      "heart": 0,
      "hooray": 0,
      "laugh": 0,
      "rocket": 0,
      "total_count": 0,
      "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629383144/reactions"
    },
    "updated_at": "2020-05-15T17:25:23Z",
    "url": "https://api.github.com/repos/PowerShell/PowerShell/issues/comments/629383144",
    "user": {
      "avatar_url": "https://avatars.githubusercontent.com/u/16209593?v=4",
      "events_url": "https://api.github.com/users/jhoneill/events{/privacy}",
      "followers_url": "https://api.github.com/users/jhoneill/followers",
      "following_url": "https://api.github.com/users/jhoneill/following{/other_user}",
      "gists_url": "https://api.github.com/users/jhoneill/gists{/gist_id}",
      "gravatar_id": "",
      "html_url": "https://github.com/jhoneill",
      "id": 16209593,
      "login": "jhoneill",
      "node_id": "MDQ6VXNlcjE2MjA5NTkz",
      "organizations_url": "https://api.github.com/users/jhoneill/orgs",
      "received_events_url": "https://api.github.com/users/jhoneill/received_events",
      "repos_url": "https://api.github.com/users/jhoneill/repos",
      "site_admin": false,
      "starred_url": "https://api.github.com/users/jhoneill/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jhoneill/subscriptions",
      "type": "User",
      "url": "https://api.github.com/users/jhoneill"
    }
  }
]
